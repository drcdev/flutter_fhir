CREATE TABLE element(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: element_extension_extension

);

CREATE TABLE extension(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: extension_extension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE narrative(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: narrative_extension_extension
	"status" TEXT CHECK( "status" IN ('generated','extensions','additional','empty') ),
	_status TEXT, -- Foreign Key to element table
	div TEXT,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE annotation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: annotation_extension_extension
	authorReference TEXT, -- Foreign Key to reference table
	authorString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_authorString TEXT, -- Foreign Key to element table
	"time" DATETIME,
	_time TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (authorReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_time)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE attachment(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: attachment_extension_extension
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"size" INTEGER,
	_size TEXT, -- Foreign Key to element table
	"hash" TEXT,
	_hash TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	creation DATETIME,
	_creation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_size)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_hash)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_creation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE identifier(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: identifier_extension_extension
	"use" TEXT CHECK( "use" IN ('usual','official','temp','secondary','old') ),
	_use TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	assigner TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assigner)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeableConcept(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeableConcept_extension_extension
	coding BOOLEAN, -- true if 1+ item is referenced from bridge table: codeableConcept_coding_coding
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coding(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coding_extension_extension
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	userSelected BOOLEAN,
	_userSelected TEXT, -- Foreign Key to element table

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_userSelected)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE quantity(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: quantity_extension_extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE duration(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: duration_extension_extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE distance(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: distance_extension_extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "count"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: count_extension_extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE money(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: money_extension_extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	currency TEXT,
	_currency TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_currency)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE age(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: age_extension_extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "range"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: range_extension_extension
	low TEXT, -- Foreign Key to quantity table
	high TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (low)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (high)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "period"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: period_extension_extension
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE ratio(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: ratio_extension_extension
	numerator TEXT, -- Foreign Key to quantity table
	denominator TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (numerator)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (denominator)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE reference(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: reference_extension_extension
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	display TEXT,
	_display TEXT, -- Foreign Key to element table

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE sampledData(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: sampledData_extension_extension
	origin TEXT, -- Foreign Key to quantity table
	"period" REAL,
	_period TEXT, -- Foreign Key to element table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	lowerLimit REAL,
	_lowerLimit TEXT, -- Foreign Key to element table
	upperLimit REAL,
	_upperLimit TEXT, -- Foreign Key to element table
	dimensions INTEGER,
	_dimensions TEXT, -- Foreign Key to element table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table

	FOREIGN KEY (origin)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_period)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lowerLimit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_upperLimit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dimensions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "signature"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: signature_extension_extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: signature_type_coding
	"when" DATETIME,
	_when TEXT, -- Foreign Key to element table
	who TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table
	targetFormat TEXT,
	_targetFormat TEXT, -- Foreign Key to element table
	sigFormat TEXT,
	_sigFormat TEXT, -- Foreign Key to element table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table

	FOREIGN KEY (_when)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetFormat)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sigFormat)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE humanName(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName_extension_extension
	"use" TEXT CHECK( "use" IN ('usual','official','temp','nickname','anonymous','old','maiden') ),
	_use TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	family TEXT,
	_family TEXT, -- Foreign Key to element table
	given BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName_given_string
	_given BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__given_element
	prefix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName_prefix_string
	_prefix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__prefix_element
	suffix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName_suffix_string
	_suffix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__suffix_element
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_family)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "address"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: address_extension_extension
	"use" TEXT CHECK( "use" IN ('home','work','temp','old','billing') ),
	_use TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('postal','physical','both') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"line" BOOLEAN, -- true if 1+ item is referenced from bridge table: address_line_string
	_line BOOLEAN, -- true if 1+ item is referenced from bridge table: address__line_element
	city TEXT,
	_city TEXT, -- Foreign Key to element table
	district TEXT,
	_district TEXT, -- Foreign Key to element table
	"state" TEXT,
	_state TEXT, -- Foreign Key to element table
	postalCode TEXT,
	_postalCode TEXT, -- Foreign Key to element table
	country TEXT,
	_country TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_city)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_district)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_state)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_postalCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_country)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contactPoint(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contactPoint_extension_extension
	"system" TEXT CHECK( "system" IN ('phone','fax','email','pager','url','sms','other') ),
	_system TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	"use" TEXT CHECK( "use" IN ('home','work','temp','old','mobile') ),
	_use TEXT, -- Foreign Key to element table
	"rank" INTEGER,
	_rank TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rank)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE timing(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_modifierExtension_extension
	"event" BOOLEAN, -- true if 1+ rows in dateTime correspond to this entry
	_event BOOLEAN, -- true if 1+ item is referenced from bridge table: timing__event_element
	"repeat" TEXT, -- Foreign Key to timing_Repeat table
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY ("repeat")
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE timing_Repeat(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat_modifierExtension_extension
	boundsDuration TEXT, -- Foreign Key to duration table
	boundsRange TEXT, -- Foreign Key to range table
	boundsPeriod TEXT, -- Foreign Key to period table
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	countMax INTEGER,
	_countMax TEXT, -- Foreign Key to element table
	duration REAL,
	_duration TEXT, -- Foreign Key to element table
	durationMax REAL,
	_durationMax TEXT, -- Foreign Key to element table
	durationUnit TEXT CHECK( durationUnit IN ('s','min','h','d','wk','mo','a') ),
	_durationUnit TEXT, -- Foreign Key to element table
	frequency INTEGER,
	_frequency TEXT, -- Foreign Key to element table
	frequencyMax INTEGER,
	_frequencyMax TEXT, -- Foreign Key to element table
	"period" REAL,
	_period TEXT, -- Foreign Key to element table
	periodMax REAL,
	_periodMax TEXT, -- Foreign Key to element table
	periodUnit TEXT CHECK( periodUnit IN ('s','min','h','d','wk','mo','a') ),
	_periodUnit TEXT, -- Foreign Key to element table
	dayOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat_dayOfWeek_code
	_dayOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__dayOfWeek_element
	timeOfDay BOOLEAN, -- true if 1+ rows in time correspond to this entry
	_timeOfDay BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__timeOfDay_element
	"when" BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: MORN/MORN.early/MORN.late/NOON/AFT/AFT.early/AFT.late/EVE/EVE.early/EVE.late/NIGHT/PHS/HS/WAKE/C/CM/CD/CV/AC/ACM/ACD/ACV/PC/PCM/PCD/PCV,
	_when BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__when_element
	offset INTEGER,
	_offset TEXT, -- Foreign Key to element table

	FOREIGN KEY (boundsDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (boundsRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (boundsPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_countMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_duration)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_durationMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_durationUnit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_frequency)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_frequencyMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_period)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_periodMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_periodUnit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_offset)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE meta(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: meta_extension_extension
	versionId TEXT, -- Foreign Key to id table
	_versionId TEXT, -- Foreign Key to element table
	lastUpdated DATETIME,
	_lastUpdated TEXT, -- Foreign Key to element table
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: meta_profile_canonical
	"security" BOOLEAN, -- true if 1+ item is referenced from bridge table: meta_security_coding
	tag BOOLEAN, -- true if 1+ item is referenced from bridge table: meta_tag_coding

	FOREIGN KEY (versionId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastUpdated)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contactDetail(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contactDetail_extension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: contactDetail_telecom_contactPoint

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contributor(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contributor_extension_extension
	"type" TEXT CHECK( "type" IN ('author','editor','reviewer','endorser') ),
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: contributor_contact_contactDetail

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_extension_extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_profile_canonical
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	mustSupport BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_mustSupport_string
	_mustSupport BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement__mustSupport_element
	codeFilter BOOLEAN, -- true if 1+ rows in DataRequirement_CodeFilter correspond to this entry
	dateFilter BOOLEAN, -- true if 1+ rows in DataRequirement_DateFilter correspond to this entry
	"limit" INTEGER,
	_limit TEXT, -- Foreign Key to element table
	sort BOOLEAN, -- true if 1+ rows in DataRequirement_Sort correspond to this entry

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_limit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement_CodeFilter(

	id TEXT PRIMARY KEY,
	dataRequirementId TEXT, -- Foreign Key to dataRequirement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_CodeFilter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_CodeFilter_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	searchParam TEXT,
	_searchParam TEXT, -- Foreign Key to element table
	valueSet TEXT,
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_CodeFilter_code_coding

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_searchParam)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement_DateFilter(

	id TEXT PRIMARY KEY,
	dataRequirementId TEXT, -- Foreign Key to dataRequirement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_DateFilter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_DateFilter_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	searchParam TEXT,
	_searchParam TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valuePeriod TEXT, -- Foreign Key to period table
	valueDuration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_searchParam)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement_Sort(

	id TEXT PRIMARY KEY,
	dataRequirementId TEXT, -- Foreign Key to dataRequirement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_Sort_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_Sort_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	direction TEXT CHECK( direction IN ('ascending','descending') ),
	_direction TEXT, -- Foreign Key to element table

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_direction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE parameterDefinition(

	id TEXT PRIMARY KEY,
	libraryId TEXT, -- Foreign Key to library table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: parameterDefinition_extension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"use" TEXT,
	_use TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" TEXT,

	FOREIGN KEY (libraryId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE relatedArtifact(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedArtifact_extension_extension
	"type" TEXT CHECK( "type" IN ('documentation','justification','citation','predecessor','successor','derived-from','depends-on','composed-of') ),
	_type TEXT, -- Foreign Key to element table
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	citation TEXT,
	_citation TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	document TEXT, -- Foreign Key to attachment table
	"resource" TEXT,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_citation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (document)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE triggerDefinition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: triggerDefinition_extension_extension
	"type" TEXT CHECK( "type" IN ('named-event','periodic','data-changed','data-added','data-modified','data-removed','data-accessed','data-access-ended') ),
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	timingTiming TEXT, -- Foreign Key to timing table
	timingReference TEXT, -- Foreign Key to reference table
	timingDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_timingDate TEXT, -- Foreign Key to element table
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	"data" BOOLEAN, -- true if 1+ item is referenced from bridge table: triggerDefinition_data_dataRequirement
	"condition" TEXT, -- Foreign Key to expression table

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE usageContext(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: usageContext_extension_extension
	"code" TEXT, -- Foreign Key to coding table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("code")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dosage(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	additionalInstruction BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage_additionalInstruction_codeableConcept
	patientInstruction TEXT,
	_patientInstruction TEXT, -- Foreign Key to element table
	timing TEXT, -- Foreign Key to timing table
	asNeededBoolean BOOLEAN, -- pattern: ^true|false$
	_asNeededBoolean TEXT, -- Foreign Key to element table
	asNeededCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"site" TEXT, -- Foreign Key to codeableConcept table
	"route" TEXT, -- Foreign Key to codeableConcept table
	"method" TEXT, -- Foreign Key to codeableConcept table
	doseAndRate BOOLEAN, -- true if 1+ rows in Dosage_DoseAndRate correspond to this entry
	maxDosePerPeriod TEXT, -- Foreign Key to ratio table
	maxDosePerAdministration TEXT, -- Foreign Key to quantity table
	maxDosePerLifetime TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patientInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timing)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_asNeededBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asNeededCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("site")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("route")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerPeriod)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerAdministration)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerLifetime)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dosage_DoseAndRate(

	id TEXT PRIMARY KEY,
	dosageId TEXT, -- Foreign Key to dosage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage_DoseAndRate_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage_DoseAndRate_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	doseRange TEXT, -- Foreign Key to range table
	doseQuantity TEXT, -- Foreign Key to quantity table
	rateRatio TEXT, -- Foreign Key to ratio table
	rateRange TEXT, -- Foreign Key to range table
	rateQuantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "population"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: population_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: population_modifierExtension_extension
	ageRange TEXT, -- Foreign Key to range table
	ageCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	gender TEXT, -- Foreign Key to codeableConcept table
	race TEXT, -- Foreign Key to codeableConcept table
	physiologicalCondition TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (ageRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ageCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (gender)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (race)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physiologicalCondition)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE productShelfLife(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: productShelfLife_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: productShelfLife_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to quantity table
	specialPrecautionsForStorage BOOLEAN, -- true if 1+ item is referenced from bridge table: productShelfLife_specialPrecautionsForStorage_codeableConcept

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE prodCharacteristic(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic_modifierExtension_extension
	height TEXT, -- Foreign Key to quantity table
	width TEXT, -- Foreign Key to quantity table
	"depth" TEXT, -- Foreign Key to quantity table
	"weight" TEXT, -- Foreign Key to quantity table
	nominalVolume TEXT, -- Foreign Key to quantity table
	externalDiameter TEXT, -- Foreign Key to quantity table
	shape TEXT,
	_shape TEXT, -- Foreign Key to element table
	color BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic_color_string
	_color BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__color_element
	imprint BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic_imprint_string
	_imprint BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__imprint_element
	"image" BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic_image_attachment
	scoring TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (height)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (width)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("depth")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("weight")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nominalVolume)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (externalDiameter)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shape)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scoring)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE marketingStatus(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: marketingStatus_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: marketingStatus_modifierExtension_extension
	country TEXT, -- Foreign Key to codeableConcept table
	jurisdiction TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	dateRange TEXT, -- Foreign Key to period table
	restoreDate DATETIME,
	_restoreDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (country)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (jurisdiction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dateRange)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_restoreDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceAmount(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount_modifierExtension_extension
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountRange TEXT, -- Foreign Key to range table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table
	amountType TEXT, -- Foreign Key to codeableConcept table
	amountText TEXT,
	_amountText TEXT, -- Foreign Key to element table
	referenceRange TEXT, -- Foreign Key to substanceAmount_ReferenceRange table

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountText)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceRange)
		REFERENCES substanceAmount_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceAmount_ReferenceRange(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount_ReferenceRange_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount_ReferenceRange_modifierExtension_extension
	lowLimit TEXT, -- Foreign Key to quantity table
	highLimit TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (lowLimit)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (highLimit)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE expression(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: expression_extension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	"language" TEXT CHECK( "language" IN ('text/cql','text/fhirpath','application/x-fhir-query') ),
	_language TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	representation BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: xmlAttr/xmlText/typeAttr/cdaText/xhtml,
	_representation BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__representation_element
	sliceName TEXT,
	_sliceName TEXT, -- Foreign Key to element table
	sliceIsConstraining BOOLEAN,
	_sliceIsConstraining TEXT, -- Foreign Key to element table
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_code_coding
	slicing TEXT, -- Foreign Key to elementDefinition_Slicing table
	short TEXT,
	_short TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	requirements TEXT,
	_requirements TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_alias_string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__alias_element
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	base TEXT, -- Foreign Key to elementDefinition_Base table
	contentReference TEXT,
	_contentReference TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ rows in ElementDefinition_Type correspond to this entry
	defaultValueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_defaultValueBase64Binary TEXT, -- Foreign Key to element table
	defaultValueBoolean BOOLEAN, -- pattern: ^true|false$
	_defaultValueBoolean TEXT, -- Foreign Key to element table
	defaultValueCanonical TEXT, -- pattern: ^\S*$
	_defaultValueCanonical TEXT, -- Foreign Key to element table
	defaultValueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_defaultValueCode TEXT, -- Foreign Key to element table
	defaultValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_defaultValueDate TEXT, -- Foreign Key to element table
	defaultValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_defaultValueDateTime TEXT, -- Foreign Key to element table
	defaultValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_defaultValueDecimal TEXT, -- Foreign Key to element table
	defaultValueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_defaultValueId TEXT, -- Foreign Key to element table
	defaultValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_defaultValueInstant TEXT, -- Foreign Key to element table
	defaultValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_defaultValueInteger TEXT, -- Foreign Key to element table
	defaultValueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueMarkdown TEXT, -- Foreign Key to element table
	defaultValueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_defaultValueOid TEXT, -- Foreign Key to element table
	defaultValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_defaultValuePositiveInt TEXT, -- Foreign Key to element table
	defaultValueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueString TEXT, -- Foreign Key to element table
	defaultValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_defaultValueTime TEXT, -- Foreign Key to element table
	defaultValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_defaultValueUnsignedInt TEXT, -- Foreign Key to element table
	defaultValueUri TEXT, -- pattern: ^\S*$
	_defaultValueUri TEXT, -- Foreign Key to element table
	defaultValueUrl TEXT, -- pattern: ^\S*$
	_defaultValueUrl TEXT, -- Foreign Key to element table
	defaultValueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_defaultValueUuid TEXT, -- Foreign Key to element table
	defaultValueAddress TEXT, -- Foreign Key to address table
	defaultValueAge TEXT, -- Foreign Key to age table
	defaultValueAnnotation TEXT, -- Foreign Key to annotation table
	defaultValueAttachment TEXT, -- Foreign Key to attachment table
	defaultValueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	defaultValueCoding TEXT, -- Foreign Key to coding table
	defaultValueContactPoint TEXT, -- Foreign Key to contactPoint table
	defaultValueCount TEXT, -- Foreign Key to count table
	defaultValueDistance TEXT, -- Foreign Key to distance table
	defaultValueDuration TEXT, -- Foreign Key to duration table
	defaultValueHumanName TEXT, -- Foreign Key to humanName table
	defaultValueIdentifier TEXT, -- Foreign Key to identifier table
	defaultValueMoney TEXT, -- Foreign Key to money table
	defaultValuePeriod TEXT, -- Foreign Key to period table
	defaultValueQuantity TEXT, -- Foreign Key to quantity table
	defaultValueRange TEXT, -- Foreign Key to range table
	defaultValueRatio TEXT, -- Foreign Key to ratio table
	defaultValueReference TEXT, -- Foreign Key to reference table
	defaultValueSampledData TEXT, -- Foreign Key to sampledData table
	defaultValueSignature TEXT, -- Foreign Key to signature table
	defaultValueTiming TEXT, -- Foreign Key to timing table
	defaultValueContactDetail TEXT, -- Foreign Key to contactDetail table
	defaultValueContributor TEXT, -- Foreign Key to contributor table
	defaultValueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	defaultValueExpression TEXT, -- Foreign Key to expression table
	defaultValueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	defaultValueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	defaultValueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	defaultValueUsageContext TEXT, -- Foreign Key to usageContext table
	defaultValueDosage TEXT, -- Foreign Key to dosage table
	defaultValueMeta TEXT, -- Foreign Key to meta table
	meaningWhenMissing TEXT,
	_meaningWhenMissing TEXT, -- Foreign Key to element table
	orderMeaning TEXT,
	_orderMeaning TEXT, -- Foreign Key to element table
	fixedBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_fixedBase64Binary TEXT, -- Foreign Key to element table
	fixedBoolean BOOLEAN, -- pattern: ^true|false$
	_fixedBoolean TEXT, -- Foreign Key to element table
	fixedCanonical TEXT, -- pattern: ^\S*$
	_fixedCanonical TEXT, -- Foreign Key to element table
	fixedCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_fixedCode TEXT, -- Foreign Key to element table
	fixedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_fixedDate TEXT, -- Foreign Key to element table
	fixedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_fixedDateTime TEXT, -- Foreign Key to element table
	fixedDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_fixedDecimal TEXT, -- Foreign Key to element table
	fixedId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_fixedId TEXT, -- Foreign Key to element table
	fixedInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_fixedInstant TEXT, -- Foreign Key to element table
	fixedInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_fixedInteger TEXT, -- Foreign Key to element table
	fixedMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_fixedMarkdown TEXT, -- Foreign Key to element table
	fixedOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_fixedOid TEXT, -- Foreign Key to element table
	fixedPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_fixedPositiveInt TEXT, -- Foreign Key to element table
	fixedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_fixedString TEXT, -- Foreign Key to element table
	fixedTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_fixedTime TEXT, -- Foreign Key to element table
	fixedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_fixedUnsignedInt TEXT, -- Foreign Key to element table
	fixedUri TEXT, -- pattern: ^\S*$
	_fixedUri TEXT, -- Foreign Key to element table
	fixedUrl TEXT, -- pattern: ^\S*$
	_fixedUrl TEXT, -- Foreign Key to element table
	fixedUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_fixedUuid TEXT, -- Foreign Key to element table
	fixedAddress TEXT, -- Foreign Key to address table
	fixedAge TEXT, -- Foreign Key to age table
	fixedAnnotation TEXT, -- Foreign Key to annotation table
	fixedAttachment TEXT, -- Foreign Key to attachment table
	fixedCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	fixedCoding TEXT, -- Foreign Key to coding table
	fixedContactPoint TEXT, -- Foreign Key to contactPoint table
	fixedCount TEXT, -- Foreign Key to count table
	fixedDistance TEXT, -- Foreign Key to distance table
	fixedDuration TEXT, -- Foreign Key to duration table
	fixedHumanName TEXT, -- Foreign Key to humanName table
	fixedIdentifier TEXT, -- Foreign Key to identifier table
	fixedMoney TEXT, -- Foreign Key to money table
	fixedPeriod TEXT, -- Foreign Key to period table
	fixedQuantity TEXT, -- Foreign Key to quantity table
	fixedRange TEXT, -- Foreign Key to range table
	fixedRatio TEXT, -- Foreign Key to ratio table
	fixedReference TEXT, -- Foreign Key to reference table
	fixedSampledData TEXT, -- Foreign Key to sampledData table
	fixedSignature TEXT, -- Foreign Key to signature table
	fixedTiming TEXT, -- Foreign Key to timing table
	fixedContactDetail TEXT, -- Foreign Key to contactDetail table
	fixedContributor TEXT, -- Foreign Key to contributor table
	fixedDataRequirement TEXT, -- Foreign Key to dataRequirement table
	fixedExpression TEXT, -- Foreign Key to expression table
	fixedParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	fixedRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	fixedTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	fixedUsageContext TEXT, -- Foreign Key to usageContext table
	fixedDosage TEXT, -- Foreign Key to dosage table
	fixedMeta TEXT, -- Foreign Key to meta table
	patternBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_patternBase64Binary TEXT, -- Foreign Key to element table
	patternBoolean BOOLEAN, -- pattern: ^true|false$
	_patternBoolean TEXT, -- Foreign Key to element table
	patternCanonical TEXT, -- pattern: ^\S*$
	_patternCanonical TEXT, -- Foreign Key to element table
	patternCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_patternCode TEXT, -- Foreign Key to element table
	patternDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_patternDate TEXT, -- Foreign Key to element table
	patternDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_patternDateTime TEXT, -- Foreign Key to element table
	patternDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_patternDecimal TEXT, -- Foreign Key to element table
	patternId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_patternId TEXT, -- Foreign Key to element table
	patternInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_patternInstant TEXT, -- Foreign Key to element table
	patternInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_patternInteger TEXT, -- Foreign Key to element table
	patternMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_patternMarkdown TEXT, -- Foreign Key to element table
	patternOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_patternOid TEXT, -- Foreign Key to element table
	patternPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_patternPositiveInt TEXT, -- Foreign Key to element table
	patternString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_patternString TEXT, -- Foreign Key to element table
	patternTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_patternTime TEXT, -- Foreign Key to element table
	patternUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_patternUnsignedInt TEXT, -- Foreign Key to element table
	patternUri TEXT, -- pattern: ^\S*$
	_patternUri TEXT, -- Foreign Key to element table
	patternUrl TEXT, -- pattern: ^\S*$
	_patternUrl TEXT, -- Foreign Key to element table
	patternUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_patternUuid TEXT, -- Foreign Key to element table
	patternAddress TEXT, -- Foreign Key to address table
	patternAge TEXT, -- Foreign Key to age table
	patternAnnotation TEXT, -- Foreign Key to annotation table
	patternAttachment TEXT, -- Foreign Key to attachment table
	patternCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	patternCoding TEXT, -- Foreign Key to coding table
	patternContactPoint TEXT, -- Foreign Key to contactPoint table
	patternCount TEXT, -- Foreign Key to count table
	patternDistance TEXT, -- Foreign Key to distance table
	patternDuration TEXT, -- Foreign Key to duration table
	patternHumanName TEXT, -- Foreign Key to humanName table
	patternIdentifier TEXT, -- Foreign Key to identifier table
	patternMoney TEXT, -- Foreign Key to money table
	patternPeriod TEXT, -- Foreign Key to period table
	patternQuantity TEXT, -- Foreign Key to quantity table
	patternRange TEXT, -- Foreign Key to range table
	patternRatio TEXT, -- Foreign Key to ratio table
	patternReference TEXT, -- Foreign Key to reference table
	patternSampledData TEXT, -- Foreign Key to sampledData table
	patternSignature TEXT, -- Foreign Key to signature table
	patternTiming TEXT, -- Foreign Key to timing table
	patternContactDetail TEXT, -- Foreign Key to contactDetail table
	patternContributor TEXT, -- Foreign Key to contributor table
	patternDataRequirement TEXT, -- Foreign Key to dataRequirement table
	patternExpression TEXT, -- Foreign Key to expression table
	patternParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	patternRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	patternTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	patternUsageContext TEXT, -- Foreign Key to usageContext table
	patternDosage TEXT, -- Foreign Key to dosage table
	patternMeta TEXT, -- Foreign Key to meta table
	example BOOLEAN, -- true if 1+ rows in ElementDefinition_Example correspond to this entry
	minValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_minValueDate TEXT, -- Foreign Key to element table
	minValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_minValueDateTime TEXT, -- Foreign Key to element table
	minValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_minValueInstant TEXT, -- Foreign Key to element table
	minValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_minValueTime TEXT, -- Foreign Key to element table
	minValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_minValueDecimal TEXT, -- Foreign Key to element table
	minValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_minValueInteger TEXT, -- Foreign Key to element table
	minValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_minValuePositiveInt TEXT, -- Foreign Key to element table
	minValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_minValueUnsignedInt TEXT, -- Foreign Key to element table
	minValueQuantity TEXT, -- Foreign Key to quantity table
	maxValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_maxValueDate TEXT, -- Foreign Key to element table
	maxValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_maxValueDateTime TEXT, -- Foreign Key to element table
	maxValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_maxValueInstant TEXT, -- Foreign Key to element table
	maxValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_maxValueTime TEXT, -- Foreign Key to element table
	maxValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_maxValueDecimal TEXT, -- Foreign Key to element table
	maxValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_maxValueInteger TEXT, -- Foreign Key to element table
	maxValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_maxValuePositiveInt TEXT, -- Foreign Key to element table
	maxValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_maxValueUnsignedInt TEXT, -- Foreign Key to element table
	maxValueQuantity TEXT, -- Foreign Key to quantity table
	"maxLength" INTEGER,
	_maxLength TEXT, -- Foreign Key to element table
	"condition" BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_condition_id
	_condition BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__condition_element
	"constraint" BOOLEAN, -- true if 1+ rows in ElementDefinition_Constraint correspond to this entry
	mustSupport BOOLEAN,
	_mustSupport TEXT, -- Foreign Key to element table
	isModifier BOOLEAN,
	_isModifier TEXT, -- Foreign Key to element table
	isModifierReason TEXT,
	_isModifierReason TEXT, -- Foreign Key to element table
	isSummary BOOLEAN,
	_isSummary TEXT, -- Foreign Key to element table
	"binding" TEXT, -- Foreign Key to elementDefinition_Binding table
	mapping BOOLEAN, -- true if 1+ rows in ElementDefinition_Mapping correspond to this entry

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sliceName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sliceIsConstraining)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (slicing)
		REFERENCES elementDefinition_Slicing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_short)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirements)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (base)
		REFERENCES elementDefinition_Base (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentReference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_meaningWhenMissing)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_orderMeaning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (minValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxLength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mustSupport)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isModifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isModifierReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isSummary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("binding")
		REFERENCES elementDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Slicing(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Slicing_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Slicing_modifierExtension_extension
	discriminator BOOLEAN, -- true if 1+ rows in ElementDefinition_Discriminator correspond to this entry
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	ordered BOOLEAN,
	_ordered TEXT, -- Foreign Key to element table
	rules TEXT CHECK( rules IN ('closed','open','openAtEnd') ),
	_rules TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ordered)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Discriminator(

	id TEXT PRIMARY KEY,
	elementDefinition_SlicingId TEXT, -- Foreign Key to elementDefinition_Slicing table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Discriminator_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Discriminator_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('value','exists','pattern','type','profile') ),
	_type TEXT, -- Foreign Key to element table
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table

	FOREIGN KEY (elementDefinition_SlicingId)
		REFERENCES elementDefinition_Slicing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Base(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Base_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Base_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Type(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type_profile_canonical
	targetProfile BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type_targetProfile_canonical
	aggregation BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: contained/referenced/bundled,
	_aggregation BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type__aggregation_element
	versioning TEXT CHECK( versioning IN ('either','independent','specific') ),
	_versioning TEXT, -- Foreign Key to element table

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versioning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Example(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Example_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Example_modifierExtension_extension
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Constraint(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Constraint_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Constraint_modifierExtension_extension
	"key" TEXT, -- Foreign Key to id table
	_key TEXT, -- Foreign Key to element table
	requirements TEXT,
	_requirements TEXT, -- Foreign Key to element table
	severity TEXT CHECK( severity IN ('error','warning') ),
	_severity TEXT, -- Foreign Key to element table
	human TEXT,
	_human TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	xpath TEXT,
	_xpath TEXT, -- Foreign Key to element table
	"source" TEXT,

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("key")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_key)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirements)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_human)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_xpath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Binding(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Binding_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Binding_modifierExtension_extension
	strength TEXT CHECK( strength IN ('required','extensible','preferred','example') ),
	_strength TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	valueSet TEXT,

	FOREIGN KEY (_strength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Mapping(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Mapping_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Mapping_modifierExtension_extension
	"identity" TEXT, -- Foreign Key to id table
	_identity TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	map TEXT,
	_map TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("identity")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_map)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE account(

	resourceType TEXT, -- resourceType: account
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: account_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: account_identifier_identifier
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error','on-hold','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: account_subject_reference
	servicePeriod TEXT, -- Foreign Key to period table
	coverage BOOLEAN, -- true if 1+ rows in Account_Coverage correspond to this entry
	"owner" TEXT, -- Foreign Key to reference table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	guarantor BOOLEAN, -- true if 1+ rows in Account_Guarantor correspond to this entry
	partOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE account_Coverage(

	id TEXT PRIMARY KEY,
	accountId TEXT, -- Foreign Key to account table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Coverage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Coverage_modifierExtension_extension
	coverage TEXT, -- Foreign Key to reference table
	"priority" INTEGER,
	_priority TEXT, -- Foreign Key to element table

	FOREIGN KEY (accountId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE account_Guarantor(

	id TEXT PRIMARY KEY,
	accountId TEXT, -- Foreign Key to account table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Guarantor_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Guarantor_modifierExtension_extension
	party TEXT, -- Foreign Key to reference table
	onHold BOOLEAN,
	_onHold TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (accountId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onHold)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE activityDefinition(

	resourceType TEXT, -- resourceType: activityDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_relatedArtifact_relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_library_canonical
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	"profile" TEXT,
	"code" TEXT, -- Foreign Key to codeableConcept table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	timingTiming TEXT, -- Foreign Key to timing table
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	timingAge TEXT, -- Foreign Key to age table
	timingPeriod TEXT, -- Foreign Key to period table
	timingRange TEXT, -- Foreign Key to range table
	timingDuration TEXT, -- Foreign Key to duration table
	"location" TEXT, -- Foreign Key to reference table
	participant BOOLEAN, -- true if 1+ rows in ActivityDefinition_Participant correspond to this entry
	productReference TEXT, -- Foreign Key to reference table
	productCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	dosage BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_dosage_dosage
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_bodySite_codeableConcept
	specimenRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_specimenRequirement_reference
	observationRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_observationRequirement_reference
	observationResultRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_observationResultRequirement_reference
	transform TEXT,
	dynamicValue BOOLEAN, -- true if 1+ rows in ActivityDefinition_DynamicValue correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE activityDefinition_Participant(

	id TEXT PRIMARY KEY,
	activityDefinitionId TEXT, -- Foreign Key to activityDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_Participant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_Participant_modifierExtension_extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (activityDefinitionId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE activityDefinition_DynamicValue(

	id TEXT PRIMARY KEY,
	activityDefinitionId TEXT, -- Foreign Key to activityDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_DynamicValue_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_DynamicValue_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (activityDefinitionId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE adverseEvent(

	resourceType TEXT, -- resourceType: adverseEvent
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	actuality TEXT CHECK( actuality IN ('actual','potential') ),
	_actuality TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_category_codeableConcept
	"event" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	detected DATETIME,
	_detected TEXT, -- Foreign Key to element table
	recordedDate DATETIME,
	_recordedDate TEXT, -- Foreign Key to element table
	resultingCondition BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_resultingCondition_reference
	"location" TEXT, -- Foreign Key to reference table
	seriousness TEXT, -- Foreign Key to codeableConcept table
	severity TEXT, -- Foreign Key to codeableConcept table
	outcome TEXT, -- Foreign Key to codeableConcept table
	recorder TEXT, -- Foreign Key to reference table
	contributor BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_contributor_reference
	suspectEntity BOOLEAN, -- true if 1+ rows in AdverseEvent_SuspectEntity correspond to this entry
	subjectMedicalHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_subjectMedicalHistory_reference
	referenceDocument BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_referenceDocument_reference
	study BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_study_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actuality)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("event")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detected)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (seriousness)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (severity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE adverseEvent_SuspectEntity(

	id TEXT PRIMARY KEY,
	adverseEventId TEXT, -- Foreign Key to adverseEvent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_SuspectEntity_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_SuspectEntity_modifierExtension_extension
	"instance" TEXT, -- Foreign Key to reference table
	causality BOOLEAN, -- true if 1+ rows in AdverseEvent_Causality correspond to this entry

	FOREIGN KEY (adverseEventId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("instance")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE adverseEvent_Causality(

	id TEXT PRIMARY KEY,
	adverseEvent_SuspectEntityId TEXT, -- Foreign Key to adverseEvent_SuspectEntity table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_Causality_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_Causality_modifierExtension_extension
	assessment TEXT, -- Foreign Key to codeableConcept table
	productRelatedness TEXT,
	_productRelatedness TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	"method" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (adverseEvent_SuspectEntityId)
		REFERENCES adverseEvent_SuspectEntity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assessment)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productRelatedness)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE allergyIntolerance(

	resourceType TEXT, -- resourceType: allergyIntolerance
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_identifier_identifier
	clinicalStatus TEXT, -- Foreign Key to codeableConcept table
	verificationStatus TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT CHECK( "type" IN ('allergy','intolerance') ),
	_type TEXT, -- Foreign Key to element table
	category BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: food/medication/environment/biologic,
	_category BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance__category_element
	criticality TEXT CHECK( criticality IN ('low','high','unable-to-assess') ),
	_criticality TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	onsetDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_onsetDateTime TEXT, -- Foreign Key to element table
	onsetAge TEXT, -- Foreign Key to age table
	onsetPeriod TEXT, -- Foreign Key to period table
	onsetRange TEXT, -- Foreign Key to range table
	onsetString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_onsetString TEXT, -- Foreign Key to element table
	recordedDate DATETIME,
	_recordedDate TEXT, -- Foreign Key to element table
	recorder TEXT, -- Foreign Key to reference table
	asserter TEXT, -- Foreign Key to reference table
	lastOccurrence DATETIME,
	_lastOccurrence TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_note_annotation
	reaction BOOLEAN, -- true if 1+ rows in AllergyIntolerance_Reaction correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (clinicalStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (verificationStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_criticality)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asserter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastOccurrence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE allergyIntolerance_Reaction(

	id TEXT PRIMARY KEY,
	allergyIntoleranceId TEXT, -- Foreign Key to allergyIntolerance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction_modifierExtension_extension
	substance TEXT, -- Foreign Key to codeableConcept table
	manifestation BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction_manifestation_codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	onset DATETIME,
	_onset TEXT, -- Foreign Key to element table
	severity TEXT CHECK( severity IN ('mild','moderate','severe') ),
	_severity TEXT, -- Foreign Key to element table
	exposureRoute TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction_note_annotation

	FOREIGN KEY (allergyIntoleranceId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onset)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureRoute)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE appointment(

	resourceType TEXT, -- resourceType: appointment
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_identifier_identifier
	"status" TEXT CHECK( "status" IN ('proposed','pending','booked','arrived','fulfilled','cancelled','noshow','entered-in-error','checked-in','waitlist') ),
	_status TEXT, -- Foreign Key to element table
	cancelationReason TEXT, -- Foreign Key to codeableConcept table
	serviceCategory BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_serviceCategory_codeableConcept
	serviceType BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_serviceType_codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_specialty_codeableConcept
	appointmentType TEXT, -- Foreign Key to codeableConcept table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_reasonReference_reference
	"priority" INTEGER,
	_priority TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_supportingInformation_reference
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	minutesDuration INTEGER,
	_minutesDuration TEXT, -- Foreign Key to element table
	slot BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_slot_reference
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	patientInstruction TEXT,
	_patientInstruction TEXT, -- Foreign Key to element table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_basedOn_reference
	participant BOOLEAN, -- true if 1+ rows in Appointment_Participant correspond to this entry
	requestedPeriod BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_requestedPeriod_period

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cancelationReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (appointmentType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minutesDuration)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patientInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE appointment_Participant(

	id TEXT PRIMARY KEY,
	appointmentId TEXT, -- Foreign Key to appointment table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_Participant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_Participant_modifierExtension_extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_Participant_type_codeableConcept
	actor TEXT, -- Foreign Key to reference table
	"required" TEXT CHECK( "required" IN ('required','optional','information-only') ),
	_required TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('accepted','declined','tentative','needs-action') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (appointmentId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_required)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE appointmentResponse(

	resourceType TEXT, -- resourceType: appointmentResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse_identifier_identifier
	appointment TEXT, -- Foreign Key to reference table
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	participantType BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse_participantType_codeableConcept
	actor TEXT, -- Foreign Key to reference table
	participantStatus TEXT,
	_participantStatus TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (appointment)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent(

	resourceType TEXT, -- resourceType: auditEvent
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_modifierExtension_extension
	"type" TEXT, -- Foreign Key to coding table
	subtype BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_subtype_coding
	"action" TEXT CHECK( "action" IN ('C','R','U','D','E') ),
	_action TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	recorded DATETIME,
	_recorded TEXT, -- Foreign Key to element table
	outcome TEXT CHECK( outcome IN ('0','4','8','12') ),
	_outcome TEXT, -- Foreign Key to element table
	outcomeDesc TEXT,
	_outcomeDesc TEXT, -- Foreign Key to element table
	purposeOfEvent BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_purposeOfEvent_codeableConcept
	agent BOOLEAN, -- true if 1+ rows in AuditEvent_Agent correspond to this entry
	"source" TEXT, -- Foreign Key to auditEvent_Source table
	entity BOOLEAN, -- true if 1+ rows in AuditEvent_Entity correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_action)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recorded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcomeDesc)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES auditEvent_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Agent(

	id TEXT PRIMARY KEY,
	auditEventId TEXT, -- Foreign Key to auditEvent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"role" BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent_role_codeableConcept
	who TEXT, -- Foreign Key to reference table
	altId TEXT,
	_altId TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	requestor BOOLEAN,
	_requestor TEXT, -- Foreign Key to element table
	"location" TEXT, -- Foreign Key to reference table
	"policy" BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent_policy_uri
	_policy BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent__policy_element
	media TEXT, -- Foreign Key to coding table
	network TEXT, -- Foreign Key to auditEvent_Network table
	purposeOfUse BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent_purposeOfUse_codeableConcept

	FOREIGN KEY (auditEventId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_altId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (media)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (network)
		REFERENCES auditEvent_Network (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Network(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Network_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Network_modifierExtension_extension
	"address" TEXT,
	_address TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('1','2','3','4','5') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (_address)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Source(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Source_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Source_modifierExtension_extension
	"site" TEXT,
	_site TEXT, -- Foreign Key to element table
	observer TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Source_type_coding

	FOREIGN KEY (_site)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (observer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Entity(

	id TEXT PRIMARY KEY,
	auditEventId TEXT, -- Foreign Key to auditEvent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Entity_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Entity_modifierExtension_extension
	what TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to coding table
	"role" TEXT, -- Foreign Key to coding table
	lifecycle TEXT, -- Foreign Key to coding table
	securityLabel BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Entity_securityLabel_coding
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	query TEXT,
	_query TEXT, -- Foreign Key to element table
	detail BOOLEAN, -- true if 1+ rows in AuditEvent_Detail correspond to this entry

	FOREIGN KEY (auditEventId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (what)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (lifecycle)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_query)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Detail(

	id TEXT PRIMARY KEY,
	auditEvent_EntityId TEXT, -- Foreign Key to auditEvent_Entity table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Detail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Detail_modifierExtension_extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table

	FOREIGN KEY (auditEvent_EntityId)
		REFERENCES auditEvent_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE basic(

	resourceType TEXT, -- resourceType: basic
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: basic_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: basic_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: basic_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: basic_identifier_identifier
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	created DATE,
	_created TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE binary(

	resourceType TEXT, -- resourceType: binary
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	securityContext TEXT, -- Foreign Key to reference table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (securityContext)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct(

	resourceType TEXT, -- resourceType: biologicallyDerivedProduct
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_identifier_identifier
	productCategory TEXT CHECK( productCategory IN ('organ','tissue','fluid','cells','biologicalAgent') ),
	_productCategory TEXT, -- Foreign Key to element table
	productCode TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT CHECK( "status" IN ('available','unavailable') ),
	_status TEXT, -- Foreign Key to element table
	request BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_request_reference
	quantity INTEGER,
	_quantity TEXT, -- Foreign Key to element table
	parent BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_parent_reference
	"collection" TEXT, -- Foreign Key to biologicallyDerivedProduct_Collection table
	processing BOOLEAN, -- true if 1+ rows in BiologicallyDerivedProduct_Processing correspond to this entry
	manipulation TEXT, -- Foreign Key to biologicallyDerivedProduct_Manipulation table
	storage BOOLEAN, -- true if 1+ rows in BiologicallyDerivedProduct_Storage correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productCategory)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_quantity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("collection")
		REFERENCES biologicallyDerivedProduct_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manipulation)
		REFERENCES biologicallyDerivedProduct_Manipulation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Collection(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Collection_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Collection_modifierExtension_extension
	collector TEXT, -- Foreign Key to reference table
	"source" TEXT, -- Foreign Key to reference table
	collectedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_collectedDateTime TEXT, -- Foreign Key to element table
	collectedPeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (collector)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_collectedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (collectedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Processing(

	id TEXT PRIMARY KEY,
	biologicallyDerivedProductId TEXT, -- Foreign Key to biologicallyDerivedProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Processing_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Processing_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"procedure" TEXT, -- Foreign Key to codeableConcept table
	additive TEXT, -- Foreign Key to reference table
	timeDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timeDateTime TEXT, -- Foreign Key to element table
	timePeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (biologicallyDerivedProductId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("procedure")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additive)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Manipulation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Manipulation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Manipulation_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	timeDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timeDateTime TEXT, -- Foreign Key to element table
	timePeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Storage(

	id TEXT PRIMARY KEY,
	biologicallyDerivedProductId TEXT, -- Foreign Key to biologicallyDerivedProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Storage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Storage_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	temperature REAL,
	_temperature TEXT, -- Foreign Key to element table
	scale TEXT CHECK( scale IN ('farenheit','celsius','kelvin') ),
	_scale TEXT, -- Foreign Key to element table
	duration TEXT, -- Foreign Key to period table

	FOREIGN KEY (biologicallyDerivedProductId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_temperature)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_scale)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bodyStructure(

	resourceType TEXT, -- resourceType: bodyStructure
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	morphology TEXT, -- Foreign Key to codeableConcept table
	"location" TEXT, -- Foreign Key to codeableConcept table
	locationQualifier BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure_locationQualifier_codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"image" BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure_image_attachment
	patient TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (morphology)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle(

	resourceType TEXT, -- resourceType: bundle
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT CHECK( "type" IN ('document','message','transaction','transaction-response','batch','batch-response','history','searchset','collection') ),
	_type TEXT, -- Foreign Key to element table
	"timestamp" DATETIME,
	_timestamp TEXT, -- Foreign Key to element table
	total INTEGER,
	_total TEXT, -- Foreign Key to element table
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_link_bundle_Link
	entry BOOLEAN, -- true if 1+ rows in Bundle_Entry correspond to this entry
	"signature" TEXT, -- Foreign Key to signature table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timestamp)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_total)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("signature")
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Link(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Link_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Link_modifierExtension_extension
	relation TEXT,
	_relation TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table

	FOREIGN KEY (_relation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Entry(

	id TEXT PRIMARY KEY,
	bundleId TEXT, -- Foreign Key to bundle table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Entry_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Entry_modifierExtension_extension
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Entry_link_bundle_Link
	fullUrl TEXT,
	_fullUrl TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to resourceList table
	"search" TEXT, -- Foreign Key to bundle_Search table
	request TEXT, -- Foreign Key to bundle_Request table
	response TEXT, -- Foreign Key to bundle_Response table

	FOREIGN KEY (bundleId)
		REFERENCES bundle (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fullUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("search")
		REFERENCES bundle_Search (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES bundle_Request (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES bundle_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Search(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Search_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Search_modifierExtension_extension
	mode TEXT CHECK( mode IN ('match','include','outcome') ),
	_mode TEXT, -- Foreign Key to element table
	score REAL,
	_score TEXT, -- Foreign Key to element table

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_score)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Request(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Request_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Request_modifierExtension_extension
	"method" TEXT CHECK( "method" IN ('GET','HEAD','POST','PUT','DELETE','PATCH') ),
	_method TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	ifNoneMatch TEXT,
	_ifNoneMatch TEXT, -- Foreign Key to element table
	ifModifiedSince DATETIME,
	_ifModifiedSince TEXT, -- Foreign Key to element table
	ifMatch TEXT,
	_ifMatch TEXT, -- Foreign Key to element table
	ifNoneExist TEXT,
	_ifNoneExist TEXT, -- Foreign Key to element table

	FOREIGN KEY (_method)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifNoneMatch)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifModifiedSince)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifMatch)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifNoneExist)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Response(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Response_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Response_modifierExtension_extension
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"location" TEXT,
	_location TEXT, -- Foreign Key to element table
	etag TEXT,
	_etag TEXT, -- Foreign Key to element table
	lastModified DATETIME,
	_lastModified TEXT, -- Foreign Key to element table
	outcome TEXT, -- Foreign Key to resourceList table

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_location)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_etag)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastModified)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement(

	resourceType TEXT, -- resourceType: capabilityStatement
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	kind TEXT CHECK( kind IN ('instance','capability','requirements') ),
	_kind TEXT, -- Foreign Key to element table
	instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_instantiates_canonical
	imports BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_imports_canonical
	software TEXT, -- Foreign Key to capabilityStatement_Software table
	"implementation" TEXT, -- Foreign Key to capabilityStatement_Implementation table
	fhirVersion TEXT CHECK( fhirVersion IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),
	_fhirVersion TEXT, -- Foreign Key to element table
	format BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_format_code
	_format BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__format_element
	patchFormat BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_patchFormat_code
	_patchFormat BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__patchFormat_element
	implementationGuide BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_implementationGuide_canonical
	rest BOOLEAN, -- true if 1+ rows in CapabilityStatement_Rest correspond to this entry
	messaging BOOLEAN, -- true if 1+ rows in CapabilityStatement_Messaging correspond to this entry
	document BOOLEAN, -- true if 1+ rows in CapabilityStatement_Document correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (software)
		REFERENCES capabilityStatement_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("implementation")
		REFERENCES capabilityStatement_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fhirVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Software(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Software_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Software_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	releaseDate DATETIME,
	_releaseDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_releaseDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Implementation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Implementation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Implementation_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	custodian TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (custodian)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Rest(

	id TEXT PRIMARY KEY,
	capabilityStatementId TEXT, -- Foreign Key to capabilityStatement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest_modifierExtension_extension
	mode TEXT CHECK( mode IN ('client','server') ),
	_mode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"security" TEXT, -- Foreign Key to capabilityStatement_Security table
	"resource" BOOLEAN, -- true if 1+ rows in CapabilityStatement_Resource correspond to this entry
	interaction BOOLEAN, -- true if 1+ rows in CapabilityStatement_Interaction1 correspond to this entry
	searchParam BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest_searchParam_capabilityStatement_SearchParam
	operation BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest_operation_capabilityStatement_Operation
	compartment BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest_compartment_canonical

	FOREIGN KEY (capabilityStatementId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("security")
		REFERENCES capabilityStatement_Security (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Security(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Security_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Security_modifierExtension_extension
	cors BOOLEAN,
	_cors TEXT, -- Foreign Key to element table
	service BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Security_service_codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (_cors)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Resource(

	id TEXT PRIMARY KEY,
	capabilityStatement_RestId TEXT, -- Foreign Key to capabilityStatement_Rest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource_modifierExtension_extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" TEXT,
	supportedProfile BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource_supportedProfile_canonical
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	interaction BOOLEAN, -- true if 1+ rows in CapabilityStatement_Interaction correspond to this entry
	versioning TEXT CHECK( versioning IN ('no-version','versioned','versioned-update') ),
	_versioning TEXT, -- Foreign Key to element table
	readHistory BOOLEAN,
	_readHistory TEXT, -- Foreign Key to element table
	updateCreate BOOLEAN,
	_updateCreate TEXT, -- Foreign Key to element table
	conditionalCreate BOOLEAN,
	_conditionalCreate TEXT, -- Foreign Key to element table
	conditionalRead TEXT CHECK( conditionalRead IN ('not-supported','modified-since','not-match','full-support') ),
	_conditionalRead TEXT, -- Foreign Key to element table
	conditionalUpdate BOOLEAN,
	_conditionalUpdate TEXT, -- Foreign Key to element table
	conditionalDelete TEXT CHECK( conditionalDelete IN ('not-supported','single','multiple') ),
	_conditionalDelete TEXT, -- Foreign Key to element table
	referencePolicy BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: literal/logical/resolves/enforced/local,
	_referencePolicy BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__referencePolicy_element
	searchInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource_searchInclude_string
	_searchInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__searchInclude_element
	searchRevInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource_searchRevInclude_string
	_searchRevInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__searchRevInclude_element
	searchParam BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource_searchParam_capabilityStatement_SearchParam
	operation BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource_operation_capabilityStatement_Operation

	FOREIGN KEY (capabilityStatement_RestId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versioning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readHistory)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_updateCreate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalCreate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalRead)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalUpdate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalDelete)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Interaction(

	id TEXT PRIMARY KEY,
	capabilityStatement_ResourceId TEXT, -- Foreign Key to capabilityStatement_Resource table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction_modifierExtension_extension
	"code" TEXT CHECK( "code" IN ('read','vread','update','patch','delete','history-instance','history-type','create','search-type') ),
	_code TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (capabilityStatement_ResourceId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_SearchParam(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SearchParam_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SearchParam_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"definition" TEXT,
	"type" TEXT CHECK( "type" IN ('number','date','string','token','reference','composite','quantity','uri','special') ),
	_type TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Operation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Operation_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"definition" TEXT,
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Interaction1(

	id TEXT PRIMARY KEY,
	capabilityStatement_RestId TEXT, -- Foreign Key to capabilityStatement_Rest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction1_modifierExtension_extension
	"code" TEXT CHECK( "code" IN ('transaction','batch','search-system','history-system') ),
	_code TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (capabilityStatement_RestId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Messaging(

	id TEXT PRIMARY KEY,
	capabilityStatementId TEXT, -- Foreign Key to capabilityStatement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Messaging_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Messaging_modifierExtension_extension
	"endpoint" BOOLEAN, -- true if 1+ rows in CapabilityStatement_Endpoint correspond to this entry
	reliableCache INTEGER,
	_reliableCache TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	supportedMessage BOOLEAN, -- true if 1+ rows in CapabilityStatement_SupportedMessage correspond to this entry

	FOREIGN KEY (capabilityStatementId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reliableCache)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Endpoint(

	id TEXT PRIMARY KEY,
	capabilityStatement_MessagingId TEXT, -- Foreign Key to capabilityStatement_Messaging table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Endpoint_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Endpoint_modifierExtension_extension
	protocol TEXT, -- Foreign Key to coding table
	"address" TEXT,
	_address TEXT, -- Foreign Key to element table

	FOREIGN KEY (capabilityStatement_MessagingId)
		REFERENCES capabilityStatement_Messaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (protocol)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_address)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_SupportedMessage(

	id TEXT PRIMARY KEY,
	capabilityStatement_MessagingId TEXT, -- Foreign Key to capabilityStatement_Messaging table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SupportedMessage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SupportedMessage_modifierExtension_extension
	mode TEXT CHECK( mode IN ('sender','receiver') ),
	_mode TEXT, -- Foreign Key to element table
	"definition" TEXT,

	FOREIGN KEY (capabilityStatement_MessagingId)
		REFERENCES capabilityStatement_Messaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Document(

	id TEXT PRIMARY KEY,
	capabilityStatementId TEXT, -- Foreign Key to capabilityStatement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Document_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Document_modifierExtension_extension
	mode TEXT CHECK( mode IN ('producer','consumer') ),
	_mode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"profile" TEXT,

	FOREIGN KEY (capabilityStatementId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE carePlan(

	resourceType TEXT, -- resourceType: carePlan
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__instantiatesUri_element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_basedOn_reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_replaces_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_partOf_reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_category_codeableConcept
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	contributor BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_contributor_reference
	careTeam BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_careTeam_reference
	addresses BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_addresses_reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_supportingInfo_reference
	goal BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_goal_reference
	activity BOOLEAN, -- true if 1+ rows in CarePlan_Activity correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE carePlan_Activity(

	id TEXT PRIMARY KEY,
	carePlanId TEXT, -- Foreign Key to carePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity_modifierExtension_extension
	outcomeCodeableConcept BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity_outcomeCodeableConcept_codeableConcept
	outcomeReference BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity_outcomeReference_reference
	progress BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity_progress_annotation
	reference TEXT, -- Foreign Key to reference table
	detail TEXT, -- Foreign Key to carePlan_Detail table

	FOREIGN KEY (carePlanId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detail)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE carePlan_Detail(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_modifierExtension_extension
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__instantiatesUri_element
	"code" TEXT, -- Foreign Key to codeableConcept table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_reasonReference_reference
	goal BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_goal_reference
	"status" TEXT CHECK( "status" IN ('not-started','scheduled','in-progress','on-hold','completed','cancelled','stopped','unknown','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	scheduledTiming TEXT, -- Foreign Key to timing table
	scheduledPeriod TEXT, -- Foreign Key to period table
	scheduledString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_scheduledString TEXT, -- Foreign Key to element table
	"location" TEXT, -- Foreign Key to reference table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail_performer_reference
	productCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	productReference TEXT, -- Foreign Key to reference table
	dailyAmount TEXT, -- Foreign Key to quantity table
	quantity TEXT, -- Foreign Key to quantity table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scheduledTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scheduledPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_scheduledString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dailyAmount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE careTeam(

	resourceType TEXT, -- resourceType: careTeam
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_identifier_identifier
	"status" TEXT CHECK( "status" IN ('proposed','active','suspended','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_category_codeableConcept
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	participant BOOLEAN, -- true if 1+ rows in CareTeam_Participant correspond to this entry
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_reasonReference_reference
	managingOrganization BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_managingOrganization_reference
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_telecom_contactPoint
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE careTeam_Participant(

	id TEXT PRIMARY KEY,
	careTeamId TEXT, -- Foreign Key to careTeam table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_Participant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_Participant_modifierExtension_extension
	"role" BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_Participant_role_codeableConcept
	"member" TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (careTeamId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("member")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE catalogEntry(

	resourceType TEXT, -- resourceType: catalogEntry
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_identifier_identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	orderable BOOLEAN,
	_orderable TEXT, -- Foreign Key to element table
	referencedItem TEXT, -- Foreign Key to reference table
	additionalIdentifier BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_additionalIdentifier_identifier
	classification BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_classification_codeableConcept
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	validityPeriod TEXT, -- Foreign Key to period table
	validTo DATETIME,
	_validTo TEXT, -- Foreign Key to element table
	lastUpdated DATETIME,
	_lastUpdated TEXT, -- Foreign Key to element table
	additionalCharacteristic BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_additionalCharacteristic_codeableConcept
	additionalClassification BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_additionalClassification_codeableConcept
	relatedEntry BOOLEAN, -- true if 1+ rows in CatalogEntry_RelatedEntry correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_orderable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referencedItem)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validTo)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastUpdated)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE catalogEntry_RelatedEntry(

	id TEXT PRIMARY KEY,
	catalogEntryId TEXT, -- Foreign Key to catalogEntry table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_RelatedEntry_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_RelatedEntry_modifierExtension_extension
	relationtype TEXT CHECK( relationtype IN ('triggers','is-replaced-by') ),
	_relationtype TEXT, -- Foreign Key to element table
	item TEXT, -- Foreign Key to reference table

	FOREIGN KEY (catalogEntryId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relationtype)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (item)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItem(

	resourceType TEXT, -- resourceType: chargeItem
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_identifier_identifier
	definitionUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_definitionUri_uri
	_definitionUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__definitionUri_element
	definitionCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_definitionCanonical_canonical
	"status" TEXT CHECK( "status" IN ('planned','billable','not-billable','aborted','billed','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_partOf_reference
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	performer BOOLEAN, -- true if 1+ rows in ChargeItem_Performer correspond to this entry
	performingOrganization TEXT, -- Foreign Key to reference table
	requestingOrganization TEXT, -- Foreign Key to reference table
	costCenter TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	bodysite BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_bodysite_codeableConcept
	factorOverride REAL,
	_factorOverride TEXT, -- Foreign Key to element table
	priceOverride TEXT, -- Foreign Key to money table
	overrideReason TEXT,
	_overrideReason TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	enteredDate DATETIME,
	_enteredDate TEXT, -- Foreign Key to element table
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_reason_codeableConcept
	service BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_service_reference
	productReference TEXT, -- Foreign Key to reference table
	productCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	account BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_account_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_note_annotation
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_supportingInformation_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (costCenter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factorOverride)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (priceOverride)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_overrideReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_enteredDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItem_Performer(

	id TEXT PRIMARY KEY,
	chargeItemId TEXT, -- Foreign Key to chargeItem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_Performer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_Performer_modifierExtension_extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (chargeItemId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition(

	resourceType TEXT, -- resourceType: chargeItemDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	derivedFromUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_derivedFromUri_uri
	_derivedFromUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__derivedFromUri_element
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_partOf_canonical
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_replaces_canonical
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_jurisdiction_codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"instance" BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_instance_reference
	applicability BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_applicability_chargeItemDefinition_Applicability
	propertyGroup BOOLEAN, -- true if 1+ rows in ChargeItemDefinition_PropertyGroup correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition_Applicability(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_Applicability_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_Applicability_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition_PropertyGroup(

	id TEXT PRIMARY KEY,
	chargeItemDefinitionId TEXT, -- Foreign Key to chargeItemDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PropertyGroup_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PropertyGroup_modifierExtension_extension
	applicability BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PropertyGroup_applicability_chargeItemDefinition_Applicability
	priceComponent BOOLEAN, -- true if 1+ rows in ChargeItemDefinition_PriceComponent correspond to this entry

	FOREIGN KEY (chargeItemDefinitionId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition_PriceComponent(

	id TEXT PRIMARY KEY,
	chargeItemDefinition_PropertyGroupId TEXT, -- Foreign Key to chargeItemDefinition_PropertyGroup table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PriceComponent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PriceComponent_modifierExtension_extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (chargeItemDefinition_PropertyGroupId)
		REFERENCES chargeItemDefinition_PropertyGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim(

	resourceType TEXT, -- resourceType: claim
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"use" TEXT CHECK( "use" IN ('claim','preauthorization','predetermination') ),
	_use TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	billablePeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	insurer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	fundsReserve TEXT, -- Foreign Key to codeableConcept table
	related BOOLEAN, -- true if 1+ rows in Claim_Related correspond to this entry
	prescription TEXT, -- Foreign Key to reference table
	originalPrescription TEXT, -- Foreign Key to reference table
	payee TEXT, -- Foreign Key to claim_Payee table
	referral TEXT, -- Foreign Key to reference table
	facility TEXT, -- Foreign Key to reference table
	careTeam BOOLEAN, -- true if 1+ rows in Claim_CareTeam correspond to this entry
	supportingInfo BOOLEAN, -- true if 1+ rows in Claim_SupportingInfo correspond to this entry
	diagnosis BOOLEAN, -- true if 1+ rows in Claim_Diagnosis correspond to this entry
	"procedure" BOOLEAN, -- true if 1+ rows in Claim_Procedure correspond to this entry
	insurance BOOLEAN, -- true if 1+ rows in Claim_Insurance correspond to this entry
	accident TEXT, -- Foreign Key to claim_Accident table
	item BOOLEAN, -- true if 1+ rows in Claim_Item correspond to this entry
	total TEXT, -- Foreign Key to money table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (billablePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserve)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (prescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (originalPrescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES claim_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referral)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (accident)
		REFERENCES claim_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (total)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Related(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Related_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Related_modifierExtension_extension
	claim TEXT, -- Foreign Key to reference table
	relationship TEXT, -- Foreign Key to codeableConcept table
	reference TEXT, -- Foreign Key to identifier table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claim)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Payee(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Payee_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Payee_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	party TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_CareTeam(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_CareTeam_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_CareTeam_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"provider" TEXT, -- Foreign Key to reference table
	responsible BOOLEAN,
	_responsible TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table
	qualification TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responsible)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (qualification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_SupportingInfo(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SupportingInfo_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SupportingInfo_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	timingDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_timingDate TEXT, -- Foreign Key to element table
	timingPeriod TEXT, -- Foreign Key to period table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueReference TEXT, -- Foreign Key to reference table
	reason TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Diagnosis(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Diagnosis_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Diagnosis_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	diagnosisCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	diagnosisReference TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Diagnosis_type_codeableConcept
	onAdmission TEXT, -- Foreign Key to codeableConcept table
	packageCode TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onAdmission)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Procedure(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure_type_codeableConcept
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	procedureCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	procedureReference TEXT, -- Foreign Key to reference table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure_udi_reference

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Insurance(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	coverage TEXT, -- Foreign Key to reference table
	businessArrangement TEXT,
	_businessArrangement TEXT, -- Foreign Key to element table
	preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance_preAuthRef_string
	_preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance__preAuthRef_element
	claimResponse TEXT, -- Foreign Key to reference table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_businessArrangement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claimResponse)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Accident(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Accident_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Accident_modifierExtension_extension
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Item(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_careTeamSequence_positiveInt
	_careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__careTeamSequence_element
	diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_diagnosisSequence_positiveInt
	_diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__diagnosisSequence_element
	procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_procedureSequence_positiveInt
	_procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__procedureSequence_element
	informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_informationSequence_positiveInt
	_informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__informationSequence_element
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_programCode_codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_udi_reference
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_subSite_codeableConcept
	encounter BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item_encounter_reference
	detail BOOLEAN, -- true if 1+ rows in Claim_Detail correspond to this entry

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Detail(

	id TEXT PRIMARY KEY,
	claim_ItemId TEXT, -- Foreign Key to claim_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail_programCode_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail_udi_reference
	subDetail BOOLEAN, -- true if 1+ rows in Claim_SubDetail correspond to this entry

	FOREIGN KEY (claim_ItemId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_SubDetail(

	id TEXT PRIMARY KEY,
	claim_DetailId TEXT, -- Foreign Key to claim_Detail table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail_programCode_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail_udi_reference

	FOREIGN KEY (claim_DetailId)
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse(

	resourceType TEXT, -- resourceType: claimResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"use" TEXT,
	_use TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	insurer TEXT, -- Foreign Key to reference table
	requestor TEXT, -- Foreign Key to reference table
	request TEXT, -- Foreign Key to reference table
	outcome TEXT,
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	preAuthRef TEXT,
	_preAuthRef TEXT, -- Foreign Key to element table
	preAuthPeriod TEXT, -- Foreign Key to period table
	payeeType TEXT, -- Foreign Key to codeableConcept table
	item BOOLEAN, -- true if 1+ rows in ClaimResponse_Item correspond to this entry
	addItem BOOLEAN, -- true if 1+ rows in ClaimResponse_AddItem correspond to this entry
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_adjudication_claimResponse_Adjudication
	total BOOLEAN, -- true if 1+ rows in ClaimResponse_Total correspond to this entry
	payment TEXT, -- Foreign Key to claimResponse_Payment table
	fundsReserve TEXT, -- Foreign Key to codeableConcept table
	formCode TEXT, -- Foreign Key to codeableConcept table
	form TEXT, -- Foreign Key to attachment table
	processNote BOOLEAN, -- true if 1+ rows in ClaimResponse_ProcessNote correspond to this entry
	communicationRequest BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_communicationRequest_reference
	insurance BOOLEAN, -- true if 1+ rows in ClaimResponse_Insurance correspond to this entry
	error BOOLEAN, -- true if 1+ rows in ClaimResponse_Error correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preAuthRef)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (preAuthPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payeeType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payment)
		REFERENCES claimResponse_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserve)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (formCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Item(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item_modifierExtension_extension
	itemSequence INTEGER,
	_itemSequence TEXT, -- Foreign Key to element table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item_adjudication_claimResponse_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ClaimResponse_Detail correspond to this entry

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_itemSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Adjudication(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Adjudication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Adjudication_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	reason TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Detail(

	id TEXT PRIMARY KEY,
	claimResponse_ItemId TEXT, -- Foreign Key to claimResponse_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail_modifierExtension_extension
	detailSequence INTEGER,
	_detailSequence TEXT, -- Foreign Key to element table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail_adjudication_claimResponse_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ClaimResponse_SubDetail correspond to this entry

	FOREIGN KEY (claimResponse_ItemId)
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_SubDetail(

	id TEXT PRIMARY KEY,
	claimResponse_DetailId TEXT, -- Foreign Key to claimResponse_Detail table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail_modifierExtension_extension
	subDetailSequence INTEGER,
	_subDetailSequence TEXT, -- Foreign Key to element table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail_adjudication_claimResponse_Adjudication

	FOREIGN KEY (claimResponse_DetailId)
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subDetailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_AddItem(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_modifierExtension_extension
	itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_itemSequence_positiveInt
	_itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__itemSequence_element
	detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_detailSequence_positiveInt
	_detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__detailSequence_element
	subdetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_subdetailSequence_positiveInt
	_subdetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__subdetailSequence_element
	"provider" BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_provider_reference
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_programCode_codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_subSite_codeableConcept
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem_adjudication_claimResponse_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ClaimResponse_Detail1 correspond to this entry

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Detail1(

	id TEXT PRIMARY KEY,
	claimResponse_AddItemId TEXT, -- Foreign Key to claimResponse_AddItem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1_modifierExtension_extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1_modifier_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1_adjudication_claimResponse_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ClaimResponse_SubDetail1 correspond to this entry

	FOREIGN KEY (claimResponse_AddItemId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_SubDetail1(

	id TEXT PRIMARY KEY,
	claimResponse_Detail1Id TEXT, -- Foreign Key to claimResponse_Detail1 table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1_modifierExtension_extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1_modifier_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1_adjudication_claimResponse_Adjudication

	FOREIGN KEY (claimResponse_Detail1Id)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Total(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Total_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Total_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Payment(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Payment_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Payment_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	adjustment TEXT, -- Foreign Key to money table
	adjustmentReason TEXT, -- Foreign Key to codeableConcept table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table
	identifier TEXT, -- Foreign Key to identifier table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustment)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustmentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_ProcessNote(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_ProcessNote_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_ProcessNote_modifierExtension_extension
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('display','print','printoper') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"language" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Insurance(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Insurance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Insurance_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	coverage TEXT, -- Foreign Key to reference table
	businessArrangement TEXT,
	_businessArrangement TEXT, -- Foreign Key to element table
	claimResponse TEXT, -- Foreign Key to reference table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_businessArrangement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claimResponse)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Error(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Error_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Error_modifierExtension_extension
	itemSequence INTEGER,
	_itemSequence TEXT, -- Foreign Key to element table
	detailSequence INTEGER,
	_detailSequence TEXT, -- Foreign Key to element table
	subDetailSequence INTEGER,
	_subDetailSequence TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_itemSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subDetailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE clinicalImpression(

	resourceType TEXT, -- resourceType: clinicalImpression
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	assessor TEXT, -- Foreign Key to reference table
	previous TEXT, -- Foreign Key to reference table
	problem BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_problem_reference
	investigation BOOLEAN, -- true if 1+ rows in ClinicalImpression_Investigation correspond to this entry
	protocol BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_protocol_uri
	_protocol BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__protocol_element
	summary TEXT,
	_summary TEXT, -- Foreign Key to element table
	finding BOOLEAN, -- true if 1+ rows in ClinicalImpression_Finding correspond to this entry
	prognosisCodeableConcept BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_prognosisCodeableConcept_codeableConcept
	prognosisReference BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_prognosisReference_reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_supportingInfo_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assessor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (previous)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_summary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE clinicalImpression_Investigation(

	id TEXT PRIMARY KEY,
	clinicalImpressionId TEXT, -- Foreign Key to clinicalImpression table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Investigation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Investigation_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Investigation_item_reference

	FOREIGN KEY (clinicalImpressionId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE clinicalImpression_Finding(

	id TEXT PRIMARY KEY,
	clinicalImpressionId TEXT, -- Foreign Key to clinicalImpression table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Finding_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Finding_modifierExtension_extension
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	basis TEXT,
	_basis TEXT, -- Foreign Key to element table

	FOREIGN KEY (clinicalImpressionId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_basis)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem(

	resourceType TEXT, -- resourceType: codeSystem
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	caseSensitive BOOLEAN,
	_caseSensitive TEXT, -- Foreign Key to element table
	valueSet TEXT,
	hierarchyMeaning TEXT CHECK( hierarchyMeaning IN ('grouped-by','is-a','part-of','classified-with') ),
	_hierarchyMeaning TEXT, -- Foreign Key to element table
	compositional BOOLEAN,
	_compositional TEXT, -- Foreign Key to element table
	versionNeeded BOOLEAN,
	_versionNeeded TEXT, -- Foreign Key to element table
	content TEXT CHECK( content IN ('not-present','example','fragment','complete','supplement') ),
	_content TEXT, -- Foreign Key to element table
	supplements TEXT,
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	"filter" BOOLEAN, -- true if 1+ rows in CodeSystem_Filter correspond to this entry
	property BOOLEAN, -- true if 1+ rows in CodeSystem_Property correspond to this entry
	concept BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_concept_codeSystem_Concept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_caseSensitive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_hierarchyMeaning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compositional)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionNeeded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_content)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Filter(

	id TEXT PRIMARY KEY,
	codeSystemId TEXT, -- Foreign Key to codeSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	operator BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter_operator_code
	_operator BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter__operator_element
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystemId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Property(

	id TEXT PRIMARY KEY,
	codeSystemId TEXT, -- Foreign Key to codeSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('code','Coding','string','integer','boolean','dateTime','decimal') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystemId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Concept(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Concept_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Concept_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	designation BOOLEAN, -- true if 1+ rows in CodeSystem_Designation correspond to this entry
	property BOOLEAN, -- true if 1+ rows in CodeSystem_Property1 correspond to this entry
	concept BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Concept_concept_codeSystem_Concept

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Designation(

	id TEXT PRIMARY KEY,
	codeSystem_ConceptId TEXT, -- Foreign Key to codeSystem_Concept table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Designation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Designation_modifierExtension_extension
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"use" TEXT, -- Foreign Key to coding table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("use")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Property1(

	id TEXT PRIMARY KEY,
	codeSystem_ConceptId TEXT, -- Foreign Key to codeSystem_Concept table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property1_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueCoding TEXT, -- Foreign Key to coding table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communication(

	resourceType TEXT, -- resourceType: communication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__instantiatesUri_element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_basedOn_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_partOf_reference
	inResponseTo BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_inResponseTo_reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_category_codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	medium BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_medium_codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	topic TEXT, -- Foreign Key to codeableConcept table
	about BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_about_reference
	encounter TEXT, -- Foreign Key to reference table
	sent DATETIME,
	_sent TEXT, -- Foreign Key to element table
	received DATETIME,
	_received TEXT, -- Foreign Key to element table
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_recipient_reference
	sender TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_reasonReference_reference
	payload BOOLEAN, -- true if 1+ rows in Communication_Payload correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topic)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_received)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sender)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communication_Payload(

	id TEXT PRIMARY KEY,
	communicationId TEXT, -- Foreign Key to communication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_Payload_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_Payload_modifierExtension_extension
	contentString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_contentString TEXT, -- Foreign Key to element table
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (communicationId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communicationRequest(

	resourceType TEXT, -- resourceType: communicationRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_identifier_identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_basedOn_reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_replaces_reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_category_codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	medium BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_medium_codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	about BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_about_reference
	encounter TEXT, -- Foreign Key to reference table
	payload BOOLEAN, -- true if 1+ rows in CommunicationRequest_Payload correspond to this entry
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_recipient_reference
	sender TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_reasonReference_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sender)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communicationRequest_Payload(

	id TEXT PRIMARY KEY,
	communicationRequestId TEXT, -- Foreign Key to communicationRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_Payload_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_Payload_modifierExtension_extension
	contentString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_contentString TEXT, -- Foreign Key to element table
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (communicationRequestId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE compartmentDefinition(

	resourceType TEXT, -- resourceType: compartmentDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_useContext_usageContext
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"code" TEXT CHECK( "code" IN ('Patient','Encounter','RelatedPerson','Practitioner','Device') ),
	_code TEXT, -- Foreign Key to element table
	"search" BOOLEAN,
	_search TEXT, -- Foreign Key to element table
	"resource" BOOLEAN, -- true if 1+ rows in CompartmentDefinition_Resource correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_search)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE compartmentDefinition_Resource(

	id TEXT PRIMARY KEY,
	compartmentDefinitionId TEXT, -- Foreign Key to compartmentDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	param BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource_param_string
	_param BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource__param_element
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (compartmentDefinitionId)
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition(

	resourceType TEXT, -- resourceType: composition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"status" TEXT CHECK( "status" IN ('preliminary','final','amended','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_category_codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_author_reference
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	confidentiality TEXT,
	_confidentiality TEXT, -- Foreign Key to element table
	attester BOOLEAN, -- true if 1+ rows in Composition_Attester correspond to this entry
	custodian TEXT, -- Foreign Key to reference table
	relatesTo BOOLEAN, -- true if 1+ rows in Composition_RelatesTo correspond to this entry
	"event" BOOLEAN, -- true if 1+ rows in Composition_Event correspond to this entry
	section BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_section_composition_Section

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_confidentiality)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (custodian)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_Attester(

	id TEXT PRIMARY KEY,
	compositionId TEXT, -- Foreign Key to composition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Attester_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Attester_modifierExtension_extension
	mode TEXT CHECK( mode IN ('personal','professional','legal','official') ),
	_mode TEXT, -- Foreign Key to element table
	"time" DATETIME,
	_time TEXT, -- Foreign Key to element table
	party TEXT, -- Foreign Key to reference table

	FOREIGN KEY (compositionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_time)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_RelatesTo(

	id TEXT PRIMARY KEY,
	compositionId TEXT, -- Foreign Key to composition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_RelatesTo_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_RelatesTo_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	targetIdentifier TEXT, -- Foreign Key to identifier table
	targetReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (compositionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_Event(

	id TEXT PRIMARY KEY,
	compositionId TEXT, -- Foreign Key to composition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event_modifierExtension_extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event_code_codeableConcept
	"period" TEXT, -- Foreign Key to period table
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event_detail_reference

	FOREIGN KEY (compositionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_Section(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section_modifierExtension_extension
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section_author_reference
	focus TEXT, -- Foreign Key to reference table
	"text" TEXT, -- Foreign Key to narrative table
	mode TEXT,
	_mode TEXT, -- Foreign Key to element table
	orderedBy TEXT, -- Foreign Key to codeableConcept table
	entry BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section_entry_reference
	emptyReason TEXT, -- Foreign Key to codeableConcept table
	section BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section_section_composition_Section

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (focus)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orderedBy)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (emptyReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap(

	resourceType TEXT, -- resourceType: conceptMap
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	sourceUri TEXT, -- pattern: ^\S*$
	_sourceUri TEXT, -- Foreign Key to element table
	sourceCanonical TEXT, -- pattern: ^\S*$
	_sourceCanonical TEXT, -- Foreign Key to element table
	targetUri TEXT, -- pattern: ^\S*$
	_targetUri TEXT, -- Foreign Key to element table
	targetCanonical TEXT, -- pattern: ^\S*$
	_targetCanonical TEXT, -- Foreign Key to element table
	"group" BOOLEAN, -- true if 1+ rows in ConceptMap_Group correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Group(

	id TEXT PRIMARY KEY,
	conceptMapId TEXT, -- Foreign Key to conceptMap table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Group_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Group_modifierExtension_extension
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	sourceVersion TEXT,
	_sourceVersion TEXT, -- Foreign Key to element table
	"target" TEXT,
	_target TEXT, -- Foreign Key to element table
	targetVersion TEXT,
	_targetVersion TEXT, -- Foreign Key to element table
	element BOOLEAN, -- true if 1+ rows in ConceptMap_Element correspond to this entry
	unmapped TEXT, -- Foreign Key to conceptMap_Unmapped table

	FOREIGN KEY (conceptMapId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_target)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unmapped)
		REFERENCES conceptMap_Unmapped (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Element(

	id TEXT PRIMARY KEY,
	conceptMap_GroupId TEXT, -- Foreign Key to conceptMap_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Element_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Element_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	"target" BOOLEAN, -- true if 1+ rows in ConceptMap_Target correspond to this entry

	FOREIGN KEY (conceptMap_GroupId)
		REFERENCES conceptMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Target(

	id TEXT PRIMARY KEY,
	conceptMap_ElementId TEXT, -- Foreign Key to conceptMap_Element table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	equivalence TEXT CHECK( equivalence IN ('relatedto','equivalent','equal','wider','subsumes','narrower','specializes','inexact','unmatched','disjoint') ),
	_equivalence TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	dependsOn BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target_dependsOn_conceptMap_DependsOn
	product BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target_product_conceptMap_DependsOn

	FOREIGN KEY (conceptMap_ElementId)
		REFERENCES conceptMap_Element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_equivalence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_DependsOn(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_DependsOn_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_DependsOn_modifierExtension_extension
	property TEXT,
	_property TEXT, -- Foreign Key to element table
	"system" TEXT,
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table

	FOREIGN KEY (_property)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Unmapped(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Unmapped_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Unmapped_modifierExtension_extension
	mode TEXT CHECK( mode IN ('provided','fixed','other-map') ),
	_mode TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	"url" TEXT,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "condition"(

	resourceType TEXT, -- resourceType: condition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_identifier_identifier
	clinicalStatus TEXT, -- Foreign Key to codeableConcept table
	verificationStatus TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_category_codeableConcept
	severity TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_bodySite_codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	onsetDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_onsetDateTime TEXT, -- Foreign Key to element table
	onsetAge TEXT, -- Foreign Key to age table
	onsetPeriod TEXT, -- Foreign Key to period table
	onsetRange TEXT, -- Foreign Key to range table
	onsetString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_onsetString TEXT, -- Foreign Key to element table
	abatementDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_abatementDateTime TEXT, -- Foreign Key to element table
	abatementAge TEXT, -- Foreign Key to age table
	abatementPeriod TEXT, -- Foreign Key to period table
	abatementRange TEXT, -- Foreign Key to range table
	abatementString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_abatementString TEXT, -- Foreign Key to element table
	recordedDate DATETIME,
	_recordedDate TEXT, -- Foreign Key to element table
	recorder TEXT, -- Foreign Key to reference table
	asserter TEXT, -- Foreign Key to reference table
	stage BOOLEAN, -- true if 1+ rows in Condition_Stage correspond to this entry
	evidence BOOLEAN, -- true if 1+ rows in Condition_Evidence correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (clinicalStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (verificationStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (severity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abatementDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abatementAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abatementPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abatementRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abatementString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asserter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE condition_Stage(

	id TEXT PRIMARY KEY,
	conditionId TEXT, -- Foreign Key to "condition" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Stage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Stage_modifierExtension_extension
	summary TEXT, -- Foreign Key to codeableConcept table
	assessment BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Stage_assessment_reference
	"type" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (conditionId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (summary)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE condition_Evidence(

	id TEXT PRIMARY KEY,
	conditionId TEXT, -- Foreign Key to "condition" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence_modifierExtension_extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence_code_codeableConcept
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence_detail_reference

	FOREIGN KEY (conditionId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent(

	resourceType TEXT, -- resourceType: consent
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_identifier_identifier
	"status" TEXT CHECK( "status" IN ('draft','proposed','active','rejected','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"scope" TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_category_codeableConcept
	patient TEXT, -- Foreign Key to reference table
	"dateTime" DATETIME,
	_dateTime TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_performer_reference
	organization BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_organization_reference
	sourceAttachment TEXT, -- Foreign Key to attachment table
	sourceReference TEXT, -- Foreign Key to reference table
	"policy" BOOLEAN, -- true if 1+ rows in Consent_Policy correspond to this entry
	policyRule TEXT, -- Foreign Key to codeableConcept table
	verification BOOLEAN, -- true if 1+ rows in Consent_Verification correspond to this entry
	provision TEXT, -- Foreign Key to consent_Provision table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("scope")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (policyRule)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (provision)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Policy(

	id TEXT PRIMARY KEY,
	consentId TEXT, -- Foreign Key to consent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Policy_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Policy_modifierExtension_extension
	authority TEXT,
	_authority TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table

	FOREIGN KEY (consentId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Verification(

	id TEXT PRIMARY KEY,
	consentId TEXT, -- Foreign Key to consent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Verification_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Verification_modifierExtension_extension
	verified BOOLEAN,
	_verified TEXT, -- Foreign Key to element table
	verifiedWith TEXT, -- Foreign Key to reference table
	verificationDate DATETIME,
	_verificationDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (consentId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_verified)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (verifiedWith)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_verificationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Provision(

	id TEXT PRIMARY KEY,
	consent_ProvisionId TEXT, -- Foreign Key to consent_Provision table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('deny','permit') ),
	_type TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	actor BOOLEAN, -- true if 1+ rows in Consent_Actor correspond to this entry
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision_action_codeableConcept
	securityLabel BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision_securityLabel_coding
	purpose BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision_purpose_coding
	class BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision_class_coding
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision_code_codeableConcept
	dataPeriod TEXT, -- Foreign Key to period table
	"data" BOOLEAN, -- true if 1+ rows in Consent_Data correspond to this entry
	provision BOOLEAN, -- true if 1+ rows in Consent_Provision correspond to this entry

	FOREIGN KEY (consent_ProvisionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Actor(

	id TEXT PRIMARY KEY,
	consent_ProvisionId TEXT, -- Foreign Key to consent_Provision table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Actor_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Actor_modifierExtension_extension
	"role" TEXT, -- Foreign Key to codeableConcept table
	reference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (consent_ProvisionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Data(

	id TEXT PRIMARY KEY,
	consent_ProvisionId TEXT, -- Foreign Key to consent_Provision table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Data_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Data_modifierExtension_extension
	meaning TEXT CHECK( meaning IN ('instance','related','dependents','authoredby') ),
	_meaning TEXT, -- Foreign Key to element table
	reference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (consent_ProvisionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_meaning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract(

	resourceType TEXT, -- resourceType: contract
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_identifier_identifier
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	legalState TEXT, -- Foreign Key to codeableConcept table
	instantiatesCanonical TEXT, -- Foreign Key to reference table
	instantiatesUri TEXT,
	_instantiatesUri TEXT, -- Foreign Key to element table
	contentDerivative TEXT, -- Foreign Key to codeableConcept table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	applies TEXT, -- Foreign Key to period table
	expirationType TEXT, -- Foreign Key to codeableConcept table
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_subject_reference
	authority BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_authority_reference
	"domain" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_domain_reference
	"site" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_site_reference
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_alias_string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__alias_element
	author TEXT, -- Foreign Key to reference table
	"scope" TEXT, -- Foreign Key to codeableConcept table
	topicCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	topicReference TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_subType_codeableConcept
	contentDefinition TEXT, -- Foreign Key to contract_ContentDefinition table
	term BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_term_contract_Term
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_supportingInfo_reference
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_relevantHistory_reference
	signer BOOLEAN, -- true if 1+ rows in Contract_Signer correspond to this entry
	friendly BOOLEAN, -- true if 1+ rows in Contract_Friendly correspond to this entry
	legal BOOLEAN, -- true if 1+ rows in Contract_Legal correspond to this entry
	"rule" BOOLEAN, -- true if 1+ rows in Contract_Rule correspond to this entry
	legallyBindingAttachment TEXT, -- Foreign Key to attachment table
	legallyBindingReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (instantiatesCanonical)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instantiatesUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentDerivative)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (applies)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expirationType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("scope")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentDefinition)
		REFERENCES contract_ContentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legallyBindingAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legallyBindingReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_ContentDefinition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ContentDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ContentDefinition_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	publisher TEXT, -- Foreign Key to reference table
	publicationDate DATETIME,
	_publicationDate TEXT, -- Foreign Key to element table
	publicationStatus TEXT,
	_publicationStatus TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (publisher)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publicationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publicationStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Term(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Term_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Term_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	applies TEXT, -- Foreign Key to period table
	topicCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	topicReference TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	securityLabel BOOLEAN, -- true if 1+ rows in Contract_SecurityLabel correspond to this entry
	offer TEXT, -- Foreign Key to contract_Offer table
	asset BOOLEAN, -- true if 1+ rows in Contract_Asset correspond to this entry
	"action" BOOLEAN, -- true if 1+ rows in Contract_Action correspond to this entry
	"group" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Term_group_contract_Term

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (applies)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offer)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_SecurityLabel(

	id TEXT PRIMARY KEY,
	contract_TermId TEXT, -- Foreign Key to contract_Term table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel_modifierExtension_extension
	number BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel_number_unsignedInt
	_number BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel__number_element
	classification TEXT, -- Foreign Key to coding table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel_category_coding
	control BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel_control_coding

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (classification)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Offer(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer_identifier_identifier
	party BOOLEAN, -- true if 1+ rows in Contract_Party correspond to this entry
	topic TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	decision TEXT, -- Foreign Key to codeableConcept table
	decisionMode BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer_decisionMode_codeableConcept
	answer BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer_answer_contract_Answer
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer_linkId_string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__linkId_element
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer_securityLabelNumber_unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__securityLabelNumber_element

	FOREIGN KEY (topic)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (decision)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Party(

	id TEXT PRIMARY KEY,
	contract_OfferId TEXT, -- Foreign Key to contract_Offer table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Party_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Party_modifierExtension_extension
	reference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Party_reference_reference
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (contract_OfferId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Answer(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Answer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Answer_modifierExtension_extension
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCoding TEXT, -- Foreign Key to coding table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Asset(

	id TEXT PRIMARY KEY,
	contract_TermId TEXT, -- Foreign Key to contract_Term table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_modifierExtension_extension
	"scope" TEXT, -- Foreign Key to codeableConcept table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_type_codeableConcept
	typeReference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_typeReference_reference
	subtype BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_subtype_codeableConcept
	relationship TEXT, -- Foreign Key to coding table
	context BOOLEAN, -- true if 1+ rows in Contract_Context correspond to this entry
	"condition" TEXT,
	_condition TEXT, -- Foreign Key to element table
	periodType BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_periodType_codeableConcept
	"period" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_period_period
	usePeriod BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_usePeriod_period
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_linkId_string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__linkId_element
	answer BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_answer_contract_Answer
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset_securityLabelNumber_unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__securityLabelNumber_element
	valuedItem BOOLEAN, -- true if 1+ rows in Contract_ValuedItem correspond to this entry

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("scope")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_condition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Context(

	id TEXT PRIMARY KEY,
	contract_AssetId TEXT, -- Foreign Key to contract_Asset table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Context_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Context_modifierExtension_extension
	reference TEXT, -- Foreign Key to reference table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Context_code_codeableConcept
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (contract_AssetId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_ValuedItem(

	id TEXT PRIMARY KEY,
	contract_AssetId TEXT, -- Foreign Key to contract_Asset table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem_modifierExtension_extension
	entityCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	entityReference TEXT, -- Foreign Key to reference table
	identifier TEXT, -- Foreign Key to identifier table
	effectiveTime DATETIME,
	_effectiveTime TEXT, -- Foreign Key to element table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	points REAL,
	_points TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	payment TEXT,
	_payment TEXT, -- Foreign Key to element table
	paymentDate DATETIME,
	_paymentDate TEXT, -- Foreign Key to element table
	responsible TEXT, -- Foreign Key to reference table
	recipient TEXT, -- Foreign Key to reference table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem_linkId_string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__linkId_element
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem_securityLabelNumber_unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__securityLabelNumber_element

	FOREIGN KEY (contract_AssetId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (entityCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (entityReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_points)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_payment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responsible)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recipient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Action(

	id TEXT PRIMARY KEY,
	contract_TermId TEXT, -- Foreign Key to contract_Term table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_modifierExtension_extension
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" BOOLEAN, -- true if 1+ rows in Contract_Subject correspond to this entry
	intent TEXT, -- Foreign Key to codeableConcept table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_linkId_string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__linkId_element
	"status" TEXT, -- Foreign Key to codeableConcept table
	context TEXT, -- Foreign Key to reference table
	contextLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_contextLinkId_string
	_contextLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__contextLinkId_element
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	requester BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_requester_reference
	requesterLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_requesterLinkId_string
	_requesterLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__requesterLinkId_element
	performerType BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_performerType_codeableConcept
	performerRole TEXT, -- Foreign Key to codeableConcept table
	performer TEXT, -- Foreign Key to reference table
	performerLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_performerLinkId_string
	_performerLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__performerLinkId_element
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_reasonReference_reference
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_reason_string
	_reason BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__reason_element
	reasonLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_reasonLinkId_string
	_reasonLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__reasonLinkId_element
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_note_annotation
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action_securityLabelNumber_unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__securityLabelNumber_element

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intent)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerRole)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Subject(

	id TEXT PRIMARY KEY,
	contract_ActionId TEXT, -- Foreign Key to contract_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Subject_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Subject_modifierExtension_extension
	reference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Subject_reference_reference
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (contract_ActionId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Signer(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Signer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Signer_modifierExtension_extension
	"type" TEXT, -- Foreign Key to coding table
	party TEXT, -- Foreign Key to reference table
	"signature" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Signer_signature_signature

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Friendly(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Friendly_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Friendly_modifierExtension_extension
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Legal(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Legal_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Legal_modifierExtension_extension
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Rule(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Rule_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Rule_modifierExtension_extension
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage(

	resourceType TEXT, -- resourceType: coverage
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	policyHolder TEXT, -- Foreign Key to reference table
	subscriber TEXT, -- Foreign Key to reference table
	subscriberId TEXT,
	_subscriberId TEXT, -- Foreign Key to element table
	beneficiary TEXT, -- Foreign Key to reference table
	"dependent" TEXT,
	_dependent TEXT, -- Foreign Key to element table
	relationship TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table
	payor BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_payor_reference
	class BOOLEAN, -- true if 1+ rows in Coverage_Class correspond to this entry
	"order" INTEGER,
	_order TEXT, -- Foreign Key to element table
	network TEXT,
	_network TEXT, -- Foreign Key to element table
	costToBeneficiary BOOLEAN, -- true if 1+ rows in Coverage_CostToBeneficiary correspond to this entry
	subrogation BOOLEAN,
	_subrogation TEXT, -- Foreign Key to element table
	contract BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_contract_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (policyHolder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subscriber)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subscriberId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (beneficiary)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dependent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_order)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_network)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subrogation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage_Class(

	id TEXT PRIMARY KEY,
	coverageId TEXT, -- Foreign Key to coverage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Class_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Class_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage_CostToBeneficiary(

	id TEXT PRIMARY KEY,
	coverageId TEXT, -- Foreign Key to coverage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_CostToBeneficiary_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_CostToBeneficiary_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueMoney TEXT, -- Foreign Key to money table
	exception BOOLEAN, -- true if 1+ rows in Coverage_Exception correspond to this entry

	FOREIGN KEY (coverageId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage_Exception(

	id TEXT PRIMARY KEY,
	coverage_CostToBeneficiaryId TEXT, -- Foreign Key to coverage_CostToBeneficiary table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Exception_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Exception_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (coverage_CostToBeneficiaryId)
		REFERENCES coverage_CostToBeneficiary (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest(

	resourceType TEXT, -- resourceType: coverageEligibilityRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	purpose BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: auth-requirements/benefits/discovery/validation,
	_purpose BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest__purpose_element
	patient TEXT, -- Foreign Key to reference table
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	insurer TEXT, -- Foreign Key to reference table
	facility TEXT, -- Foreign Key to reference table
	supportingInfo BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_SupportingInfo correspond to this entry
	insurance BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_Insurance correspond to this entry
	item BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_Item correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_SupportingInfo(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequestId TEXT, -- Foreign Key to coverageEligibilityRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_SupportingInfo_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_SupportingInfo_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	information TEXT, -- Foreign Key to reference table
	appliesToAll BOOLEAN,
	_appliesToAll TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageEligibilityRequestId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (information)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_appliesToAll)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_Insurance(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequestId TEXT, -- Foreign Key to coverageEligibilityRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Insurance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Insurance_modifierExtension_extension
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	coverage TEXT, -- Foreign Key to reference table
	businessArrangement TEXT,
	_businessArrangement TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageEligibilityRequestId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_businessArrangement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_Item(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequestId TEXT, -- Foreign Key to coverageEligibilityRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item_modifierExtension_extension
	supportingInfoSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item_supportingInfoSequence_positiveInt
	_supportingInfoSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item__supportingInfoSequence_element
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item_modifier_codeableConcept
	"provider" TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	facility TEXT, -- Foreign Key to reference table
	diagnosis BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_Diagnosis correspond to this entry
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item_detail_reference

	FOREIGN KEY (coverageEligibilityRequestId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_Diagnosis(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_ItemId TEXT, -- Foreign Key to coverageEligibilityRequest_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Diagnosis_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Diagnosis_modifierExtension_extension
	diagnosisCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	diagnosisReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (coverageEligibilityRequest_ItemId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse(

	resourceType TEXT, -- resourceType: coverageEligibilityResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	purpose BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: auth-requirements/benefits/discovery/validation,
	_purpose BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse__purpose_element
	patient TEXT, -- Foreign Key to reference table
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	requestor TEXT, -- Foreign Key to reference table
	request TEXT, -- Foreign Key to reference table
	outcome TEXT CHECK( outcome IN ('queued','complete','error','partial') ),
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	insurer TEXT, -- Foreign Key to reference table
	insurance BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Insurance correspond to this entry
	preAuthRef TEXT,
	_preAuthRef TEXT, -- Foreign Key to element table
	form TEXT, -- Foreign Key to codeableConcept table
	error BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Error correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preAuthRef)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Insurance(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponseId TEXT, -- Foreign Key to coverageEligibilityResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Insurance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Insurance_modifierExtension_extension
	coverage TEXT, -- Foreign Key to reference table
	inforce BOOLEAN,
	_inforce TEXT, -- Foreign Key to element table
	benefitPeriod TEXT, -- Foreign Key to period table
	item BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Item correspond to this entry

	FOREIGN KEY (coverageEligibilityResponseId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inforce)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (benefitPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Item(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_InsuranceId TEXT, -- Foreign Key to coverageEligibilityResponse_Insurance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item_modifier_codeableConcept
	"provider" TEXT, -- Foreign Key to reference table
	excluded BOOLEAN,
	_excluded TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	network TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	term TEXT, -- Foreign Key to codeableConcept table
	benefit BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Benefit correspond to this entry
	authorizationRequired BOOLEAN,
	_authorizationRequired TEXT, -- Foreign Key to element table
	authorizationSupporting BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item_authorizationSupporting_codeableConcept
	authorizationUrl TEXT,
	_authorizationUrl TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageEligibilityResponse_InsuranceId)
		REFERENCES coverageEligibilityResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_excluded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (network)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (term)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorizationRequired)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorizationUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Benefit(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_ItemId TEXT, -- Foreign Key to coverageEligibilityResponse_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Benefit_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Benefit_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	allowedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_allowedUnsignedInt TEXT, -- Foreign Key to element table
	allowedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_allowedString TEXT, -- Foreign Key to element table
	allowedMoney TEXT, -- Foreign Key to money table
	usedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_usedUnsignedInt TEXT, -- Foreign Key to element table
	usedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_usedString TEXT, -- Foreign Key to element table
	usedMoney TEXT, -- Foreign Key to money table

	FOREIGN KEY (coverageEligibilityResponse_ItemId)
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (allowedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (usedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Error(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponseId TEXT, -- Foreign Key to coverageEligibilityResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Error_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Error_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (coverageEligibilityResponseId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE detectedIssue(

	resourceType TEXT, -- resourceType: detectedIssue
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	severity TEXT CHECK( severity IN ('high','moderate','low') ),
	_severity TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	identifiedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_identifiedDateTime TEXT, -- Foreign Key to element table
	identifiedPeriod TEXT, -- Foreign Key to period table
	author TEXT, -- Foreign Key to reference table
	implicated BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_implicated_reference
	evidence BOOLEAN, -- true if 1+ rows in DetectedIssue_Evidence correspond to this entry
	detail TEXT,
	_detail TEXT, -- Foreign Key to element table
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table
	mitigation BOOLEAN, -- true if 1+ rows in DetectedIssue_Mitigation correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identifiedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifiedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detail)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE detectedIssue_Evidence(

	id TEXT PRIMARY KEY,
	detectedIssueId TEXT, -- Foreign Key to detectedIssue table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence_modifierExtension_extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence_code_codeableConcept
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence_detail_reference

	FOREIGN KEY (detectedIssueId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE detectedIssue_Mitigation(

	id TEXT PRIMARY KEY,
	detectedIssueId TEXT, -- Foreign Key to detectedIssue table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Mitigation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Mitigation_modifierExtension_extension
	"action" TEXT, -- Foreign Key to codeableConcept table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table

	FOREIGN KEY (detectedIssueId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("action")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device(

	resourceType TEXT, -- resourceType: device
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: device_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: device_identifier_identifier
	"definition" TEXT, -- Foreign Key to reference table
	udiCarrier BOOLEAN, -- true if 1+ rows in Device_UdiCarrier correspond to this entry
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	statusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: device_statusReason_codeableConcept
	distinctIdentifier TEXT,
	_distinctIdentifier TEXT, -- Foreign Key to element table
	manufacturer TEXT,
	_manufacturer TEXT, -- Foreign Key to element table
	manufactureDate DATETIME,
	_manufactureDate TEXT, -- Foreign Key to element table
	expirationDate DATETIME,
	_expirationDate TEXT, -- Foreign Key to element table
	lotNumber TEXT,
	_lotNumber TEXT, -- Foreign Key to element table
	serialNumber TEXT,
	_serialNumber TEXT, -- Foreign Key to element table
	deviceName BOOLEAN, -- true if 1+ rows in Device_DeviceName correspond to this entry
	modelNumber TEXT,
	_modelNumber TEXT, -- Foreign Key to element table
	partNumber TEXT,
	_partNumber TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	specialization BOOLEAN, -- true if 1+ rows in Device_Specialization correspond to this entry
	"version" BOOLEAN, -- true if 1+ rows in Device_Version correspond to this entry
	property BOOLEAN, -- true if 1+ rows in Device_Property correspond to this entry
	patient TEXT, -- Foreign Key to reference table
	"owner" TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: device_contact_contactPoint
	"location" TEXT, -- Foreign Key to reference table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: device_note_annotation
	safety BOOLEAN, -- true if 1+ item is referenced from bridge table: device_safety_codeableConcept
	parent TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("definition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_distinctIdentifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_manufacturer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_manufactureDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expirationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lotNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_serialNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_modelNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_partNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_UdiCarrier(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_UdiCarrier_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_UdiCarrier_modifierExtension_extension
	deviceIdentifier TEXT,
	_deviceIdentifier TEXT, -- Foreign Key to element table
	issuer TEXT,
	_issuer TEXT, -- Foreign Key to element table
	jurisdiction TEXT,
	_jurisdiction TEXT, -- Foreign Key to element table
	carrierAIDC TEXT,
	_carrierAIDC TEXT, -- Foreign Key to element table
	carrierHRF TEXT,
	_carrierHRF TEXT, -- Foreign Key to element table
	entryType TEXT CHECK( entryType IN ('barcode','rfid','manual','card','self-reported','unknown') ),
	_entryType TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deviceIdentifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issuer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_jurisdiction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_carrierAIDC)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_carrierHRF)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_entryType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_DeviceName(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_DeviceName_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_DeviceName_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('udi-label-name','user-friendly-name','patient-reported-name','manufacturer-name','model-name','other') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_Specialization(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Specialization_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Specialization_modifierExtension_extension
	systemType TEXT, -- Foreign Key to codeableConcept table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (systemType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_Version(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Version_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Version_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	component TEXT, -- Foreign Key to identifier table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (component)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_Property(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property_valueQuantity_quantity
	valueCode BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property_valueCode_codeableConcept

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition(

	resourceType TEXT, -- resourceType: deviceDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_identifier_identifier
	udiDeviceIdentifier BOOLEAN, -- true if 1+ rows in DeviceDefinition_UdiDeviceIdentifier correspond to this entry
	manufacturerString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_manufacturerString TEXT, -- Foreign Key to element table
	manufacturerReference TEXT, -- Foreign Key to reference table
	deviceName BOOLEAN, -- true if 1+ rows in DeviceDefinition_DeviceName correspond to this entry
	modelNumber TEXT,
	_modelNumber TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	specialization BOOLEAN, -- true if 1+ rows in DeviceDefinition_Specialization correspond to this entry
	"version" BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_version_string
	_version BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__version_element
	safety BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_safety_codeableConcept
	shelfLifeStorage BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_shelfLifeStorage_productShelfLife
	physicalCharacteristics TEXT, -- Foreign Key to prodCharacteristic table
	languageCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_languageCode_codeableConcept
	capability BOOLEAN, -- true if 1+ rows in DeviceDefinition_Capability correspond to this entry
	property BOOLEAN, -- true if 1+ rows in DeviceDefinition_Property correspond to this entry
	"owner" TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_contact_contactPoint
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	onlineInformation TEXT,
	_onlineInformation TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_note_annotation
	quantity TEXT, -- Foreign Key to quantity table
	parentDevice TEXT, -- Foreign Key to reference table
	material BOOLEAN, -- true if 1+ rows in DeviceDefinition_Material correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_manufacturerString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturerReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_modelNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalCharacteristics)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onlineInformation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parentDevice)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_UdiDeviceIdentifier(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_UdiDeviceIdentifier_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_UdiDeviceIdentifier_modifierExtension_extension
	deviceIdentifier TEXT,
	_deviceIdentifier TEXT, -- Foreign Key to element table
	issuer TEXT,
	_issuer TEXT, -- Foreign Key to element table
	jurisdiction TEXT,
	_jurisdiction TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deviceIdentifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issuer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_jurisdiction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_DeviceName(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_DeviceName_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_DeviceName_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('udi-label-name','user-friendly-name','patient-reported-name','manufacturer-name','model-name','other') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Specialization(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Specialization_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Specialization_modifierExtension_extension
	systemType TEXT,
	_systemType TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_systemType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Capability(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Capability_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Capability_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"description" BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Capability_description_codeableConcept

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Property(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property_valueQuantity_quantity
	valueCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property_valueCode_codeableConcept

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Material(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Material_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Material_modifierExtension_extension
	substance TEXT, -- Foreign Key to codeableConcept table
	alternate BOOLEAN,
	_alternate TEXT, -- Foreign Key to element table
	allergenicIndicator BOOLEAN,
	_allergenicIndicator TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_alternate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allergenicIndicator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceMetric(

	resourceType TEXT, -- resourceType: deviceMetric
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_identifier_identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	"source" TEXT, -- Foreign Key to reference table
	parent TEXT, -- Foreign Key to reference table
	operationalStatus TEXT CHECK( operationalStatus IN ('on','off','standby','entered-in-error') ),
	_operationalStatus TEXT, -- Foreign Key to element table
	color TEXT CHECK( color IN ('black','red','green','yellow','blue','magenta','cyan','white') ),
	_color TEXT, -- Foreign Key to element table
	category TEXT CHECK( category IN ('measurement','setting','calculation','unspecified') ),
	_category TEXT, -- Foreign Key to element table
	measurementPeriod TEXT, -- Foreign Key to timing table
	calibration BOOLEAN, -- true if 1+ rows in DeviceMetric_Calibration correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_operationalStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_color)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_category)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measurementPeriod)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceMetric_Calibration(

	id TEXT PRIMARY KEY,
	deviceMetricId TEXT, -- Foreign Key to deviceMetric table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_Calibration_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_Calibration_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('unspecified','offset','gain','two-point') ),
	_type TEXT, -- Foreign Key to element table
	"state" TEXT CHECK( "state" IN ('not-calibrated','calibration-required','calibrated','unspecified') ),
	_state TEXT, -- Foreign Key to element table
	"time" DATETIME,
	_time TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceMetricId)
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_state)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_time)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceRequest(

	resourceType TEXT, -- resourceType: deviceRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__instantiatesUri_element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_basedOn_reference
	priorRequest BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_priorRequest_reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	codeReference TEXT, -- Foreign Key to reference table
	codeCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"parameter" BOOLEAN, -- true if 1+ rows in DeviceRequest_Parameter correspond to this entry
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performerType TEXT, -- Foreign Key to codeableConcept table
	performer TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_reasonReference_reference
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_insurance_reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_supportingInfo_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_note_annotation
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_relevantHistory_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (codeReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (codeCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceRequest_Parameter(

	id TEXT PRIMARY KEY,
	deviceRequestId TEXT, -- Foreign Key to deviceRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_Parameter_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceRequestId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceUseStatement(

	resourceType TEXT, -- resourceType: deviceUseStatement
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_identifier_identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_basedOn_reference
	"status" TEXT CHECK( "status" IN ('active','completed','entered-in-error','intended','stopped','on-hold') ),
	_status TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_derivedFrom_reference
	timingTiming TEXT, -- Foreign Key to timing table
	timingPeriod TEXT, -- Foreign Key to period table
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	recordedOn DATETIME,
	_recordedOn TEXT, -- Foreign Key to element table
	"source" TEXT, -- Foreign Key to reference table
	device TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_reasonReference_reference
	bodySite TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE diagnosticReport(

	resourceType TEXT, -- resourceType: diagnosticReport
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_identifier_identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_basedOn_reference
	"status" TEXT CHECK( "status" IN ('registered','partial','preliminary','final','amended','corrected','appended','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_category_codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_performer_reference
	resultsInterpreter BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_resultsInterpreter_reference
	specimen BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_specimen_reference
	"result" BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_result_reference
	imagingStudy BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_imagingStudy_reference
	media BOOLEAN, -- true if 1+ rows in DiagnosticReport_Media correspond to this entry
	conclusion TEXT,
	_conclusion TEXT, -- Foreign Key to element table
	conclusionCode BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_conclusionCode_codeableConcept
	presentedForm BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_presentedForm_attachment

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conclusion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE diagnosticReport_Media(

	id TEXT PRIMARY KEY,
	diagnosticReportId TEXT, -- Foreign Key to diagnosticReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_Media_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_Media_modifierExtension_extension
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	link TEXT, -- Foreign Key to reference table

	FOREIGN KEY (diagnosticReportId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (link)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentManifest(

	resourceType TEXT, -- resourceType: documentManifest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_modifierExtension_extension
	masterIdentifier TEXT, -- Foreign Key to identifier table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_identifier_identifier
	"status" TEXT CHECK( "status" IN ('current','superseded','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_author_reference
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_recipient_reference
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	content BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_content_reference
	related BOOLEAN, -- true if 1+ rows in DocumentManifest_Related correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (masterIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentManifest_Related(

	id TEXT PRIMARY KEY,
	documentManifestId TEXT, -- Foreign Key to documentManifest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_Related_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_Related_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	ref TEXT, -- Foreign Key to reference table

	FOREIGN KEY (documentManifestId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ref)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference(

	resourceType TEXT, -- resourceType: documentReference
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_modifierExtension_extension
	masterIdentifier TEXT, -- Foreign Key to identifier table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_identifier_identifier
	"status" TEXT CHECK( "status" IN ('current','superseded','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	docStatus TEXT,
	_docStatus TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_category_codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_author_reference
	authenticator TEXT, -- Foreign Key to reference table
	custodian TEXT, -- Foreign Key to reference table
	relatesTo BOOLEAN, -- true if 1+ rows in DocumentReference_RelatesTo correspond to this entry
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	securityLabel BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_securityLabel_codeableConcept
	content BOOLEAN, -- true if 1+ rows in DocumentReference_Content correspond to this entry
	context TEXT, -- Foreign Key to documentReference_Context table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (masterIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_docStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authenticator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (custodian)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference_RelatesTo(

	id TEXT PRIMARY KEY,
	documentReferenceId TEXT, -- Foreign Key to documentReference table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_RelatesTo_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_RelatesTo_modifierExtension_extension
	"code" TEXT CHECK( "code" IN ('replaces','transforms','signs','appends') ),
	_code TEXT, -- Foreign Key to element table
	"target" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (documentReferenceId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference_Content(

	id TEXT PRIMARY KEY,
	documentReferenceId TEXT, -- Foreign Key to documentReference table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Content_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Content_modifierExtension_extension
	attachment TEXT, -- Foreign Key to attachment table
	format TEXT, -- Foreign Key to coding table

	FOREIGN KEY (documentReferenceId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (format)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference_Context(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context_modifierExtension_extension
	encounter BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context_encounter_reference
	"event" BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context_event_codeableConcept
	"period" TEXT, -- Foreign Key to period table
	facilityType TEXT, -- Foreign Key to codeableConcept table
	practiceSetting TEXT, -- Foreign Key to codeableConcept table
	sourcePatientInfo TEXT, -- Foreign Key to reference table
	related BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context_related_reference

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facilityType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (practiceSetting)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourcePatientInfo)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis(

	resourceType TEXT, -- resourceType: effectEvidenceSynthesis
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_note_annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_jurisdiction_codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_relatedArtifact_relatedArtifact
	synthesisType TEXT, -- Foreign Key to codeableConcept table
	studyType TEXT, -- Foreign Key to codeableConcept table
	"population" TEXT, -- Foreign Key to reference table
	exposure TEXT, -- Foreign Key to reference table
	exposureAlternative TEXT, -- Foreign Key to reference table
	outcome TEXT, -- Foreign Key to reference table
	sampleSize TEXT, -- Foreign Key to effectEvidenceSynthesis_SampleSize table
	resultsByExposure BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_ResultsByExposure correspond to this entry
	effectEstimate BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_EffectEstimate correspond to this entry
	certainty BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_Certainty correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (synthesisType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("population")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposure)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureAlternative)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sampleSize)
		REFERENCES effectEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_SampleSize(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_SampleSize_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_SampleSize_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	numberOfStudies INTEGER,
	_numberOfStudies TEXT, -- Foreign Key to element table
	numberOfParticipants INTEGER,
	_numberOfParticipants TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfStudies)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfParticipants)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_ResultsByExposure(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesisId TEXT, -- Foreign Key to effectEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_ResultsByExposure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_ResultsByExposure_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	exposureState TEXT CHECK( exposureState IN ('exposure','exposure-alternative') ),
	_exposureState TEXT, -- Foreign Key to element table
	variantState TEXT, -- Foreign Key to codeableConcept table
	riskEvidenceSynthesis TEXT, -- Foreign Key to reference table

	FOREIGN KEY (effectEvidenceSynthesisId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exposureState)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (riskEvidenceSynthesis)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_EffectEstimate(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesisId TEXT, -- Foreign Key to effectEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_EffectEstimate_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_EffectEstimate_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	variantState TEXT, -- Foreign Key to codeableConcept table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	unitOfMeasure TEXT, -- Foreign Key to codeableConcept table
	precisionEstimate BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_PrecisionEstimate correspond to this entry

	FOREIGN KEY (effectEvidenceSynthesisId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfMeasure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_PrecisionEstimate(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_EffectEstimateId TEXT, -- Foreign Key to effectEvidenceSynthesis_EffectEstimate table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_PrecisionEstimate_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_PrecisionEstimate_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"level" REAL,
	_level TEXT, -- Foreign Key to element table
	"from" REAL,
	_from TEXT, -- Foreign Key to element table
	"to" REAL,
	_to TEXT, -- Foreign Key to element table

	FOREIGN KEY (effectEvidenceSynthesis_EffectEstimateId)
		REFERENCES effectEvidenceSynthesis_EffectEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_level)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_from)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_to)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_Certainty(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesisId TEXT, -- Foreign Key to effectEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty_modifierExtension_extension
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty_rating_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty_note_annotation
	certaintySubcomponent BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_CertaintySubcomponent correspond to this entry

	FOREIGN KEY (effectEvidenceSynthesisId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_CertaintySubcomponent(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_CertaintyId TEXT, -- Foreign Key to effectEvidenceSynthesis_Certainty table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent_rating_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent_note_annotation

	FOREIGN KEY (effectEvidenceSynthesis_CertaintyId)
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter(

	resourceType TEXT, -- resourceType: encounter
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_identifier_identifier
	"status" TEXT CHECK( "status" IN ('planned','arrived','triaged','in-progress','onleave','finished','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	statusHistory BOOLEAN, -- true if 1+ rows in Encounter_StatusHistory correspond to this entry
	class TEXT, -- Foreign Key to coding table
	classHistory BOOLEAN, -- true if 1+ rows in Encounter_ClassHistory correspond to this entry
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_type_codeableConcept
	serviceType TEXT, -- Foreign Key to codeableConcept table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	episodeOfCare BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_episodeOfCare_reference
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_basedOn_reference
	participant BOOLEAN, -- true if 1+ rows in Encounter_Participant correspond to this entry
	appointment BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_appointment_reference
	"period" TEXT, -- Foreign Key to period table
	"length" TEXT, -- Foreign Key to duration table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_reasonReference_reference
	diagnosis BOOLEAN, -- true if 1+ rows in Encounter_Diagnosis correspond to this entry
	account BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_account_reference
	hospitalization TEXT, -- Foreign Key to encounter_Hospitalization table
	"location" BOOLEAN, -- true if 1+ rows in Encounter_Location correspond to this entry
	serviceProvider TEXT, -- Foreign Key to reference table
	partOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (serviceType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("length")
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (hospitalization)
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (serviceProvider)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_StatusHistory(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_StatusHistory_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_StatusHistory_modifierExtension_extension
	"status" TEXT CHECK( "status" IN ('planned','arrived','triaged','in-progress','onleave','finished','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_ClassHistory(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_ClassHistory_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_ClassHistory_modifierExtension_extension
	class TEXT, -- Foreign Key to coding table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Participant(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Participant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Participant_modifierExtension_extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Participant_type_codeableConcept
	"period" TEXT, -- Foreign Key to period table
	individual TEXT, -- Foreign Key to reference table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (individual)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Diagnosis(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Diagnosis_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Diagnosis_modifierExtension_extension
	"condition" TEXT, -- Foreign Key to reference table
	"use" TEXT, -- Foreign Key to codeableConcept table
	"rank" INTEGER,
	_rank TEXT, -- Foreign Key to element table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("use")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rank)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Hospitalization(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization_modifierExtension_extension
	preAdmissionIdentifier TEXT, -- Foreign Key to identifier table
	origin TEXT, -- Foreign Key to reference table
	admitSource TEXT, -- Foreign Key to codeableConcept table
	reAdmission TEXT, -- Foreign Key to codeableConcept table
	dietPreference BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization_dietPreference_codeableConcept
	specialCourtesy BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization_specialCourtesy_codeableConcept
	specialArrangement BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization_specialArrangement_codeableConcept
	destination TEXT, -- Foreign Key to reference table
	dischargeDisposition TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (preAdmissionIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (origin)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (admitSource)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reAdmission)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (destination)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dischargeDisposition)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Location(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Location_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Location_modifierExtension_extension
	"location" TEXT, -- Foreign Key to reference table
	"status" TEXT CHECK( "status" IN ('planned','active','reserved','completed') ),
	_status TEXT, -- Foreign Key to element table
	physicalType TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "endpoint"(

	resourceType TEXT, -- resourceType: endpoint
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_identifier_identifier
	"status" TEXT CHECK( "status" IN ('active','suspended','error','off','entered-in-error','test') ),
	_status TEXT, -- Foreign Key to element table
	connectionType TEXT, -- Foreign Key to coding table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	managingOrganization TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_contact_contactPoint
	"period" TEXT, -- Foreign Key to period table
	payloadType BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_payloadType_codeableConcept
	payloadMimeType BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_payloadMimeType_code
	_payloadMimeType BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__payloadMimeType_element
	"address" TEXT,
	_address TEXT, -- Foreign Key to element table
	header BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint_header_string
	_header BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__header_element

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (connectionType)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_address)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE enrollmentRequest(

	resourceType TEXT, -- resourceType: enrollmentRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	insurer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	candidate TEXT, -- Foreign Key to reference table
	coverage TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (candidate)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE enrollmentResponse(

	resourceType TEXT, -- resourceType: enrollmentResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	request TEXT, -- Foreign Key to reference table
	outcome TEXT CHECK( outcome IN ('queued','complete','error','partial') ),
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	organization TEXT, -- Foreign Key to reference table
	requestProvider TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestProvider)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE episodeOfCare(

	resourceType TEXT, -- resourceType: episodeOfCare
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_identifier_identifier
	"status" TEXT CHECK( "status" IN ('planned','waitlist','active','onhold','finished','cancelled','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	statusHistory BOOLEAN, -- true if 1+ rows in EpisodeOfCare_StatusHistory correspond to this entry
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_type_codeableConcept
	diagnosis BOOLEAN, -- true if 1+ rows in EpisodeOfCare_Diagnosis correspond to this entry
	patient TEXT, -- Foreign Key to reference table
	managingOrganization TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	referralRequest BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_referralRequest_reference
	careManager TEXT, -- Foreign Key to reference table
	team BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_team_reference
	account BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_account_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (careManager)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE episodeOfCare_StatusHistory(

	id TEXT PRIMARY KEY,
	episodeOfCareId TEXT, -- Foreign Key to episodeOfCare table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_StatusHistory_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_StatusHistory_modifierExtension_extension
	"status" TEXT CHECK( "status" IN ('planned','waitlist','active','onhold','finished','cancelled','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (episodeOfCareId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE episodeOfCare_Diagnosis(

	id TEXT PRIMARY KEY,
	episodeOfCareId TEXT, -- Foreign Key to episodeOfCare table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_Diagnosis_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_Diagnosis_modifierExtension_extension
	"condition" TEXT, -- Foreign Key to reference table
	"role" TEXT, -- Foreign Key to codeableConcept table
	"rank" INTEGER,
	_rank TEXT, -- Foreign Key to element table

	FOREIGN KEY (episodeOfCareId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rank)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE eventDefinition(

	resourceType TEXT, -- resourceType: eventDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_relatedArtifact_relatedArtifact
	"trigger" BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition_trigger_triggerDefinition

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE evidence(

	resourceType TEXT, -- resourceType: evidence
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_note_annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_jurisdiction_codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_relatedArtifact_relatedArtifact
	exposureBackground TEXT, -- Foreign Key to reference table
	exposureVariant BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_exposureVariant_reference
	outcome BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence_outcome_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureBackground)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE evidenceVariable(

	resourceType TEXT, -- resourceType: evidenceVariable
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_note_annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_jurisdiction_codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_relatedArtifact_relatedArtifact
	"type" TEXT CHECK( "type" IN ('dichotomous','continuous','descriptive') ),
	_type TEXT, -- Foreign Key to element table
	characteristic BOOLEAN, -- true if 1+ rows in EvidenceVariable_Characteristic correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE evidenceVariable_Characteristic(

	id TEXT PRIMARY KEY,
	evidenceVariableId TEXT, -- Foreign Key to evidenceVariable table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_Characteristic_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_Characteristic_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	definitionReference TEXT, -- Foreign Key to reference table
	definitionCanonical TEXT, -- pattern: ^\S*$
	_definitionCanonical TEXT, -- Foreign Key to element table
	definitionCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	definitionExpression TEXT, -- Foreign Key to expression table
	definitionDataRequirement TEXT, -- Foreign Key to dataRequirement table
	definitionTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	usageContext BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_Characteristic_usageContext_usageContext
	exclude BOOLEAN,
	_exclude TEXT, -- Foreign Key to element table
	participantEffectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_participantEffectiveDateTime TEXT, -- Foreign Key to element table
	participantEffectivePeriod TEXT, -- Foreign Key to period table
	participantEffectiveDuration TEXT, -- Foreign Key to duration table
	participantEffectiveTiming TEXT, -- Foreign Key to timing table
	timeFromStart TEXT, -- Foreign Key to duration table
	groupMeasure TEXT CHECK( groupMeasure IN ('mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median') ),
	_groupMeasure TEXT, -- Foreign Key to element table

	FOREIGN KEY (evidenceVariableId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exclude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timeFromStart)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupMeasure)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario(

	resourceType TEXT, -- resourceType: exampleScenario
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_contact_contactDetail
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_jurisdiction_codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	actor BOOLEAN, -- true if 1+ rows in ExampleScenario_Actor correspond to this entry
	"instance" BOOLEAN, -- true if 1+ rows in ExampleScenario_Instance correspond to this entry
	process BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_process_exampleScenario_Process
	workflow BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_workflow_canonical

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Actor(

	id TEXT PRIMARY KEY,
	exampleScenarioId TEXT, -- Foreign Key to exampleScenario table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Actor_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Actor_modifierExtension_extension
	actorId TEXT,
	_actorId TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('person','entity') ),
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (exampleScenarioId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actorId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Instance(

	id TEXT PRIMARY KEY,
	exampleScenarioId TEXT, -- Foreign Key to exampleScenario table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Instance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Instance_modifierExtension_extension
	resourceId TEXT,
	_resourceId TEXT, -- Foreign Key to element table
	resourceType TEXT,
	_resourceType TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"version" BOOLEAN, -- true if 1+ rows in ExampleScenario_Version correspond to this entry
	containedInstance BOOLEAN, -- true if 1+ rows in ExampleScenario_ContainedInstance correspond to this entry

	FOREIGN KEY (exampleScenarioId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resourceType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Version(

	id TEXT PRIMARY KEY,
	exampleScenario_InstanceId TEXT, -- Foreign Key to exampleScenario_Instance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Version_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Version_modifierExtension_extension
	versionId TEXT,
	_versionId TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (exampleScenario_InstanceId)
		REFERENCES exampleScenario_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_ContainedInstance(

	id TEXT PRIMARY KEY,
	exampleScenario_InstanceId TEXT, -- Foreign Key to exampleScenario_Instance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_ContainedInstance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_ContainedInstance_modifierExtension_extension
	resourceId TEXT,
	_resourceId TEXT, -- Foreign Key to element table
	versionId TEXT,
	_versionId TEXT, -- Foreign Key to element table

	FOREIGN KEY (exampleScenario_InstanceId)
		REFERENCES exampleScenario_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Process(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Process_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Process_modifierExtension_extension
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	preConditions TEXT,
	_preConditions TEXT, -- Foreign Key to element table
	postConditions TEXT,
	_postConditions TEXT, -- Foreign Key to element table
	step BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Process_step_exampleScenario_Step

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preConditions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_postConditions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Step(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Step_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Step_modifierExtension_extension
	process BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Step_process_exampleScenario_Process
	pause BOOLEAN,
	_pause TEXT, -- Foreign Key to element table
	operation TEXT, -- Foreign Key to exampleScenario_Operation table
	alternative BOOLEAN, -- true if 1+ rows in ExampleScenario_Alternative correspond to this entry

	FOREIGN KEY (_pause)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES exampleScenario_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Operation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Operation_modifierExtension_extension
	number TEXT,
	_number TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	initiator TEXT,
	_initiator TEXT, -- Foreign Key to element table
	receiver TEXT,
	_receiver TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	initiatorActive BOOLEAN,
	_initiatorActive TEXT, -- Foreign Key to element table
	receiverActive BOOLEAN,
	_receiverActive TEXT, -- Foreign Key to element table
	request TEXT, -- Foreign Key to exampleScenario_ContainedInstance table
	response TEXT, -- Foreign Key to exampleScenario_ContainedInstance table

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_initiator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_receiver)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_initiatorActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_receiverActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES exampleScenario_ContainedInstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES exampleScenario_ContainedInstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Alternative(

	id TEXT PRIMARY KEY,
	exampleScenario_StepId TEXT, -- Foreign Key to exampleScenario_Step table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Alternative_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Alternative_modifierExtension_extension
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	step BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Alternative_step_exampleScenario_Step

	FOREIGN KEY (exampleScenario_StepId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit(

	resourceType TEXT, -- resourceType: explanationOfBenefit
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_identifier_identifier
	"status" TEXT CHECK( "status" IN ('active','cancelled','draft','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"use" TEXT,
	_use TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	billablePeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	insurer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	fundsReserveRequested TEXT, -- Foreign Key to codeableConcept table
	fundsReserve TEXT, -- Foreign Key to codeableConcept table
	related BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Related correspond to this entry
	prescription TEXT, -- Foreign Key to reference table
	originalPrescription TEXT, -- Foreign Key to reference table
	payee TEXT, -- Foreign Key to explanationOfBenefit_Payee table
	referral TEXT, -- Foreign Key to reference table
	facility TEXT, -- Foreign Key to reference table
	claim TEXT, -- Foreign Key to reference table
	claimResponse TEXT, -- Foreign Key to reference table
	outcome TEXT,
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_preAuthRef_string
	_preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__preAuthRef_element
	preAuthRefPeriod BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_preAuthRefPeriod_period
	careTeam BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_CareTeam correspond to this entry
	supportingInfo BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_SupportingInfo correspond to this entry
	diagnosis BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Diagnosis correspond to this entry
	"procedure" BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Procedure correspond to this entry
	precedence INTEGER,
	_precedence TEXT, -- Foreign Key to element table
	insurance BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Insurance correspond to this entry
	accident TEXT, -- Foreign Key to explanationOfBenefit_Accident table
	item BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Item correspond to this entry
	addItem BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_AddItem correspond to this entry
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_adjudication_explanationOfBenefit_Adjudication
	total BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Total correspond to this entry
	payment TEXT, -- Foreign Key to explanationOfBenefit_Payment table
	formCode TEXT, -- Foreign Key to codeableConcept table
	form TEXT, -- Foreign Key to attachment table
	processNote BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_ProcessNote correspond to this entry
	benefitPeriod TEXT, -- Foreign Key to period table
	benefitBalance BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_BenefitBalance correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (billablePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserveRequested)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserve)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (prescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (originalPrescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES explanationOfBenefit_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referral)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claim)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claimResponse)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precedence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (accident)
		REFERENCES explanationOfBenefit_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payment)
		REFERENCES explanationOfBenefit_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (formCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (benefitPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Related(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Related_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Related_modifierExtension_extension
	claim TEXT, -- Foreign Key to reference table
	relationship TEXT, -- Foreign Key to codeableConcept table
	reference TEXT, -- Foreign Key to identifier table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claim)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Payee(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payee_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payee_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	party TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_CareTeam(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_CareTeam_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_CareTeam_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"provider" TEXT, -- Foreign Key to reference table
	responsible BOOLEAN,
	_responsible TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table
	qualification TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responsible)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (qualification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_SupportingInfo(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SupportingInfo_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SupportingInfo_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	timingDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_timingDate TEXT, -- Foreign Key to element table
	timingPeriod TEXT, -- Foreign Key to period table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueReference TEXT, -- Foreign Key to reference table
	reason TEXT, -- Foreign Key to coding table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Diagnosis(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Diagnosis_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Diagnosis_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	diagnosisCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	diagnosisReference TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Diagnosis_type_codeableConcept
	onAdmission TEXT, -- Foreign Key to codeableConcept table
	packageCode TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onAdmission)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Procedure(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure_type_codeableConcept
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	procedureCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	procedureReference TEXT, -- Foreign Key to reference table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure_udi_reference

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Insurance(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance_modifierExtension_extension
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	coverage TEXT, -- Foreign Key to reference table
	preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance_preAuthRef_string
	_preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance__preAuthRef_element

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Accident(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Accident_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Accident_modifierExtension_extension
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Item(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_careTeamSequence_positiveInt
	_careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__careTeamSequence_element
	diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_diagnosisSequence_positiveInt
	_diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__diagnosisSequence_element
	procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_procedureSequence_positiveInt
	_procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__procedureSequence_element
	informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_informationSequence_positiveInt
	_informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__informationSequence_element
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_programCode_codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_udi_reference
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_subSite_codeableConcept
	encounter BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_encounter_reference
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item_adjudication_explanationOfBenefit_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Detail correspond to this entry

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Adjudication(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Adjudication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Adjudication_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	reason TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Detail(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_ItemId TEXT, -- Foreign Key to explanationOfBenefit_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail_programCode_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail_udi_reference
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail_adjudication_explanationOfBenefit_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_SubDetail correspond to this entry

	FOREIGN KEY (explanationOfBenefit_ItemId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_SubDetail(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_DetailId TEXT, -- Foreign Key to explanationOfBenefit_Detail table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail_programCode_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail_udi_reference
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail_adjudication_explanationOfBenefit_Adjudication

	FOREIGN KEY (explanationOfBenefit_DetailId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_AddItem(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_modifierExtension_extension
	itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_itemSequence_positiveInt
	_itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__itemSequence_element
	detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_detailSequence_positiveInt
	_detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__detailSequence_element
	subDetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_subDetailSequence_positiveInt
	_subDetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__subDetailSequence_element
	"provider" BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_provider_reference
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_modifier_codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_programCode_codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_subSite_codeableConcept
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem_adjudication_explanationOfBenefit_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Detail1 correspond to this entry

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Detail1(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItemId TEXT, -- Foreign Key to explanationOfBenefit_AddItem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1_modifierExtension_extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1_modifier_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1_adjudication_explanationOfBenefit_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_SubDetail1 correspond to this entry

	FOREIGN KEY (explanationOfBenefit_AddItemId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_SubDetail1(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1Id TEXT, -- Foreign Key to explanationOfBenefit_Detail1 table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1_modifierExtension_extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1_modifier_codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1_noteNumber_positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1__noteNumber_element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1_adjudication_explanationOfBenefit_Adjudication

	FOREIGN KEY (explanationOfBenefit_Detail1Id)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Total(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Total_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Total_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Payment(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payment_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payment_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	adjustment TEXT, -- Foreign Key to money table
	adjustmentReason TEXT, -- Foreign Key to codeableConcept table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table
	identifier TEXT, -- Foreign Key to identifier table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustment)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustmentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_ProcessNote(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_ProcessNote_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_ProcessNote_modifierExtension_extension
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('display','print','printoper') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"language" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_BenefitBalance(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_BenefitBalance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_BenefitBalance_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	excluded BOOLEAN,
	_excluded TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	network TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	term TEXT, -- Foreign Key to codeableConcept table
	financial BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Financial correspond to this entry

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_excluded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (network)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (term)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Financial(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_BenefitBalanceId TEXT, -- Foreign Key to explanationOfBenefit_BenefitBalance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Financial_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Financial_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	allowedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_allowedUnsignedInt TEXT, -- Foreign Key to element table
	allowedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_allowedString TEXT, -- Foreign Key to element table
	allowedMoney TEXT, -- Foreign Key to money table
	usedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_usedUnsignedInt TEXT, -- Foreign Key to element table
	usedMoney TEXT, -- Foreign Key to money table

	FOREIGN KEY (explanationOfBenefit_BenefitBalanceId)
		REFERENCES explanationOfBenefit_BenefitBalance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (allowedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (usedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE familyMemberHistory(

	resourceType TEXT, -- resourceType: familyMemberHistory
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__instantiatesUri_element
	"status" TEXT CHECK( "status" IN ('partial','completed','entered-in-error','health-unknown') ),
	_status TEXT, -- Foreign Key to element table
	dataAbsentReason TEXT, -- Foreign Key to codeableConcept table
	patient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	relationship TEXT, -- Foreign Key to codeableConcept table
	sex TEXT, -- Foreign Key to codeableConcept table
	bornPeriod TEXT, -- Foreign Key to period table
	bornDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_bornDate TEXT, -- Foreign Key to element table
	bornString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_bornString TEXT, -- Foreign Key to element table
	ageAge TEXT, -- Foreign Key to age table
	ageRange TEXT, -- Foreign Key to range table
	ageString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_ageString TEXT, -- Foreign Key to element table
	estimatedAge BOOLEAN,
	_estimatedAge TEXT, -- Foreign Key to element table
	deceasedBoolean BOOLEAN, -- pattern: ^true|false$
	_deceasedBoolean TEXT, -- Foreign Key to element table
	deceasedAge TEXT, -- Foreign Key to age table
	deceasedRange TEXT, -- Foreign Key to range table
	deceasedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_deceasedDate TEXT, -- Foreign Key to element table
	deceasedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_deceasedString TEXT, -- Foreign Key to element table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_reasonReference_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_note_annotation
	"condition" BOOLEAN, -- true if 1+ rows in FamilyMemberHistory_Condition correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataAbsentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sex)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bornPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_bornDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_bornString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ageAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ageRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ageString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_estimatedAge)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deceasedAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deceasedRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE familyMemberHistory_Condition(

	id TEXT PRIMARY KEY,
	familyMemberHistoryId TEXT, -- Foreign Key to familyMemberHistory table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_Condition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_Condition_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	outcome TEXT, -- Foreign Key to codeableConcept table
	contributedToDeath BOOLEAN,
	_contributedToDeath TEXT, -- Foreign Key to element table
	onsetAge TEXT, -- Foreign Key to age table
	onsetRange TEXT, -- Foreign Key to range table
	onsetPeriod TEXT, -- Foreign Key to period table
	onsetString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_onsetString TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_Condition_note_annotation

	FOREIGN KEY (familyMemberHistoryId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contributedToDeath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE flag(

	resourceType TEXT, -- resourceType: flag
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: flag_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: flag_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: flag_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: flag_identifier_identifier
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: flag_category_codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	encounter TEXT, -- Foreign Key to reference table
	author TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE goal(

	resourceType TEXT, -- resourceType: goal
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_identifier_identifier
	lifecycleStatus TEXT CHECK( lifecycleStatus IN ('proposed','planned','accepted','active','on-hold','completed','cancelled','entered-in-error','rejected') ),
	_lifecycleStatus TEXT, -- Foreign Key to element table
	achievementStatus TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_category_codeableConcept
	"priority" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	startDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_startDate TEXT, -- Foreign Key to element table
	startCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"target" BOOLEAN, -- true if 1+ rows in Goal_Target correspond to this entry
	statusDate DATE,
	_statusDate TEXT, -- Foreign Key to element table
	statusReason TEXT,
	_statusReason TEXT, -- Foreign Key to element table
	expressedBy TEXT, -- Foreign Key to reference table
	addresses BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_addresses_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_note_annotation
	outcomeCode BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_outcomeCode_codeableConcept
	outcomeReference BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_outcomeReference_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lifecycleStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (achievementStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("description")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_startDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (startCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expressedBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE goal_Target(

	id TEXT PRIMARY KEY,
	goalId TEXT, -- Foreign Key to goal table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_Target_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_Target_modifierExtension_extension
	measure TEXT, -- Foreign Key to codeableConcept table
	detailQuantity TEXT, -- Foreign Key to quantity table
	detailRange TEXT, -- Foreign Key to range table
	detailCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	detailString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_detailString TEXT, -- Foreign Key to element table
	detailBoolean BOOLEAN, -- pattern: ^true|false$
	_detailBoolean TEXT, -- Foreign Key to element table
	detailInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_detailInteger TEXT, -- Foreign Key to element table
	detailRatio TEXT, -- Foreign Key to ratio table
	dueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_dueDate TEXT, -- Foreign Key to element table
	dueDuration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (goalId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition(

	resourceType TEXT, -- resourceType: graphDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"start" TEXT,
	_start TEXT, -- Foreign Key to element table
	"profile" TEXT,
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_link_graphDefinition_Link

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition_Link(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Link_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Link_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	sliceName TEXT,
	_sliceName TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"target" BOOLEAN, -- true if 1+ rows in GraphDefinition_Target correspond to this entry

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sliceName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition_Target(

	id TEXT PRIMARY KEY,
	graphDefinition_LinkId TEXT, -- Foreign Key to graphDefinition_Link table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Target_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Target_modifierExtension_extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	params TEXT,
	_params TEXT, -- Foreign Key to element table
	"profile" TEXT,
	compartment BOOLEAN, -- true if 1+ rows in GraphDefinition_Compartment correspond to this entry
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Target_link_graphDefinition_Link

	FOREIGN KEY (graphDefinition_LinkId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_params)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition_Compartment(

	id TEXT PRIMARY KEY,
	graphDefinition_TargetId TEXT, -- Foreign Key to graphDefinition_Target table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Compartment_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Compartment_modifierExtension_extension
	"use" TEXT CHECK( "use" IN ('condition','requirement') ),
	_use TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"rule" TEXT CHECK( "rule" IN ('identical','matching','different','custom') ),
	_rule TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (graphDefinition_TargetId)
		REFERENCES graphDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rule)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "group"(

	resourceType TEXT, -- resourceType: group
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: group_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: group_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('person','animal','practitioner','device','medication','substance') ),
	_type TEXT, -- Foreign Key to element table
	actual BOOLEAN,
	_actual TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	quantity INTEGER,
	_quantity TEXT, -- Foreign Key to element table
	managingEntity TEXT, -- Foreign Key to reference table
	characteristic BOOLEAN, -- true if 1+ rows in Group_Characteristic correspond to this entry
	"member" BOOLEAN, -- true if 1+ rows in Group_Member correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actual)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_quantity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingEntity)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE group_Characteristic(

	id TEXT PRIMARY KEY,
	groupId TEXT, -- Foreign Key to "group" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Characteristic_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Characteristic_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueReference TEXT, -- Foreign Key to reference table
	exclude BOOLEAN,
	_exclude TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (groupId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exclude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE group_Member(

	id TEXT PRIMARY KEY,
	groupId TEXT, -- Foreign Key to "group" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Member_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Member_modifierExtension_extension
	entity TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	inactive BOOLEAN,
	_inactive TEXT, -- Foreign Key to element table

	FOREIGN KEY (groupId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (entity)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inactive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE guidanceResponse(

	resourceType TEXT, -- resourceType: guidanceResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_modifierExtension_extension
	requestIdentifier TEXT, -- Foreign Key to identifier table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_identifier_identifier
	moduleUri TEXT, -- pattern: ^\S*$
	_moduleUri TEXT, -- Foreign Key to element table
	moduleCanonical TEXT, -- pattern: ^\S*$
	_moduleCanonical TEXT, -- Foreign Key to element table
	moduleCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT CHECK( "status" IN ('success','data-requested','data-required','in-progress','failure','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime DATETIME,
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	performer TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_reasonReference_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_note_annotation
	evaluationMessage BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_evaluationMessage_reference
	outputParameters TEXT, -- Foreign Key to reference table
	"result" TEXT, -- Foreign Key to reference table
	dataRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse_dataRequirement_dataRequirement

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_moduleUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_moduleCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (moduleCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outputParameters)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("result")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService(

	resourceType TEXT, -- resourceType: healthcareService
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	providedBy TEXT, -- Foreign Key to reference table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_category_codeableConcept
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_type_codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_specialty_codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_location_reference
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	extraDetails TEXT,
	_extraDetails TEXT, -- Foreign Key to element table
	photo TEXT, -- Foreign Key to attachment table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_telecom_contactPoint
	coverageArea BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_coverageArea_reference
	serviceProvisionCode BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_serviceProvisionCode_codeableConcept
	eligibility BOOLEAN, -- true if 1+ rows in HealthcareService_Eligibility correspond to this entry
	program BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_program_codeableConcept
	characteristic BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_characteristic_codeableConcept
	communication BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_communication_codeableConcept
	referralMethod BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_referralMethod_codeableConcept
	appointmentRequired BOOLEAN,
	_appointmentRequired TEXT, -- Foreign Key to element table
	availableTime BOOLEAN, -- true if 1+ rows in HealthcareService_AvailableTime correspond to this entry
	notAvailable BOOLEAN, -- true if 1+ rows in HealthcareService_NotAvailable correspond to this entry
	availabilityExceptions TEXT,
	_availabilityExceptions TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_endpoint_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (providedBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_extraDetails)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (photo)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_appointmentRequired)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availabilityExceptions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService_Eligibility(

	id TEXT PRIMARY KEY,
	healthcareServiceId TEXT, -- Foreign Key to healthcareService table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_Eligibility_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_Eligibility_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (healthcareServiceId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService_AvailableTime(

	id TEXT PRIMARY KEY,
	healthcareServiceId TEXT, -- Foreign Key to healthcareService table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_AvailableTime_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_AvailableTime_modifierExtension_extension
	daysOfWeek BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: mon/tue/wed/thu/fri/sat/sun,
	_daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_AvailableTime__daysOfWeek_element
	allDay BOOLEAN,
	_allDay TEXT, -- Foreign Key to element table
	availableStartTime TIME,
	_availableStartTime TEXT, -- Foreign Key to element table
	availableEndTime TIME,
	_availableEndTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (healthcareServiceId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allDay)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableStartTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableEndTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService_NotAvailable(

	id TEXT PRIMARY KEY,
	healthcareServiceId TEXT, -- Foreign Key to healthcareService table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_NotAvailable_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_NotAvailable_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	during TEXT, -- Foreign Key to period table

	FOREIGN KEY (healthcareServiceId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (during)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy(

	resourceType TEXT, -- resourceType: imagingStudy
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_identifier_identifier
	"status" TEXT CHECK( "status" IN ('registered','available','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	modality BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_modality_coding
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"started" DATETIME,
	_started TEXT, -- Foreign Key to element table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_basedOn_reference
	referrer TEXT, -- Foreign Key to reference table
	interpreter BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_interpreter_reference
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_endpoint_reference
	numberOfSeries INTEGER,
	_numberOfSeries TEXT, -- Foreign Key to element table
	numberOfInstances INTEGER,
	_numberOfInstances TEXT, -- Foreign Key to element table
	procedureReference TEXT, -- Foreign Key to reference table
	procedureCode BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_procedureCode_codeableConcept
	"location" TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_reasonReference_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_note_annotation
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	series BOOLEAN, -- true if 1+ rows in ImagingStudy_Series correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_started)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referrer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfSeries)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfInstances)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy_Series(

	id TEXT PRIMARY KEY,
	imagingStudyId TEXT, -- Foreign Key to imagingStudy table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series_modifierExtension_extension
	uid TEXT, -- Foreign Key to id table
	_uid TEXT, -- Foreign Key to element table
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	modality TEXT, -- Foreign Key to coding table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	numberOfInstances INTEGER,
	_numberOfInstances TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series_endpoint_reference
	bodySite TEXT, -- Foreign Key to coding table
	laterality TEXT, -- Foreign Key to coding table
	specimen BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series_specimen_reference
	"started" DATETIME,
	_started TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ rows in ImagingStudy_Performer correspond to this entry
	"instance" BOOLEAN, -- true if 1+ rows in ImagingStudy_Instance correspond to this entry

	FOREIGN KEY (imagingStudyId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (uid)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modality)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfInstances)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (laterality)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_started)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy_Performer(

	id TEXT PRIMARY KEY,
	imagingStudy_SeriesId TEXT, -- Foreign Key to imagingStudy_Series table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Performer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Performer_modifierExtension_extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (imagingStudy_SeriesId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy_Instance(

	id TEXT PRIMARY KEY,
	imagingStudy_SeriesId TEXT, -- Foreign Key to imagingStudy_Series table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Instance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Instance_modifierExtension_extension
	uid TEXT, -- Foreign Key to id table
	_uid TEXT, -- Foreign Key to element table
	sopClass TEXT, -- Foreign Key to coding table
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table

	FOREIGN KEY (imagingStudy_SeriesId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (uid)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sopClass)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization(

	resourceType TEXT, -- resourceType: immunization
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	vaccineCode TEXT, -- Foreign Key to codeableConcept table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrenceString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_occurrenceString TEXT, -- Foreign Key to element table
	recorded DATETIME,
	_recorded TEXT, -- Foreign Key to element table
	primarySource BOOLEAN,
	_primarySource TEXT, -- Foreign Key to element table
	reportOrigin TEXT, -- Foreign Key to codeableConcept table
	"location" TEXT, -- Foreign Key to reference table
	manufacturer TEXT, -- Foreign Key to reference table
	lotNumber TEXT,
	_lotNumber TEXT, -- Foreign Key to element table
	expirationDate DATE,
	_expirationDate TEXT, -- Foreign Key to element table
	"site" TEXT, -- Foreign Key to codeableConcept table
	"route" TEXT, -- Foreign Key to codeableConcept table
	doseQuantity TEXT, -- Foreign Key to quantity table
	performer BOOLEAN, -- true if 1+ rows in Immunization_Performer correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_note_annotation
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_reasonReference_reference
	isSubpotent BOOLEAN,
	_isSubpotent TEXT, -- Foreign Key to element table
	subpotentReason BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_subpotentReason_codeableConcept
	education BOOLEAN, -- true if 1+ rows in Immunization_Education correspond to this entry
	programEligibility BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_programEligibility_codeableConcept
	fundingSource TEXT, -- Foreign Key to codeableConcept table
	reaction BOOLEAN, -- true if 1+ rows in Immunization_Reaction correspond to this entry
	protocolApplied BOOLEAN, -- true if 1+ rows in Immunization_ProtocolApplied correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (vaccineCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recorded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_primarySource)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reportOrigin)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lotNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expirationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("site")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("route")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isSubpotent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundingSource)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_Performer(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Performer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Performer_modifierExtension_extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_Education(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Education_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Education_modifierExtension_extension
	documentType TEXT,
	_documentType TEXT, -- Foreign Key to element table
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table
	publicationDate DATETIME,
	_publicationDate TEXT, -- Foreign Key to element table
	presentationDate DATETIME,
	_presentationDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publicationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_presentationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_Reaction(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Reaction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Reaction_modifierExtension_extension
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	detail TEXT, -- Foreign Key to reference table
	reported BOOLEAN,
	_reported TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detail)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reported)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_ProtocolApplied(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_ProtocolApplied_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_ProtocolApplied_modifierExtension_extension
	series TEXT,
	_series TEXT, -- Foreign Key to element table
	authority TEXT, -- Foreign Key to reference table
	targetDisease BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_ProtocolApplied_targetDisease_codeableConcept
	doseNumberPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_doseNumberPositiveInt TEXT, -- Foreign Key to element table
	doseNumberString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_doseNumberString TEXT, -- Foreign Key to element table
	seriesDosesPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_seriesDosesPositiveInt TEXT, -- Foreign Key to element table
	seriesDosesString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_seriesDosesString TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_series)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationEvaluation(

	resourceType TEXT, -- resourceType: immunizationEvaluation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	authority TEXT, -- Foreign Key to reference table
	targetDisease TEXT, -- Foreign Key to codeableConcept table
	immunizationEvent TEXT, -- Foreign Key to reference table
	doseStatus TEXT, -- Foreign Key to codeableConcept table
	doseStatusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation_doseStatusReason_codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	series TEXT,
	_series TEXT, -- Foreign Key to element table
	doseNumberPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_doseNumberPositiveInt TEXT, -- Foreign Key to element table
	doseNumberString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_doseNumberString TEXT, -- Foreign Key to element table
	seriesDosesPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_seriesDosesPositiveInt TEXT, -- Foreign Key to element table
	seriesDosesString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_seriesDosesString TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetDisease)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (immunizationEvent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_series)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationRecommendation(

	resourceType TEXT, -- resourceType: immunizationRecommendation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_identifier_identifier
	patient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	authority TEXT, -- Foreign Key to reference table
	recommendation BOOLEAN, -- true if 1+ rows in ImmunizationRecommendation_Recommendation correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationRecommendation_Recommendation(

	id TEXT PRIMARY KEY,
	immunizationRecommendationId TEXT, -- Foreign Key to immunizationRecommendation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation_modifierExtension_extension
	vaccineCode BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation_vaccineCode_codeableConcept
	targetDisease TEXT, -- Foreign Key to codeableConcept table
	contraindicatedVaccineCode BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation_contraindicatedVaccineCode_codeableConcept
	forecastStatus TEXT, -- Foreign Key to codeableConcept table
	forecastReason BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation_forecastReason_codeableConcept
	dateCriterion BOOLEAN, -- true if 1+ rows in ImmunizationRecommendation_DateCriterion correspond to this entry
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	series TEXT,
	_series TEXT, -- Foreign Key to element table
	doseNumberPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_doseNumberPositiveInt TEXT, -- Foreign Key to element table
	doseNumberString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_doseNumberString TEXT, -- Foreign Key to element table
	seriesDosesPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_seriesDosesPositiveInt TEXT, -- Foreign Key to element table
	seriesDosesString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_seriesDosesString TEXT, -- Foreign Key to element table
	supportingImmunization BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation_supportingImmunization_reference
	supportingPatientInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation_supportingPatientInformation_reference

	FOREIGN KEY (immunizationRecommendationId)
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetDisease)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (forecastStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_series)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationRecommendation_DateCriterion(

	id TEXT PRIMARY KEY,
	immunizationRecommendation_RecommendationId TEXT, -- Foreign Key to immunizationRecommendation_Recommendation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_DateCriterion_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_DateCriterion_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"value" DATETIME,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationRecommendation_RecommendationId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide(

	resourceType TEXT, -- resourceType: implementationGuide
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_jurisdiction_codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	packageId TEXT, -- Foreign Key to id table
	_packageId TEXT, -- Foreign Key to element table
	license TEXT CHECK( license IN ('not-open-source','0BSD','AAL','Abstyles','Adobe-2006','Adobe-Glyph','ADSL','AFL-1.1','AFL-1.2','AFL-2.0','AFL-2.1','AFL-3.0','Afmparse','AGPL-1.0-only','AGPL-1.0-or-later','AGPL-3.0-only','AGPL-3.0-or-later','Aladdin','AMDPLPA','AML','AMPAS','ANTLR-PD','Apache-1.0','Apache-1.1','Apache-2.0','APAFML','APL-1.0','APSL-1.0','APSL-1.1','APSL-1.2','APSL-2.0','Artistic-1.0-cl8','Artistic-1.0-Perl','Artistic-1.0','Artistic-2.0','Bahyph','Barr','Beerware','BitTorrent-1.0','BitTorrent-1.1','Borceux','BSD-1-Clause','BSD-2-Clause-FreeBSD','BSD-2-Clause-NetBSD','BSD-2-Clause-Patent','BSD-2-Clause','BSD-3-Clause-Attribution','BSD-3-Clause-Clear','BSD-3-Clause-LBNL','BSD-3-Clause-No-Nuclear-License-2014','BSD-3-Clause-No-Nuclear-License','BSD-3-Clause-No-Nuclear-Warranty','BSD-3-Clause','BSD-4-Clause-UC','BSD-4-Clause','BSD-Protection','BSD-Source-Code','BSL-1.0','bzip2-1.0.5','bzip2-1.0.6','Caldera','CATOSL-1.1','CC-BY-1.0','CC-BY-2.0','CC-BY-2.5','CC-BY-3.0','CC-BY-4.0','CC-BY-NC-1.0','CC-BY-NC-2.0','CC-BY-NC-2.5','CC-BY-NC-3.0','CC-BY-NC-4.0','CC-BY-NC-ND-1.0','CC-BY-NC-ND-2.0','CC-BY-NC-ND-2.5','CC-BY-NC-ND-3.0','CC-BY-NC-ND-4.0','CC-BY-NC-SA-1.0','CC-BY-NC-SA-2.0','CC-BY-NC-SA-2.5','CC-BY-NC-SA-3.0','CC-BY-NC-SA-4.0','CC-BY-ND-1.0','CC-BY-ND-2.0','CC-BY-ND-2.5','CC-BY-ND-3.0','CC-BY-ND-4.0','CC-BY-SA-1.0','CC-BY-SA-2.0','CC-BY-SA-2.5','CC-BY-SA-3.0','CC-BY-SA-4.0','CC0-1.0','CDDL-1.0','CDDL-1.1','CDLA-Permissive-1.0','CDLA-Sharing-1.0','CECILL-1.0','CECILL-1.1','CECILL-2.0','CECILL-2.1','CECILL-B','CECILL-C','ClArtistic','CNRI-Jython','CNRI-Python-GPL-Compatible','CNRI-Python','Condor-1.1','CPAL-1.0','CPL-1.0','CPOL-1.02','Crossword','CrystalStacker','CUA-OPL-1.0','Cube','curl','D-FSL-1.0','diffmark','DOC','Dotseqn','DSDP','dvipdfm','ECL-1.0','ECL-2.0','EFL-1.0','EFL-2.0','eGenix','Entessa','EPL-1.0','EPL-2.0','ErlPL-1.1','EUDatagrid','EUPL-1.0','EUPL-1.1','EUPL-1.2','Eurosym','Fair','Frameworx-1.0','FreeImage','FSFAP','FSFUL','FSFULLR','FTL','GFDL-1.1-only','GFDL-1.1-or-later','GFDL-1.2-only','GFDL-1.2-or-later','GFDL-1.3-only','GFDL-1.3-or-later','Giftware','GL2PS','Glide','Glulxe','gnuplot','GPL-1.0-only','GPL-1.0-or-later','GPL-2.0-only','GPL-2.0-or-later','GPL-3.0-only','GPL-3.0-or-later','gSOAP-1.3b','HaskellReport','HPND','IBM-pibs','ICU','IJG','ImageMagick','iMatix','Imlib2','Info-ZIP','Intel-ACPI','Intel','Interbase-1.0','IPA','IPL-1.0','ISC','JasPer-2.0','JSON','LAL-1.2','LAL-1.3','Latex2e','Leptonica','LGPL-2.0-only','LGPL-2.0-or-later','LGPL-2.1-only','LGPL-2.1-or-later','LGPL-3.0-only','LGPL-3.0-or-later','LGPLLR','Libpng','libtiff','LiLiQ-P-1.1','LiLiQ-R-1.1','LiLiQ-Rplus-1.1','Linux-OpenIB','LPL-1.0','LPL-1.02','LPPL-1.0','LPPL-1.1','LPPL-1.2','LPPL-1.3a','LPPL-1.3c','MakeIndex','MirOS','MIT-0','MIT-advertising','MIT-CMU','MIT-enna','MIT-feh','MIT','MITNFA','Motosoto','mpich2','MPL-1.0','MPL-1.1','MPL-2.0-no-copyleft-exception','MPL-2.0','MS-PL','MS-RL','MTLL','Multics','Mup','NASA-1.3','Naumen','NBPL-1.0','NCSA','Net-SNMP','NetCDF','Newsletr','NGPL','NLOD-1.0','NLPL','Nokia','NOSL','Noweb','NPL-1.0','NPL-1.1','NPOSL-3.0','NRL','NTP','OCCT-PL','OCLC-2.0','ODbL-1.0','OFL-1.0','OFL-1.1','OGTSL','OLDAP-1.1','OLDAP-1.2','OLDAP-1.3','OLDAP-1.4','OLDAP-2.0.1','OLDAP-2.0','OLDAP-2.1','OLDAP-2.2.1','OLDAP-2.2.2','OLDAP-2.2','OLDAP-2.3','OLDAP-2.4','OLDAP-2.5','OLDAP-2.6','OLDAP-2.7','OLDAP-2.8','OML','OpenSSL','OPL-1.0','OSET-PL-2.1','OSL-1.0','OSL-1.1','OSL-2.0','OSL-2.1','OSL-3.0','PDDL-1.0','PHP-3.0','PHP-3.01','Plexus','PostgreSQL','psfrag','psutils','Python-2.0','Qhull','QPL-1.0','Rdisc','RHeCos-1.1','RPL-1.1','RPL-1.5','RPSL-1.0','RSA-MD','RSCPL','Ruby','SAX-PD','Saxpath','SCEA','Sendmail','SGI-B-1.0','SGI-B-1.1','SGI-B-2.0','SimPL-2.0','SISSL-1.2','SISSL','Sleepycat','SMLNJ','SMPPL','SNIA','Spencer-86','Spencer-94','Spencer-99','SPL-1.0','SugarCRM-1.1.3','SWL','TCL','TCP-wrappers','TMate','TORQUE-1.1','TOSL','Unicode-DFS-2015','Unicode-DFS-2016','Unicode-TOU','Unlicense','UPL-1.0','Vim','VOSTROM','VSL-1.0','W3C-19980720','W3C-20150513','W3C','Watcom-1.0','Wsuipa','WTFPL','X11','Xerox','XFree86-1.1','xinetd','Xnet','xpp','XSkat','YPL-1.0','YPL-1.1','Zed','Zend-2.0','Zimbra-1.3','Zimbra-1.4','zlib-acknowledgement','Zlib','ZPL-1.1','ZPL-2.0','ZPL-2.1') ),
	_license TEXT, -- Foreign Key to element table
	fhirVersion BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: 0.01/0.05/0.06/0.11/0.0.80/0.0.81/0.0.82/0.4.0/0.5.0/1.0.0/1.0.1/1.0.2/1.1.0/1.4.0/1.6.0/1.8.0/3.0.0/3.0.1/3.3.0/3.5.0/4.0.0/4.0.1,
	_fhirVersion BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__fhirVersion_element
	dependsOn BOOLEAN, -- true if 1+ rows in ImplementationGuide_DependsOn correspond to this entry
	"global" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Global correspond to this entry
	"definition" TEXT, -- Foreign Key to implementationGuide_Definition table
	manifest TEXT, -- Foreign Key to implementationGuide_Manifest table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_packageId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_license)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("definition")
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manifest)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_DependsOn(

	id TEXT PRIMARY KEY,
	implementationGuideId TEXT, -- Foreign Key to implementationGuide table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_DependsOn_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_DependsOn_modifierExtension_extension
	uri TEXT,
	packageId TEXT, -- Foreign Key to id table
	_packageId TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuideId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_packageId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Global(

	id TEXT PRIMARY KEY,
	implementationGuideId TEXT, -- Foreign Key to implementationGuide table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Global_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Global_modifierExtension_extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" TEXT,

	FOREIGN KEY (implementationGuideId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Definition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Definition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Definition_modifierExtension_extension
	grouping BOOLEAN, -- true if 1+ rows in ImplementationGuide_Grouping correspond to this entry
	"resource" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Resource correspond to this entry
	page TEXT, -- Foreign Key to implementationGuide_Page table
	"parameter" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Parameter correspond to this entry
	template BOOLEAN, -- true if 1+ rows in ImplementationGuide_Template correspond to this entry

	FOREIGN KEY (page)
		REFERENCES implementationGuide_Page (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Grouping(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Grouping_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Grouping_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Resource(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource_modifierExtension_extension
	reference TEXT, -- Foreign Key to reference table
	fhirVersion BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: 0.01/0.05/0.06/0.11/0.0.80/0.0.81/0.0.82/0.4.0/0.5.0/1.0.0/1.0.1/1.0.2/1.1.0/1.4.0/1.6.0/1.8.0/3.0.0/3.0.1/3.3.0/3.5.0/4.0.0/4.0.1,
	_fhirVersion BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource__fhirVersion_element
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	exampleBoolean BOOLEAN, -- pattern: ^true|false$
	_exampleBoolean TEXT, -- Foreign Key to element table
	exampleCanonical TEXT, -- pattern: ^\S*$
	_exampleCanonical TEXT, -- Foreign Key to element table
	groupingId TEXT, -- Foreign Key to id table
	_groupingId TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupingId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupingId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Page(

	id TEXT PRIMARY KEY,
	implementationGuide_PageId TEXT, -- Foreign Key to implementationGuide_Page table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page_modifierExtension_extension
	nameUrl TEXT, -- pattern: ^\S*$
	_nameUrl TEXT, -- Foreign Key to element table
	nameReference TEXT, -- Foreign Key to reference table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	generation TEXT CHECK( generation IN ('html','markdown','xml','generated') ),
	_generation TEXT, -- Foreign Key to element table
	page BOOLEAN, -- true if 1+ rows in ImplementationGuide_Page correspond to this entry

	FOREIGN KEY (implementationGuide_PageId)
		REFERENCES implementationGuide_Page (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_nameUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nameReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_generation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Parameter(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Parameter_modifierExtension_extension
	"code" TEXT CHECK( "code" IN ('apply','path-resource','path-pages','path-tx-cache','expansion-parameter','rule-broken-links','generate-xml','generate-json','generate-turtle','html-template') ),
	_code TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Template(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Template_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Template_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	"scope" TEXT,
	_scope TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_scope)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Manifest(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest_modifierExtension_extension
	rendering TEXT,
	_rendering TEXT, -- Foreign Key to element table
	"resource" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Resource1 correspond to this entry
	page BOOLEAN, -- true if 1+ rows in ImplementationGuide_Page1 correspond to this entry
	"image" BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest_image_string
	_image BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__image_element
	other BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest_other_string
	_other BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__other_element

	FOREIGN KEY (_rendering)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Resource1(

	id TEXT PRIMARY KEY,
	implementationGuide_ManifestId TEXT, -- Foreign Key to implementationGuide_Manifest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource1_modifierExtension_extension
	reference TEXT, -- Foreign Key to reference table
	exampleBoolean BOOLEAN, -- pattern: ^true|false$
	_exampleBoolean TEXT, -- Foreign Key to element table
	exampleCanonical TEXT, -- pattern: ^\S*$
	_exampleCanonical TEXT, -- Foreign Key to element table
	relativePath TEXT,
	_relativePath TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_ManifestId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relativePath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Page1(

	id TEXT PRIMARY KEY,
	implementationGuide_ManifestId TEXT, -- Foreign Key to implementationGuide_Manifest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	anchor BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1_anchor_string
	_anchor BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1__anchor_element

	FOREIGN KEY (implementationGuide_ManifestId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan(

	resourceType TEXT, -- resourceType: insurancePlan
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_identifier_identifier
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_type_codeableConcept
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_alias_string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__alias_element
	"period" TEXT, -- Foreign Key to period table
	ownedBy TEXT, -- Foreign Key to reference table
	administeredBy TEXT, -- Foreign Key to reference table
	coverageArea BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_coverageArea_reference
	contact BOOLEAN, -- true if 1+ rows in InsurancePlan_Contact correspond to this entry
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_endpoint_reference
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_network_reference
	coverage BOOLEAN, -- true if 1+ rows in InsurancePlan_Coverage correspond to this entry
	"plan" BOOLEAN, -- true if 1+ rows in InsurancePlan_Plan correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ownedBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (administeredBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Contact(

	id TEXT PRIMARY KEY,
	insurancePlanId TEXT, -- Foreign Key to insurancePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Contact_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Contact_modifierExtension_extension
	purpose TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT, -- Foreign Key to humanName table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Contact_telecom_contactPoint
	"address" TEXT, -- Foreign Key to address table

	FOREIGN KEY (insurancePlanId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (purpose)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Coverage(

	id TEXT PRIMARY KEY,
	insurancePlanId TEXT, -- Foreign Key to insurancePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Coverage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Coverage_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Coverage_network_reference
	benefit BOOLEAN, -- true if 1+ rows in InsurancePlan_Benefit correspond to this entry

	FOREIGN KEY (insurancePlanId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Benefit(

	id TEXT PRIMARY KEY,
	insurancePlan_CoverageId TEXT, -- Foreign Key to insurancePlan_Coverage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	requirement TEXT,
	_requirement TEXT, -- Foreign Key to element table
	"limit" BOOLEAN, -- true if 1+ rows in InsurancePlan_Limit correspond to this entry

	FOREIGN KEY (insurancePlan_CoverageId)
		REFERENCES insurancePlan_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Limit(

	id TEXT PRIMARY KEY,
	insurancePlan_BenefitId TEXT, -- Foreign Key to insurancePlan_Benefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Limit_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Limit_modifierExtension_extension
	"value" TEXT, -- Foreign Key to quantity table
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (insurancePlan_BenefitId)
		REFERENCES insurancePlan_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Plan(

	id TEXT PRIMARY KEY,
	insurancePlanId TEXT, -- Foreign Key to insurancePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan_identifier_identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	coverageArea BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan_coverageArea_reference
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan_network_reference
	generalCost BOOLEAN, -- true if 1+ rows in InsurancePlan_GeneralCost correspond to this entry
	specificCost BOOLEAN, -- true if 1+ rows in InsurancePlan_SpecificCost correspond to this entry

	FOREIGN KEY (insurancePlanId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_GeneralCost(

	id TEXT PRIMARY KEY,
	insurancePlan_PlanId TEXT, -- Foreign Key to insurancePlan_Plan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_GeneralCost_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_GeneralCost_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	groupSize INTEGER,
	_groupSize TEXT, -- Foreign Key to element table
	cost TEXT, -- Foreign Key to money table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (insurancePlan_PlanId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupSize)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cost)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_SpecificCost(

	id TEXT PRIMARY KEY,
	insurancePlan_PlanId TEXT, -- Foreign Key to insurancePlan_Plan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_SpecificCost_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_SpecificCost_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	benefit BOOLEAN, -- true if 1+ rows in InsurancePlan_Benefit1 correspond to this entry

	FOREIGN KEY (insurancePlan_PlanId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Benefit1(

	id TEXT PRIMARY KEY,
	insurancePlan_SpecificCostId TEXT, -- Foreign Key to insurancePlan_SpecificCost table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit1_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	cost BOOLEAN, -- true if 1+ rows in InsurancePlan_Cost correspond to this entry

	FOREIGN KEY (insurancePlan_SpecificCostId)
		REFERENCES insurancePlan_SpecificCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Cost(

	id TEXT PRIMARY KEY,
	insurancePlan_Benefit1Id TEXT, -- Foreign Key to insurancePlan_Benefit1 table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Cost_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Cost_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	applicability TEXT, -- Foreign Key to codeableConcept table
	qualifiers BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Cost_qualifiers_codeableConcept
	"value" TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (insurancePlan_Benefit1Id)
		REFERENCES insurancePlan_Benefit1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (applicability)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice(

	resourceType TEXT, -- resourceType: invoice
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_identifier_identifier
	"status" TEXT CHECK( "status" IN ('draft','issued','balanced','cancelled','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	cancelledReason TEXT,
	_cancelledReason TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	recipient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	participant BOOLEAN, -- true if 1+ rows in Invoice_Participant correspond to this entry
	issuer TEXT, -- Foreign Key to reference table
	account TEXT, -- Foreign Key to reference table
	lineItem BOOLEAN, -- true if 1+ rows in Invoice_LineItem correspond to this entry
	totalPriceComponent BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_totalPriceComponent_invoice_PriceComponent
	totalNet TEXT, -- Foreign Key to money table
	totalGross TEXT, -- Foreign Key to money table
	paymentTerms TEXT,
	_paymentTerms TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cancelledReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recipient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (issuer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (account)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (totalNet)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (totalGross)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentTerms)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice_Participant(

	id TEXT PRIMARY KEY,
	invoiceId TEXT, -- Foreign Key to invoice table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_Participant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_Participant_modifierExtension_extension
	"role" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (invoiceId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice_LineItem(

	id TEXT PRIMARY KEY,
	invoiceId TEXT, -- Foreign Key to invoice table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_LineItem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_LineItem_modifierExtension_extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	chargeItemReference TEXT, -- Foreign Key to reference table
	chargeItemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	priceComponent BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_LineItem_priceComponent_invoice_PriceComponent

	FOREIGN KEY (invoiceId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (chargeItemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (chargeItemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice_PriceComponent(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_PriceComponent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_PriceComponent_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('base','surcharge','deduction','discount','tax','informational') ),
	_type TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE library(

	resourceType TEXT, -- resourceType: library
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: library_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: library_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: library_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: library_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: library_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: library_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: library_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: library_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: library_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: library_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: library_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: library_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: library_relatedArtifact_relatedArtifact
	"parameter" BOOLEAN, -- true if 1+ rows in ParameterDefinition correspond to this entry
	dataRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: library_dataRequirement_dataRequirement
	content BOOLEAN, -- true if 1+ item is referenced from bridge table: library_content_attachment

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE linkage(

	resourceType TEXT, -- resourceType: linkage
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage_modifierExtension_extension
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	item BOOLEAN, -- true if 1+ rows in Linkage_Item correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE linkage_Item(

	id TEXT PRIMARY KEY,
	linkageId TEXT, -- Foreign Key to linkage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage_Item_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('source','alternate','historical') ),
	_type TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (linkageId)
		REFERENCES linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE list(

	resourceType TEXT, -- resourceType: list
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: list_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: list_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: list_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: list_identifier_identifier
	"status" TEXT CHECK( "status" IN ('current','retired','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	mode TEXT CHECK( mode IN ('working','snapshot','changes') ),
	_mode TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	"source" TEXT, -- Foreign Key to reference table
	orderedBy TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: list_note_annotation
	entry BOOLEAN, -- true if 1+ rows in List_Entry correspond to this entry
	emptyReason TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orderedBy)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (emptyReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE list_Entry(

	id TEXT PRIMARY KEY,
	listId TEXT, -- Foreign Key to list table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: list_Entry_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: list_Entry_modifierExtension_extension
	flag TEXT, -- Foreign Key to codeableConcept table
	deleted BOOLEAN,
	_deleted TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	item TEXT, -- Foreign Key to reference table

	FOREIGN KEY (listId)
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (flag)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deleted)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (item)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "location"(

	resourceType TEXT, -- resourceType: location
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: location_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: location_identifier_identifier
	"status" TEXT CHECK( "status" IN ('active','suspended','inactive') ),
	_status TEXT, -- Foreign Key to element table
	operationalStatus TEXT, -- Foreign Key to coding table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: location_alias_string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: location__alias_element
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	mode TEXT CHECK( mode IN ('instance','kind') ),
	_mode TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: location_type_codeableConcept
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: location_telecom_contactPoint
	"address" TEXT, -- Foreign Key to address table
	physicalType TEXT, -- Foreign Key to codeableConcept table
	"position" TEXT, -- Foreign Key to location_Position table
	managingOrganization TEXT, -- Foreign Key to reference table
	partOf TEXT, -- Foreign Key to reference table
	hoursOfOperation BOOLEAN, -- true if 1+ rows in Location_HoursOfOperation correspond to this entry
	availabilityExceptions TEXT,
	_availabilityExceptions TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: location_endpoint_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operationalStatus)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("position")
		REFERENCES location_Position (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availabilityExceptions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE location_Position(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_Position_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_Position_modifierExtension_extension
	longitude REAL,
	_longitude TEXT, -- Foreign Key to element table
	latitude REAL,
	_latitude TEXT, -- Foreign Key to element table
	altitude REAL,
	_altitude TEXT, -- Foreign Key to element table

	FOREIGN KEY (_longitude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_latitude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_altitude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE location_HoursOfOperation(

	id TEXT PRIMARY KEY,
	locationId TEXT, -- Foreign Key to "location" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation_modifierExtension_extension
	daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation_daysOfWeek_code
	_daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation__daysOfWeek_element
	allDay BOOLEAN,
	_allDay TEXT, -- Foreign Key to element table
	openingTime TIME,
	_openingTime TEXT, -- Foreign Key to element table
	closingTime TIME,
	_closingTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (locationId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allDay)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_openingTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_closingTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure(

	resourceType TEXT, -- resourceType: measure
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_relatedArtifact_relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_library_canonical
	disclaimer TEXT,
	_disclaimer TEXT, -- Foreign Key to element table
	scoring TEXT, -- Foreign Key to codeableConcept table
	compositeScoring TEXT, -- Foreign Key to codeableConcept table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_type_codeableConcept
	riskAdjustment TEXT,
	_riskAdjustment TEXT, -- Foreign Key to element table
	rateAggregation TEXT,
	_rateAggregation TEXT, -- Foreign Key to element table
	rationale TEXT,
	_rationale TEXT, -- Foreign Key to element table
	clinicalRecommendationStatement TEXT,
	_clinicalRecommendationStatement TEXT, -- Foreign Key to element table
	improvementNotation TEXT, -- Foreign Key to codeableConcept table
	"definition" BOOLEAN, -- true if 1+ rows in markdown correspond to this entry
	_definition BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__definition_element
	guidance TEXT,
	_guidance TEXT, -- Foreign Key to element table
	"group" BOOLEAN, -- true if 1+ rows in Measure_Group correspond to this entry
	supplementalData BOOLEAN, -- true if 1+ rows in Measure_SupplementalData correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disclaimer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scoring)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (compositeScoring)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_riskAdjustment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rateAggregation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rationale)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_clinicalRecommendationStatement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (improvementNotation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_guidance)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Group(

	id TEXT PRIMARY KEY,
	measureId TEXT, -- Foreign Key to measure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Group_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Group_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"population" BOOLEAN, -- true if 1+ rows in Measure_Population correspond to this entry
	stratifier BOOLEAN, -- true if 1+ rows in Measure_Stratifier correspond to this entry

	FOREIGN KEY (measureId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Population(

	id TEXT PRIMARY KEY,
	measure_GroupId TEXT, -- Foreign Key to measure_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Population_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Population_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table

	FOREIGN KEY (measure_GroupId)
		REFERENCES measure_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Stratifier(

	id TEXT PRIMARY KEY,
	measure_GroupId TEXT, -- Foreign Key to measure_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Stratifier_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Stratifier_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table
	component BOOLEAN, -- true if 1+ rows in Measure_Component correspond to this entry

	FOREIGN KEY (measure_GroupId)
		REFERENCES measure_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Component(

	id TEXT PRIMARY KEY,
	measure_StratifierId TEXT, -- Foreign Key to measure_Stratifier table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Component_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Component_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table

	FOREIGN KEY (measure_StratifierId)
		REFERENCES measure_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_SupplementalData(

	id TEXT PRIMARY KEY,
	measureId TEXT, -- Foreign Key to measure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_SupplementalData_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_SupplementalData_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"usage" BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_SupplementalData_usage_codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table

	FOREIGN KEY (measureId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport(

	resourceType TEXT, -- resourceType: measureReport
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_identifier_identifier
	"status" TEXT CHECK( "status" IN ('complete','pending','error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('individual','subject-list','summary','data-collection') ),
	_type TEXT, -- Foreign Key to element table
	measure TEXT,
	"subject" TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	reporter TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	improvementNotation TEXT, -- Foreign Key to codeableConcept table
	"group" BOOLEAN, -- true if 1+ rows in MeasureReport_Group correspond to this entry
	evaluatedResource BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_evaluatedResource_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reporter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (improvementNotation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Group(

	id TEXT PRIMARY KEY,
	measureReportId TEXT, -- Foreign Key to measureReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Group_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Group_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"population" BOOLEAN, -- true if 1+ rows in MeasureReport_Population correspond to this entry
	measureScore TEXT, -- Foreign Key to quantity table
	stratifier BOOLEAN, -- true if 1+ rows in MeasureReport_Stratifier correspond to this entry

	FOREIGN KEY (measureReportId)
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measureScore)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Population(

	id TEXT PRIMARY KEY,
	measureReport_GroupId TEXT, -- Foreign Key to measureReport_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	subjectResults TEXT, -- Foreign Key to reference table

	FOREIGN KEY (measureReport_GroupId)
		REFERENCES measureReport_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectResults)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Stratifier(

	id TEXT PRIMARY KEY,
	measureReport_GroupId TEXT, -- Foreign Key to measureReport_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratifier_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratifier_modifierExtension_extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratifier_code_codeableConcept
	stratum BOOLEAN, -- true if 1+ rows in MeasureReport_Stratum correspond to this entry

	FOREIGN KEY (measureReport_GroupId)
		REFERENCES measureReport_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Stratum(

	id TEXT PRIMARY KEY,
	measureReport_StratifierId TEXT, -- Foreign Key to measureReport_Stratifier table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratum_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratum_modifierExtension_extension
	"value" TEXT, -- Foreign Key to codeableConcept table
	component BOOLEAN, -- true if 1+ rows in MeasureReport_Component correspond to this entry
	"population" BOOLEAN, -- true if 1+ rows in MeasureReport_Population1 correspond to this entry
	measureScore TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (measureReport_StratifierId)
		REFERENCES measureReport_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measureScore)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Component(

	id TEXT PRIMARY KEY,
	measureReport_StratumId TEXT, -- Foreign Key to measureReport_Stratum table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Component_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Component_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"value" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (measureReport_StratumId)
		REFERENCES measureReport_Stratum (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Population1(

	id TEXT PRIMARY KEY,
	measureReport_StratumId TEXT, -- Foreign Key to measureReport_Stratum table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population1_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	subjectResults TEXT, -- Foreign Key to reference table

	FOREIGN KEY (measureReport_StratumId)
		REFERENCES measureReport_Stratum (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectResults)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE media(

	resourceType TEXT, -- resourceType: media
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: media_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: media_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: media_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: media_identifier_identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: media_basedOn_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: media_partOf_reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	modality TEXT, -- Foreign Key to codeableConcept table
	"view" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	createdDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_createdDateTime TEXT, -- Foreign Key to element table
	createdPeriod TEXT, -- Foreign Key to period table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	operator TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: media_reasonCode_codeableConcept
	bodySite TEXT, -- Foreign Key to codeableConcept table
	deviceName TEXT,
	_deviceName TEXT, -- Foreign Key to element table
	device TEXT, -- Foreign Key to reference table
	height INTEGER,
	_height TEXT, -- Foreign Key to element table
	width INTEGER,
	_width TEXT, -- Foreign Key to element table
	frames INTEGER,
	_frames TEXT, -- Foreign Key to element table
	duration REAL,
	_duration TEXT, -- Foreign Key to element table
	content TEXT, -- Foreign Key to attachment table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: media_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modality)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("view")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_createdDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (createdPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deviceName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_height)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_width)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_frames)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_duration)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (content)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medication(

	resourceType TEXT, -- resourceType: medication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_identifier_identifier
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	manufacturer TEXT, -- Foreign Key to reference table
	form TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to ratio table
	ingredient BOOLEAN, -- true if 1+ rows in Medication_Ingredient correspond to this entry
	batch TEXT, -- Foreign Key to medication_Batch table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (batch)
		REFERENCES medication_Batch (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medication_Ingredient(

	id TEXT PRIMARY KEY,
	medicationId TEXT, -- Foreign Key to medication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Ingredient_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Ingredient_modifierExtension_extension
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	isActive BOOLEAN,
	_isActive TEXT, -- Foreign Key to element table
	strength TEXT, -- Foreign Key to ratio table

	FOREIGN KEY (medicationId)
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strength)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medication_Batch(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Batch_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Batch_modifierExtension_extension
	lotNumber TEXT,
	_lotNumber TEXT, -- Foreign Key to element table
	expirationDate DATETIME,
	_expirationDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (_lotNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expirationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationAdministration(

	resourceType TEXT, -- resourceType: medicationAdministration
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_identifier_identifier
	instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_instantiates_uri
	_instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__instantiates_element
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_partOf_reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_statusReason_codeableConcept
	category TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_supportingInformation_reference
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	performer BOOLEAN, -- true if 1+ rows in MedicationAdministration_Performer correspond to this entry
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_reasonReference_reference
	request TEXT, -- Foreign Key to reference table
	device BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_device_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_note_annotation
	dosage TEXT, -- Foreign Key to medicationAdministration_Dosage table
	eventHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_eventHistory_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dosage)
		REFERENCES medicationAdministration_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationAdministration_Performer(

	id TEXT PRIMARY KEY,
	medicationAdministrationId TEXT, -- Foreign Key to medicationAdministration table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Performer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Performer_modifierExtension_extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicationAdministrationId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationAdministration_Dosage(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Dosage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Dosage_modifierExtension_extension
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"site" TEXT, -- Foreign Key to codeableConcept table
	"route" TEXT, -- Foreign Key to codeableConcept table
	"method" TEXT, -- Foreign Key to codeableConcept table
	dose TEXT, -- Foreign Key to quantity table
	rateRatio TEXT, -- Foreign Key to ratio table
	rateQuantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("site")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("route")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dose)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationDispense(

	resourceType TEXT, -- resourceType: medicationDispense
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_identifier_identifier
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_partOf_reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReasonCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	statusReasonReference TEXT, -- Foreign Key to reference table
	category TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_supportingInformation_reference
	performer BOOLEAN, -- true if 1+ rows in MedicationDispense_Performer correspond to this entry
	"location" TEXT, -- Foreign Key to reference table
	authorizingPrescription BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_authorizingPrescription_reference
	"type" TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	daysSupply TEXT, -- Foreign Key to quantity table
	whenPrepared DATETIME,
	_whenPrepared TEXT, -- Foreign Key to element table
	whenHandedOver DATETIME,
	_whenHandedOver TEXT, -- Foreign Key to element table
	destination TEXT, -- Foreign Key to reference table
	receiver BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_receiver_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_note_annotation
	dosageInstruction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_dosageInstruction_dosage
	substitution TEXT, -- Foreign Key to medicationDispense_Substitution table
	detectedIssue BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_detectedIssue_reference
	eventHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_eventHistory_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReasonCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReasonReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (daysSupply)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_whenPrepared)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_whenHandedOver)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (destination)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substitution)
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationDispense_Performer(

	id TEXT PRIMARY KEY,
	medicationDispenseId TEXT, -- Foreign Key to medicationDispense table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Performer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Performer_modifierExtension_extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicationDispenseId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationDispense_Substitution(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution_modifierExtension_extension
	wasSubstituted BOOLEAN,
	_wasSubstituted TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution_reason_codeableConcept
	responsibleParty BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution_responsibleParty_reference

	FOREIGN KEY (_wasSubstituted)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge(

	resourceType TEXT, -- resourceType: medicationKnowledge
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	manufacturer TEXT, -- Foreign Key to reference table
	doseForm TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to quantity table
	"synonym" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_synonym_string
	_synonym BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__synonym_element
	relatedMedicationKnowledge BOOLEAN, -- true if 1+ rows in MedicationKnowledge_RelatedMedicationKnowledge correspond to this entry
	associatedMedication BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_associatedMedication_reference
	productType BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_productType_codeableConcept
	monograph BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Monograph correspond to this entry
	ingredient BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Ingredient correspond to this entry
	preparationInstruction TEXT,
	_preparationInstruction TEXT, -- Foreign Key to element table
	intendedRoute BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_intendedRoute_codeableConcept
	cost BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Cost correspond to this entry
	monitoringProgram BOOLEAN, -- true if 1+ rows in MedicationKnowledge_MonitoringProgram correspond to this entry
	administrationGuidelines BOOLEAN, -- true if 1+ rows in MedicationKnowledge_AdministrationGuidelines correspond to this entry
	medicineClassification BOOLEAN, -- true if 1+ rows in MedicationKnowledge_MedicineClassification correspond to this entry
	packaging TEXT, -- Foreign Key to medicationKnowledge_Packaging table
	drugCharacteristic BOOLEAN, -- true if 1+ rows in MedicationKnowledge_DrugCharacteristic correspond to this entry
	contraindication BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_contraindication_reference
	regulatory BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Regulatory correspond to this entry
	kinetics BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Kinetics correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preparationInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packaging)
		REFERENCES medicationKnowledge_Packaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_RelatedMedicationKnowledge(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_RelatedMedicationKnowledge_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_RelatedMedicationKnowledge_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	reference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_RelatedMedicationKnowledge_reference_reference

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Monograph(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Monograph_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Monograph_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"source" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Ingredient(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Ingredient_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Ingredient_modifierExtension_extension
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	isActive BOOLEAN,
	_isActive TEXT, -- Foreign Key to element table
	strength TEXT, -- Foreign Key to ratio table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strength)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Cost(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Cost_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Cost_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	cost TEXT, -- Foreign Key to money table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cost)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_MonitoringProgram(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MonitoringProgram_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MonitoringProgram_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_AdministrationGuidelines(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_AdministrationGuidelines_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_AdministrationGuidelines_modifierExtension_extension
	dosage BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Dosage correspond to this entry
	indicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	indicationReference TEXT, -- Foreign Key to reference table
	patientCharacteristics BOOLEAN, -- true if 1+ rows in MedicationKnowledge_PatientCharacteristics correspond to this entry

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Dosage(

	id TEXT PRIMARY KEY,
	medicationKnowledge_AdministrationGuidelinesId TEXT, -- Foreign Key to medicationKnowledge_AdministrationGuidelines table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Dosage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Dosage_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	dosage BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Dosage_dosage_dosage

	FOREIGN KEY (medicationKnowledge_AdministrationGuidelinesId)
		REFERENCES medicationKnowledge_AdministrationGuidelines (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_PatientCharacteristics(

	id TEXT PRIMARY KEY,
	medicationKnowledge_AdministrationGuidelinesId TEXT, -- Foreign Key to medicationKnowledge_AdministrationGuidelines table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics_modifierExtension_extension
	characteristicCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	characteristicQuantity TEXT, -- Foreign Key to quantity table
	"value" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics_value_string
	_value BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics__value_element

	FOREIGN KEY (medicationKnowledge_AdministrationGuidelinesId)
		REFERENCES medicationKnowledge_AdministrationGuidelines (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (characteristicCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (characteristicQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_MedicineClassification(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MedicineClassification_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MedicineClassification_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	classification BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MedicineClassification_classification_codeableConcept

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Packaging(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Packaging_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Packaging_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_DrugCharacteristic(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_DrugCharacteristic_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_DrugCharacteristic_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Regulatory(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Regulatory_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Regulatory_modifierExtension_extension
	regulatoryAuthority TEXT, -- Foreign Key to reference table
	substitution BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Substitution correspond to this entry
	schedule BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Schedule correspond to this entry
	maxDispense TEXT, -- Foreign Key to medicationKnowledge_MaxDispense table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (regulatoryAuthority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDispense)
		REFERENCES medicationKnowledge_MaxDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Substitution(

	id TEXT PRIMARY KEY,
	medicationKnowledge_RegulatoryId TEXT, -- Foreign Key to medicationKnowledge_Regulatory table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Substitution_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Substitution_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	allowed BOOLEAN,
	_allowed TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicationKnowledge_RegulatoryId)
		REFERENCES medicationKnowledge_Regulatory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Schedule(

	id TEXT PRIMARY KEY,
	medicationKnowledge_RegulatoryId TEXT, -- Foreign Key to medicationKnowledge_Regulatory table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Schedule_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Schedule_modifierExtension_extension
	schedule TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicationKnowledge_RegulatoryId)
		REFERENCES medicationKnowledge_Regulatory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (schedule)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_MaxDispense(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MaxDispense_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MaxDispense_modifierExtension_extension
	quantity TEXT, -- Foreign Key to quantity table
	"period" TEXT, -- Foreign Key to duration table

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Kinetics(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics_modifierExtension_extension
	areaUnderCurve BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics_areaUnderCurve_quantity
	lethalDose50 BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics_lethalDose50_quantity
	halfLifePeriod TEXT, -- Foreign Key to duration table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (halfLifePeriod)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest(

	resourceType TEXT, -- resourceType: medicationRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_category_codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	reportedBoolean BOOLEAN, -- pattern: ^true|false$
	_reportedBoolean TEXT, -- Foreign Key to element table
	reportedReference TEXT, -- Foreign Key to reference table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_supportingInformation_reference
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performer TEXT, -- Foreign Key to reference table
	performerType TEXT, -- Foreign Key to codeableConcept table
	recorder TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_reasonReference_reference
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_instantiatesCanonical_canonical
	_instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__instantiatesCanonical_element
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__instantiatesUri_element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_basedOn_reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	courseOfTherapyType TEXT, -- Foreign Key to codeableConcept table
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_insurance_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_note_annotation
	dosageInstruction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_dosageInstruction_dosage
	dispenseRequest TEXT, -- Foreign Key to medicationRequest_DispenseRequest table
	substitution TEXT, -- Foreign Key to medicationRequest_Substitution table
	priorPrescription TEXT, -- Foreign Key to reference table
	detectedIssue BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_detectedIssue_reference
	eventHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_eventHistory_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reportedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reportedReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (courseOfTherapyType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dispenseRequest)
		REFERENCES medicationRequest_DispenseRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substitution)
		REFERENCES medicationRequest_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (priorPrescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest_DispenseRequest(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_DispenseRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_DispenseRequest_modifierExtension_extension
	initialFill TEXT, -- Foreign Key to medicationRequest_InitialFill table
	dispenseInterval TEXT, -- Foreign Key to duration table
	validityPeriod TEXT, -- Foreign Key to period table
	numberOfRepeatsAllowed INTEGER,
	_numberOfRepeatsAllowed TEXT, -- Foreign Key to element table
	quantity TEXT, -- Foreign Key to quantity table
	expectedSupplyDuration TEXT, -- Foreign Key to duration table
	performer TEXT, -- Foreign Key to reference table

	FOREIGN KEY (initialFill)
		REFERENCES medicationRequest_InitialFill (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dispenseInterval)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfRepeatsAllowed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expectedSupplyDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest_InitialFill(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_InitialFill_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_InitialFill_modifierExtension_extension
	quantity TEXT, -- Foreign Key to quantity table
	duration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest_Substitution(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_Substitution_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_Substitution_modifierExtension_extension
	allowedBoolean BOOLEAN, -- pattern: ^true|false$
	_allowedBoolean TEXT, -- Foreign Key to element table
	allowedCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	reason TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (_allowedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (allowedCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationStatement(

	resourceType TEXT, -- resourceType: medicationStatement
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_identifier_identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_basedOn_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_partOf_reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_statusReason_codeableConcept
	category TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	dateAsserted DATETIME,
	_dateAsserted TEXT, -- Foreign Key to element table
	informationSource TEXT, -- Foreign Key to reference table
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_derivedFrom_reference
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_reasonReference_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_note_annotation
	dosage BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement_dosage_dosage

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateAsserted)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (informationSource)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct(

	resourceType TEXT, -- resourceType: medicinalProduct
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_identifier_identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	"domain" TEXT, -- Foreign Key to coding table
	combinedPharmaceuticalDoseForm TEXT, -- Foreign Key to codeableConcept table
	legalStatusOfSupply TEXT, -- Foreign Key to codeableConcept table
	additionalMonitoringIndicator TEXT, -- Foreign Key to codeableConcept table
	specialMeasures BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_specialMeasures_string
	_specialMeasures BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__specialMeasures_element
	paediatricUseIndicator TEXT, -- Foreign Key to codeableConcept table
	productClassification BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_productClassification_codeableConcept
	marketingStatus BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_marketingStatus_marketingStatus
	pharmaceuticalProduct BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_pharmaceuticalProduct_reference
	packagedMedicinalProduct BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_packagedMedicinalProduct_reference
	attachedDocument BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_attachedDocument_reference
	masterFile BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_masterFile_reference
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_contact_reference
	clinicalTrial BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_clinicalTrial_reference
	"name" BOOLEAN, -- true if 1+ rows in MedicinalProduct_Name correspond to this entry
	crossReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_crossReference_identifier
	manufacturingBusinessOperation BOOLEAN, -- true if 1+ rows in MedicinalProduct_ManufacturingBusinessOperation correspond to this entry
	specialDesignation BOOLEAN, -- true if 1+ rows in MedicinalProduct_SpecialDesignation correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("domain")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (combinedPharmaceuticalDoseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalStatusOfSupply)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additionalMonitoringIndicator)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paediatricUseIndicator)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_Name(

	id TEXT PRIMARY KEY,
	medicinalProductId TEXT, -- Foreign Key to medicinalProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_Name_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_Name_modifierExtension_extension
	productName TEXT,
	_productName TEXT, -- Foreign Key to element table
	namePart BOOLEAN, -- true if 1+ rows in MedicinalProduct_NamePart correspond to this entry
	countryLanguage BOOLEAN, -- true if 1+ rows in MedicinalProduct_CountryLanguage correspond to this entry

	FOREIGN KEY (medicinalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_NamePart(

	id TEXT PRIMARY KEY,
	medicinalProduct_NameId TEXT, -- Foreign Key to medicinalProduct_Name table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_NamePart_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_NamePart_modifierExtension_extension
	part TEXT,
	_part TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to coding table

	FOREIGN KEY (medicinalProduct_NameId)
		REFERENCES medicinalProduct_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_part)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_CountryLanguage(

	id TEXT PRIMARY KEY,
	medicinalProduct_NameId TEXT, -- Foreign Key to medicinalProduct_Name table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_CountryLanguage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_CountryLanguage_modifierExtension_extension
	country TEXT, -- Foreign Key to codeableConcept table
	jurisdiction TEXT, -- Foreign Key to codeableConcept table
	"language" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProduct_NameId)
		REFERENCES medicinalProduct_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (country)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (jurisdiction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_ManufacturingBusinessOperation(

	id TEXT PRIMARY KEY,
	medicinalProductId TEXT, -- Foreign Key to medicinalProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_ManufacturingBusinessOperation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_ManufacturingBusinessOperation_modifierExtension_extension
	operationType TEXT, -- Foreign Key to codeableConcept table
	authorisationReferenceNumber TEXT, -- Foreign Key to identifier table
	effectiveDate DATETIME,
	_effectiveDate TEXT, -- Foreign Key to element table
	confidentialityIndicator TEXT, -- Foreign Key to codeableConcept table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_ManufacturingBusinessOperation_manufacturer_reference
	regulator TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicinalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operationType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authorisationReferenceNumber)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (confidentialityIndicator)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (regulator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_SpecialDesignation(

	id TEXT PRIMARY KEY,
	medicinalProductId TEXT, -- Foreign Key to medicinalProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_SpecialDesignation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_SpecialDesignation_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_SpecialDesignation_identifier_identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	intendedUse TEXT, -- Foreign Key to codeableConcept table
	indicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	indicationReference TEXT, -- Foreign Key to reference table
	"status" TEXT, -- Foreign Key to codeableConcept table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	species TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intendedUse)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (species)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductAuthorization(

	resourceType TEXT, -- resourceType: medicinalProductAuthorization
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_identifier_identifier
	"subject" TEXT, -- Foreign Key to reference table
	country BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_country_codeableConcept
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_jurisdiction_codeableConcept
	"status" TEXT, -- Foreign Key to codeableConcept table
	statusDate DATETIME,
	_statusDate TEXT, -- Foreign Key to element table
	restoreDate DATETIME,
	_restoreDate TEXT, -- Foreign Key to element table
	validityPeriod TEXT, -- Foreign Key to period table
	dataExclusivityPeriod TEXT, -- Foreign Key to period table
	dateOfFirstAuthorization DATETIME,
	_dateOfFirstAuthorization TEXT, -- Foreign Key to element table
	internationalBirthDate DATETIME,
	_internationalBirthDate TEXT, -- Foreign Key to element table
	legalBasis TEXT, -- Foreign Key to codeableConcept table
	jurisdictionalAuthorization BOOLEAN, -- true if 1+ rows in MedicinalProductAuthorization_JurisdictionalAuthorization correspond to this entry
	holder TEXT, -- Foreign Key to reference table
	regulator TEXT, -- Foreign Key to reference table
	"procedure" TEXT, -- Foreign Key to medicinalProductAuthorization_Procedure table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_restoreDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataExclusivityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateOfFirstAuthorization)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_internationalBirthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalBasis)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (holder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (regulator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("procedure")
		REFERENCES medicinalProductAuthorization_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductAuthorization_JurisdictionalAuthorization(

	id TEXT PRIMARY KEY,
	medicinalProductAuthorizationId TEXT, -- Foreign Key to medicinalProductAuthorization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization_identifier_identifier
	country TEXT, -- Foreign Key to codeableConcept table
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization_jurisdiction_codeableConcept
	legalStatusOfSupply TEXT, -- Foreign Key to codeableConcept table
	validityPeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (medicinalProductAuthorizationId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (country)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalStatusOfSupply)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductAuthorization_Procedure(

	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_ProcedureId TEXT, -- Foreign Key to medicinalProductAuthorization_Procedure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_Procedure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_Procedure_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	datePeriod TEXT, -- Foreign Key to period table
	dateDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_dateDateTime TEXT, -- Foreign Key to element table
	application BOOLEAN, -- true if 1+ rows in MedicinalProductAuthorization_Procedure correspond to this entry

	FOREIGN KEY (medicinalProductAuthorization_ProcedureId)
		REFERENCES medicinalProductAuthorization_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (datePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductContraindication(

	resourceType TEXT, -- resourceType: medicinalProductContraindication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_modifierExtension_extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_subject_reference
	disease TEXT, -- Foreign Key to codeableConcept table
	diseaseStatus TEXT, -- Foreign Key to codeableConcept table
	comorbidity BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_comorbidity_codeableConcept
	therapeuticIndication BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_therapeuticIndication_reference
	otherTherapy BOOLEAN, -- true if 1+ rows in MedicinalProductContraindication_OtherTherapy correspond to this entry
	"population" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_population_population

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (disease)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diseaseStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductContraindication_OtherTherapy(

	id TEXT PRIMARY KEY,
	medicinalProductContraindicationId TEXT, -- Foreign Key to medicinalProductContraindication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_OtherTherapy_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_OtherTherapy_modifierExtension_extension
	therapyRelationshipType TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicinalProductContraindicationId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (therapyRelationshipType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIndication(

	resourceType TEXT, -- resourceType: medicinalProductIndication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_modifierExtension_extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_subject_reference
	diseaseSymptomProcedure TEXT, -- Foreign Key to codeableConcept table
	diseaseStatus TEXT, -- Foreign Key to codeableConcept table
	comorbidity BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_comorbidity_codeableConcept
	intendedEffect TEXT, -- Foreign Key to codeableConcept table
	duration TEXT, -- Foreign Key to quantity table
	otherTherapy BOOLEAN, -- true if 1+ rows in MedicinalProductIndication_OtherTherapy correspond to this entry
	undesirableEffect BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_undesirableEffect_reference
	"population" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_population_population

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diseaseSymptomProcedure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diseaseStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intendedEffect)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIndication_OtherTherapy(

	id TEXT PRIMARY KEY,
	medicinalProductIndicationId TEXT, -- Foreign Key to medicinalProductIndication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_OtherTherapy_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_OtherTherapy_modifierExtension_extension
	therapyRelationshipType TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicinalProductIndicationId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (therapyRelationshipType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient(

	resourceType TEXT, -- resourceType: medicinalProductIngredient
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"role" TEXT, -- Foreign Key to codeableConcept table
	allergenicIndicator BOOLEAN,
	_allergenicIndicator TEXT, -- Foreign Key to element table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_manufacturer_reference
	specifiedSubstance BOOLEAN, -- true if 1+ rows in MedicinalProductIngredient_SpecifiedSubstance correspond to this entry
	substance TEXT, -- Foreign Key to medicinalProductIngredient_Substance table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allergenicIndicator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES medicinalProductIngredient_Substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_SpecifiedSubstance(

	id TEXT PRIMARY KEY,
	medicinalProductIngredientId TEXT, -- Foreign Key to medicinalProductIngredient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_SpecifiedSubstance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_SpecifiedSubstance_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"group" TEXT, -- Foreign Key to codeableConcept table
	confidentiality TEXT, -- Foreign Key to codeableConcept table
	strength BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_SpecifiedSubstance_strength_medicinalProductIngredient_Strength

	FOREIGN KEY (medicinalProductIngredientId)
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("group")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (confidentiality)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_Strength(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Strength_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Strength_modifierExtension_extension
	presentation TEXT, -- Foreign Key to ratio table
	presentationLowLimit TEXT, -- Foreign Key to ratio table
	concentration TEXT, -- Foreign Key to ratio table
	concentrationLowLimit TEXT, -- Foreign Key to ratio table
	measurementPoint TEXT,
	_measurementPoint TEXT, -- Foreign Key to element table
	country BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Strength_country_codeableConcept
	referenceStrength BOOLEAN, -- true if 1+ rows in MedicinalProductIngredient_ReferenceStrength correspond to this entry

	FOREIGN KEY (presentation)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (presentationLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (concentration)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (concentrationLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_measurementPoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_ReferenceStrength(

	id TEXT PRIMARY KEY,
	medicinalProductIngredient_StrengthId TEXT, -- Foreign Key to medicinalProductIngredient_Strength table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_ReferenceStrength_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_ReferenceStrength_modifierExtension_extension
	substance TEXT, -- Foreign Key to codeableConcept table
	strength TEXT, -- Foreign Key to ratio table
	strengthLowLimit TEXT, -- Foreign Key to ratio table
	measurementPoint TEXT,
	_measurementPoint TEXT, -- Foreign Key to element table
	country BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_ReferenceStrength_country_codeableConcept

	FOREIGN KEY (medicinalProductIngredient_StrengthId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strength)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strengthLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_measurementPoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_Substance(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Substance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Substance_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	strength BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Substance_strength_medicinalProductIngredient_Strength

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductInteraction(

	resourceType TEXT, -- resourceType: medicinalProductInteraction
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_modifierExtension_extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_subject_reference
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	interactant BOOLEAN, -- true if 1+ rows in MedicinalProductInteraction_Interactant correspond to this entry
	"type" TEXT, -- Foreign Key to codeableConcept table
	effect TEXT, -- Foreign Key to codeableConcept table
	incidence TEXT, -- Foreign Key to codeableConcept table
	management TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effect)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (incidence)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (management)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductInteraction_Interactant(

	id TEXT PRIMARY KEY,
	medicinalProductInteractionId TEXT, -- Foreign Key to medicinalProductInteraction table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_Interactant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_Interactant_modifierExtension_extension
	itemReference TEXT, -- Foreign Key to reference table
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProductInteractionId)
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductManufactured(

	resourceType TEXT, -- resourceType: medicinalProductManufactured
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured_modifierExtension_extension
	manufacturedDoseForm TEXT, -- Foreign Key to codeableConcept table
	unitOfPresentation TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured_manufacturer_reference
	ingredient BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured_ingredient_reference
	physicalCharacteristics TEXT, -- Foreign Key to prodCharacteristic table
	otherCharacteristics BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured_otherCharacteristics_codeableConcept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturedDoseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfPresentation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalCharacteristics)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPackaged(

	resourceType TEXT, -- resourceType: medicinalProductPackaged
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_identifier_identifier
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_subject_reference
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	legalStatusOfSupply TEXT, -- Foreign Key to codeableConcept table
	marketingStatus BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_marketingStatus_marketingStatus
	marketingAuthorization TEXT, -- Foreign Key to reference table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_manufacturer_reference
	batchIdentifier BOOLEAN, -- true if 1+ rows in MedicinalProductPackaged_BatchIdentifier correspond to this entry
	packageItem BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_packageItem_medicinalProductPackaged_PackageItem

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalStatusOfSupply)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (marketingAuthorization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPackaged_BatchIdentifier(

	id TEXT PRIMARY KEY,
	medicinalProductPackagedId TEXT, -- Foreign Key to medicinalProductPackaged table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_BatchIdentifier_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_BatchIdentifier_modifierExtension_extension
	outerPackaging TEXT, -- Foreign Key to identifier table
	immediatePackaging TEXT, -- Foreign Key to identifier table

	FOREIGN KEY (medicinalProductPackagedId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outerPackaging)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (immediatePackaging)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPackaged_PackageItem(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_identifier_identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	material BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_material_codeableConcept
	alternateMaterial BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_alternateMaterial_codeableConcept
	device BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_device_reference
	manufacturedItem BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_manufacturedItem_reference
	packageItem BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_packageItem_medicinalProductPackaged_PackageItem
	physicalCharacteristics TEXT, -- Foreign Key to prodCharacteristic table
	otherCharacteristics BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_otherCharacteristics_codeableConcept
	shelfLifeStorage BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_shelfLifeStorage_productShelfLife
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem_manufacturer_reference

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalCharacteristics)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical(

	resourceType TEXT, -- resourceType: medicinalProductPharmaceutical
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_identifier_identifier
	administrableDoseForm TEXT, -- Foreign Key to codeableConcept table
	unitOfPresentation TEXT, -- Foreign Key to codeableConcept table
	ingredient BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_ingredient_reference
	device BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_device_reference
	"characteristics" BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_Characteristics correspond to this entry
	routeOfAdministration BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_RouteOfAdministration correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (administrableDoseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfPresentation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_Characteristics(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceuticalId TEXT, -- Foreign Key to medicinalProductPharmaceutical table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_Characteristics_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_Characteristics_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProductPharmaceuticalId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_RouteOfAdministration(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceuticalId TEXT, -- Foreign Key to medicinalProductPharmaceutical table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_RouteOfAdministration_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_RouteOfAdministration_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	firstDose TEXT, -- Foreign Key to quantity table
	maxSingleDose TEXT, -- Foreign Key to quantity table
	maxDosePerDay TEXT, -- Foreign Key to quantity table
	maxDosePerTreatmentPeriod TEXT, -- Foreign Key to ratio table
	maxTreatmentPeriod TEXT, -- Foreign Key to duration table
	targetSpecies BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_TargetSpecies correspond to this entry

	FOREIGN KEY (medicinalProductPharmaceuticalId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (firstDose)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxSingleDose)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerDay)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerTreatmentPeriod)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxTreatmentPeriod)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_TargetSpecies(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_RouteOfAdministrationId TEXT, -- Foreign Key to medicinalProductPharmaceutical_RouteOfAdministration table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_TargetSpecies_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_TargetSpecies_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	withdrawalPeriod BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_WithdrawalPeriod correspond to this entry

	FOREIGN KEY (medicinalProductPharmaceutical_RouteOfAdministrationId)
		REFERENCES medicinalProductPharmaceutical_RouteOfAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_WithdrawalPeriod(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_TargetSpeciesId TEXT, -- Foreign Key to medicinalProductPharmaceutical_TargetSpecies table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_WithdrawalPeriod_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_WithdrawalPeriod_modifierExtension_extension
	tissue TEXT, -- Foreign Key to codeableConcept table
	"value" TEXT, -- Foreign Key to quantity table
	supportingInformation TEXT,
	_supportingInformation TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicinalProductPharmaceutical_TargetSpeciesId)
		REFERENCES medicinalProductPharmaceutical_TargetSpecies (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (tissue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_supportingInformation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductUndesirableEffect(

	resourceType TEXT, -- resourceType: medicinalProductUndesirableEffect
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect_modifierExtension_extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect_subject_reference
	symptomConditionEffect TEXT, -- Foreign Key to codeableConcept table
	classification TEXT, -- Foreign Key to codeableConcept table
	frequencyOfOccurrence TEXT, -- Foreign Key to codeableConcept table
	"population" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect_population_population

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (symptomConditionEffect)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (classification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (frequencyOfOccurrence)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageDefinition(

	resourceType TEXT, -- resourceType: messageDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_replaces_canonical
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	base TEXT,
	parent BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_parent_canonical
	eventCoding TEXT, -- Foreign Key to coding table
	eventUri TEXT, -- pattern: ^\S*$
	_eventUri TEXT, -- Foreign Key to element table
	category TEXT CHECK( category IN ('consequence','currency','notification') ),
	_category TEXT, -- Foreign Key to element table
	focus BOOLEAN, -- true if 1+ rows in MessageDefinition_Focus correspond to this entry
	responseRequired TEXT CHECK( responseRequired IN ('always','on-error','never','on-success') ),
	_responseRequired TEXT, -- Foreign Key to element table
	allowedResponse BOOLEAN, -- true if 1+ rows in MessageDefinition_AllowedResponse correspond to this entry
	graph BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_graph_canonical

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (eventCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_eventUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_category)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responseRequired)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageDefinition_Focus(

	id TEXT PRIMARY KEY,
	messageDefinitionId TEXT, -- Foreign Key to messageDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_Focus_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_Focus_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"profile" TEXT,
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table

	FOREIGN KEY (messageDefinitionId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageDefinition_AllowedResponse(

	id TEXT PRIMARY KEY,
	messageDefinitionId TEXT, -- Foreign Key to messageDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_AllowedResponse_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_AllowedResponse_modifierExtension_extension
	"message" TEXT,
	situation TEXT,
	_situation TEXT, -- Foreign Key to element table

	FOREIGN KEY (messageDefinitionId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_situation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader(

	resourceType TEXT, -- resourceType: messageHeader
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_modifierExtension_extension
	eventCoding TEXT, -- Foreign Key to coding table
	eventUri TEXT, -- pattern: ^\S*$
	_eventUri TEXT, -- Foreign Key to element table
	destination BOOLEAN, -- true if 1+ rows in MessageHeader_Destination correspond to this entry
	sender TEXT, -- Foreign Key to reference table
	enterer TEXT, -- Foreign Key to reference table
	author TEXT, -- Foreign Key to reference table
	"source" TEXT, -- Foreign Key to messageHeader_Source table
	responsible TEXT, -- Foreign Key to reference table
	reason TEXT, -- Foreign Key to codeableConcept table
	response TEXT, -- Foreign Key to messageHeader_Response table
	focus BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_focus_reference
	"definition" TEXT,

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (eventCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_eventUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sender)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES messageHeader_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responsible)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES messageHeader_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader_Destination(

	id TEXT PRIMARY KEY,
	messageHeaderId TEXT, -- Foreign Key to messageHeader table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Destination_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Destination_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"target" TEXT, -- Foreign Key to reference table
	"endpoint" TEXT,
	_endpoint TEXT, -- Foreign Key to element table
	receiver TEXT, -- Foreign Key to reference table

	FOREIGN KEY (messageHeaderId)
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_endpoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (receiver)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader_Source(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Source_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Source_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	software TEXT,
	_software TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	contact TEXT, -- Foreign Key to contactPoint table
	"endpoint" TEXT,
	_endpoint TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_software)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contact)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_endpoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader_Response(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Response_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Response_modifierExtension_extension
	identifier TEXT, -- Foreign Key to id table
	_identifier TEXT, -- Foreign Key to element table
	"code" TEXT CHECK( "code" IN ('ok','transient-error','fatal-error') ),
	_code TEXT, -- Foreign Key to element table
	details TEXT, -- Foreign Key to reference table

	FOREIGN KEY (identifier)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (details)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence(

	resourceType TEXT, -- resourceType: molecularSequence
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_identifier_identifier
	"type" TEXT CHECK( "type" IN ('aa','dna','rna') ),
	_type TEXT, -- Foreign Key to element table
	coordinateSystem INTEGER,
	_coordinateSystem TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	specimen TEXT, -- Foreign Key to reference table
	device TEXT, -- Foreign Key to reference table
	performer TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	referenceSeq TEXT, -- Foreign Key to molecularSequence_ReferenceSeq table
	variant BOOLEAN, -- true if 1+ rows in MolecularSequence_Variant correspond to this entry
	observedSeq TEXT,
	_observedSeq TEXT, -- Foreign Key to element table
	quality BOOLEAN, -- true if 1+ rows in MolecularSequence_Quality correspond to this entry
	readCoverage INTEGER,
	_readCoverage TEXT, -- Foreign Key to element table
	repository BOOLEAN, -- true if 1+ rows in MolecularSequence_Repository correspond to this entry
	pointer BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_pointer_reference
	structureVariant BOOLEAN, -- true if 1+ rows in MolecularSequence_StructureVariant correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_coordinateSystem)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (specimen)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceSeq)
		REFERENCES molecularSequence_ReferenceSeq (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_observedSeq)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readCoverage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_ReferenceSeq(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_ReferenceSeq_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_ReferenceSeq_modifierExtension_extension
	chromosome TEXT, -- Foreign Key to codeableConcept table
	genomeBuild TEXT,
	_genomeBuild TEXT, -- Foreign Key to element table
	orientation TEXT CHECK( orientation IN ('sense','antisense') ),
	_orientation TEXT, -- Foreign Key to element table
	referenceSeqId TEXT, -- Foreign Key to codeableConcept table
	referenceSeqPointer TEXT, -- Foreign Key to reference table
	referenceSeqString TEXT,
	_referenceSeqString TEXT, -- Foreign Key to element table
	strand TEXT CHECK( strand IN ('watson','crick') ),
	_strand TEXT, -- Foreign Key to element table
	windowStart INTEGER,
	_windowStart TEXT, -- Foreign Key to element table
	windowEnd INTEGER,
	_windowEnd TEXT, -- Foreign Key to element table

	FOREIGN KEY (chromosome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_genomeBuild)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_orientation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceSeqId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceSeqPointer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_referenceSeqString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_strand)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_windowStart)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_windowEnd)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Variant(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Variant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Variant_modifierExtension_extension
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table
	observedAllele TEXT,
	_observedAllele TEXT, -- Foreign Key to element table
	referenceAllele TEXT,
	_referenceAllele TEXT, -- Foreign Key to element table
	cigar TEXT,
	_cigar TEXT, -- Foreign Key to element table
	variantPointer TEXT, -- Foreign Key to reference table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_observedAllele)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_referenceAllele)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cigar)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantPointer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Quality(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Quality_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Quality_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('indel','snp','unknown') ),
	_type TEXT, -- Foreign Key to element table
	standardSequence TEXT, -- Foreign Key to codeableConcept table
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table
	score TEXT, -- Foreign Key to quantity table
	"method" TEXT, -- Foreign Key to codeableConcept table
	truthTP REAL,
	_truthTP TEXT, -- Foreign Key to element table
	queryTP REAL,
	_queryTP TEXT, -- Foreign Key to element table
	truthFN REAL,
	_truthFN TEXT, -- Foreign Key to element table
	queryFP REAL,
	_queryFP TEXT, -- Foreign Key to element table
	gtFP REAL,
	_gtFP TEXT, -- Foreign Key to element table
	precision REAL,
	_precision TEXT, -- Foreign Key to element table
	recall REAL,
	_recall TEXT, -- Foreign Key to element table
	fScore REAL,
	_fScore TEXT, -- Foreign Key to element table
	roc TEXT, -- Foreign Key to molecularSequence_Roc table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (standardSequence)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (score)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_truthTP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_queryTP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_truthFN)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_queryFP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gtFP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precision)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recall)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fScore)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (roc)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Roc(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_modifierExtension_extension
	score BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_score_integer
	_score BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__score_element
	numTP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_numTP_integer
	_numTP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__numTP_element
	numFP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_numFP_integer
	_numFP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__numFP_element
	numFN BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_numFN_integer
	_numFN BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__numFN_element
	precision BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_precision_decimal
	_precision BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__precision_element
	sensitivity BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_sensitivity_decimal
	_sensitivity BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__sensitivity_element
	fMeasure BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc_fMeasure_decimal
	_fMeasure BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__fMeasure_element

);

CREATE TABLE molecularSequence_Repository(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Repository_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Repository_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('directlink','openapi','login','oauth','other') ),
	_type TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	datasetId TEXT,
	_datasetId TEXT, -- Foreign Key to element table
	variantsetId TEXT,
	_variantsetId TEXT, -- Foreign Key to element table
	readsetId TEXT,
	_readsetId TEXT, -- Foreign Key to element table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_datasetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variantsetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readsetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_StructureVariant(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_StructureVariant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_StructureVariant_modifierExtension_extension
	variantType TEXT, -- Foreign Key to codeableConcept table
	exact BOOLEAN,
	_exact TEXT, -- Foreign Key to element table
	"length" INTEGER,
	_length TEXT, -- Foreign Key to element table
	"outer" TEXT, -- Foreign Key to molecularSequence_Outer table
	"inner" TEXT, -- Foreign Key to molecularSequence_Inner table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exact)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_length)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("outer")
		REFERENCES molecularSequence_Outer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("inner")
		REFERENCES molecularSequence_Inner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Outer(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Outer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Outer_modifierExtension_extension
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Inner(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Inner_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Inner_modifierExtension_extension
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE namingSystem(

	resourceType TEXT, -- resourceType: namingSystem
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	kind TEXT CHECK( kind IN ('codesystem','identifier','root') ),
	_kind TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_contact_contactDetail
	responsible TEXT,
	_responsible TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_jurisdiction_codeableConcept
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	uniqueId BOOLEAN, -- true if 1+ rows in NamingSystem_UniqueId correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responsible)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE namingSystem_UniqueId(

	id TEXT PRIMARY KEY,
	namingSystemId TEXT, -- Foreign Key to namingSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_UniqueId_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_UniqueId_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('oid','uuid','uri','other') ),
	_type TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (namingSystemId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder(

	resourceType TEXT, -- resourceType: nutritionOrder
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__instantiatesUri_element
	instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_instantiates_uri
	_instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__instantiates_element
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"dateTime" DATETIME,
	_dateTime TEXT, -- Foreign Key to element table
	orderer TEXT, -- Foreign Key to reference table
	allergyIntolerance BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_allergyIntolerance_reference
	foodPreferenceModifier BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_foodPreferenceModifier_codeableConcept
	excludeFoodModifier BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_excludeFoodModifier_codeableConcept
	oralDiet TEXT, -- Foreign Key to nutritionOrder_OralDiet table
	supplement BOOLEAN, -- true if 1+ rows in NutritionOrder_Supplement correspond to this entry
	enteralFormula TEXT, -- Foreign Key to nutritionOrder_EnteralFormula table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orderer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (oralDiet)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enteralFormula)
		REFERENCES nutritionOrder_EnteralFormula (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_OralDiet(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet_modifierExtension_extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet_type_codeableConcept
	schedule BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet_schedule_timing
	nutrient BOOLEAN, -- true if 1+ rows in NutritionOrder_Nutrient correspond to this entry
	texture BOOLEAN, -- true if 1+ rows in NutritionOrder_Texture correspond to this entry
	fluidConsistencyType BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet_fluidConsistencyType_codeableConcept
	instruction TEXT,
	_instruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (_instruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Nutrient(

	id TEXT PRIMARY KEY,
	nutritionOrder_OralDietId TEXT, -- Foreign Key to nutritionOrder_OralDiet table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Nutrient_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Nutrient_modifierExtension_extension
	modifier TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (nutritionOrder_OralDietId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modifier)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Texture(

	id TEXT PRIMARY KEY,
	nutritionOrder_OralDietId TEXT, -- Foreign Key to nutritionOrder_OralDiet table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Texture_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Texture_modifierExtension_extension
	modifier TEXT, -- Foreign Key to codeableConcept table
	foodType TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (nutritionOrder_OralDietId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modifier)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (foodType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Supplement(

	id TEXT PRIMARY KEY,
	nutritionOrderId TEXT, -- Foreign Key to nutritionOrder table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Supplement_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Supplement_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	productName TEXT,
	_productName TEXT, -- Foreign Key to element table
	schedule BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Supplement_schedule_timing
	quantity TEXT, -- Foreign Key to quantity table
	instruction TEXT,
	_instruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (nutritionOrderId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_EnteralFormula(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_EnteralFormula_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_EnteralFormula_modifierExtension_extension
	baseFormulaType TEXT, -- Foreign Key to codeableConcept table
	baseFormulaProductName TEXT,
	_baseFormulaProductName TEXT, -- Foreign Key to element table
	additiveType TEXT, -- Foreign Key to codeableConcept table
	additiveProductName TEXT,
	_additiveProductName TEXT, -- Foreign Key to element table
	caloricDensity TEXT, -- Foreign Key to quantity table
	routeofAdministration TEXT, -- Foreign Key to codeableConcept table
	administration BOOLEAN, -- true if 1+ rows in NutritionOrder_Administration correspond to this entry
	maxVolumeToDeliver TEXT, -- Foreign Key to quantity table
	administrationInstruction TEXT,
	_administrationInstruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (baseFormulaType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_baseFormulaProductName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_additiveProductName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (caloricDensity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (routeofAdministration)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxVolumeToDeliver)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_administrationInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Administration(

	id TEXT PRIMARY KEY,
	nutritionOrder_EnteralFormulaId TEXT, -- Foreign Key to nutritionOrder_EnteralFormula table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Administration_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Administration_modifierExtension_extension
	schedule TEXT, -- Foreign Key to timing table
	quantity TEXT, -- Foreign Key to quantity table
	rateQuantity TEXT, -- Foreign Key to quantity table
	rateRatio TEXT, -- Foreign Key to ratio table

	FOREIGN KEY (nutritionOrder_EnteralFormulaId)
		REFERENCES nutritionOrder_EnteralFormula (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (schedule)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observation(

	resourceType TEXT, -- resourceType: observation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_identifier_identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_basedOn_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_partOf_reference
	"status" TEXT CHECK( "status" IN ('registered','preliminary','final','amended','corrected','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_category_codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	focus BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_focus_reference
	encounter TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	effectiveTiming TEXT, -- Foreign Key to timing table
	effectiveInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_effectiveInstant TEXT, -- Foreign Key to element table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_performer_reference
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valuePeriod TEXT, -- Foreign Key to period table
	dataAbsentReason TEXT, -- Foreign Key to codeableConcept table
	interpretation BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_interpretation_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_note_annotation
	bodySite TEXT, -- Foreign Key to codeableConcept table
	"method" TEXT, -- Foreign Key to codeableConcept table
	specimen TEXT, -- Foreign Key to reference table
	device TEXT, -- Foreign Key to reference table
	referenceRange BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_referenceRange_observation_ReferenceRange
	hasMember BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_hasMember_reference
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_derivedFrom_reference
	component BOOLEAN, -- true if 1+ rows in Observation_Component correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataAbsentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (specimen)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observation_ReferenceRange(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_ReferenceRange_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_ReferenceRange_modifierExtension_extension
	low TEXT, -- Foreign Key to quantity table
	high TEXT, -- Foreign Key to quantity table
	"type" TEXT, -- Foreign Key to codeableConcept table
	appliesTo BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_ReferenceRange_appliesTo_codeableConcept
	age TEXT, -- Foreign Key to range table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (low)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (high)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (age)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observation_Component(

	id TEXT PRIMARY KEY,
	observationId TEXT, -- Foreign Key to observation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valuePeriod TEXT, -- Foreign Key to period table
	dataAbsentReason TEXT, -- Foreign Key to codeableConcept table
	interpretation BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component_interpretation_codeableConcept
	referenceRange BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component_referenceRange_observation_ReferenceRange

	FOREIGN KEY (observationId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataAbsentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observationDefinition(

	resourceType TEXT, -- resourceType: observationDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_modifierExtension_extension
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_category_codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_identifier_identifier
	permittedDataType BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: Quantity/CodeableConcept/string/boolean/integer/Range/Ratio/SampledData/time/dateTime/Period,
	_permittedDataType BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition__permittedDataType_element
	multipleResultsAllowed BOOLEAN,
	_multipleResultsAllowed TEXT, -- Foreign Key to element table
	"method" TEXT, -- Foreign Key to codeableConcept table
	preferredReportName TEXT,
	_preferredReportName TEXT, -- Foreign Key to element table
	quantitativeDetails TEXT, -- Foreign Key to observationDefinition_QuantitativeDetails table
	qualifiedInterval BOOLEAN, -- true if 1+ rows in ObservationDefinition_QualifiedInterval correspond to this entry
	validCodedValueSet TEXT, -- Foreign Key to reference table
	normalCodedValueSet TEXT, -- Foreign Key to reference table
	abnormalCodedValueSet TEXT, -- Foreign Key to reference table
	criticalCodedValueSet TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleResultsAllowed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferredReportName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantitativeDetails)
		REFERENCES observationDefinition_QuantitativeDetails (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (normalCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abnormalCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criticalCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observationDefinition_QuantitativeDetails(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QuantitativeDetails_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QuantitativeDetails_modifierExtension_extension
	customaryUnit TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	conversionFactor REAL,
	_conversionFactor TEXT, -- Foreign Key to element table
	decimalPrecision INTEGER,
	_decimalPrecision TEXT, -- Foreign Key to element table

	FOREIGN KEY (customaryUnit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conversionFactor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_decimalPrecision)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observationDefinition_QualifiedInterval(

	id TEXT PRIMARY KEY,
	observationDefinitionId TEXT, -- Foreign Key to observationDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QualifiedInterval_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QualifiedInterval_modifierExtension_extension
	category TEXT CHECK( category IN ('reference','critical','absolute') ),
	_category TEXT, -- Foreign Key to element table
	"range" TEXT, -- Foreign Key to range table
	context TEXT, -- Foreign Key to codeableConcept table
	appliesTo BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QualifiedInterval_appliesTo_codeableConcept
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	age TEXT, -- Foreign Key to range table
	gestationalAge TEXT, -- Foreign Key to range table
	"condition" TEXT,
	_condition TEXT, -- Foreign Key to element table

	FOREIGN KEY (observationDefinitionId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_category)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("range")
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (age)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (gestationalAge)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_condition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition(

	resourceType TEXT, -- resourceType: operationDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	kind TEXT CHECK( kind IN ('operation','query') ),
	_kind TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	affectsState BOOLEAN,
	_affectsState TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	base TEXT,
	"resource" BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_resource_code
	_resource BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__resource_element
	"system" BOOLEAN,
	_system TEXT, -- Foreign Key to element table
	"type" BOOLEAN,
	_type TEXT, -- Foreign Key to element table
	"instance" BOOLEAN,
	_instance TEXT, -- Foreign Key to element table
	inputProfile TEXT,
	outputProfile TEXT,
	"parameter" BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_parameter_operationDefinition_Parameter
	overload BOOLEAN, -- true if 1+ rows in OperationDefinition_Overload correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_affectsState)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instance)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_Parameter(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"use" TEXT CHECK( "use" IN ('in','out') ),
	_use TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	targetProfile BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter_targetProfile_canonical
	searchType TEXT CHECK( searchType IN ('number','date','string','token','reference','composite','quantity','uri','special') ),
	_searchType TEXT, -- Foreign Key to element table
	"binding" TEXT, -- Foreign Key to operationDefinition_Binding table
	referencedFrom BOOLEAN, -- true if 1+ rows in OperationDefinition_ReferencedFrom correspond to this entry
	part BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter_part_operationDefinition_Parameter

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_searchType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("binding")
		REFERENCES operationDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_Binding(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Binding_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Binding_modifierExtension_extension
	strength TEXT CHECK( strength IN ('required','extensible','preferred','example') ),
	_strength TEXT, -- Foreign Key to element table
	valueSet TEXT,

	FOREIGN KEY (_strength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_ReferencedFrom(

	id TEXT PRIMARY KEY,
	operationDefinition_ParameterId TEXT, -- Foreign Key to operationDefinition_Parameter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_ReferencedFrom_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_ReferencedFrom_modifierExtension_extension
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	sourceId TEXT,
	_sourceId TEXT, -- Foreign Key to element table

	FOREIGN KEY (operationDefinition_ParameterId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_Overload(

	id TEXT PRIMARY KEY,
	operationDefinitionId TEXT, -- Foreign Key to operationDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload_modifierExtension_extension
	parameterName BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload_parameterName_string
	_parameterName BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload__parameterName_element
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (operationDefinitionId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationOutcome(

	resourceType TEXT, -- resourceType: operationOutcome
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_modifierExtension_extension
	issue BOOLEAN, -- true if 1+ rows in OperationOutcome_Issue correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationOutcome_Issue(

	id TEXT PRIMARY KEY,
	operationOutcomeId TEXT, -- Foreign Key to operationOutcome table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue_modifierExtension_extension
	severity TEXT CHECK( severity IN ('fatal','error','warning','information') ),
	_severity TEXT, -- Foreign Key to element table
	"code" TEXT CHECK( "code" IN ('invalid','structure','required','value','invariant','security','login','unknown','expired','forbidden','suppressed','processing','not-supported','duplicate','multiple-matches','not-found','deleted','too-long','code-invalid','extension','too-costly','business-rule','conflict','transient','lock-error','no-store','exception','timeout','incomplete','throttled','informational') ),
	_code TEXT, -- Foreign Key to element table
	details TEXT, -- Foreign Key to codeableConcept table
	diagnostics TEXT,
	_diagnostics TEXT, -- Foreign Key to element table
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue_location_string
	_location BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__location_element
	expression BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue_expression_string
	_expression BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__expression_element

	FOREIGN KEY (operationOutcomeId)
		REFERENCES operationOutcome (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (details)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_diagnostics)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE organization(

	resourceType TEXT, -- resourceType: organization
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_type_codeableConcept
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_alias_string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__alias_element
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_telecom_contactPoint
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_address_address
	partOf TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ rows in Organization_Contact correspond to this entry
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_endpoint_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE organization_Contact(

	id TEXT PRIMARY KEY,
	organizationId TEXT, -- Foreign Key to organization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_Contact_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_Contact_modifierExtension_extension
	purpose TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT, -- Foreign Key to humanName table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_Contact_telecom_contactPoint
	"address" TEXT, -- Foreign Key to address table

	FOREIGN KEY (organizationId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (purpose)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE organizationAffiliation(

	resourceType TEXT, -- resourceType: organizationAffiliation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	organization TEXT, -- Foreign Key to reference table
	participatingOrganization TEXT, -- Foreign Key to reference table
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_network_reference
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_code_codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_specialty_codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_location_reference
	healthcareService BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_healthcareService_reference
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_telecom_contactPoint
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation_endpoint_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participatingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE parameters(

	resourceType TEXT, -- resourceType: parameters
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters_parameter_parameters_Parameter

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE parameters_Parameter(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters_Parameter_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table
	"resource" TEXT, -- Foreign Key to resourceList table
	part BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters_Parameter_part_parameters_Parameter

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient(

	resourceType TEXT, -- resourceType: patient
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_name_humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_telecom_contactPoint
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	deceasedBoolean BOOLEAN, -- pattern: ^true|false$
	_deceasedBoolean TEXT, -- Foreign Key to element table
	deceasedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_deceasedDateTime TEXT, -- Foreign Key to element table
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_address_address
	maritalStatus TEXT, -- Foreign Key to codeableConcept table
	multipleBirthBoolean BOOLEAN, -- pattern: ^true|false$
	_multipleBirthBoolean TEXT, -- Foreign Key to element table
	multipleBirthInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_multipleBirthInteger TEXT, -- Foreign Key to element table
	photo BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_photo_attachment
	contact BOOLEAN, -- true if 1+ rows in Patient_Contact correspond to this entry
	communication BOOLEAN, -- true if 1+ rows in Patient_Communication correspond to this entry
	generalPractitioner BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_generalPractitioner_reference
	managingOrganization TEXT, -- Foreign Key to reference table
	link BOOLEAN, -- true if 1+ rows in Patient_Link correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maritalStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleBirthBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleBirthInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient_Contact(

	id TEXT PRIMARY KEY,
	patientId TEXT, -- Foreign Key to patient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact_modifierExtension_extension
	relationship BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact_relationship_codeableConcept
	"name" TEXT, -- Foreign Key to humanName table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact_telecom_contactPoint
	"address" TEXT, -- Foreign Key to address table
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	organization TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (patientId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient_Communication(

	id TEXT PRIMARY KEY,
	patientId TEXT, -- Foreign Key to patient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Communication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Communication_modifierExtension_extension
	"language" TEXT, -- Foreign Key to codeableConcept table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table

	FOREIGN KEY (patientId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient_Link(

	id TEXT PRIMARY KEY,
	patientId TEXT, -- Foreign Key to patient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Link_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Link_modifierExtension_extension
	other TEXT, -- Foreign Key to reference table
	"type" TEXT CHECK( "type" IN ('replaced-by','replaces','refer','seealso') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (patientId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (other)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentNotice(

	resourceType TEXT, -- resourceType: paymentNotice
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	request TEXT, -- Foreign Key to reference table
	response TEXT, -- Foreign Key to reference table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	"provider" TEXT, -- Foreign Key to reference table
	payment TEXT, -- Foreign Key to reference table
	paymentDate DATE,
	_paymentDate TEXT, -- Foreign Key to element table
	payee TEXT, -- Foreign Key to reference table
	recipient TEXT, -- Foreign Key to reference table
	amount TEXT, -- Foreign Key to money table
	paymentStatus TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payment)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recipient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentReconciliation(

	resourceType TEXT, -- resourceType: paymentReconciliation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	paymentIssuer TEXT, -- Foreign Key to reference table
	request TEXT, -- Foreign Key to reference table
	requestor TEXT, -- Foreign Key to reference table
	outcome TEXT CHECK( outcome IN ('queued','complete','error','partial') ),
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	paymentDate DATE,
	_paymentDate TEXT, -- Foreign Key to element table
	paymentAmount TEXT, -- Foreign Key to money table
	paymentIdentifier TEXT, -- Foreign Key to identifier table
	detail BOOLEAN, -- true if 1+ rows in PaymentReconciliation_Detail correspond to this entry
	formCode TEXT, -- Foreign Key to codeableConcept table
	processNote BOOLEAN, -- true if 1+ rows in PaymentReconciliation_ProcessNote correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentIssuer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentAmount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (formCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentReconciliation_Detail(

	id TEXT PRIMARY KEY,
	paymentReconciliationId TEXT, -- Foreign Key to paymentReconciliation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_Detail_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_Detail_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	predecessor TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	request TEXT, -- Foreign Key to reference table
	submitter TEXT, -- Foreign Key to reference table
	response TEXT, -- Foreign Key to reference table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	responsible TEXT, -- Foreign Key to reference table
	payee TEXT, -- Foreign Key to reference table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (paymentReconciliationId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (predecessor)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (submitter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responsible)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentReconciliation_ProcessNote(

	id TEXT PRIMARY KEY,
	paymentReconciliationId TEXT, -- Foreign Key to paymentReconciliation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_ProcessNote_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_ProcessNote_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('display','print','printoper') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (paymentReconciliationId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE person(

	resourceType TEXT, -- resourceType: person
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: person_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: person_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: person_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: person_identifier_identifier
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: person_name_humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: person_telecom_contactPoint
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: person_address_address
	photo TEXT, -- Foreign Key to attachment table
	managingOrganization TEXT, -- Foreign Key to reference table
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	link BOOLEAN, -- true if 1+ rows in Person_Link correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (photo)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE person_Link(

	id TEXT PRIMARY KEY,
	personId TEXT, -- Foreign Key to person table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: person_Link_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: person_Link_modifierExtension_extension
	"target" TEXT, -- Foreign Key to reference table
	assurance TEXT CHECK( assurance IN ('level1','level2','level3','level4') ),
	_assurance TEXT, -- Foreign Key to element table

	FOREIGN KEY (personId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_assurance)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition(

	resourceType TEXT, -- resourceType: planDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_relatedArtifact_relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_library_canonical
	goal BOOLEAN, -- true if 1+ rows in PlanDefinition_Goal correspond to this entry
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_action_planDefinition_Action

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Goal(

	id TEXT PRIMARY KEY,
	planDefinitionId TEXT, -- Foreign Key to planDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT, -- Foreign Key to codeableConcept table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	"start" TEXT, -- Foreign Key to codeableConcept table
	addresses BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal_addresses_codeableConcept
	documentation BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal_documentation_relatedArtifact
	"target" BOOLEAN, -- true if 1+ rows in PlanDefinition_Target correspond to this entry

	FOREIGN KEY (planDefinitionId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("description")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("start")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Target(

	id TEXT PRIMARY KEY,
	planDefinition_GoalId TEXT, -- Foreign Key to planDefinition_Goal table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Target_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Target_modifierExtension_extension
	measure TEXT, -- Foreign Key to codeableConcept table
	detailQuantity TEXT, -- Foreign Key to quantity table
	detailRange TEXT, -- Foreign Key to range table
	detailCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	due TEXT, -- Foreign Key to duration table

	FOREIGN KEY (planDefinition_GoalId)
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (due)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Action(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_modifierExtension_extension
	prefix TEXT,
	_prefix TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	textEquivalent TEXT,
	_textEquivalent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_code_codeableConcept
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_reason_codeableConcept
	documentation BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_documentation_relatedArtifact
	goalId BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_goalId_id
	_goalId BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__goalId_element
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"trigger" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_trigger_triggerDefinition
	"condition" BOOLEAN, -- true if 1+ rows in PlanDefinition_Condition correspond to this entry
	"input" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_input_dataRequirement
	"output" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_output_dataRequirement
	relatedAction BOOLEAN, -- true if 1+ rows in PlanDefinition_RelatedAction correspond to this entry
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	timingAge TEXT, -- Foreign Key to age table
	timingPeriod TEXT, -- Foreign Key to period table
	timingDuration TEXT, -- Foreign Key to duration table
	timingRange TEXT, -- Foreign Key to range table
	timingTiming TEXT, -- Foreign Key to timing table
	participant BOOLEAN, -- true if 1+ rows in PlanDefinition_Participant correspond to this entry
	"type" TEXT, -- Foreign Key to codeableConcept table
	groupingBehavior TEXT CHECK( groupingBehavior IN ('visual-group','logical-group','sentence-group') ),
	_groupingBehavior TEXT, -- Foreign Key to element table
	selectionBehavior TEXT CHECK( selectionBehavior IN ('any','all','all-or-none','exactly-one','at-most-one','one-or-more') ),
	_selectionBehavior TEXT, -- Foreign Key to element table
	requiredBehavior TEXT CHECK( requiredBehavior IN ('must','could','must-unless-documented') ),
	_requiredBehavior TEXT, -- Foreign Key to element table
	precheckBehavior TEXT CHECK( precheckBehavior IN ('yes','no') ),
	_precheckBehavior TEXT, -- Foreign Key to element table
	cardinalityBehavior TEXT CHECK( cardinalityBehavior IN ('single','multiple') ),
	_cardinalityBehavior TEXT, -- Foreign Key to element table
	definitionCanonical TEXT, -- pattern: ^\S*$
	_definitionCanonical TEXT, -- Foreign Key to element table
	definitionUri TEXT, -- pattern: ^\S*$
	_definitionUri TEXT, -- Foreign Key to element table
	transform TEXT,
	dynamicValue BOOLEAN, -- true if 1+ rows in PlanDefinition_DynamicValue correspond to this entry
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action_action_planDefinition_Action

	FOREIGN KEY (_prefix)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_textEquivalent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupingBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_selectionBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requiredBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precheckBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cardinalityBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Condition(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Condition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Condition_modifierExtension_extension
	kind TEXT CHECK( kind IN ('applicability','start','stop') ),
	_kind TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_RelatedAction(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_RelatedAction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_RelatedAction_modifierExtension_extension
	actionId TEXT, -- Foreign Key to id table
	_actionId TEXT, -- Foreign Key to element table
	relationship TEXT CHECK( relationship IN ('before-start','before','before-end','concurrent-with-start','concurrent','concurrent-with-end','after-start','after','after-end') ),
	_relationship TEXT, -- Foreign Key to element table
	offsetDuration TEXT, -- Foreign Key to duration table
	offsetRange TEXT, -- Foreign Key to range table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actionId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relationship)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Participant(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Participant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Participant_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('patient','practitioner','related-person','device') ),
	_type TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_DynamicValue(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_DynamicValue_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_DynamicValue_modifierExtension_extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitioner(

	resourceType TEXT, -- resourceType: practitioner
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_name_humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_telecom_contactPoint
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_address_address
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	photo BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_photo_attachment
	qualification BOOLEAN, -- true if 1+ rows in Practitioner_Qualification correspond to this entry
	communication BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_communication_codeableConcept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitioner_Qualification(

	id TEXT PRIMARY KEY,
	practitionerId TEXT, -- Foreign Key to practitioner table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_Qualification_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_Qualification_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_Qualification_identifier_identifier
	"code" TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table
	issuer TEXT, -- Foreign Key to reference table

	FOREIGN KEY (practitionerId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (issuer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitionerRole(

	resourceType TEXT, -- resourceType: practitionerRole
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	practitioner TEXT, -- Foreign Key to reference table
	organization TEXT, -- Foreign Key to reference table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_code_codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_specialty_codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_location_reference
	healthcareService BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_healthcareService_reference
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_telecom_contactPoint
	availableTime BOOLEAN, -- true if 1+ rows in PractitionerRole_AvailableTime correspond to this entry
	notAvailable BOOLEAN, -- true if 1+ rows in PractitionerRole_NotAvailable correspond to this entry
	availabilityExceptions TEXT,
	_availabilityExceptions TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_endpoint_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (practitioner)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availabilityExceptions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitionerRole_AvailableTime(

	id TEXT PRIMARY KEY,
	practitionerRoleId TEXT, -- Foreign Key to practitionerRole table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime_modifierExtension_extension
	daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime_daysOfWeek_code
	_daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime__daysOfWeek_element
	allDay BOOLEAN,
	_allDay TEXT, -- Foreign Key to element table
	availableStartTime TIME,
	_availableStartTime TEXT, -- Foreign Key to element table
	availableEndTime TIME,
	_availableEndTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (practitionerRoleId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allDay)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableStartTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableEndTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitionerRole_NotAvailable(

	id TEXT PRIMARY KEY,
	practitionerRoleId TEXT, -- Foreign Key to practitionerRole table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_NotAvailable_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_NotAvailable_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	during TEXT, -- Foreign Key to period table

	FOREIGN KEY (practitionerRoleId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (during)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "procedure"(

	resourceType TEXT, -- resourceType: procedure
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__instantiatesUri_element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_basedOn_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_partOf_reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	performedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_performedDateTime TEXT, -- Foreign Key to element table
	performedPeriod TEXT, -- Foreign Key to period table
	performedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_performedString TEXT, -- Foreign Key to element table
	performedAge TEXT, -- Foreign Key to age table
	performedRange TEXT, -- Foreign Key to range table
	recorder TEXT, -- Foreign Key to reference table
	asserter TEXT, -- Foreign Key to reference table
	performer BOOLEAN, -- true if 1+ rows in Procedure_Performer correspond to this entry
	"location" TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_reasonReference_reference
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_bodySite_codeableConcept
	outcome TEXT, -- Foreign Key to codeableConcept table
	report BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_report_reference
	complication BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_complication_codeableConcept
	complicationDetail BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_complicationDetail_reference
	followUp BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_followUp_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_note_annotation
	focalDevice BOOLEAN, -- true if 1+ rows in Procedure_FocalDevice correspond to this entry
	usedReference BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_usedReference_reference
	usedCode BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_usedCode_codeableConcept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_performedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_performedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performedAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performedRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asserter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE procedure_Performer(

	id TEXT PRIMARY KEY,
	procedureId TEXT, -- Foreign Key to "procedure" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_Performer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_Performer_modifierExtension_extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY (procedureId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE procedure_FocalDevice(

	id TEXT PRIMARY KEY,
	procedureId TEXT, -- Foreign Key to "procedure" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_FocalDevice_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_FocalDevice_modifierExtension_extension
	"action" TEXT, -- Foreign Key to codeableConcept table
	manipulated TEXT, -- Foreign Key to reference table

	FOREIGN KEY (procedureId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("action")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manipulated)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE provenance(

	resourceType TEXT, -- resourceType: provenance
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_modifierExtension_extension
	"target" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_target_reference
	occurredPeriod TEXT, -- Foreign Key to period table
	occurredDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurredDateTime TEXT, -- Foreign Key to element table
	recorded DATETIME,
	_recorded TEXT, -- Foreign Key to element table
	"policy" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_policy_uri
	_policy BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__policy_element
	"location" TEXT, -- Foreign Key to reference table
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_reason_codeableConcept
	activity TEXT, -- Foreign Key to codeableConcept table
	agent BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_agent_provenance_Agent
	entity BOOLEAN, -- true if 1+ rows in Provenance_Entity correspond to this entry
	"signature" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_signature_signature

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurredPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurredDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recorded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (activity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE provenance_Agent(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Agent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Agent_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"role" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Agent_role_codeableConcept
	who TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE provenance_Entity(

	id TEXT PRIMARY KEY,
	provenanceId TEXT, -- Foreign Key to provenance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Entity_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Entity_modifierExtension_extension
	"role" TEXT CHECK( "role" IN ('derivation','revision','quotation','source','removal') ),
	_role TEXT, -- Foreign Key to element table
	what TEXT, -- Foreign Key to reference table
	agent BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Entity_agent_provenance_Agent

	FOREIGN KEY (provenanceId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_role)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (what)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire(

	resourceType TEXT, -- resourceType: questionnaire
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_derivedFrom_canonical
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectType BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_subjectType_code
	_subjectType BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__subjectType_element
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_code_coding
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_item_questionnaire_Item

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_Item(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item_modifierExtension_extension
	linkId TEXT,
	_linkId TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item_code_coding
	prefix TEXT,
	_prefix TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('group','display','boolean','decimal','integer','date','dateTime','time','string','text','url','choice','open-choice','attachment','reference','quantity') ),
	_type TEXT, -- Foreign Key to element table
	enableWhen BOOLEAN, -- true if 1+ rows in Questionnaire_EnableWhen correspond to this entry
	enableBehavior TEXT CHECK( enableBehavior IN ('all','any') ),
	_enableBehavior TEXT, -- Foreign Key to element table
	"required" BOOLEAN,
	_required TEXT, -- Foreign Key to element table
	repeats BOOLEAN,
	_repeats TEXT, -- Foreign Key to element table
	readOnly BOOLEAN,
	_readOnly TEXT, -- Foreign Key to element table
	"maxLength" INTEGER,
	_maxLength TEXT, -- Foreign Key to element table
	answerValueSet TEXT,
	answerOption BOOLEAN, -- true if 1+ rows in Questionnaire_AnswerOption correspond to this entry
	initial BOOLEAN, -- true if 1+ rows in Questionnaire_Initial correspond to this entry
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item_item_questionnaire_Item

	FOREIGN KEY (_linkId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_prefix)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_enableBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_required)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_repeats)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readOnly)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxLength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_EnableWhen(

	id TEXT PRIMARY KEY,
	questionnaire_ItemId TEXT, -- Foreign Key to questionnaire_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_EnableWhen_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_EnableWhen_modifierExtension_extension
	question TEXT,
	_question TEXT, -- Foreign Key to element table
	operator TEXT CHECK( operator IN ('exists','=','!=','>','<','>=','<=') ),
	_operator TEXT, -- Foreign Key to element table
	answerBoolean BOOLEAN, -- pattern: ^true|false$
	_answerBoolean TEXT, -- Foreign Key to element table
	answerDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_answerDecimal TEXT, -- Foreign Key to element table
	answerInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_answerInteger TEXT, -- Foreign Key to element table
	answerDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_answerDate TEXT, -- Foreign Key to element table
	answerDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_answerDateTime TEXT, -- Foreign Key to element table
	answerTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_answerTime TEXT, -- Foreign Key to element table
	answerString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_answerString TEXT, -- Foreign Key to element table
	answerCoding TEXT, -- Foreign Key to coding table
	answerQuantity TEXT, -- Foreign Key to quantity table
	answerReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_question)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_operator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (answerCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (answerQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (answerReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_AnswerOption(

	id TEXT PRIMARY KEY,
	questionnaire_ItemId TEXT, -- Foreign Key to questionnaire_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_AnswerOption_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_AnswerOption_modifierExtension_extension
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueCoding TEXT, -- Foreign Key to coding table
	valueReference TEXT, -- Foreign Key to reference table
	initialSelected BOOLEAN,
	_initialSelected TEXT, -- Foreign Key to element table

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_initialSelected)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_Initial(

	id TEXT PRIMARY KEY,
	questionnaire_ItemId TEXT, -- Foreign Key to questionnaire_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Initial_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Initial_modifierExtension_extension
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCoding TEXT, -- Foreign Key to coding table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaireResponse(

	resourceType TEXT, -- resourceType: questionnaireResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_basedOn_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_partOf_reference
	questionnaire TEXT,
	"status" TEXT CHECK( "status" IN ('in-progress','completed','amended','entered-in-error','stopped') ),
	_status TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	authored DATETIME,
	_authored TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	"source" TEXT, -- Foreign Key to reference table
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_item_questionnaireResponse_Item

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authored)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaireResponse_Item(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Item_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Item_modifierExtension_extension
	linkId TEXT,
	_linkId TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	answer BOOLEAN, -- true if 1+ rows in QuestionnaireResponse_Answer correspond to this entry
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Item_item_questionnaireResponse_Item

	FOREIGN KEY (_linkId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaireResponse_Answer(

	id TEXT PRIMARY KEY,
	questionnaireResponse_ItemId TEXT, -- Foreign Key to questionnaireResponse_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Answer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Answer_modifierExtension_extension
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCoding TEXT, -- Foreign Key to coding table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueReference TEXT, -- Foreign Key to reference table
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Answer_item_questionnaireResponse_Item

	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE relatedPerson(

	resourceType TEXT, -- resourceType: relatedPerson
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	relationship BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_relationship_codeableConcept
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_name_humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_telecom_contactPoint
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_address_address
	photo BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_photo_attachment
	"period" TEXT, -- Foreign Key to period table
	communication BOOLEAN, -- true if 1+ rows in RelatedPerson_Communication correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE relatedPerson_Communication(

	id TEXT PRIMARY KEY,
	relatedPersonId TEXT, -- Foreign Key to relatedPerson table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_Communication_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_Communication_modifierExtension_extension
	"language" TEXT, -- Foreign Key to codeableConcept table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table

	FOREIGN KEY (relatedPersonId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup(

	resourceType TEXT, -- resourceType: requestGroup
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_instantiatesCanonical_canonical
	_instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__instantiatesCanonical_element
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__instantiatesUri_element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_basedOn_reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_replaces_reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_reasonReference_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_note_annotation
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_action_requestGroup_Action

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup_Action(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action_modifierExtension_extension
	prefix TEXT,
	_prefix TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	textEquivalent TEXT,
	_textEquivalent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action_code_codeableConcept
	documentation BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action_documentation_relatedArtifact
	"condition" BOOLEAN, -- true if 1+ rows in RequestGroup_Condition correspond to this entry
	relatedAction BOOLEAN, -- true if 1+ rows in RequestGroup_RelatedAction correspond to this entry
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	timingAge TEXT, -- Foreign Key to age table
	timingPeriod TEXT, -- Foreign Key to period table
	timingDuration TEXT, -- Foreign Key to duration table
	timingRange TEXT, -- Foreign Key to range table
	timingTiming TEXT, -- Foreign Key to timing table
	participant BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action_participant_reference
	"type" TEXT, -- Foreign Key to codeableConcept table
	groupingBehavior TEXT,
	_groupingBehavior TEXT, -- Foreign Key to element table
	selectionBehavior TEXT,
	_selectionBehavior TEXT, -- Foreign Key to element table
	requiredBehavior TEXT,
	_requiredBehavior TEXT, -- Foreign Key to element table
	precheckBehavior TEXT,
	_precheckBehavior TEXT, -- Foreign Key to element table
	cardinalityBehavior TEXT,
	_cardinalityBehavior TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to reference table
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action_action_requestGroup_Action

	FOREIGN KEY (_prefix)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_textEquivalent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupingBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_selectionBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requiredBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precheckBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cardinalityBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup_Condition(

	id TEXT PRIMARY KEY,
	requestGroup_ActionId TEXT, -- Foreign Key to requestGroup_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Condition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Condition_modifierExtension_extension
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup_RelatedAction(

	id TEXT PRIMARY KEY,
	requestGroup_ActionId TEXT, -- Foreign Key to requestGroup_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_RelatedAction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_RelatedAction_modifierExtension_extension
	actionId TEXT, -- Foreign Key to id table
	_actionId TEXT, -- Foreign Key to element table
	relationship TEXT,
	_relationship TEXT, -- Foreign Key to element table
	offsetDuration TEXT, -- Foreign Key to duration table
	offsetRange TEXT, -- Foreign Key to range table

	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actionId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relationship)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchDefinition(

	resourceType TEXT, -- resourceType: researchDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_comment_string
	_comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__comment_element
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_relatedArtifact_relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition_library_canonical
	"population" TEXT, -- Foreign Key to reference table
	exposure TEXT, -- Foreign Key to reference table
	exposureAlternative TEXT, -- Foreign Key to reference table
	outcome TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("population")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposure)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureAlternative)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchElementDefinition(

	resourceType TEXT, -- resourceType: researchElementDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_comment_string
	_comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__comment_element
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_relatedArtifact_relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_library_canonical
	"type" TEXT CHECK( "type" IN ('population','exposure','outcome') ),
	_type TEXT, -- Foreign Key to element table
	variableType TEXT CHECK( variableType IN ('dichotomous','continuous','descriptive') ),
	_variableType TEXT, -- Foreign Key to element table
	characteristic BOOLEAN, -- true if 1+ rows in ResearchElementDefinition_Characteristic correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variableType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchElementDefinition_Characteristic(

	id TEXT PRIMARY KEY,
	researchElementDefinitionId TEXT, -- Foreign Key to researchElementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_Characteristic_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_Characteristic_modifierExtension_extension
	definitionCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	definitionCanonical TEXT, -- pattern: ^\S*$
	_definitionCanonical TEXT, -- Foreign Key to element table
	definitionExpression TEXT, -- Foreign Key to expression table
	definitionDataRequirement TEXT, -- Foreign Key to dataRequirement table
	usageContext BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_Characteristic_usageContext_usageContext
	exclude BOOLEAN,
	_exclude TEXT, -- Foreign Key to element table
	unitOfMeasure TEXT, -- Foreign Key to codeableConcept table
	studyEffectiveDescription TEXT,
	_studyEffectiveDescription TEXT, -- Foreign Key to element table
	studyEffectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_studyEffectiveDateTime TEXT, -- Foreign Key to element table
	studyEffectivePeriod TEXT, -- Foreign Key to period table
	studyEffectiveDuration TEXT, -- Foreign Key to duration table
	studyEffectiveTiming TEXT, -- Foreign Key to timing table
	studyEffectiveTimeFromStart TEXT, -- Foreign Key to duration table
	studyEffectiveGroupMeasure TEXT CHECK( studyEffectiveGroupMeasure IN ('mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median') ),
	_studyEffectiveGroupMeasure TEXT, -- Foreign Key to element table
	participantEffectiveDescription TEXT,
	_participantEffectiveDescription TEXT, -- Foreign Key to element table
	participantEffectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_participantEffectiveDateTime TEXT, -- Foreign Key to element table
	participantEffectivePeriod TEXT, -- Foreign Key to period table
	participantEffectiveDuration TEXT, -- Foreign Key to duration table
	participantEffectiveTiming TEXT, -- Foreign Key to timing table
	participantEffectiveTimeFromStart TEXT, -- Foreign Key to duration table
	participantEffectiveGroupMeasure TEXT CHECK( participantEffectiveGroupMeasure IN ('mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median') ),
	_participantEffectiveGroupMeasure TEXT, -- Foreign Key to element table

	FOREIGN KEY (researchElementDefinitionId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exclude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfMeasure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_studyEffectiveDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_studyEffectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectiveDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectiveTimeFromStart)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_studyEffectiveGroupMeasure)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveTimeFromStart)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveGroupMeasure)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchStudy(

	resourceType TEXT, -- resourceType: researchStudy
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_identifier_identifier
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	protocol BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_protocol_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_partOf_reference
	"status" TEXT CHECK( "status" IN ('active','administratively-completed','approved','closed-to-accrual','closed-to-accrual-and-intervention','completed','disapproved','in-review','temporarily-closed-to-accrual','temporarily-closed-to-accrual-and-intervention','withdrawn') ),
	_status TEXT, -- Foreign Key to element table
	primaryPurposeType TEXT, -- Foreign Key to codeableConcept table
	phase TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_category_codeableConcept
	focus BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_focus_codeableConcept
	"condition" BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_condition_codeableConcept
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_contact_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_relatedArtifact_relatedArtifact
	keyword BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_keyword_codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_location_codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	enrollment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_enrollment_reference
	"period" TEXT, -- Foreign Key to period table
	sponsor TEXT, -- Foreign Key to reference table
	principalInvestigator TEXT, -- Foreign Key to reference table
	"site" BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_site_reference
	reasonStopped TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_note_annotation
	arm BOOLEAN, -- true if 1+ rows in ResearchStudy_Arm correspond to this entry
	objective BOOLEAN, -- true if 1+ rows in ResearchStudy_Objective correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (primaryPurposeType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (phase)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sponsor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (principalInvestigator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reasonStopped)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchStudy_Arm(

	id TEXT PRIMARY KEY,
	researchStudyId TEXT, -- Foreign Key to researchStudy table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Arm_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Arm_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (researchStudyId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchStudy_Objective(

	id TEXT PRIMARY KEY,
	researchStudyId TEXT, -- Foreign Key to researchStudy table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Objective_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Objective_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (researchStudyId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchSubject(

	resourceType TEXT, -- resourceType: researchSubject
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject_identifier_identifier
	"status" TEXT CHECK( "status" IN ('candidate','eligible','follow-up','ineligible','not-registered','off-study','on-study','on-study-intervention','on-study-observation','pending-on-study','potential-candidate','screening','withdrawn') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	study TEXT, -- Foreign Key to reference table
	individual TEXT, -- Foreign Key to reference table
	assignedArm TEXT,
	_assignedArm TEXT, -- Foreign Key to element table
	actualArm TEXT,
	_actualArm TEXT, -- Foreign Key to element table
	consent TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (study)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (individual)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_assignedArm)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actualArm)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (consent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskAssessment(

	resourceType TEXT, -- resourceType: riskAssessment
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_identifier_identifier
	basedOn TEXT, -- Foreign Key to reference table
	parent TEXT, -- Foreign Key to reference table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"method" TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	"condition" TEXT, -- Foreign Key to reference table
	performer TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_reasonReference_reference
	basis BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_basis_reference
	prediction BOOLEAN, -- true if 1+ rows in RiskAssessment_Prediction correspond to this entry
	mitigation TEXT,
	_mitigation TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (basedOn)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mitigation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskAssessment_Prediction(

	id TEXT PRIMARY KEY,
	riskAssessmentId TEXT, -- Foreign Key to riskAssessment table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_Prediction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_Prediction_modifierExtension_extension
	outcome TEXT, -- Foreign Key to codeableConcept table
	probabilityDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_probabilityDecimal TEXT, -- Foreign Key to element table
	probabilityRange TEXT, -- Foreign Key to range table
	qualitativeRisk TEXT, -- Foreign Key to codeableConcept table
	relativeRisk REAL,
	_relativeRisk TEXT, -- Foreign Key to element table
	whenPeriod TEXT, -- Foreign Key to period table
	whenRange TEXT, -- Foreign Key to range table
	rationale TEXT,
	_rationale TEXT, -- Foreign Key to element table

	FOREIGN KEY (riskAssessmentId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_probabilityDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (probabilityRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (qualitativeRisk)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relativeRisk)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (whenPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (whenRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rationale)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis(

	resourceType TEXT, -- resourceType: riskEvidenceSynthesis
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_note_annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_jurisdiction_codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_topic_codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_author_contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_editor_contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_reviewer_contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_endorser_contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_relatedArtifact_relatedArtifact
	synthesisType TEXT, -- Foreign Key to codeableConcept table
	studyType TEXT, -- Foreign Key to codeableConcept table
	"population" TEXT, -- Foreign Key to reference table
	exposure TEXT, -- Foreign Key to reference table
	outcome TEXT, -- Foreign Key to reference table
	sampleSize TEXT, -- Foreign Key to riskEvidenceSynthesis_SampleSize table
	riskEstimate TEXT, -- Foreign Key to riskEvidenceSynthesis_RiskEstimate table
	certainty BOOLEAN, -- true if 1+ rows in RiskEvidenceSynthesis_Certainty correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (synthesisType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("population")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposure)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sampleSize)
		REFERENCES riskEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (riskEstimate)
		REFERENCES riskEvidenceSynthesis_RiskEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_SampleSize(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_SampleSize_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_SampleSize_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	numberOfStudies INTEGER,
	_numberOfStudies TEXT, -- Foreign Key to element table
	numberOfParticipants INTEGER,
	_numberOfParticipants TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfStudies)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfParticipants)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_RiskEstimate(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_RiskEstimate_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_RiskEstimate_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	unitOfMeasure TEXT, -- Foreign Key to codeableConcept table
	denominatorCount INTEGER,
	_denominatorCount TEXT, -- Foreign Key to element table
	numeratorCount INTEGER,
	_numeratorCount TEXT, -- Foreign Key to element table
	precisionEstimate BOOLEAN, -- true if 1+ rows in RiskEvidenceSynthesis_PrecisionEstimate correspond to this entry

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfMeasure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_denominatorCount)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numeratorCount)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_PrecisionEstimate(

	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_RiskEstimateId TEXT, -- Foreign Key to riskEvidenceSynthesis_RiskEstimate table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_PrecisionEstimate_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_PrecisionEstimate_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"level" REAL,
	_level TEXT, -- Foreign Key to element table
	"from" REAL,
	_from TEXT, -- Foreign Key to element table
	"to" REAL,
	_to TEXT, -- Foreign Key to element table

	FOREIGN KEY (riskEvidenceSynthesis_RiskEstimateId)
		REFERENCES riskEvidenceSynthesis_RiskEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_level)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_from)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_to)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_Certainty(

	id TEXT PRIMARY KEY,
	riskEvidenceSynthesisId TEXT, -- Foreign Key to riskEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty_modifierExtension_extension
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty_rating_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty_note_annotation
	certaintySubcomponent BOOLEAN, -- true if 1+ rows in RiskEvidenceSynthesis_CertaintySubcomponent correspond to this entry

	FOREIGN KEY (riskEvidenceSynthesisId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_CertaintySubcomponent(

	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_CertaintyId TEXT, -- Foreign Key to riskEvidenceSynthesis_Certainty table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent_rating_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent_note_annotation

	FOREIGN KEY (riskEvidenceSynthesis_CertaintyId)
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE schedule(

	resourceType TEXT, -- resourceType: schedule
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_identifier_identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	serviceCategory BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_serviceCategory_codeableConcept
	serviceType BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_serviceType_codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_specialty_codeableConcept
	actor BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule_actor_reference
	planningHorizon TEXT, -- Foreign Key to period table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (planningHorizon)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE searchParameter(

	resourceType TEXT, -- resourceType: searchParameter
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	derivedFrom TEXT,
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	base BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_base_code
	_base BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__base_element
	"type" TEXT CHECK( "type" IN ('number','date','string','token','reference','composite','quantity','uri','special') ),
	_type TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	xpath TEXT,
	_xpath TEXT, -- Foreign Key to element table
	xpathUsage TEXT CHECK( xpathUsage IN ('normal','phonetic','nearby','distance','other') ),
	_xpathUsage TEXT, -- Foreign Key to element table
	"target" BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_target_code
	_target BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__target_element
	multipleOr BOOLEAN,
	_multipleOr TEXT, -- Foreign Key to element table
	multipleAnd BOOLEAN,
	_multipleAnd TEXT, -- Foreign Key to element table
	comparator BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: eq/ne/gt/lt/ge/le/sa/eb/ap,
	_comparator BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__comparator_element
	modifier BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: missing/exact/contains/not/text/in/not-in/below/above/type/identifier/ofType,
	_modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__modifier_element
	"chain" BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_chain_string
	_chain BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__chain_element
	component BOOLEAN, -- true if 1+ rows in SearchParameter_Component correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_xpath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_xpathUsage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleOr)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleAnd)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE searchParameter_Component(

	id TEXT PRIMARY KEY,
	searchParameterId TEXT, -- Foreign Key to searchParameter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_Component_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_Component_modifierExtension_extension
	"definition" TEXT,
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table

	FOREIGN KEY (searchParameterId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE serviceRequest(

	resourceType TEXT, -- resourceType: serviceRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_identifier_identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_instantiatesCanonical_canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_instantiatesUri_uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__instantiatesUri_element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_basedOn_reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_replaces_reference
	requisition TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_category_codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	orderDetail BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_orderDetail_codeableConcept
	quantityQuantity TEXT, -- Foreign Key to quantity table
	quantityRatio TEXT, -- Foreign Key to ratio table
	quantityRange TEXT, -- Foreign Key to range table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	asNeededBoolean BOOLEAN, -- pattern: ^true|false$
	_asNeededBoolean TEXT, -- Foreign Key to element table
	asNeededCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performerType TEXT, -- Foreign Key to codeableConcept table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_performer_reference
	locationCode BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_locationCode_codeableConcept
	locationReference BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_locationReference_reference
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_reasonReference_reference
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_insurance_reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_supportingInfo_reference
	specimen BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_specimen_reference
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_bodySite_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_note_annotation
	patientInstruction TEXT,
	_patientInstruction TEXT, -- Foreign Key to element table
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest_relevantHistory_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requisition)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantityQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantityRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantityRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_asNeededBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asNeededCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patientInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE slot(

	resourceType TEXT, -- resourceType: slot
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: slot_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: slot_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: slot_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: slot_identifier_identifier
	serviceCategory BOOLEAN, -- true if 1+ item is referenced from bridge table: slot_serviceCategory_codeableConcept
	serviceType BOOLEAN, -- true if 1+ item is referenced from bridge table: slot_serviceType_codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: slot_specialty_codeableConcept
	appointmentType TEXT, -- Foreign Key to codeableConcept table
	schedule TEXT, -- Foreign Key to reference table
	"status" TEXT CHECK( "status" IN ('busy','free','busy-unavailable','busy-tentative','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	overbooked BOOLEAN,
	_overbooked TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (appointmentType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (schedule)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_overbooked)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen(

	resourceType TEXT, -- resourceType: specimen
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_identifier_identifier
	accessionIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT CHECK( "status" IN ('available','unavailable','unsatisfactory','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	receivedTime DATETIME,
	_receivedTime TEXT, -- Foreign Key to element table
	parent BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_parent_reference
	request BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_request_reference
	"collection" TEXT, -- Foreign Key to specimen_Collection table
	processing BOOLEAN, -- true if 1+ rows in Specimen_Processing correspond to this entry
	container BOOLEAN, -- true if 1+ rows in Specimen_Container correspond to this entry
	"condition" BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_condition_codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_note_annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (accessionIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_receivedTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("collection")
		REFERENCES specimen_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen_Collection(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Collection_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Collection_modifierExtension_extension
	collector TEXT, -- Foreign Key to reference table
	collectedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_collectedDateTime TEXT, -- Foreign Key to element table
	collectedPeriod TEXT, -- Foreign Key to period table
	duration TEXT, -- Foreign Key to duration table
	quantity TEXT, -- Foreign Key to quantity table
	"method" TEXT, -- Foreign Key to codeableConcept table
	bodySite TEXT, -- Foreign Key to codeableConcept table
	fastingStatusCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	fastingStatusDuration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (collector)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_collectedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (collectedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fastingStatusCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fastingStatusDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen_Processing(

	id TEXT PRIMARY KEY,
	specimenId TEXT, -- Foreign Key to specimen table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Processing_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Processing_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"procedure" TEXT, -- Foreign Key to codeableConcept table
	additive BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Processing_additive_reference
	timeDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timeDateTime TEXT, -- Foreign Key to element table
	timePeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (specimenId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("procedure")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen_Container(

	id TEXT PRIMARY KEY,
	specimenId TEXT, -- Foreign Key to specimen table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Container_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Container_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Container_identifier_identifier
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	capacity TEXT, -- Foreign Key to quantity table
	specimenQuantity TEXT, -- Foreign Key to quantity table
	additiveCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	additiveReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (specimenId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (capacity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (specimenQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition(

	resourceType TEXT, -- resourceType: specimenDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	typeCollected TEXT, -- Foreign Key to codeableConcept table
	patientPreparation BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_patientPreparation_codeableConcept
	timeAspect TEXT,
	_timeAspect TEXT, -- Foreign Key to element table
	"collection" BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_collection_codeableConcept
	typeTested BOOLEAN, -- true if 1+ rows in SpecimenDefinition_TypeTested correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (typeCollected)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeAspect)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_TypeTested(

	id TEXT PRIMARY KEY,
	specimenDefinitionId TEXT, -- Foreign Key to specimenDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_TypeTested_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_TypeTested_modifierExtension_extension
	isDerived BOOLEAN,
	_isDerived TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	preference TEXT CHECK( preference IN ('preferred','alternate') ),
	_preference TEXT, -- Foreign Key to element table
	container TEXT, -- Foreign Key to specimenDefinition_Container table
	requirement TEXT,
	_requirement TEXT, -- Foreign Key to element table
	retentionTime TEXT, -- Foreign Key to duration table
	rejectionCriterion BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_TypeTested_rejectionCriterion_codeableConcept
	handling BOOLEAN, -- true if 1+ rows in SpecimenDefinition_Handling correspond to this entry

	FOREIGN KEY (specimenDefinitionId)
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDerived)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (container)
		REFERENCES specimenDefinition_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (retentionTime)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_Container(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Container_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Container_modifierExtension_extension
	material TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT, -- Foreign Key to codeableConcept table
	cap TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	capacity TEXT, -- Foreign Key to quantity table
	minimumVolumeQuantity TEXT, -- Foreign Key to quantity table
	minimumVolumeString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_minimumVolumeString TEXT, -- Foreign Key to element table
	additive BOOLEAN, -- true if 1+ rows in SpecimenDefinition_Additive correspond to this entry
	preparation TEXT,
	_preparation TEXT, -- Foreign Key to element table

	FOREIGN KEY (material)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cap)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (capacity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (minimumVolumeQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minimumVolumeString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preparation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_Additive(

	id TEXT PRIMARY KEY,
	specimenDefinition_ContainerId TEXT, -- Foreign Key to specimenDefinition_Container table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Additive_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Additive_modifierExtension_extension
	additiveCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	additiveReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (specimenDefinition_ContainerId)
		REFERENCES specimenDefinition_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_Handling(

	id TEXT PRIMARY KEY,
	specimenDefinition_TypeTestedId TEXT, -- Foreign Key to specimenDefinition_TypeTested table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Handling_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Handling_modifierExtension_extension
	temperatureQualifier TEXT, -- Foreign Key to codeableConcept table
	temperatureRange TEXT, -- Foreign Key to range table
	maxDuration TEXT, -- Foreign Key to duration table
	instruction TEXT,
	_instruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (specimenDefinition_TypeTestedId)
		REFERENCES specimenDefinition_TypeTested (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (temperatureQualifier)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (temperatureRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition(

	resourceType TEXT, -- resourceType: structureDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	keyword BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_keyword_coding
	fhirVersion TEXT CHECK( fhirVersion IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),
	_fhirVersion TEXT, -- Foreign Key to element table
	mapping BOOLEAN, -- true if 1+ rows in StructureDefinition_Mapping correspond to this entry
	kind TEXT CHECK( kind IN ('primitive-type','complex-type','resource','logical') ),
	_kind TEXT, -- Foreign Key to element table
	abstract BOOLEAN,
	_abstract TEXT, -- Foreign Key to element table
	context BOOLEAN, -- true if 1+ rows in StructureDefinition_Context correspond to this entry
	contextInvariant BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_contextInvariant_string
	_contextInvariant BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__contextInvariant_element
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	baseDefinition TEXT,
	derivation TEXT CHECK( derivation IN ('specialization','constraint') ),
	_derivation TEXT, -- Foreign Key to element table
	"snapshot" TEXT, -- Foreign Key to structureDefinition_Snapshot table
	"differential" TEXT, -- Foreign Key to structureDefinition_Differential table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fhirVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abstract)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_derivation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("snapshot")
		REFERENCES structureDefinition_Snapshot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("differential")
		REFERENCES structureDefinition_Differential (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition_Mapping(

	id TEXT PRIMARY KEY,
	structureDefinitionId TEXT, -- Foreign Key to structureDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Mapping_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Mapping_modifierExtension_extension
	"identity" TEXT, -- Foreign Key to id table
	_identity TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureDefinitionId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("identity")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition_Context(

	id TEXT PRIMARY KEY,
	structureDefinitionId TEXT, -- Foreign Key to structureDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Context_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Context_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('fhirpath','element','extension') ),
	_type TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureDefinitionId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition_Snapshot(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Snapshot_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Snapshot_modifierExtension_extension
	element BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Snapshot_element_elementDefinition

);

CREATE TABLE structureDefinition_Differential(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Differential_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Differential_modifierExtension_extension
	element BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Differential_element_elementDefinition

);

CREATE TABLE structureMap(

	resourceType TEXT, -- resourceType: structureMap
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	"structure" BOOLEAN, -- true if 1+ rows in StructureMap_Structure correspond to this entry
	import BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_import_canonical
	"group" BOOLEAN, -- true if 1+ rows in StructureMap_Group correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Structure(

	id TEXT PRIMARY KEY,
	structureMapId TEXT, -- Foreign Key to structureMap table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Structure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Structure_modifierExtension_extension
	"url" TEXT,
	mode TEXT CHECK( mode IN ('source','queried','target','produced') ),
	_mode TEXT, -- Foreign Key to element table
	alias TEXT,
	_alias TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMapId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_alias)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Group(

	id TEXT PRIMARY KEY,
	structureMapId TEXT, -- Foreign Key to structureMap table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Group_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Group_modifierExtension_extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	extends TEXT, -- Foreign Key to id table
	_extends TEXT, -- Foreign Key to element table
	typeMode TEXT CHECK( typeMode IN ('none','types','type-and-types') ),
	_typeMode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"input" BOOLEAN, -- true if 1+ rows in StructureMap_Input correspond to this entry
	"rule" BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Group_rule_structureMap_Rule

	FOREIGN KEY (structureMapId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (extends)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_extends)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_typeMode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Input(

	id TEXT PRIMARY KEY,
	structureMap_GroupId TEXT, -- Foreign Key to structureMap_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Input_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Input_modifierExtension_extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	mode TEXT CHECK( mode IN ('source','target') ),
	_mode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMap_GroupId)
		REFERENCES structureMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Rule(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Rule_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Rule_modifierExtension_extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	"source" BOOLEAN, -- true if 1+ rows in StructureMap_Source correspond to this entry
	"target" BOOLEAN, -- true if 1+ rows in StructureMap_Target correspond to this entry
	"rule" BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Rule_rule_structureMap_Rule
	"dependent" BOOLEAN, -- true if 1+ rows in StructureMap_Dependent correspond to this entry
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Source(

	id TEXT PRIMARY KEY,
	structureMap_RuleId TEXT, -- Foreign Key to structureMap_Rule table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Source_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Source_modifierExtension_extension
	context TEXT, -- Foreign Key to id table
	_context TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	defaultValueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_defaultValueBase64Binary TEXT, -- Foreign Key to element table
	defaultValueBoolean BOOLEAN, -- pattern: ^true|false$
	_defaultValueBoolean TEXT, -- Foreign Key to element table
	defaultValueCanonical TEXT, -- pattern: ^\S*$
	_defaultValueCanonical TEXT, -- Foreign Key to element table
	defaultValueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_defaultValueCode TEXT, -- Foreign Key to element table
	defaultValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_defaultValueDate TEXT, -- Foreign Key to element table
	defaultValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_defaultValueDateTime TEXT, -- Foreign Key to element table
	defaultValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_defaultValueDecimal TEXT, -- Foreign Key to element table
	defaultValueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_defaultValueId TEXT, -- Foreign Key to element table
	defaultValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_defaultValueInstant TEXT, -- Foreign Key to element table
	defaultValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_defaultValueInteger TEXT, -- Foreign Key to element table
	defaultValueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueMarkdown TEXT, -- Foreign Key to element table
	defaultValueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_defaultValueOid TEXT, -- Foreign Key to element table
	defaultValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_defaultValuePositiveInt TEXT, -- Foreign Key to element table
	defaultValueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueString TEXT, -- Foreign Key to element table
	defaultValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_defaultValueTime TEXT, -- Foreign Key to element table
	defaultValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_defaultValueUnsignedInt TEXT, -- Foreign Key to element table
	defaultValueUri TEXT, -- pattern: ^\S*$
	_defaultValueUri TEXT, -- Foreign Key to element table
	defaultValueUrl TEXT, -- pattern: ^\S*$
	_defaultValueUrl TEXT, -- Foreign Key to element table
	defaultValueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_defaultValueUuid TEXT, -- Foreign Key to element table
	defaultValueAddress TEXT, -- Foreign Key to address table
	defaultValueAge TEXT, -- Foreign Key to age table
	defaultValueAnnotation TEXT, -- Foreign Key to annotation table
	defaultValueAttachment TEXT, -- Foreign Key to attachment table
	defaultValueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	defaultValueCoding TEXT, -- Foreign Key to coding table
	defaultValueContactPoint TEXT, -- Foreign Key to contactPoint table
	defaultValueCount TEXT, -- Foreign Key to count table
	defaultValueDistance TEXT, -- Foreign Key to distance table
	defaultValueDuration TEXT, -- Foreign Key to duration table
	defaultValueHumanName TEXT, -- Foreign Key to humanName table
	defaultValueIdentifier TEXT, -- Foreign Key to identifier table
	defaultValueMoney TEXT, -- Foreign Key to money table
	defaultValuePeriod TEXT, -- Foreign Key to period table
	defaultValueQuantity TEXT, -- Foreign Key to quantity table
	defaultValueRange TEXT, -- Foreign Key to range table
	defaultValueRatio TEXT, -- Foreign Key to ratio table
	defaultValueReference TEXT, -- Foreign Key to reference table
	defaultValueSampledData TEXT, -- Foreign Key to sampledData table
	defaultValueSignature TEXT, -- Foreign Key to signature table
	defaultValueTiming TEXT, -- Foreign Key to timing table
	defaultValueContactDetail TEXT, -- Foreign Key to contactDetail table
	defaultValueContributor TEXT, -- Foreign Key to contributor table
	defaultValueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	defaultValueExpression TEXT, -- Foreign Key to expression table
	defaultValueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	defaultValueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	defaultValueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	defaultValueUsageContext TEXT, -- Foreign Key to usageContext table
	defaultValueDosage TEXT, -- Foreign Key to dosage table
	defaultValueMeta TEXT, -- Foreign Key to meta table
	element TEXT,
	_element TEXT, -- Foreign Key to element table
	listMode TEXT CHECK( listMode IN ('first','not_first','last','not_last','only_one') ),
	_listMode TEXT, -- Foreign Key to element table
	variable TEXT, -- Foreign Key to id table
	_variable TEXT, -- Foreign Key to element table
	"condition" TEXT,
	_condition TEXT, -- Foreign Key to element table
	"check" TEXT,
	_check TEXT, -- Foreign Key to element table
	logMessage TEXT,
	_logMessage TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_context)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_element)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_listMode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variable)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_condition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_check)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_logMessage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Target(

	id TEXT PRIMARY KEY,
	structureMap_RuleId TEXT, -- Foreign Key to structureMap_Rule table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Target_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Target_modifierExtension_extension
	context TEXT, -- Foreign Key to id table
	_context TEXT, -- Foreign Key to element table
	contextType TEXT CHECK( contextType IN ('type','variable') ),
	_contextType TEXT, -- Foreign Key to element table
	element TEXT,
	_element TEXT, -- Foreign Key to element table
	variable TEXT, -- Foreign Key to id table
	_variable TEXT, -- Foreign Key to element table
	listMode BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: first/share/last/collate,
	_listMode BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Target__listMode_element
	listRuleId TEXT, -- Foreign Key to id table
	_listRuleId TEXT, -- Foreign Key to element table
	transform TEXT CHECK( transform IN ('create','copy','truncate','escape','cast','append','translate','reference','dateOp','uuid','pointer','evaluate','cc','c','qty','id','cp') ),
	_transform TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ rows in StructureMap_Parameter correspond to this entry

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_context)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contextType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_element)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variable)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (listRuleId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_listRuleId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_transform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Parameter(

	id TEXT PRIMARY KEY,
	structureMap_TargetId TEXT, -- Foreign Key to structureMap_Target table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Parameter_modifierExtension_extension
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMap_TargetId)
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Dependent(

	id TEXT PRIMARY KEY,
	structureMap_RuleId TEXT, -- Foreign Key to structureMap_Rule table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent_modifierExtension_extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	variable BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent_variable_string
	_variable BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent__variable_element

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE subscription(

	resourceType TEXT, -- resourceType: subscription
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_modifierExtension_extension
	"status" TEXT CHECK( "status" IN ('requested','active','error','off') ),
	_status TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_contact_contactPoint
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	reason TEXT,
	_reason TEXT, -- Foreign Key to element table
	criteria TEXT,
	_criteria TEXT, -- Foreign Key to element table
	error TEXT,
	_error TEXT, -- Foreign Key to element table
	channel TEXT, -- Foreign Key to subscription_Channel table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_criteria)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_error)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (channel)
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE subscription_Channel(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('rest-hook','websocket','email','sms','message') ),
	_type TEXT, -- Foreign Key to element table
	"endpoint" TEXT,
	_endpoint TEXT, -- Foreign Key to element table
	payload TEXT,
	_payload TEXT, -- Foreign Key to element table
	header BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel_header_string
	_header BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel__header_element

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_endpoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_payload)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substance(

	resourceType TEXT, -- resourceType: substance
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_identifier_identifier
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_category_codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"instance" BOOLEAN, -- true if 1+ rows in Substance_Instance correspond to this entry
	ingredient BOOLEAN, -- true if 1+ rows in Substance_Ingredient correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substance_Instance(

	id TEXT PRIMARY KEY,
	substanceId TEXT, -- Foreign Key to substance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Instance_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Instance_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	expiry DATETIME,
	_expiry TEXT, -- Foreign Key to element table
	quantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (substanceId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expiry)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substance_Ingredient(

	id TEXT PRIMARY KEY,
	substanceId TEXT, -- Foreign Key to substance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Ingredient_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Ingredient_modifierExtension_extension
	quantity TEXT, -- Foreign Key to ratio table
	substanceCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	substanceReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (substanceId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid(

	resourceType TEXT, -- resourceType: substanceNucleicAcid
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_modifierExtension_extension
	sequenceType TEXT, -- Foreign Key to codeableConcept table
	numberOfSubunits INTEGER,
	_numberOfSubunits TEXT, -- Foreign Key to element table
	areaOfHybridisation TEXT,
	_areaOfHybridisation TEXT, -- Foreign Key to element table
	oligoNucleotideType TEXT, -- Foreign Key to codeableConcept table
	subunit BOOLEAN, -- true if 1+ rows in SubstanceNucleicAcid_Subunit correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfSubunits)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_areaOfHybridisation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (oligoNucleotideType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid_Subunit(

	id TEXT PRIMARY KEY,
	substanceNucleicAcidId TEXT, -- Foreign Key to substanceNucleicAcid table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Subunit_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Subunit_modifierExtension_extension
	subunit INTEGER,
	_subunit TEXT, -- Foreign Key to element table
	"sequence" TEXT,
	_sequence TEXT, -- Foreign Key to element table
	"length" INTEGER,
	_length TEXT, -- Foreign Key to element table
	sequenceAttachment TEXT, -- Foreign Key to attachment table
	fivePrime TEXT, -- Foreign Key to codeableConcept table
	threePrime TEXT, -- Foreign Key to codeableConcept table
	linkage BOOLEAN, -- true if 1+ rows in SubstanceNucleicAcid_Linkage correspond to this entry
	sugar BOOLEAN, -- true if 1+ rows in SubstanceNucleicAcid_Sugar correspond to this entry

	FOREIGN KEY (substanceNucleicAcidId)
		REFERENCES substanceNucleicAcid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subunit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_length)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fivePrime)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (threePrime)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid_Linkage(

	id TEXT PRIMARY KEY,
	substanceNucleicAcid_SubunitId TEXT, -- Foreign Key to substanceNucleicAcid_Subunit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Linkage_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Linkage_modifierExtension_extension
	connectivity TEXT,
	_connectivity TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	residueSite TEXT,
	_residueSite TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceNucleicAcid_SubunitId)
		REFERENCES substanceNucleicAcid_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_connectivity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_residueSite)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid_Sugar(

	id TEXT PRIMARY KEY,
	substanceNucleicAcid_SubunitId TEXT, -- Foreign Key to substanceNucleicAcid_Subunit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Sugar_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Sugar_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	residueSite TEXT,
	_residueSite TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceNucleicAcid_SubunitId)
		REFERENCES substanceNucleicAcid_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_residueSite)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer(

	resourceType TEXT, -- resourceType: substancePolymer
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_modifierExtension_extension
	class TEXT, -- Foreign Key to codeableConcept table
	"geometry" TEXT, -- Foreign Key to codeableConcept table
	copolymerConnectivity BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_copolymerConnectivity_codeableConcept
	modification BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_modification_string
	_modification BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer__modification_element
	monomerSet BOOLEAN, -- true if 1+ rows in SubstancePolymer_MonomerSet correspond to this entry
	"repeat" BOOLEAN, -- true if 1+ rows in SubstancePolymer_Repeat correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("geometry")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_MonomerSet(

	id TEXT PRIMARY KEY,
	substancePolymerId TEXT, -- Foreign Key to substancePolymer table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_MonomerSet_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_MonomerSet_modifierExtension_extension
	ratioType TEXT, -- Foreign Key to codeableConcept table
	startingMaterial BOOLEAN, -- true if 1+ rows in SubstancePolymer_StartingMaterial correspond to this entry

	FOREIGN KEY (substancePolymerId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ratioType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_StartingMaterial(

	id TEXT PRIMARY KEY,
	substancePolymer_MonomerSetId TEXT, -- Foreign Key to substancePolymer_MonomerSet table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StartingMaterial_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StartingMaterial_modifierExtension_extension
	material TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT, -- Foreign Key to codeableConcept table
	isDefining BOOLEAN,
	_isDefining TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to substanceAmount table

	FOREIGN KEY (substancePolymer_MonomerSetId)
		REFERENCES substancePolymer_MonomerSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (material)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDefining)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_Repeat(

	id TEXT PRIMARY KEY,
	substancePolymerId TEXT, -- Foreign Key to substancePolymer table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_Repeat_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_Repeat_modifierExtension_extension
	numberOfUnits INTEGER,
	_numberOfUnits TEXT, -- Foreign Key to element table
	averageMolecularFormula TEXT,
	_averageMolecularFormula TEXT, -- Foreign Key to element table
	repeatUnitAmountType TEXT, -- Foreign Key to codeableConcept table
	repeatUnit BOOLEAN, -- true if 1+ rows in SubstancePolymer_RepeatUnit correspond to this entry

	FOREIGN KEY (substancePolymerId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfUnits)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_averageMolecularFormula)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (repeatUnitAmountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_RepeatUnit(

	id TEXT PRIMARY KEY,
	substancePolymer_RepeatId TEXT, -- Foreign Key to substancePolymer_Repeat table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_RepeatUnit_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_RepeatUnit_modifierExtension_extension
	orientationOfPolymerisation TEXT, -- Foreign Key to codeableConcept table
	repeatUnit TEXT,
	_repeatUnit TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to substanceAmount table
	degreeOfPolymerisation BOOLEAN, -- true if 1+ rows in SubstancePolymer_DegreeOfPolymerisation correspond to this entry
	structuralRepresentation BOOLEAN, -- true if 1+ rows in SubstancePolymer_StructuralRepresentation correspond to this entry

	FOREIGN KEY (substancePolymer_RepeatId)
		REFERENCES substancePolymer_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orientationOfPolymerisation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_repeatUnit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_DegreeOfPolymerisation(

	id TEXT PRIMARY KEY,
	substancePolymer_RepeatUnitId TEXT, -- Foreign Key to substancePolymer_RepeatUnit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_DegreeOfPolymerisation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_DegreeOfPolymerisation_modifierExtension_extension
	degree TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to substanceAmount table

	FOREIGN KEY (substancePolymer_RepeatUnitId)
		REFERENCES substancePolymer_RepeatUnit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (degree)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_StructuralRepresentation(

	id TEXT PRIMARY KEY,
	substancePolymer_RepeatUnitId TEXT, -- Foreign Key to substancePolymer_RepeatUnit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StructuralRepresentation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StructuralRepresentation_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	representation TEXT,
	_representation TEXT, -- Foreign Key to element table
	attachment TEXT, -- Foreign Key to attachment table

	FOREIGN KEY (substancePolymer_RepeatUnitId)
		REFERENCES substancePolymer_RepeatUnit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_representation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceProtein(

	resourceType TEXT, -- resourceType: substanceProtein
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_modifierExtension_extension
	sequenceType TEXT, -- Foreign Key to codeableConcept table
	numberOfSubunits INTEGER,
	_numberOfSubunits TEXT, -- Foreign Key to element table
	disulfideLinkage BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_disulfideLinkage_string
	_disulfideLinkage BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein__disulfideLinkage_element
	subunit BOOLEAN, -- true if 1+ rows in SubstanceProtein_Subunit correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfSubunits)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceProtein_Subunit(

	id TEXT PRIMARY KEY,
	substanceProteinId TEXT, -- Foreign Key to substanceProtein table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_Subunit_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_Subunit_modifierExtension_extension
	subunit INTEGER,
	_subunit TEXT, -- Foreign Key to element table
	"sequence" TEXT,
	_sequence TEXT, -- Foreign Key to element table
	"length" INTEGER,
	_length TEXT, -- Foreign Key to element table
	sequenceAttachment TEXT, -- Foreign Key to attachment table
	nTerminalModificationId TEXT, -- Foreign Key to identifier table
	nTerminalModification TEXT,
	_nTerminalModification TEXT, -- Foreign Key to element table
	cTerminalModificationId TEXT, -- Foreign Key to identifier table
	cTerminalModification TEXT,
	_cTerminalModification TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceProteinId)
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subunit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_length)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nTerminalModificationId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_nTerminalModification)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cTerminalModificationId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cTerminalModification)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation(

	resourceType TEXT, -- resourceType: substanceReferenceInformation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_modifierExtension_extension
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	gene BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_Gene correspond to this entry
	geneElement BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_GeneElement correspond to this entry
	classification BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_Classification correspond to this entry
	"target" BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_Target correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_Gene(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Gene_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Gene_modifierExtension_extension
	geneSequenceOrigin TEXT, -- Foreign Key to codeableConcept table
	gene TEXT, -- Foreign Key to codeableConcept table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Gene_source_reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (geneSequenceOrigin)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (gene)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_GeneElement(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_GeneElement_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_GeneElement_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	element TEXT, -- Foreign Key to identifier table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_GeneElement_source_reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (element)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_Classification(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification_modifierExtension_extension
	"domain" TEXT, -- Foreign Key to codeableConcept table
	classification TEXT, -- Foreign Key to codeableConcept table
	subtype BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification_subtype_codeableConcept
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification_source_reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("domain")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (classification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_Target(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Target_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Target_modifierExtension_extension
	"target" TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	interaction TEXT, -- Foreign Key to codeableConcept table
	organism TEXT, -- Foreign Key to codeableConcept table
	organismType TEXT, -- Foreign Key to codeableConcept table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountRange TEXT, -- Foreign Key to range table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table
	amountType TEXT, -- Foreign Key to codeableConcept table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Target_source_reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (interaction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organism)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organismType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial(

	resourceType TEXT, -- resourceType: substanceSourceMaterial
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_modifierExtension_extension
	sourceMaterialClass TEXT, -- Foreign Key to codeableConcept table
	sourceMaterialType TEXT, -- Foreign Key to codeableConcept table
	sourceMaterialState TEXT, -- Foreign Key to codeableConcept table
	organismId TEXT, -- Foreign Key to identifier table
	organismName TEXT,
	_organismName TEXT, -- Foreign Key to element table
	parentSubstanceId BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_parentSubstanceId_identifier
	parentSubstanceName BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_parentSubstanceName_string
	_parentSubstanceName BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__parentSubstanceName_element
	countryOfOrigin BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_countryOfOrigin_codeableConcept
	geographicalLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_geographicalLocation_string
	_geographicalLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__geographicalLocation_element
	developmentStage TEXT, -- Foreign Key to codeableConcept table
	fractionDescription BOOLEAN, -- true if 1+ rows in SubstanceSourceMaterial_FractionDescription correspond to this entry
	organism TEXT, -- Foreign Key to substanceSourceMaterial_Organism table
	partDescription BOOLEAN, -- true if 1+ rows in SubstanceSourceMaterial_PartDescription correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterialClass)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterialType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterialState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organismId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_organismName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (developmentStage)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organism)
		REFERENCES substanceSourceMaterial_Organism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_FractionDescription(

	id TEXT PRIMARY KEY,
	substanceSourceMaterialId TEXT, -- Foreign Key to substanceSourceMaterial table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_FractionDescription_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_FractionDescription_modifierExtension_extension
	fraction TEXT,
	_fraction TEXT, -- Foreign Key to element table
	materialType TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (substanceSourceMaterialId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fraction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (materialType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_Organism(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Organism_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Organism_modifierExtension_extension
	family TEXT, -- Foreign Key to codeableConcept table
	genus TEXT, -- Foreign Key to codeableConcept table
	species TEXT, -- Foreign Key to codeableConcept table
	intraspecificType TEXT, -- Foreign Key to codeableConcept table
	intraspecificDescription TEXT,
	_intraspecificDescription TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ rows in SubstanceSourceMaterial_Author correspond to this entry
	hybrid TEXT, -- Foreign Key to substanceSourceMaterial_Hybrid table
	organismGeneral TEXT, -- Foreign Key to substanceSourceMaterial_OrganismGeneral table

	FOREIGN KEY (family)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (genus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (species)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intraspecificType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intraspecificDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (hybrid)
		REFERENCES substanceSourceMaterial_Hybrid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organismGeneral)
		REFERENCES substanceSourceMaterial_OrganismGeneral (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_Author(

	id TEXT PRIMARY KEY,
	substanceSourceMaterial_OrganismId TEXT, -- Foreign Key to substanceSourceMaterial_Organism table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Author_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Author_modifierExtension_extension
	authorType TEXT, -- Foreign Key to codeableConcept table
	authorDescription TEXT,
	_authorDescription TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSourceMaterial_OrganismId)
		REFERENCES substanceSourceMaterial_Organism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authorType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_Hybrid(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Hybrid_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Hybrid_modifierExtension_extension
	maternalOrganismId TEXT,
	_maternalOrganismId TEXT, -- Foreign Key to element table
	maternalOrganismName TEXT,
	_maternalOrganismName TEXT, -- Foreign Key to element table
	paternalOrganismId TEXT,
	_paternalOrganismId TEXT, -- Foreign Key to element table
	paternalOrganismName TEXT,
	_paternalOrganismName TEXT, -- Foreign Key to element table
	hybridType TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (_maternalOrganismId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maternalOrganismName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paternalOrganismId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paternalOrganismName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (hybridType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_OrganismGeneral(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_OrganismGeneral_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_OrganismGeneral_modifierExtension_extension
	kingdom TEXT, -- Foreign Key to codeableConcept table
	phylum TEXT, -- Foreign Key to codeableConcept table
	class TEXT, -- Foreign Key to codeableConcept table
	"order" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (kingdom)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (phylum)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("order")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_PartDescription(

	id TEXT PRIMARY KEY,
	substanceSourceMaterialId TEXT, -- Foreign Key to substanceSourceMaterial table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_PartDescription_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_PartDescription_modifierExtension_extension
	part TEXT, -- Foreign Key to codeableConcept table
	partLocation TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (substanceSourceMaterialId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (part)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partLocation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification(

	resourceType TEXT, -- resourceType: substanceSpecification
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	"domain" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_source_reference
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	moiety BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Moiety correspond to this entry
	property BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Property correspond to this entry
	referenceInformation TEXT, -- Foreign Key to reference table
	"structure" TEXT, -- Foreign Key to substanceSpecification_Structure table
	"code" BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Code correspond to this entry
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_name_substanceSpecification_Name
	molecularWeight BOOLEAN, -- true if 1+ rows in SubstanceSpecification_MolecularWeight correspond to this entry
	relationship BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Relationship correspond to this entry
	nucleicAcid TEXT, -- Foreign Key to reference table
	polymer TEXT, -- Foreign Key to reference table
	protein TEXT, -- Foreign Key to reference table
	sourceMaterial TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("domain")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceInformation)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("structure")
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nucleicAcid)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (polymer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (protein)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterial)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Moiety(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Moiety_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Moiety_modifierExtension_extension
	"role" TEXT, -- Foreign Key to codeableConcept table
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	stereochemistry TEXT, -- Foreign Key to codeableConcept table
	opticalActivity TEXT, -- Foreign Key to codeableConcept table
	molecularFormula TEXT,
	_molecularFormula TEXT, -- Foreign Key to element table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (stereochemistry)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (opticalActivity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_molecularFormula)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Property(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Property_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Property_modifierExtension_extension
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	parameters TEXT,
	_parameters TEXT, -- Foreign Key to element table
	definingSubstanceReference TEXT, -- Foreign Key to reference table
	definingSubstanceCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_parameters)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definingSubstanceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definingSubstanceCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Structure(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Structure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Structure_modifierExtension_extension
	stereochemistry TEXT, -- Foreign Key to codeableConcept table
	opticalActivity TEXT, -- Foreign Key to codeableConcept table
	molecularFormula TEXT,
	_molecularFormula TEXT, -- Foreign Key to element table
	molecularFormulaByMoiety TEXT,
	_molecularFormulaByMoiety TEXT, -- Foreign Key to element table
	isotope BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Isotope correspond to this entry
	molecularWeight TEXT, -- Foreign Key to substanceSpecification_MolecularWeight table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Structure_source_reference
	representation BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Representation correspond to this entry

	FOREIGN KEY (stereochemistry)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (opticalActivity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_molecularFormula)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_molecularFormulaByMoiety)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (molecularWeight)
		REFERENCES substanceSpecification_MolecularWeight (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Isotope(

	id TEXT PRIMARY KEY,
	substanceSpecification_StructureId TEXT, -- Foreign Key to substanceSpecification_Structure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Isotope_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Isotope_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT, -- Foreign Key to codeableConcept table
	substitution TEXT, -- Foreign Key to codeableConcept table
	halfLife TEXT, -- Foreign Key to quantity table
	molecularWeight TEXT, -- Foreign Key to substanceSpecification_MolecularWeight table

	FOREIGN KEY (substanceSpecification_StructureId)
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substitution)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (halfLife)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (molecularWeight)
		REFERENCES substanceSpecification_MolecularWeight (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_MolecularWeight(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_MolecularWeight_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_MolecularWeight_modifierExtension_extension
	"method" TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Representation(

	id TEXT PRIMARY KEY,
	substanceSpecification_StructureId TEXT, -- Foreign Key to substanceSpecification_Structure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Representation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Representation_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	representation TEXT,
	_representation TEXT, -- Foreign Key to element table
	attachment TEXT, -- Foreign Key to attachment table

	FOREIGN KEY (substanceSpecification_StructureId)
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_representation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Code(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Code_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Code_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	statusDate DATETIME,
	_statusDate TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Code_source_reference

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Name(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table
	"language" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_language_codeableConcept
	"domain" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_domain_codeableConcept
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_jurisdiction_codeableConcept
	"synonym" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_synonym_substanceSpecification_Name
	"translation" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_translation_substanceSpecification_Name
	official BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Official correspond to this entry
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name_source_reference

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Official(

	id TEXT PRIMARY KEY,
	substanceSpecification_NameId TEXT, -- Foreign Key to substanceSpecification_Name table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Official_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Official_modifierExtension_extension
	authority TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSpecification_NameId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Relationship(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Relationship_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Relationship_modifierExtension_extension
	substanceReference TEXT, -- Foreign Key to reference table
	substanceCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	relationship TEXT, -- Foreign Key to codeableConcept table
	isDefining BOOLEAN,
	_isDefining TEXT, -- Foreign Key to element table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountRange TEXT, -- Foreign Key to range table
	amountRatio TEXT, -- Foreign Key to ratio table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table
	amountRatioLowLimit TEXT, -- Foreign Key to ratio table
	amountType TEXT, -- Foreign Key to codeableConcept table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Relationship_source_reference

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDefining)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRatioLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyDelivery(

	resourceType TEXT, -- resourceType: supplyDelivery
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_identifier_identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_basedOn_reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_partOf_reference
	"status" TEXT CHECK( "status" IN ('in-progress','completed','abandoned','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	suppliedItem TEXT, -- Foreign Key to supplyDelivery_SuppliedItem table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	supplier TEXT, -- Foreign Key to reference table
	destination TEXT, -- Foreign Key to reference table
	receiver BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_receiver_reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (suppliedItem)
		REFERENCES supplyDelivery_SuppliedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (supplier)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (destination)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyDelivery_SuppliedItem(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_SuppliedItem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_SuppliedItem_modifierExtension_extension
	quantity TEXT, -- Foreign Key to quantity table
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyRequest(

	resourceType TEXT, -- resourceType: supplyRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_identifier_identifier
	"status" TEXT CHECK( "status" IN ('draft','active','suspended','cancelled','completed','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	category TEXT, -- Foreign Key to codeableConcept table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	"parameter" BOOLEAN, -- true if 1+ rows in SupplyRequest_Parameter correspond to this entry
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	supplier BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_supplier_reference
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_reasonCode_codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_reasonReference_reference
	deliverFrom TEXT, -- Foreign Key to reference table
	deliverTo TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deliverFrom)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deliverTo)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyRequest_Parameter(

	id TEXT PRIMARY KEY,
	supplyRequestId TEXT, -- Foreign Key to supplyRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_Parameter_modifierExtension_extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table

	FOREIGN KEY (supplyRequestId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task(

	resourceType TEXT, -- resourceType: task
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: task_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: task_identifier_identifier
	instantiatesCanonical TEXT,
	instantiatesUri TEXT,
	_instantiatesUri TEXT, -- Foreign Key to element table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: task_basedOn_reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: task_partOf_reference
	"status" TEXT CHECK( "status" IN ('draft','requested','received','accepted','rejected','ready','cancelled','in-progress','on-hold','failed','completed','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	businessStatus TEXT, -- Foreign Key to codeableConcept table
	intent TEXT CHECK( intent IN ('unknown','proposal','plan','order','original-order','reflex-order','filler-order','instance-order','option') ),
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	focus TEXT, -- Foreign Key to reference table
	"for" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	executionPeriod TEXT, -- Foreign Key to period table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	lastModified DATETIME,
	_lastModified TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performerType BOOLEAN, -- true if 1+ item is referenced from bridge table: task_performerType_codeableConcept
	"owner" TEXT, -- Foreign Key to reference table
	"location" TEXT, -- Foreign Key to reference table
	reasonCode TEXT, -- Foreign Key to codeableConcept table
	reasonReference TEXT, -- Foreign Key to reference table
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: task_insurance_reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: task_note_annotation
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: task_relevantHistory_reference
	restriction TEXT, -- Foreign Key to task_Restriction table
	"input" BOOLEAN, -- true if 1+ rows in Task_Input correspond to this entry
	"output" BOOLEAN, -- true if 1+ rows in Task_Output correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instantiatesUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (businessStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (focus)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("for")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (executionPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastModified)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reasonCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reasonReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (restriction)
		REFERENCES task_Restriction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task_Restriction(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Restriction_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Restriction_modifierExtension_extension
	repetitions INTEGER,
	_repetitions TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Restriction_recipient_reference

	FOREIGN KEY (_repetitions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task_Input(

	id TEXT PRIMARY KEY,
	taskId TEXT, -- Foreign Key to task table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Input_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Input_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (taskId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task_Output(

	id TEXT PRIMARY KEY,
	taskId TEXT, -- Foreign Key to task table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Output_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Output_modifierExtension_extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (taskId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities(

	resourceType TEXT, -- resourceType: terminologyCapabilities
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	software TEXT, -- Foreign Key to terminologyCapabilities_Software table
	"implementation" TEXT, -- Foreign Key to terminologyCapabilities_Implementation table
	lockedDate BOOLEAN,
	_lockedDate TEXT, -- Foreign Key to element table
	codeSystem BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_CodeSystem correspond to this entry
	expansion TEXT, -- Foreign Key to terminologyCapabilities_Expansion table
	codeSearch TEXT CHECK( codeSearch IN ('explicit','all') ),
	_codeSearch TEXT, -- Foreign Key to element table
	validateCode TEXT, -- Foreign Key to terminologyCapabilities_ValidateCode table
	"translation" TEXT, -- Foreign Key to terminologyCapabilities_Translation table
	closure TEXT, -- Foreign Key to terminologyCapabilities_Closure table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (software)
		REFERENCES terminologyCapabilities_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("implementation")
		REFERENCES terminologyCapabilities_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lockedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expansion)
		REFERENCES terminologyCapabilities_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_codeSearch)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validateCode)
		REFERENCES terminologyCapabilities_ValidateCode (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("translation")
		REFERENCES terminologyCapabilities_Translation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (closure)
		REFERENCES terminologyCapabilities_Closure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Software(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Software_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Software_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Implementation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Implementation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Implementation_modifierExtension_extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_CodeSystem(

	id TEXT PRIMARY KEY,
	terminologyCapabilitiesId TEXT, -- Foreign Key to terminologyCapabilities table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_CodeSystem_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_CodeSystem_modifierExtension_extension
	uri TEXT,
	"version" BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_Version correspond to this entry
	subsumption BOOLEAN,
	_subsumption TEXT, -- Foreign Key to element table

	FOREIGN KEY (terminologyCapabilitiesId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subsumption)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Version(

	id TEXT PRIMARY KEY,
	terminologyCapabilities_CodeSystemId TEXT, -- Foreign Key to terminologyCapabilities_CodeSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	isDefault BOOLEAN,
	_isDefault TEXT, -- Foreign Key to element table
	compositional BOOLEAN,
	_compositional TEXT, -- Foreign Key to element table
	"language" BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version_language_code
	_language BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__language_element
	"filter" BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_Filter correspond to this entry
	property BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version_property_code
	_property BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__property_element

	FOREIGN KEY (terminologyCapabilities_CodeSystemId)
		REFERENCES terminologyCapabilities_CodeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDefault)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compositional)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Filter(

	id TEXT PRIMARY KEY,
	terminologyCapabilities_VersionId TEXT, -- Foreign Key to terminologyCapabilities_Version table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	op BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter_op_code
	_op BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter__op_element

	FOREIGN KEY (terminologyCapabilities_VersionId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Expansion(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Expansion_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Expansion_modifierExtension_extension
	hierarchical BOOLEAN,
	_hierarchical TEXT, -- Foreign Key to element table
	paging BOOLEAN,
	_paging TEXT, -- Foreign Key to element table
	incomplete BOOLEAN,
	_incomplete TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_Parameter correspond to this entry
	textFilter TEXT,
	_textFilter TEXT, -- Foreign Key to element table

	FOREIGN KEY (_hierarchical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paging)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_incomplete)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_textFilter)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Parameter(

	id TEXT PRIMARY KEY,
	terminologyCapabilities_ExpansionId TEXT, -- Foreign Key to terminologyCapabilities_Expansion table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Parameter_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (terminologyCapabilities_ExpansionId)
		REFERENCES terminologyCapabilities_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_ValidateCode(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_ValidateCode_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_ValidateCode_modifierExtension_extension
	translations BOOLEAN,
	_translations TEXT, -- Foreign Key to element table

	FOREIGN KEY (_translations)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Translation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Translation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Translation_modifierExtension_extension
	needsMap BOOLEAN,
	_needsMap TEXT, -- Foreign Key to element table

	FOREIGN KEY (_needsMap)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Closure(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Closure_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Closure_modifierExtension_extension
	"translation" BOOLEAN,
	_translation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_translation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport(

	resourceType TEXT, -- resourceType: testReport
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_modifierExtension_extension
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('completed','in-progress','waiting','stopped','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	testScript TEXT, -- Foreign Key to reference table
	"result" TEXT CHECK( "result" IN ('pass','fail','pending') ),
	_result TEXT, -- Foreign Key to element table
	score REAL,
	_score TEXT, -- Foreign Key to element table
	tester TEXT,
	_tester TEXT, -- Foreign Key to element table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	participant BOOLEAN, -- true if 1+ rows in TestReport_Participant correspond to this entry
	setup TEXT, -- Foreign Key to testReport_Setup table
	test BOOLEAN, -- true if 1+ rows in TestReport_Test correspond to this entry
	teardown TEXT, -- Foreign Key to testReport_Teardown table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (testScript)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_result)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_score)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_tester)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (setup)
		REFERENCES testReport_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (teardown)
		REFERENCES testReport_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Participant(

	id TEXT PRIMARY KEY,
	testReportId TEXT, -- Foreign Key to testReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Participant_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Participant_modifierExtension_extension
	"type" TEXT CHECK( "type" IN ('test-engine','client','server') ),
	_type TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table

	FOREIGN KEY (testReportId)
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Setup(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Setup_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Setup_modifierExtension_extension
	"action" BOOLEAN, -- true if 1+ rows in TestReport_Action correspond to this entry

);

CREATE TABLE testReport_Action(

	id TEXT PRIMARY KEY,
	testReport_SetupId TEXT, -- Foreign Key to testReport_Setup table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action_modifierExtension_extension
	operation TEXT, -- Foreign Key to testReport_Operation table
	assert TEXT, -- Foreign Key to testReport_Assert table

	FOREIGN KEY (testReport_SetupId)
		REFERENCES testReport_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testReport_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Operation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Operation_modifierExtension_extension
	"result" TEXT CHECK( "result" IN ('pass','skip','fail','warning','error') ),
	_result TEXT, -- Foreign Key to element table
	"message" TEXT,
	_message TEXT, -- Foreign Key to element table
	detail TEXT,
	_detail TEXT, -- Foreign Key to element table

	FOREIGN KEY (_result)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_message)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detail)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Assert(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Assert_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Assert_modifierExtension_extension
	"result" TEXT CHECK( "result" IN ('pass','skip','fail','warning','error') ),
	_result TEXT, -- Foreign Key to element table
	"message" TEXT,
	_message TEXT, -- Foreign Key to element table
	detail TEXT,
	_detail TEXT, -- Foreign Key to element table

	FOREIGN KEY (_result)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_message)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detail)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Test(

	id TEXT PRIMARY KEY,
	testReportId TEXT, -- Foreign Key to testReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Test_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Test_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"action" BOOLEAN, -- true if 1+ rows in TestReport_Action1 correspond to this entry

	FOREIGN KEY (testReportId)
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Action1(

	id TEXT PRIMARY KEY,
	testReport_TestId TEXT, -- Foreign Key to testReport_Test table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action1_modifierExtension_extension
	operation TEXT, -- Foreign Key to testReport_Operation table
	assert TEXT, -- Foreign Key to testReport_Assert table

	FOREIGN KEY (testReport_TestId)
		REFERENCES testReport_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testReport_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Teardown(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Teardown_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Teardown_modifierExtension_extension
	"action" BOOLEAN, -- true if 1+ rows in TestReport_Action2 correspond to this entry

);

CREATE TABLE testReport_Action2(

	id TEXT PRIMARY KEY,
	testReport_TeardownId TEXT, -- Foreign Key to testReport_Teardown table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action2_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action2_modifierExtension_extension
	operation TEXT, -- Foreign Key to testReport_Operation table

	FOREIGN KEY (testReport_TeardownId)
		REFERENCES testReport_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript(

	resourceType TEXT, -- resourceType: testScript
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_jurisdiction_codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	origin BOOLEAN, -- true if 1+ rows in TestScript_Origin correspond to this entry
	destination BOOLEAN, -- true if 1+ rows in TestScript_Destination correspond to this entry
	metadata TEXT, -- Foreign Key to testScript_Metadata table
	fixture BOOLEAN, -- true if 1+ rows in TestScript_Fixture correspond to this entry
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_profile_reference
	variable BOOLEAN, -- true if 1+ rows in TestScript_Variable correspond to this entry
	setup TEXT, -- Foreign Key to testScript_Setup table
	test BOOLEAN, -- true if 1+ rows in TestScript_Test correspond to this entry
	teardown TEXT, -- Foreign Key to testScript_Teardown table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (metadata)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (setup)
		REFERENCES testScript_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (teardown)
		REFERENCES testScript_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Origin(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Origin_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Origin_modifierExtension_extension
	"index" INTEGER,
	_index TEXT, -- Foreign Key to element table
	"profile" TEXT, -- Foreign Key to coding table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_index)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("profile")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Destination(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Destination_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Destination_modifierExtension_extension
	"index" INTEGER,
	_index TEXT, -- Foreign Key to element table
	"profile" TEXT, -- Foreign Key to coding table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_index)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("profile")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Metadata(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Metadata_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Metadata_modifierExtension_extension
	link BOOLEAN, -- true if 1+ rows in TestScript_Link correspond to this entry
	capability BOOLEAN, -- true if 1+ rows in TestScript_Capability correspond to this entry

);

CREATE TABLE testScript_Link(

	id TEXT PRIMARY KEY,
	testScript_MetadataId TEXT, -- Foreign Key to testScript_Metadata table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Link_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Link_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (testScript_MetadataId)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Capability(

	id TEXT PRIMARY KEY,
	testScript_MetadataId TEXT, -- Foreign Key to testScript_Metadata table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability_modifierExtension_extension
	"required" BOOLEAN,
	_required TEXT, -- Foreign Key to element table
	validated BOOLEAN,
	_validated TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	origin BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability_origin_integer
	_origin BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__origin_element
	destination INTEGER,
	_destination TEXT, -- Foreign Key to element table
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability_link_uri
	_link BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__link_element
	capabilities TEXT,

	FOREIGN KEY (testScript_MetadataId)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_required)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validated)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_destination)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Fixture(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Fixture_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Fixture_modifierExtension_extension
	autocreate BOOLEAN,
	_autocreate TEXT, -- Foreign Key to element table
	autodelete BOOLEAN,
	_autodelete TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_autocreate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_autodelete)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Variable(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Variable_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Variable_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	defaultValue TEXT,
	_defaultValue TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	headerField TEXT,
	_headerField TEXT, -- Foreign Key to element table
	hint TEXT,
	_hint TEXT, -- Foreign Key to element table
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	sourceId TEXT, -- Foreign Key to id table
	_sourceId TEXT, -- Foreign Key to element table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValue)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_headerField)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_hint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Setup(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Setup_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Setup_modifierExtension_extension
	"action" BOOLEAN, -- true if 1+ rows in TestScript_Action correspond to this entry

);

CREATE TABLE testScript_Action(

	id TEXT PRIMARY KEY,
	testScript_SetupId TEXT, -- Foreign Key to testScript_Setup table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action_modifierExtension_extension
	operation TEXT, -- Foreign Key to testScript_Operation table
	assert TEXT, -- Foreign Key to testScript_Assert table

	FOREIGN KEY (testScript_SetupId)
		REFERENCES testScript_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testScript_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Operation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Operation_modifierExtension_extension
	"type" TEXT, -- Foreign Key to coding table
	"resource" TEXT,
	_resource TEXT, -- Foreign Key to element table
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	accept TEXT,
	_accept TEXT, -- Foreign Key to element table
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	destination INTEGER,
	_destination TEXT, -- Foreign Key to element table
	encodeRequestUrl BOOLEAN,
	_encodeRequestUrl TEXT, -- Foreign Key to element table
	"method" TEXT CHECK( "method" IN ('delete','get','options','patch','post','put','head') ),
	_method TEXT, -- Foreign Key to element table
	origin INTEGER,
	_origin TEXT, -- Foreign Key to element table
	params TEXT,
	_params TEXT, -- Foreign Key to element table
	requestHeader BOOLEAN, -- true if 1+ rows in TestScript_RequestHeader correspond to this entry
	requestId TEXT, -- Foreign Key to id table
	_requestId TEXT, -- Foreign Key to element table
	responseId TEXT, -- Foreign Key to id table
	_responseId TEXT, -- Foreign Key to element table
	sourceId TEXT, -- Foreign Key to id table
	_sourceId TEXT, -- Foreign Key to element table
	targetId TEXT, -- Foreign Key to id table
	_targetId TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resource)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_accept)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_destination)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_encodeRequestUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_method)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_origin)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_params)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responseId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responseId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_RequestHeader(

	id TEXT PRIMARY KEY,
	testScript_OperationId TEXT, -- Foreign Key to testScript_Operation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_RequestHeader_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_RequestHeader_modifierExtension_extension
	field TEXT,
	_field TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (testScript_OperationId)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_field)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Assert(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Assert_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Assert_modifierExtension_extension
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	direction TEXT CHECK( direction IN ('response','request') ),
	_direction TEXT, -- Foreign Key to element table
	compareToSourceId TEXT,
	_compareToSourceId TEXT, -- Foreign Key to element table
	compareToSourceExpression TEXT,
	_compareToSourceExpression TEXT, -- Foreign Key to element table
	compareToSourcePath TEXT,
	_compareToSourcePath TEXT, -- Foreign Key to element table
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	headerField TEXT,
	_headerField TEXT, -- Foreign Key to element table
	minimumId TEXT,
	_minimumId TEXT, -- Foreign Key to element table
	navigationLinks BOOLEAN,
	_navigationLinks TEXT, -- Foreign Key to element table
	operator TEXT CHECK( operator IN ('equals','notEquals','in','notIn','greaterThan','lessThan','empty','notEmpty','contains','notContains','eval') ),
	_operator TEXT, -- Foreign Key to element table
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	requestMethod TEXT CHECK( requestMethod IN ('delete','get','options','patch','post','put','head') ),
	_requestMethod TEXT, -- Foreign Key to element table
	requestURL TEXT,
	_requestURL TEXT, -- Foreign Key to element table
	"resource" TEXT,
	_resource TEXT, -- Foreign Key to element table
	response TEXT CHECK( response IN ('okay','created','noContent','notModified','bad','forbidden','notFound','methodNotAllowed','conflict','gone','preconditionFailed','unprocessable') ),
	_response TEXT, -- Foreign Key to element table
	responseCode TEXT,
	_responseCode TEXT, -- Foreign Key to element table
	sourceId TEXT, -- Foreign Key to id table
	_sourceId TEXT, -- Foreign Key to element table
	validateProfileId TEXT, -- Foreign Key to id table
	_validateProfileId TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	warningOnly BOOLEAN,
	_warningOnly TEXT, -- Foreign Key to element table

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_direction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compareToSourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compareToSourceExpression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compareToSourcePath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_headerField)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minimumId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_navigationLinks)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_operator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestMethod)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestURL)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resource)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_response)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responseCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validateProfileId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validateProfileId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_warningOnly)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Test(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Test_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Test_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"action" BOOLEAN, -- true if 1+ rows in TestScript_Action1 correspond to this entry

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Action1(

	id TEXT PRIMARY KEY,
	testScript_TestId TEXT, -- Foreign Key to testScript_Test table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action1_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action1_modifierExtension_extension
	operation TEXT, -- Foreign Key to testScript_Operation table
	assert TEXT, -- Foreign Key to testScript_Assert table

	FOREIGN KEY (testScript_TestId)
		REFERENCES testScript_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testScript_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Teardown(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Teardown_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Teardown_modifierExtension_extension
	"action" BOOLEAN, -- true if 1+ rows in TestScript_Action2 correspond to this entry

);

CREATE TABLE testScript_Action2(

	id TEXT PRIMARY KEY,
	testScript_TeardownId TEXT, -- Foreign Key to testScript_Teardown table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action2_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action2_modifierExtension_extension
	operation TEXT, -- Foreign Key to testScript_Operation table

	FOREIGN KEY (testScript_TeardownId)
		REFERENCES testScript_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet(

	resourceType TEXT, -- resourceType: valueSet
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_modifierExtension_extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_identifier_identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_contact_contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_useContext_usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_jurisdiction_codeableConcept
	immutable BOOLEAN,
	_immutable TEXT, -- Foreign Key to element table
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	compose TEXT, -- Foreign Key to valueSet_Compose table
	expansion TEXT, -- Foreign Key to valueSet_Expansion table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_immutable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (compose)
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expansion)
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Compose(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose_modifierExtension_extension
	lockedDate DATE,
	_lockedDate TEXT, -- Foreign Key to element table
	inactive BOOLEAN,
	_inactive TEXT, -- Foreign Key to element table
	"include" BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose_include_valueSet_Include
	exclude BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose_exclude_valueSet_Include

	FOREIGN KEY (_lockedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inactive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Include(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Include_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Include_modifierExtension_extension
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	concept BOOLEAN, -- true if 1+ rows in ValueSet_Concept correspond to this entry
	"filter" BOOLEAN, -- true if 1+ rows in ValueSet_Filter correspond to this entry
	valueSet BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Include_valueSet_canonical

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Concept(

	id TEXT PRIMARY KEY,
	valueSet_IncludeId TEXT, -- Foreign Key to valueSet_Include table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Concept_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Concept_modifierExtension_extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	designation BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Concept_designation_valueSet_Designation

	FOREIGN KEY (valueSet_IncludeId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Designation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Designation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Designation_modifierExtension_extension
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"use" TEXT, -- Foreign Key to coding table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("use")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Filter(

	id TEXT PRIMARY KEY,
	valueSet_IncludeId TEXT, -- Foreign Key to valueSet_Include table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Filter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Filter_modifierExtension_extension
	property TEXT,
	_property TEXT, -- Foreign Key to element table
	op TEXT CHECK( op IN ('=','is-a','descendent-of','is-not-a','regex','in','not-in','generalizes','exists') ),
	_op TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (valueSet_IncludeId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_property)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_op)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Expansion(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Expansion_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Expansion_modifierExtension_extension
	identifier TEXT,
	_identifier TEXT, -- Foreign Key to element table
	"timestamp" DATETIME,
	_timestamp TEXT, -- Foreign Key to element table
	total INTEGER,
	_total TEXT, -- Foreign Key to element table
	offset INTEGER,
	_offset TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ rows in ValueSet_Parameter correspond to this entry
	"contains" BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Expansion_contains_valueSet_Contains

	FOREIGN KEY (_identifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timestamp)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_total)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_offset)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Parameter(

	id TEXT PRIMARY KEY,
	valueSet_ExpansionId TEXT, -- Foreign Key to valueSet_Expansion table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Parameter_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Parameter_modifierExtension_extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (valueSet_ExpansionId)
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Contains(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains_modifierExtension_extension
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	abstract BOOLEAN,
	_abstract TEXT, -- Foreign Key to element table
	inactive BOOLEAN,
	_inactive TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	designation BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains_designation_valueSet_Designation
	"contains" BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains_contains_valueSet_Contains

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abstract)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inactive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult(

	resourceType TEXT, -- resourceType: verificationResult
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_modifierExtension_extension
	"target" BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_target_reference
	targetLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_targetLocation_string
	_targetLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__targetLocation_element
	need TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusDate DATETIME,
	_statusDate TEXT, -- Foreign Key to element table
	validationType TEXT, -- Foreign Key to codeableConcept table
	validationProcess BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_validationProcess_codeableConcept
	frequency TEXT, -- Foreign Key to timing table
	lastPerformed DATETIME,
	_lastPerformed TEXT, -- Foreign Key to element table
	nextScheduled DATE,
	_nextScheduled TEXT, -- Foreign Key to element table
	failureAction TEXT, -- Foreign Key to codeableConcept table
	primarySource BOOLEAN, -- true if 1+ rows in VerificationResult_PrimarySource correspond to this entry
	attestation TEXT, -- Foreign Key to verificationResult_Attestation table
	validator BOOLEAN, -- true if 1+ rows in VerificationResult_Validator correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (need)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validationType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (frequency)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastPerformed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_nextScheduled)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (failureAction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attestation)
		REFERENCES verificationResult_Attestation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult_PrimarySource(

	id TEXT PRIMARY KEY,
	verificationResultId TEXT, -- Foreign Key to verificationResult table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource_modifierExtension_extension
	who TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource_type_codeableConcept
	communicationMethod BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource_communicationMethod_codeableConcept
	validationStatus TEXT, -- Foreign Key to codeableConcept table
	validationDate DATETIME,
	_validationDate TEXT, -- Foreign Key to element table
	canPushUpdates TEXT, -- Foreign Key to codeableConcept table
	pushTypeAvailable BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource_pushTypeAvailable_codeableConcept

	FOREIGN KEY (verificationResultId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validationStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (canPushUpdates)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult_Attestation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Attestation_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Attestation_modifierExtension_extension
	who TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table
	communicationMethod TEXT, -- Foreign Key to codeableConcept table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	sourceIdentityCertificate TEXT,
	_sourceIdentityCertificate TEXT, -- Foreign Key to element table
	proxyIdentityCertificate TEXT,
	_proxyIdentityCertificate TEXT, -- Foreign Key to element table
	proxySignature TEXT, -- Foreign Key to signature table
	sourceSignature TEXT, -- Foreign Key to signature table

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (communicationMethod)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceIdentityCertificate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_proxyIdentityCertificate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (proxySignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult_Validator(

	id TEXT PRIMARY KEY,
	verificationResultId TEXT, -- Foreign Key to verificationResult table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Validator_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Validator_modifierExtension_extension
	organization TEXT, -- Foreign Key to reference table
	identityCertificate TEXT,
	_identityCertificate TEXT, -- Foreign Key to element table
	attestationSignature TEXT, -- Foreign Key to signature table

	FOREIGN KEY (verificationResultId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identityCertificate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attestationSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE visionPrescription(

	resourceType TEXT, -- resourceType: visionPrescription
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_contained_resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_modifierExtension_extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_identifier_identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	dateWritten DATETIME,
	_dateWritten TEXT, -- Foreign Key to element table
	prescriber TEXT, -- Foreign Key to reference table
	lensSpecification BOOLEAN, -- true if 1+ rows in VisionPrescription_LensSpecification correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateWritten)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (prescriber)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE visionPrescription_LensSpecification(

	id TEXT PRIMARY KEY,
	visionPrescriptionId TEXT, -- Foreign Key to visionPrescription table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_LensSpecification_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_LensSpecification_modifierExtension_extension
	product TEXT, -- Foreign Key to codeableConcept table
	eye TEXT CHECK( eye IN ('right','left') ),
	_eye TEXT, -- Foreign Key to element table
	sphere REAL,
	_sphere TEXT, -- Foreign Key to element table
	cylinder REAL,
	_cylinder TEXT, -- Foreign Key to element table
	axis INTEGER,
	_axis TEXT, -- Foreign Key to element table
	prism BOOLEAN, -- true if 1+ rows in VisionPrescription_Prism correspond to this entry
	"add" REAL,
	_add TEXT, -- Foreign Key to element table
	power REAL,
	_power TEXT, -- Foreign Key to element table
	backCurve REAL,
	_backCurve TEXT, -- Foreign Key to element table
	diameter REAL,
	_diameter TEXT, -- Foreign Key to element table
	duration TEXT, -- Foreign Key to quantity table
	color TEXT,
	_color TEXT, -- Foreign Key to element table
	brand TEXT,
	_brand TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_LensSpecification_note_annotation

	FOREIGN KEY (visionPrescriptionId)
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (product)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_eye)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sphere)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cylinder)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_axis)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_add)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_power)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_backCurve)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_diameter)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_color)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_brand)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE visionPrescription_Prism(

	id TEXT PRIMARY KEY,
	visionPrescription_LensSpecificationId TEXT, -- Foreign Key to visionPrescription_LensSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_Prism_extension_extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_Prism_modifierExtension_extension
	amount REAL,
	_amount TEXT, -- Foreign Key to element table
	base TEXT CHECK( base IN ('up','down','in','out') ),
	_base TEXT, -- Foreign Key to element table

	FOREIGN KEY (visionPrescription_LensSpecificationId)
		REFERENCES visionPrescription_LensSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amount)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_base)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);


CREATE TABLE element_extension_extension(
	id TEXT PRIMARY KEY,
	element_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (element_extensionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE extension_extension_extension(
	id TEXT PRIMARY KEY,
	extension_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (extension_extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE narrative_extension_extension(
	id TEXT PRIMARY KEY,
	narrative_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (narrative_extensionId)
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE annotation_extension_extension(
	id TEXT PRIMARY KEY,
	annotation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (annotation_extensionId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE attachment_extension_extension(
	id TEXT PRIMARY KEY,
	attachment_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (attachment_extensionId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE identifier_extension_extension(
	id TEXT PRIMARY KEY,
	identifier_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (identifier_extensionId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeableConcept_extension_extension(
	id TEXT PRIMARY KEY,
	codeableConcept_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeableConcept_extensionId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeableConcept_coding_coding(
	id TEXT PRIMARY KEY,
	codeableConcept_codingId TEXT,
	codingId TEXT,

	FOREIGN KEY (codeableConcept_codingId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coding_extension_extension(
	id TEXT PRIMARY KEY,
	coding_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coding_extensionId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE quantity_extension_extension(
	id TEXT PRIMARY KEY,
	quantity_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (quantity_extensionId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE duration_extension_extension(
	id TEXT PRIMARY KEY,
	duration_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (duration_extensionId)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE distance_extension_extension(
	id TEXT PRIMARY KEY,
	distance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (distance_extensionId)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE count_extension_extension(
	id TEXT PRIMARY KEY,
	count_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (count_extensionId)
		REFERENCES "count" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE money_extension_extension(
	id TEXT PRIMARY KEY,
	money_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (money_extensionId)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE age_extension_extension(
	id TEXT PRIMARY KEY,
	age_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (age_extensionId)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE range_extension_extension(
	id TEXT PRIMARY KEY,
	range_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (range_extensionId)
		REFERENCES "range" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE period_extension_extension(
	id TEXT PRIMARY KEY,
	period_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (period_extensionId)
		REFERENCES "period" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE ratio_extension_extension(
	id TEXT PRIMARY KEY,
	ratio_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (ratio_extensionId)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE reference_extension_extension(
	id TEXT PRIMARY KEY,
	reference_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (reference_extensionId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE sampledData_extension_extension(
	id TEXT PRIMARY KEY,
	sampledData_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (sampledData_extensionId)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE signature_extension_extension(
	id TEXT PRIMARY KEY,
	signature_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (signature_extensionId)
		REFERENCES "signature" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE signature_type_coding(
	id TEXT PRIMARY KEY,
	signature_typeId TEXT,
	codingId TEXT,

	FOREIGN KEY (signature_typeId)
		REFERENCES "signature" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE humanName_extension_extension(
	id TEXT PRIMARY KEY,
	humanName_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (humanName_extensionId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE humanName_given_string(
	id TEXT PRIMARY KEY,
	humanName_givenId TEXT,
	stringId TEXT,

	FOREIGN KEY (humanName_givenId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE humanName__given_element(
	id TEXT PRIMARY KEY,
	humanName__givenId TEXT,
	elementId TEXT,

	FOREIGN KEY (humanName__givenId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE humanName_prefix_string(
	id TEXT PRIMARY KEY,
	humanName_prefixId TEXT,
	stringId TEXT,

	FOREIGN KEY (humanName_prefixId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE humanName__prefix_element(
	id TEXT PRIMARY KEY,
	humanName__prefixId TEXT,
	elementId TEXT,

	FOREIGN KEY (humanName__prefixId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE humanName_suffix_string(
	id TEXT PRIMARY KEY,
	humanName_suffixId TEXT,
	stringId TEXT,

	FOREIGN KEY (humanName_suffixId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE humanName__suffix_element(
	id TEXT PRIMARY KEY,
	humanName__suffixId TEXT,
	elementId TEXT,

	FOREIGN KEY (humanName__suffixId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE address_extension_extension(
	id TEXT PRIMARY KEY,
	address_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (address_extensionId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE address_line_string(
	id TEXT PRIMARY KEY,
	address_lineId TEXT,
	stringId TEXT,

	FOREIGN KEY (address_lineId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE address__line_element(
	id TEXT PRIMARY KEY,
	address__lineId TEXT,
	elementId TEXT,

	FOREIGN KEY (address__lineId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contactPoint_extension_extension(
	id TEXT PRIMARY KEY,
	contactPoint_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contactPoint_extensionId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_extension_extension(
	id TEXT PRIMARY KEY,
	timing_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (timing_extensionId)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	timing_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (timing_modifierExtensionId)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing__event_element(
	id TEXT PRIMARY KEY,
	timing__eventId TEXT,
	elementId TEXT,

	FOREIGN KEY (timing__eventId)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_Repeat_extension_extension(
	id TEXT PRIMARY KEY,
	timing_Repeat_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (timing_Repeat_extensionId)
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_Repeat_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	timing_Repeat_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (timing_Repeat_modifierExtensionId)
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_Repeat_dayOfWeek_code(
	id TEXT PRIMARY KEY,
	timing_Repeat_dayOfWeekId TEXT,
	codeId TEXT,

	FOREIGN KEY (timing_Repeat_dayOfWeekId)
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_Repeat__dayOfWeek_element(
	id TEXT PRIMARY KEY,
	timing_Repeat__dayOfWeekId TEXT,
	elementId TEXT,

	FOREIGN KEY (timing_Repeat__dayOfWeekId)
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_Repeat__timeOfDay_element(
	id TEXT PRIMARY KEY,
	timing_Repeat__timeOfDayId TEXT,
	elementId TEXT,

	FOREIGN KEY (timing_Repeat__timeOfDayId)
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_Repeat__when_element(
	id TEXT PRIMARY KEY,
	timing_Repeat__whenId TEXT,
	elementId TEXT,

	FOREIGN KEY (timing_Repeat__whenId)
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE meta_extension_extension(
	id TEXT PRIMARY KEY,
	meta_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (meta_extensionId)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE meta_profile_canonical(
	id TEXT PRIMARY KEY,
	meta_profileId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (meta_profileId)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE meta_security_coding(
	id TEXT PRIMARY KEY,
	meta_securityId TEXT,
	codingId TEXT,

	FOREIGN KEY (meta_securityId)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE meta_tag_coding(
	id TEXT PRIMARY KEY,
	meta_tagId TEXT,
	codingId TEXT,

	FOREIGN KEY (meta_tagId)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contactDetail_extension_extension(
	id TEXT PRIMARY KEY,
	contactDetail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contactDetail_extensionId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contactDetail_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	contactDetail_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (contactDetail_telecomId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contributor_extension_extension(
	id TEXT PRIMARY KEY,
	contributor_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contributor_extensionId)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contributor_contact_contactDetail(
	id TEXT PRIMARY KEY,
	contributor_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (contributor_contactId)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_extension_extension(
	id TEXT PRIMARY KEY,
	dataRequirement_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dataRequirement_extensionId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_profile_canonical(
	id TEXT PRIMARY KEY,
	dataRequirement_profileId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (dataRequirement_profileId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_mustSupport_string(
	id TEXT PRIMARY KEY,
	dataRequirement_mustSupportId TEXT,
	stringId TEXT,

	FOREIGN KEY (dataRequirement_mustSupportId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement__mustSupport_element(
	id TEXT PRIMARY KEY,
	dataRequirement__mustSupportId TEXT,
	elementId TEXT,

	FOREIGN KEY (dataRequirement__mustSupportId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_CodeFilter_extension_extension(
	id TEXT PRIMARY KEY,
	dataRequirement_CodeFilter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dataRequirement_CodeFilter_extensionId)
		REFERENCES dataRequirement_CodeFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_CodeFilter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	dataRequirement_CodeFilter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dataRequirement_CodeFilter_modifierExtensionId)
		REFERENCES dataRequirement_CodeFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_CodeFilter_code_coding(
	id TEXT PRIMARY KEY,
	dataRequirement_CodeFilter_codeId TEXT,
	codingId TEXT,

	FOREIGN KEY (dataRequirement_CodeFilter_codeId)
		REFERENCES dataRequirement_CodeFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_DateFilter_extension_extension(
	id TEXT PRIMARY KEY,
	dataRequirement_DateFilter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dataRequirement_DateFilter_extensionId)
		REFERENCES dataRequirement_DateFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_DateFilter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	dataRequirement_DateFilter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dataRequirement_DateFilter_modifierExtensionId)
		REFERENCES dataRequirement_DateFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_Sort_extension_extension(
	id TEXT PRIMARY KEY,
	dataRequirement_Sort_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dataRequirement_Sort_extensionId)
		REFERENCES dataRequirement_Sort (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dataRequirement_Sort_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	dataRequirement_Sort_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dataRequirement_Sort_modifierExtensionId)
		REFERENCES dataRequirement_Sort (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE parameterDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	parameterDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (parameterDefinition_extensionId)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedArtifact_extension_extension(
	id TEXT PRIMARY KEY,
	relatedArtifact_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (relatedArtifact_extensionId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE triggerDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	triggerDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (triggerDefinition_extensionId)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE triggerDefinition_data_dataRequirement(
	id TEXT PRIMARY KEY,
	triggerDefinition_dataId TEXT,
	dataRequirementId TEXT,

	FOREIGN KEY (triggerDefinition_dataId)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE usageContext_extension_extension(
	id TEXT PRIMARY KEY,
	usageContext_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (usageContext_extensionId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dosage_extension_extension(
	id TEXT PRIMARY KEY,
	dosage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dosage_extensionId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dosage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	dosage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dosage_modifierExtensionId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dosage_additionalInstruction_codeableConcept(
	id TEXT PRIMARY KEY,
	dosage_additionalInstructionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (dosage_additionalInstructionId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dosage_DoseAndRate_extension_extension(
	id TEXT PRIMARY KEY,
	dosage_DoseAndRate_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dosage_DoseAndRate_extensionId)
		REFERENCES dosage_DoseAndRate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE dosage_DoseAndRate_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	dosage_DoseAndRate_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (dosage_DoseAndRate_modifierExtensionId)
		REFERENCES dosage_DoseAndRate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE population_extension_extension(
	id TEXT PRIMARY KEY,
	population_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (population_extensionId)
		REFERENCES "population" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE population_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	population_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (population_modifierExtensionId)
		REFERENCES "population" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE productShelfLife_extension_extension(
	id TEXT PRIMARY KEY,
	productShelfLife_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (productShelfLife_extensionId)
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE productShelfLife_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	productShelfLife_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (productShelfLife_modifierExtensionId)
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE productShelfLife_specialPrecautionsForStorage_codeableConcept(
	id TEXT PRIMARY KEY,
	productShelfLife_specialPrecautionsForStorageId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (productShelfLife_specialPrecautionsForStorageId)
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE prodCharacteristic_extension_extension(
	id TEXT PRIMARY KEY,
	prodCharacteristic_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (prodCharacteristic_extensionId)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE prodCharacteristic_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	prodCharacteristic_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (prodCharacteristic_modifierExtensionId)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE prodCharacteristic_color_string(
	id TEXT PRIMARY KEY,
	prodCharacteristic_colorId TEXT,
	stringId TEXT,

	FOREIGN KEY (prodCharacteristic_colorId)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE prodCharacteristic__color_element(
	id TEXT PRIMARY KEY,
	prodCharacteristic__colorId TEXT,
	elementId TEXT,

	FOREIGN KEY (prodCharacteristic__colorId)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE prodCharacteristic_imprint_string(
	id TEXT PRIMARY KEY,
	prodCharacteristic_imprintId TEXT,
	stringId TEXT,

	FOREIGN KEY (prodCharacteristic_imprintId)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE prodCharacteristic__imprint_element(
	id TEXT PRIMARY KEY,
	prodCharacteristic__imprintId TEXT,
	elementId TEXT,

	FOREIGN KEY (prodCharacteristic__imprintId)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE prodCharacteristic_image_attachment(
	id TEXT PRIMARY KEY,
	prodCharacteristic_imageId TEXT,
	attachmentId TEXT,

	FOREIGN KEY (prodCharacteristic_imageId)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE marketingStatus_extension_extension(
	id TEXT PRIMARY KEY,
	marketingStatus_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (marketingStatus_extensionId)
		REFERENCES marketingStatus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE marketingStatus_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	marketingStatus_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (marketingStatus_modifierExtensionId)
		REFERENCES marketingStatus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceAmount_extension_extension(
	id TEXT PRIMARY KEY,
	substanceAmount_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceAmount_extensionId)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceAmount_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceAmount_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceAmount_modifierExtensionId)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceAmount_ReferenceRange_extension_extension(
	id TEXT PRIMARY KEY,
	substanceAmount_ReferenceRange_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceAmount_ReferenceRange_extensionId)
		REFERENCES substanceAmount_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceAmount_ReferenceRange_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceAmount_ReferenceRange_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceAmount_ReferenceRange_modifierExtensionId)
		REFERENCES substanceAmount_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE expression_extension_extension(
	id TEXT PRIMARY KEY,
	expression_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (expression_extensionId)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_extensionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_modifierExtensionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition__representation_element(
	id TEXT PRIMARY KEY,
	elementDefinition__representationId TEXT,
	elementId TEXT,

	FOREIGN KEY (elementDefinition__representationId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_code_coding(
	id TEXT PRIMARY KEY,
	elementDefinition_codeId TEXT,
	codingId TEXT,

	FOREIGN KEY (elementDefinition_codeId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_alias_string(
	id TEXT PRIMARY KEY,
	elementDefinition_aliasId TEXT,
	stringId TEXT,

	FOREIGN KEY (elementDefinition_aliasId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition__alias_element(
	id TEXT PRIMARY KEY,
	elementDefinition__aliasId TEXT,
	elementId TEXT,

	FOREIGN KEY (elementDefinition__aliasId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_condition_id(
	id TEXT PRIMARY KEY,
	elementDefinition_conditionId TEXT,
	idId TEXT,

	FOREIGN KEY (elementDefinition_conditionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (idId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition__condition_element(
	id TEXT PRIMARY KEY,
	elementDefinition__conditionId TEXT,
	elementId TEXT,

	FOREIGN KEY (elementDefinition__conditionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Slicing_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Slicing_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Slicing_extensionId)
		REFERENCES elementDefinition_Slicing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Slicing_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Slicing_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Slicing_modifierExtensionId)
		REFERENCES elementDefinition_Slicing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Discriminator_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Discriminator_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Discriminator_extensionId)
		REFERENCES elementDefinition_Discriminator (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Discriminator_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Discriminator_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Discriminator_modifierExtensionId)
		REFERENCES elementDefinition_Discriminator (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Base_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Base_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Base_extensionId)
		REFERENCES elementDefinition_Base (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Base_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Base_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Base_modifierExtensionId)
		REFERENCES elementDefinition_Base (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Type_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Type_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Type_extensionId)
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Type_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Type_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Type_modifierExtensionId)
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Type_profile_canonical(
	id TEXT PRIMARY KEY,
	elementDefinition_Type_profileId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (elementDefinition_Type_profileId)
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Type_targetProfile_canonical(
	id TEXT PRIMARY KEY,
	elementDefinition_Type_targetProfileId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (elementDefinition_Type_targetProfileId)
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Type__aggregation_element(
	id TEXT PRIMARY KEY,
	elementDefinition_Type__aggregationId TEXT,
	elementId TEXT,

	FOREIGN KEY (elementDefinition_Type__aggregationId)
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Example_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Example_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Example_extensionId)
		REFERENCES elementDefinition_Example (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Example_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Example_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Example_modifierExtensionId)
		REFERENCES elementDefinition_Example (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Constraint_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Constraint_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Constraint_extensionId)
		REFERENCES elementDefinition_Constraint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Constraint_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Constraint_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Constraint_modifierExtensionId)
		REFERENCES elementDefinition_Constraint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Binding_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Binding_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Binding_extensionId)
		REFERENCES elementDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Binding_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Binding_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Binding_modifierExtensionId)
		REFERENCES elementDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Mapping_extension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Mapping_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Mapping_extensionId)
		REFERENCES elementDefinition_Mapping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE elementDefinition_Mapping_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	elementDefinition_Mapping_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (elementDefinition_Mapping_modifierExtensionId)
		REFERENCES elementDefinition_Mapping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_contained_resourceList(
	id TEXT PRIMARY KEY,
	account_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (account_containedId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_extension_extension(
	id TEXT PRIMARY KEY,
	account_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (account_extensionId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	account_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (account_modifierExtensionId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_identifier_identifier(
	id TEXT PRIMARY KEY,
	account_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (account_identifierId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_subject_reference(
	id TEXT PRIMARY KEY,
	account_subjectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (account_subjectId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_Coverage_extension_extension(
	id TEXT PRIMARY KEY,
	account_Coverage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (account_Coverage_extensionId)
		REFERENCES account_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_Coverage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	account_Coverage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (account_Coverage_modifierExtensionId)
		REFERENCES account_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_Guarantor_extension_extension(
	id TEXT PRIMARY KEY,
	account_Guarantor_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (account_Guarantor_extensionId)
		REFERENCES account_Guarantor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE account_Guarantor_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	account_Guarantor_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (account_Guarantor_modifierExtensionId)
		REFERENCES account_Guarantor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	activityDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (activityDefinition_containedId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	activityDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (activityDefinition_extensionId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	activityDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (activityDefinition_modifierExtensionId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	activityDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (activityDefinition_identifierId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	activityDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (activityDefinition_contactId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	activityDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (activityDefinition_useContextId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	activityDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (activityDefinition_jurisdictionId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	activityDefinition_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (activityDefinition_topicId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_author_contactDetail(
	id TEXT PRIMARY KEY,
	activityDefinition_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (activityDefinition_authorId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_editor_contactDetail(
	id TEXT PRIMARY KEY,
	activityDefinition_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (activityDefinition_editorId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	activityDefinition_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (activityDefinition_reviewerId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	activityDefinition_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (activityDefinition_endorserId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	activityDefinition_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (activityDefinition_relatedArtifactId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_library_canonical(
	id TEXT PRIMARY KEY,
	activityDefinition_libraryId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (activityDefinition_libraryId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_dosage_dosage(
	id TEXT PRIMARY KEY,
	activityDefinition_dosageId TEXT,
	dosageId TEXT,

	FOREIGN KEY (activityDefinition_dosageId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_bodySite_codeableConcept(
	id TEXT PRIMARY KEY,
	activityDefinition_bodySiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (activityDefinition_bodySiteId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_specimenRequirement_reference(
	id TEXT PRIMARY KEY,
	activityDefinition_specimenRequirementId TEXT,
	referenceId TEXT,

	FOREIGN KEY (activityDefinition_specimenRequirementId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_observationRequirement_reference(
	id TEXT PRIMARY KEY,
	activityDefinition_observationRequirementId TEXT,
	referenceId TEXT,

	FOREIGN KEY (activityDefinition_observationRequirementId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_observationResultRequirement_reference(
	id TEXT PRIMARY KEY,
	activityDefinition_observationResultRequirementId TEXT,
	referenceId TEXT,

	FOREIGN KEY (activityDefinition_observationResultRequirementId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_Participant_extension_extension(
	id TEXT PRIMARY KEY,
	activityDefinition_Participant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (activityDefinition_Participant_extensionId)
		REFERENCES activityDefinition_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_Participant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	activityDefinition_Participant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (activityDefinition_Participant_modifierExtensionId)
		REFERENCES activityDefinition_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_DynamicValue_extension_extension(
	id TEXT PRIMARY KEY,
	activityDefinition_DynamicValue_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (activityDefinition_DynamicValue_extensionId)
		REFERENCES activityDefinition_DynamicValue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE activityDefinition_DynamicValue_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	activityDefinition_DynamicValue_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (activityDefinition_DynamicValue_modifierExtensionId)
		REFERENCES activityDefinition_DynamicValue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_contained_resourceList(
	id TEXT PRIMARY KEY,
	adverseEvent_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (adverseEvent_containedId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_extension_extension(
	id TEXT PRIMARY KEY,
	adverseEvent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (adverseEvent_extensionId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	adverseEvent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (adverseEvent_modifierExtensionId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_category_codeableConcept(
	id TEXT PRIMARY KEY,
	adverseEvent_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (adverseEvent_categoryId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_resultingCondition_reference(
	id TEXT PRIMARY KEY,
	adverseEvent_resultingConditionId TEXT,
	referenceId TEXT,

	FOREIGN KEY (adverseEvent_resultingConditionId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_contributor_reference(
	id TEXT PRIMARY KEY,
	adverseEvent_contributorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (adverseEvent_contributorId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_subjectMedicalHistory_reference(
	id TEXT PRIMARY KEY,
	adverseEvent_subjectMedicalHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (adverseEvent_subjectMedicalHistoryId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_referenceDocument_reference(
	id TEXT PRIMARY KEY,
	adverseEvent_referenceDocumentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (adverseEvent_referenceDocumentId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_study_reference(
	id TEXT PRIMARY KEY,
	adverseEvent_studyId TEXT,
	referenceId TEXT,

	FOREIGN KEY (adverseEvent_studyId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_SuspectEntity_extension_extension(
	id TEXT PRIMARY KEY,
	adverseEvent_SuspectEntity_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (adverseEvent_SuspectEntity_extensionId)
		REFERENCES adverseEvent_SuspectEntity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_SuspectEntity_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	adverseEvent_SuspectEntity_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (adverseEvent_SuspectEntity_modifierExtensionId)
		REFERENCES adverseEvent_SuspectEntity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_Causality_extension_extension(
	id TEXT PRIMARY KEY,
	adverseEvent_Causality_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (adverseEvent_Causality_extensionId)
		REFERENCES adverseEvent_Causality (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE adverseEvent_Causality_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	adverseEvent_Causality_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (adverseEvent_Causality_modifierExtensionId)
		REFERENCES adverseEvent_Causality (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_contained_resourceList(
	id TEXT PRIMARY KEY,
	allergyIntolerance_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (allergyIntolerance_containedId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_extension_extension(
	id TEXT PRIMARY KEY,
	allergyIntolerance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (allergyIntolerance_extensionId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	allergyIntolerance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (allergyIntolerance_modifierExtensionId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_identifier_identifier(
	id TEXT PRIMARY KEY,
	allergyIntolerance_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (allergyIntolerance_identifierId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance__category_element(
	id TEXT PRIMARY KEY,
	allergyIntolerance__categoryId TEXT,
	elementId TEXT,

	FOREIGN KEY (allergyIntolerance__categoryId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_note_annotation(
	id TEXT PRIMARY KEY,
	allergyIntolerance_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (allergyIntolerance_noteId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_Reaction_extension_extension(
	id TEXT PRIMARY KEY,
	allergyIntolerance_Reaction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (allergyIntolerance_Reaction_extensionId)
		REFERENCES allergyIntolerance_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_Reaction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	allergyIntolerance_Reaction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (allergyIntolerance_Reaction_modifierExtensionId)
		REFERENCES allergyIntolerance_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_Reaction_manifestation_codeableConcept(
	id TEXT PRIMARY KEY,
	allergyIntolerance_Reaction_manifestationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (allergyIntolerance_Reaction_manifestationId)
		REFERENCES allergyIntolerance_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE allergyIntolerance_Reaction_note_annotation(
	id TEXT PRIMARY KEY,
	allergyIntolerance_Reaction_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (allergyIntolerance_Reaction_noteId)
		REFERENCES allergyIntolerance_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_contained_resourceList(
	id TEXT PRIMARY KEY,
	appointment_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (appointment_containedId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_extension_extension(
	id TEXT PRIMARY KEY,
	appointment_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (appointment_extensionId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	appointment_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (appointment_modifierExtensionId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_identifier_identifier(
	id TEXT PRIMARY KEY,
	appointment_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (appointment_identifierId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_serviceCategory_codeableConcept(
	id TEXT PRIMARY KEY,
	appointment_serviceCategoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (appointment_serviceCategoryId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_serviceType_codeableConcept(
	id TEXT PRIMARY KEY,
	appointment_serviceTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (appointment_serviceTypeId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_specialty_codeableConcept(
	id TEXT PRIMARY KEY,
	appointment_specialtyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (appointment_specialtyId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	appointment_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (appointment_reasonCodeId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_reasonReference_reference(
	id TEXT PRIMARY KEY,
	appointment_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (appointment_reasonReferenceId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_supportingInformation_reference(
	id TEXT PRIMARY KEY,
	appointment_supportingInformationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (appointment_supportingInformationId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_slot_reference(
	id TEXT PRIMARY KEY,
	appointment_slotId TEXT,
	referenceId TEXT,

	FOREIGN KEY (appointment_slotId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_basedOn_reference(
	id TEXT PRIMARY KEY,
	appointment_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (appointment_basedOnId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_requestedPeriod_period(
	id TEXT PRIMARY KEY,
	appointment_requestedPeriodId TEXT,
	periodId TEXT,

	FOREIGN KEY (appointment_requestedPeriodId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (periodId)
		REFERENCES "period" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_Participant_extension_extension(
	id TEXT PRIMARY KEY,
	appointment_Participant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (appointment_Participant_extensionId)
		REFERENCES appointment_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_Participant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	appointment_Participant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (appointment_Participant_modifierExtensionId)
		REFERENCES appointment_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointment_Participant_type_codeableConcept(
	id TEXT PRIMARY KEY,
	appointment_Participant_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (appointment_Participant_typeId)
		REFERENCES appointment_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointmentResponse_contained_resourceList(
	id TEXT PRIMARY KEY,
	appointmentResponse_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (appointmentResponse_containedId)
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointmentResponse_extension_extension(
	id TEXT PRIMARY KEY,
	appointmentResponse_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (appointmentResponse_extensionId)
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointmentResponse_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	appointmentResponse_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (appointmentResponse_modifierExtensionId)
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointmentResponse_identifier_identifier(
	id TEXT PRIMARY KEY,
	appointmentResponse_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (appointmentResponse_identifierId)
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE appointmentResponse_participantType_codeableConcept(
	id TEXT PRIMARY KEY,
	appointmentResponse_participantTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (appointmentResponse_participantTypeId)
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_contained_resourceList(
	id TEXT PRIMARY KEY,
	auditEvent_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (auditEvent_containedId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_extension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_extensionId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_modifierExtensionId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_subtype_coding(
	id TEXT PRIMARY KEY,
	auditEvent_subtypeId TEXT,
	codingId TEXT,

	FOREIGN KEY (auditEvent_subtypeId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_purposeOfEvent_codeableConcept(
	id TEXT PRIMARY KEY,
	auditEvent_purposeOfEventId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (auditEvent_purposeOfEventId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Agent_extension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Agent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Agent_extensionId)
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Agent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Agent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Agent_modifierExtensionId)
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Agent_role_codeableConcept(
	id TEXT PRIMARY KEY,
	auditEvent_Agent_roleId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (auditEvent_Agent_roleId)
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Agent_policy_uri(
	id TEXT PRIMARY KEY,
	auditEvent_Agent_policyId TEXT,
	uriId TEXT,

	FOREIGN KEY (auditEvent_Agent_policyId)
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Agent__policy_element(
	id TEXT PRIMARY KEY,
	auditEvent_Agent__policyId TEXT,
	elementId TEXT,

	FOREIGN KEY (auditEvent_Agent__policyId)
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Agent_purposeOfUse_codeableConcept(
	id TEXT PRIMARY KEY,
	auditEvent_Agent_purposeOfUseId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (auditEvent_Agent_purposeOfUseId)
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Network_extension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Network_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Network_extensionId)
		REFERENCES auditEvent_Network (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Network_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Network_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Network_modifierExtensionId)
		REFERENCES auditEvent_Network (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Source_extension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Source_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Source_extensionId)
		REFERENCES auditEvent_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Source_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Source_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Source_modifierExtensionId)
		REFERENCES auditEvent_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Source_type_coding(
	id TEXT PRIMARY KEY,
	auditEvent_Source_typeId TEXT,
	codingId TEXT,

	FOREIGN KEY (auditEvent_Source_typeId)
		REFERENCES auditEvent_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Entity_extension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Entity_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Entity_extensionId)
		REFERENCES auditEvent_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Entity_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Entity_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Entity_modifierExtensionId)
		REFERENCES auditEvent_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Entity_securityLabel_coding(
	id TEXT PRIMARY KEY,
	auditEvent_Entity_securityLabelId TEXT,
	codingId TEXT,

	FOREIGN KEY (auditEvent_Entity_securityLabelId)
		REFERENCES auditEvent_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Detail_extension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Detail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Detail_extensionId)
		REFERENCES auditEvent_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE auditEvent_Detail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	auditEvent_Detail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (auditEvent_Detail_modifierExtensionId)
		REFERENCES auditEvent_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE basic_contained_resourceList(
	id TEXT PRIMARY KEY,
	basic_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (basic_containedId)
		REFERENCES basic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE basic_extension_extension(
	id TEXT PRIMARY KEY,
	basic_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (basic_extensionId)
		REFERENCES basic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE basic_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	basic_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (basic_modifierExtensionId)
		REFERENCES basic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE basic_identifier_identifier(
	id TEXT PRIMARY KEY,
	basic_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (basic_identifierId)
		REFERENCES basic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_contained_resourceList(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_containedId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_extension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_extensionId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_modifierExtensionId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_identifier_identifier(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_identifierId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_request_reference(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_requestId TEXT,
	referenceId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_requestId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_parent_reference(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_parentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_parentId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Collection_extension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Collection_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Collection_extensionId)
		REFERENCES biologicallyDerivedProduct_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Collection_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Collection_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Collection_modifierExtensionId)
		REFERENCES biologicallyDerivedProduct_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Processing_extension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Processing_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Processing_extensionId)
		REFERENCES biologicallyDerivedProduct_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Processing_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Processing_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Processing_modifierExtensionId)
		REFERENCES biologicallyDerivedProduct_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Manipulation_extension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Manipulation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Manipulation_extensionId)
		REFERENCES biologicallyDerivedProduct_Manipulation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Manipulation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Manipulation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Manipulation_modifierExtensionId)
		REFERENCES biologicallyDerivedProduct_Manipulation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Storage_extension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Storage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Storage_extensionId)
		REFERENCES biologicallyDerivedProduct_Storage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE biologicallyDerivedProduct_Storage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	biologicallyDerivedProduct_Storage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (biologicallyDerivedProduct_Storage_modifierExtensionId)
		REFERENCES biologicallyDerivedProduct_Storage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bodyStructure_contained_resourceList(
	id TEXT PRIMARY KEY,
	bodyStructure_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (bodyStructure_containedId)
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bodyStructure_extension_extension(
	id TEXT PRIMARY KEY,
	bodyStructure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bodyStructure_extensionId)
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bodyStructure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	bodyStructure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bodyStructure_modifierExtensionId)
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bodyStructure_identifier_identifier(
	id TEXT PRIMARY KEY,
	bodyStructure_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (bodyStructure_identifierId)
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bodyStructure_locationQualifier_codeableConcept(
	id TEXT PRIMARY KEY,
	bodyStructure_locationQualifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (bodyStructure_locationQualifierId)
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bodyStructure_image_attachment(
	id TEXT PRIMARY KEY,
	bodyStructure_imageId TEXT,
	attachmentId TEXT,

	FOREIGN KEY (bodyStructure_imageId)
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_link_bundle_Link(
	id TEXT PRIMARY KEY,
	bundle_linkId TEXT,
	bundle_LinkId TEXT,

	FOREIGN KEY (bundle_linkId)
		REFERENCES bundle (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_LinkId)
		REFERENCES bundle_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Link_extension_extension(
	id TEXT PRIMARY KEY,
	bundle_Link_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Link_extensionId)
		REFERENCES bundle_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Link_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	bundle_Link_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Link_modifierExtensionId)
		REFERENCES bundle_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Entry_extension_extension(
	id TEXT PRIMARY KEY,
	bundle_Entry_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Entry_extensionId)
		REFERENCES bundle_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Entry_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	bundle_Entry_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Entry_modifierExtensionId)
		REFERENCES bundle_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Entry_link_bundle_Link(
	id TEXT PRIMARY KEY,
	bundle_Entry_linkId TEXT,
	bundle_LinkId TEXT,

	FOREIGN KEY (bundle_Entry_linkId)
		REFERENCES bundle_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_LinkId)
		REFERENCES bundle_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Search_extension_extension(
	id TEXT PRIMARY KEY,
	bundle_Search_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Search_extensionId)
		REFERENCES bundle_Search (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Search_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	bundle_Search_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Search_modifierExtensionId)
		REFERENCES bundle_Search (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Request_extension_extension(
	id TEXT PRIMARY KEY,
	bundle_Request_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Request_extensionId)
		REFERENCES bundle_Request (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Request_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	bundle_Request_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Request_modifierExtensionId)
		REFERENCES bundle_Request (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Response_extension_extension(
	id TEXT PRIMARY KEY,
	bundle_Response_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Response_extensionId)
		REFERENCES bundle_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE bundle_Response_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	bundle_Response_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (bundle_Response_modifierExtensionId)
		REFERENCES bundle_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_contained_resourceList(
	id TEXT PRIMARY KEY,
	capabilityStatement_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (capabilityStatement_containedId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_extensionId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_modifierExtensionId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_contact_contactDetail(
	id TEXT PRIMARY KEY,
	capabilityStatement_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (capabilityStatement_contactId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_useContext_usageContext(
	id TEXT PRIMARY KEY,
	capabilityStatement_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (capabilityStatement_useContextId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	capabilityStatement_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (capabilityStatement_jurisdictionId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_instantiates_canonical(
	id TEXT PRIMARY KEY,
	capabilityStatement_instantiatesId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (capabilityStatement_instantiatesId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_imports_canonical(
	id TEXT PRIMARY KEY,
	capabilityStatement_importsId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (capabilityStatement_importsId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_format_code(
	id TEXT PRIMARY KEY,
	capabilityStatement_formatId TEXT,
	codeId TEXT,

	FOREIGN KEY (capabilityStatement_formatId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement__format_element(
	id TEXT PRIMARY KEY,
	capabilityStatement__formatId TEXT,
	elementId TEXT,

	FOREIGN KEY (capabilityStatement__formatId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_patchFormat_code(
	id TEXT PRIMARY KEY,
	capabilityStatement_patchFormatId TEXT,
	codeId TEXT,

	FOREIGN KEY (capabilityStatement_patchFormatId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement__patchFormat_element(
	id TEXT PRIMARY KEY,
	capabilityStatement__patchFormatId TEXT,
	elementId TEXT,

	FOREIGN KEY (capabilityStatement__patchFormatId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_implementationGuide_canonical(
	id TEXT PRIMARY KEY,
	capabilityStatement_implementationGuideId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (capabilityStatement_implementationGuideId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Software_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Software_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Software_extensionId)
		REFERENCES capabilityStatement_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Software_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Software_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Software_modifierExtensionId)
		REFERENCES capabilityStatement_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Implementation_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Implementation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Implementation_extensionId)
		REFERENCES capabilityStatement_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Implementation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Implementation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Implementation_modifierExtensionId)
		REFERENCES capabilityStatement_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Rest_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Rest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Rest_extensionId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Rest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Rest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Rest_modifierExtensionId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Rest_searchParam_capabilityStatement_SearchParam(
	id TEXT PRIMARY KEY,
	capabilityStatement_Rest_searchParamId TEXT,
	capabilityStatement_SearchParamId TEXT,

	FOREIGN KEY (capabilityStatement_Rest_searchParamId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_SearchParamId)
		REFERENCES capabilityStatement_SearchParam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Rest_operation_capabilityStatement_Operation(
	id TEXT PRIMARY KEY,
	capabilityStatement_Rest_operationId TEXT,
	capabilityStatement_OperationId TEXT,

	FOREIGN KEY (capabilityStatement_Rest_operationId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_OperationId)
		REFERENCES capabilityStatement_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Rest_compartment_canonical(
	id TEXT PRIMARY KEY,
	capabilityStatement_Rest_compartmentId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (capabilityStatement_Rest_compartmentId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Security_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Security_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Security_extensionId)
		REFERENCES capabilityStatement_Security (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Security_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Security_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Security_modifierExtensionId)
		REFERENCES capabilityStatement_Security (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Security_service_codeableConcept(
	id TEXT PRIMARY KEY,
	capabilityStatement_Security_serviceId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (capabilityStatement_Security_serviceId)
		REFERENCES capabilityStatement_Security (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Resource_extensionId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Resource_modifierExtensionId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource_supportedProfile_canonical(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource_supportedProfileId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (capabilityStatement_Resource_supportedProfileId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource__referencePolicy_element(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource__referencePolicyId TEXT,
	elementId TEXT,

	FOREIGN KEY (capabilityStatement_Resource__referencePolicyId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource_searchInclude_string(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource_searchIncludeId TEXT,
	stringId TEXT,

	FOREIGN KEY (capabilityStatement_Resource_searchIncludeId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource__searchInclude_element(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource__searchIncludeId TEXT,
	elementId TEXT,

	FOREIGN KEY (capabilityStatement_Resource__searchIncludeId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource_searchRevInclude_string(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource_searchRevIncludeId TEXT,
	stringId TEXT,

	FOREIGN KEY (capabilityStatement_Resource_searchRevIncludeId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource__searchRevInclude_element(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource__searchRevIncludeId TEXT,
	elementId TEXT,

	FOREIGN KEY (capabilityStatement_Resource__searchRevIncludeId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource_searchParam_capabilityStatement_SearchParam(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource_searchParamId TEXT,
	capabilityStatement_SearchParamId TEXT,

	FOREIGN KEY (capabilityStatement_Resource_searchParamId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_SearchParamId)
		REFERENCES capabilityStatement_SearchParam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Resource_operation_capabilityStatement_Operation(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource_operationId TEXT,
	capabilityStatement_OperationId TEXT,

	FOREIGN KEY (capabilityStatement_Resource_operationId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_OperationId)
		REFERENCES capabilityStatement_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Interaction_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Interaction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Interaction_extensionId)
		REFERENCES capabilityStatement_Interaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Interaction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Interaction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Interaction_modifierExtensionId)
		REFERENCES capabilityStatement_Interaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_SearchParam_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_SearchParam_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_SearchParam_extensionId)
		REFERENCES capabilityStatement_SearchParam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_SearchParam_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_SearchParam_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_SearchParam_modifierExtensionId)
		REFERENCES capabilityStatement_SearchParam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Operation_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Operation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Operation_extensionId)
		REFERENCES capabilityStatement_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Operation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Operation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Operation_modifierExtensionId)
		REFERENCES capabilityStatement_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Interaction1_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Interaction1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Interaction1_extensionId)
		REFERENCES capabilityStatement_Interaction1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Interaction1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Interaction1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Interaction1_modifierExtensionId)
		REFERENCES capabilityStatement_Interaction1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Messaging_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Messaging_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Messaging_extensionId)
		REFERENCES capabilityStatement_Messaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Messaging_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Messaging_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Messaging_modifierExtensionId)
		REFERENCES capabilityStatement_Messaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Endpoint_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Endpoint_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Endpoint_extensionId)
		REFERENCES capabilityStatement_Endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Endpoint_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Endpoint_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Endpoint_modifierExtensionId)
		REFERENCES capabilityStatement_Endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_SupportedMessage_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_SupportedMessage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_SupportedMessage_extensionId)
		REFERENCES capabilityStatement_SupportedMessage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_SupportedMessage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_SupportedMessage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_SupportedMessage_modifierExtensionId)
		REFERENCES capabilityStatement_SupportedMessage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Document_extension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Document_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Document_extensionId)
		REFERENCES capabilityStatement_Document (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE capabilityStatement_Document_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	capabilityStatement_Document_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (capabilityStatement_Document_modifierExtensionId)
		REFERENCES capabilityStatement_Document (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_contained_resourceList(
	id TEXT PRIMARY KEY,
	carePlan_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (carePlan_containedId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_extension_extension(
	id TEXT PRIMARY KEY,
	carePlan_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (carePlan_extensionId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	carePlan_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (carePlan_modifierExtensionId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_identifier_identifier(
	id TEXT PRIMARY KEY,
	carePlan_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (carePlan_identifierId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	carePlan_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (carePlan_instantiatesCanonicalId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	carePlan_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (carePlan_instantiatesUriId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	carePlan__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (carePlan__instantiatesUriId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_basedOn_reference(
	id TEXT PRIMARY KEY,
	carePlan_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_basedOnId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_replaces_reference(
	id TEXT PRIMARY KEY,
	carePlan_replacesId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_replacesId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_partOf_reference(
	id TEXT PRIMARY KEY,
	carePlan_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_partOfId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_category_codeableConcept(
	id TEXT PRIMARY KEY,
	carePlan_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (carePlan_categoryId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_contributor_reference(
	id TEXT PRIMARY KEY,
	carePlan_contributorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_contributorId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_careTeam_reference(
	id TEXT PRIMARY KEY,
	carePlan_careTeamId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_careTeamId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_addresses_reference(
	id TEXT PRIMARY KEY,
	carePlan_addressesId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_addressesId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_supportingInfo_reference(
	id TEXT PRIMARY KEY,
	carePlan_supportingInfoId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_supportingInfoId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_goal_reference(
	id TEXT PRIMARY KEY,
	carePlan_goalId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_goalId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_note_annotation(
	id TEXT PRIMARY KEY,
	carePlan_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (carePlan_noteId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Activity_extension_extension(
	id TEXT PRIMARY KEY,
	carePlan_Activity_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (carePlan_Activity_extensionId)
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Activity_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	carePlan_Activity_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (carePlan_Activity_modifierExtensionId)
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Activity_outcomeCodeableConcept_codeableConcept(
	id TEXT PRIMARY KEY,
	carePlan_Activity_outcomeCodeableConceptId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (carePlan_Activity_outcomeCodeableConceptId)
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Activity_outcomeReference_reference(
	id TEXT PRIMARY KEY,
	carePlan_Activity_outcomeReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_Activity_outcomeReferenceId)
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Activity_progress_annotation(
	id TEXT PRIMARY KEY,
	carePlan_Activity_progressId TEXT,
	annotationId TEXT,

	FOREIGN KEY (carePlan_Activity_progressId)
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_extension_extension(
	id TEXT PRIMARY KEY,
	carePlan_Detail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (carePlan_Detail_extensionId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	carePlan_Detail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (carePlan_Detail_modifierExtensionId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	carePlan_Detail_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (carePlan_Detail_instantiatesCanonicalId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	carePlan_Detail_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (carePlan_Detail_instantiatesUriId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	carePlan_Detail__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (carePlan_Detail__instantiatesUriId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	carePlan_Detail_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (carePlan_Detail_reasonCodeId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_reasonReference_reference(
	id TEXT PRIMARY KEY,
	carePlan_Detail_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_Detail_reasonReferenceId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_goal_reference(
	id TEXT PRIMARY KEY,
	carePlan_Detail_goalId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_Detail_goalId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE carePlan_Detail_performer_reference(
	id TEXT PRIMARY KEY,
	carePlan_Detail_performerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (carePlan_Detail_performerId)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_contained_resourceList(
	id TEXT PRIMARY KEY,
	careTeam_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (careTeam_containedId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_extension_extension(
	id TEXT PRIMARY KEY,
	careTeam_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (careTeam_extensionId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	careTeam_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (careTeam_modifierExtensionId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_identifier_identifier(
	id TEXT PRIMARY KEY,
	careTeam_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (careTeam_identifierId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_category_codeableConcept(
	id TEXT PRIMARY KEY,
	careTeam_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (careTeam_categoryId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	careTeam_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (careTeam_reasonCodeId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_reasonReference_reference(
	id TEXT PRIMARY KEY,
	careTeam_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (careTeam_reasonReferenceId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_managingOrganization_reference(
	id TEXT PRIMARY KEY,
	careTeam_managingOrganizationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (careTeam_managingOrganizationId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	careTeam_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (careTeam_telecomId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_note_annotation(
	id TEXT PRIMARY KEY,
	careTeam_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (careTeam_noteId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_Participant_extension_extension(
	id TEXT PRIMARY KEY,
	careTeam_Participant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (careTeam_Participant_extensionId)
		REFERENCES careTeam_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_Participant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	careTeam_Participant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (careTeam_Participant_modifierExtensionId)
		REFERENCES careTeam_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE careTeam_Participant_role_codeableConcept(
	id TEXT PRIMARY KEY,
	careTeam_Participant_roleId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (careTeam_Participant_roleId)
		REFERENCES careTeam_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_contained_resourceList(
	id TEXT PRIMARY KEY,
	catalogEntry_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (catalogEntry_containedId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_extension_extension(
	id TEXT PRIMARY KEY,
	catalogEntry_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (catalogEntry_extensionId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	catalogEntry_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (catalogEntry_modifierExtensionId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_identifier_identifier(
	id TEXT PRIMARY KEY,
	catalogEntry_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (catalogEntry_identifierId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_additionalIdentifier_identifier(
	id TEXT PRIMARY KEY,
	catalogEntry_additionalIdentifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (catalogEntry_additionalIdentifierId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_classification_codeableConcept(
	id TEXT PRIMARY KEY,
	catalogEntry_classificationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (catalogEntry_classificationId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_additionalCharacteristic_codeableConcept(
	id TEXT PRIMARY KEY,
	catalogEntry_additionalCharacteristicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (catalogEntry_additionalCharacteristicId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_additionalClassification_codeableConcept(
	id TEXT PRIMARY KEY,
	catalogEntry_additionalClassificationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (catalogEntry_additionalClassificationId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_RelatedEntry_extension_extension(
	id TEXT PRIMARY KEY,
	catalogEntry_RelatedEntry_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (catalogEntry_RelatedEntry_extensionId)
		REFERENCES catalogEntry_RelatedEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE catalogEntry_RelatedEntry_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	catalogEntry_RelatedEntry_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (catalogEntry_RelatedEntry_modifierExtensionId)
		REFERENCES catalogEntry_RelatedEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_contained_resourceList(
	id TEXT PRIMARY KEY,
	chargeItem_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (chargeItem_containedId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_extension_extension(
	id TEXT PRIMARY KEY,
	chargeItem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItem_extensionId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	chargeItem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItem_modifierExtensionId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_identifier_identifier(
	id TEXT PRIMARY KEY,
	chargeItem_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (chargeItem_identifierId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_definitionUri_uri(
	id TEXT PRIMARY KEY,
	chargeItem_definitionUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (chargeItem_definitionUriId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem__definitionUri_element(
	id TEXT PRIMARY KEY,
	chargeItem__definitionUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (chargeItem__definitionUriId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_definitionCanonical_canonical(
	id TEXT PRIMARY KEY,
	chargeItem_definitionCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (chargeItem_definitionCanonicalId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_partOf_reference(
	id TEXT PRIMARY KEY,
	chargeItem_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (chargeItem_partOfId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_bodysite_codeableConcept(
	id TEXT PRIMARY KEY,
	chargeItem_bodysiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (chargeItem_bodysiteId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_reason_codeableConcept(
	id TEXT PRIMARY KEY,
	chargeItem_reasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (chargeItem_reasonId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_service_reference(
	id TEXT PRIMARY KEY,
	chargeItem_serviceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (chargeItem_serviceId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_account_reference(
	id TEXT PRIMARY KEY,
	chargeItem_accountId TEXT,
	referenceId TEXT,

	FOREIGN KEY (chargeItem_accountId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_note_annotation(
	id TEXT PRIMARY KEY,
	chargeItem_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (chargeItem_noteId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_supportingInformation_reference(
	id TEXT PRIMARY KEY,
	chargeItem_supportingInformationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (chargeItem_supportingInformationId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_Performer_extension_extension(
	id TEXT PRIMARY KEY,
	chargeItem_Performer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItem_Performer_extensionId)
		REFERENCES chargeItem_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItem_Performer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	chargeItem_Performer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItem_Performer_modifierExtensionId)
		REFERENCES chargeItem_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (chargeItemDefinition_containedId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_extensionId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_modifierExtensionId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (chargeItemDefinition_identifierId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_derivedFromUri_uri(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_derivedFromUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (chargeItemDefinition_derivedFromUriId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition__derivedFromUri_element(
	id TEXT PRIMARY KEY,
	chargeItemDefinition__derivedFromUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (chargeItemDefinition__derivedFromUriId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_partOf_canonical(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_partOfId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (chargeItemDefinition_partOfId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_replaces_canonical(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_replacesId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (chargeItemDefinition_replacesId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (chargeItemDefinition_contactId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (chargeItemDefinition_useContextId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (chargeItemDefinition_jurisdictionId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_instance_reference(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_instanceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (chargeItemDefinition_instanceId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_applicability_chargeItemDefinition_Applicability(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_applicabilityId TEXT,
	chargeItemDefinition_ApplicabilityId TEXT,

	FOREIGN KEY (chargeItemDefinition_applicabilityId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinition_ApplicabilityId)
		REFERENCES chargeItemDefinition_Applicability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_Applicability_extension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_Applicability_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_Applicability_extensionId)
		REFERENCES chargeItemDefinition_Applicability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_Applicability_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_Applicability_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_Applicability_modifierExtensionId)
		REFERENCES chargeItemDefinition_Applicability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_PropertyGroup_extension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_PropertyGroup_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_PropertyGroup_extensionId)
		REFERENCES chargeItemDefinition_PropertyGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_PropertyGroup_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_PropertyGroup_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_PropertyGroup_modifierExtensionId)
		REFERENCES chargeItemDefinition_PropertyGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_PropertyGroup_applicability_chargeItemDefinition_Applicability(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_PropertyGroup_applicabilityId TEXT,
	chargeItemDefinition_ApplicabilityId TEXT,

	FOREIGN KEY (chargeItemDefinition_PropertyGroup_applicabilityId)
		REFERENCES chargeItemDefinition_PropertyGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinition_ApplicabilityId)
		REFERENCES chargeItemDefinition_Applicability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_PriceComponent_extension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_PriceComponent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_PriceComponent_extensionId)
		REFERENCES chargeItemDefinition_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE chargeItemDefinition_PriceComponent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	chargeItemDefinition_PriceComponent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (chargeItemDefinition_PriceComponent_modifierExtensionId)
		REFERENCES chargeItemDefinition_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_contained_resourceList(
	id TEXT PRIMARY KEY,
	claim_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (claim_containedId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_extension_extension(
	id TEXT PRIMARY KEY,
	claim_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_extensionId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_modifierExtensionId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_identifier_identifier(
	id TEXT PRIMARY KEY,
	claim_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (claim_identifierId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Related_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Related_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Related_extensionId)
		REFERENCES claim_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Related_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Related_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Related_modifierExtensionId)
		REFERENCES claim_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Payee_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Payee_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Payee_extensionId)
		REFERENCES claim_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Payee_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Payee_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Payee_modifierExtensionId)
		REFERENCES claim_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_CareTeam_extension_extension(
	id TEXT PRIMARY KEY,
	claim_CareTeam_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_CareTeam_extensionId)
		REFERENCES claim_CareTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_CareTeam_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_CareTeam_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_CareTeam_modifierExtensionId)
		REFERENCES claim_CareTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_SupportingInfo_extension_extension(
	id TEXT PRIMARY KEY,
	claim_SupportingInfo_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_SupportingInfo_extensionId)
		REFERENCES claim_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_SupportingInfo_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_SupportingInfo_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_SupportingInfo_modifierExtensionId)
		REFERENCES claim_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Diagnosis_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Diagnosis_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Diagnosis_extensionId)
		REFERENCES claim_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Diagnosis_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Diagnosis_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Diagnosis_modifierExtensionId)
		REFERENCES claim_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Diagnosis_type_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_Diagnosis_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_Diagnosis_typeId)
		REFERENCES claim_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Procedure_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Procedure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Procedure_extensionId)
		REFERENCES claim_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Procedure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Procedure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Procedure_modifierExtensionId)
		REFERENCES claim_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Procedure_type_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_Procedure_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_Procedure_typeId)
		REFERENCES claim_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Procedure_udi_reference(
	id TEXT PRIMARY KEY,
	claim_Procedure_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (claim_Procedure_udiId)
		REFERENCES claim_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Insurance_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Insurance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Insurance_extensionId)
		REFERENCES claim_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Insurance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Insurance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Insurance_modifierExtensionId)
		REFERENCES claim_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Insurance_preAuthRef_string(
	id TEXT PRIMARY KEY,
	claim_Insurance_preAuthRefId TEXT,
	stringId TEXT,

	FOREIGN KEY (claim_Insurance_preAuthRefId)
		REFERENCES claim_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Insurance__preAuthRef_element(
	id TEXT PRIMARY KEY,
	claim_Insurance__preAuthRefId TEXT,
	elementId TEXT,

	FOREIGN KEY (claim_Insurance__preAuthRefId)
		REFERENCES claim_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Accident_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Accident_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Accident_extensionId)
		REFERENCES claim_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Accident_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Accident_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Accident_modifierExtensionId)
		REFERENCES claim_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Item_extensionId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Item_modifierExtensionId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_careTeamSequence_positiveInt(
	id TEXT PRIMARY KEY,
	claim_Item_careTeamSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claim_Item_careTeamSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item__careTeamSequence_element(
	id TEXT PRIMARY KEY,
	claim_Item__careTeamSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (claim_Item__careTeamSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_diagnosisSequence_positiveInt(
	id TEXT PRIMARY KEY,
	claim_Item_diagnosisSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claim_Item_diagnosisSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item__diagnosisSequence_element(
	id TEXT PRIMARY KEY,
	claim_Item__diagnosisSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (claim_Item__diagnosisSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_procedureSequence_positiveInt(
	id TEXT PRIMARY KEY,
	claim_Item_procedureSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claim_Item_procedureSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item__procedureSequence_element(
	id TEXT PRIMARY KEY,
	claim_Item__procedureSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (claim_Item__procedureSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_informationSequence_positiveInt(
	id TEXT PRIMARY KEY,
	claim_Item_informationSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claim_Item_informationSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item__informationSequence_element(
	id TEXT PRIMARY KEY,
	claim_Item__informationSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (claim_Item__informationSequenceId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_Item_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_Item_modifierId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_Item_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_Item_programCodeId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_udi_reference(
	id TEXT PRIMARY KEY,
	claim_Item_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (claim_Item_udiId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_subSite_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_Item_subSiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_Item_subSiteId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Item_encounter_reference(
	id TEXT PRIMARY KEY,
	claim_Item_encounterId TEXT,
	referenceId TEXT,

	FOREIGN KEY (claim_Item_encounterId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Detail_extension_extension(
	id TEXT PRIMARY KEY,
	claim_Detail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Detail_extensionId)
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Detail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_Detail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_Detail_modifierExtensionId)
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Detail_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_Detail_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_Detail_modifierId)
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Detail_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_Detail_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_Detail_programCodeId)
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_Detail_udi_reference(
	id TEXT PRIMARY KEY,
	claim_Detail_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (claim_Detail_udiId)
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_SubDetail_extension_extension(
	id TEXT PRIMARY KEY,
	claim_SubDetail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_SubDetail_extensionId)
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_SubDetail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claim_SubDetail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claim_SubDetail_modifierExtensionId)
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_SubDetail_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_SubDetail_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_SubDetail_modifierId)
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_SubDetail_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	claim_SubDetail_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claim_SubDetail_programCodeId)
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claim_SubDetail_udi_reference(
	id TEXT PRIMARY KEY,
	claim_SubDetail_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (claim_SubDetail_udiId)
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_contained_resourceList(
	id TEXT PRIMARY KEY,
	claimResponse_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (claimResponse_containedId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_extensionId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_modifierExtensionId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_identifier_identifier(
	id TEXT PRIMARY KEY,
	claimResponse_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (claimResponse_identifierId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_adjudication_claimResponse_Adjudication(
	id TEXT PRIMARY KEY,
	claimResponse_adjudicationId TEXT,
	claimResponse_AdjudicationId TEXT,

	FOREIGN KEY (claimResponse_adjudicationId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_communicationRequest_reference(
	id TEXT PRIMARY KEY,
	claimResponse_communicationRequestId TEXT,
	referenceId TEXT,

	FOREIGN KEY (claimResponse_communicationRequestId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Item_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Item_extensionId)
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Item_modifierExtensionId)
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Item_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_Item_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_Item_noteNumberId)
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Item__noteNumber_element(
	id TEXT PRIMARY KEY,
	claimResponse_Item__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_Item__noteNumberId)
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Item_adjudication_claimResponse_Adjudication(
	id TEXT PRIMARY KEY,
	claimResponse_Item_adjudicationId TEXT,
	claimResponse_AdjudicationId TEXT,

	FOREIGN KEY (claimResponse_Item_adjudicationId)
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Adjudication_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Adjudication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Adjudication_extensionId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Adjudication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Adjudication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Adjudication_modifierExtensionId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Detail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Detail_extensionId)
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Detail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Detail_modifierExtensionId)
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_Detail_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_Detail_noteNumberId)
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail__noteNumber_element(
	id TEXT PRIMARY KEY,
	claimResponse_Detail__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_Detail__noteNumberId)
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail_adjudication_claimResponse_Adjudication(
	id TEXT PRIMARY KEY,
	claimResponse_Detail_adjudicationId TEXT,
	claimResponse_AdjudicationId TEXT,

	FOREIGN KEY (claimResponse_Detail_adjudicationId)
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_SubDetail_extensionId)
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_SubDetail_modifierExtensionId)
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_SubDetail_noteNumberId)
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail__noteNumber_element(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_SubDetail__noteNumberId)
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail_adjudication_claimResponse_Adjudication(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail_adjudicationId TEXT,
	claimResponse_AdjudicationId TEXT,

	FOREIGN KEY (claimResponse_SubDetail_adjudicationId)
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_AddItem_extensionId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_AddItem_modifierExtensionId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_itemSequence_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_itemSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_AddItem_itemSequenceId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem__itemSequence_element(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem__itemSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_AddItem__itemSequenceId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_detailSequence_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_detailSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_AddItem_detailSequenceId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem__detailSequence_element(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem__detailSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_AddItem__detailSequenceId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_subdetailSequence_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_subdetailSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_AddItem_subdetailSequenceId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem__subdetailSequence_element(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem__subdetailSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_AddItem__subdetailSequenceId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_provider_reference(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_providerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (claimResponse_AddItem_providerId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claimResponse_AddItem_modifierId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claimResponse_AddItem_programCodeId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_subSite_codeableConcept(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_subSiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claimResponse_AddItem_subSiteId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_AddItem_noteNumberId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem__noteNumber_element(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_AddItem__noteNumberId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_AddItem_adjudication_claimResponse_Adjudication(
	id TEXT PRIMARY KEY,
	claimResponse_AddItem_adjudicationId TEXT,
	claimResponse_AdjudicationId TEXT,

	FOREIGN KEY (claimResponse_AddItem_adjudicationId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail1_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Detail1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Detail1_extensionId)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Detail1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Detail1_modifierExtensionId)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail1_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	claimResponse_Detail1_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claimResponse_Detail1_modifierId)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail1_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_Detail1_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_Detail1_noteNumberId)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail1__noteNumber_element(
	id TEXT PRIMARY KEY,
	claimResponse_Detail1__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_Detail1__noteNumberId)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Detail1_adjudication_claimResponse_Adjudication(
	id TEXT PRIMARY KEY,
	claimResponse_Detail1_adjudicationId TEXT,
	claimResponse_AdjudicationId TEXT,

	FOREIGN KEY (claimResponse_Detail1_adjudicationId)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail1_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_SubDetail1_extensionId)
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_SubDetail1_modifierExtensionId)
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail1_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail1_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (claimResponse_SubDetail1_modifierId)
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail1_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail1_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (claimResponse_SubDetail1_noteNumberId)
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail1__noteNumber_element(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail1__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (claimResponse_SubDetail1__noteNumberId)
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_SubDetail1_adjudication_claimResponse_Adjudication(
	id TEXT PRIMARY KEY,
	claimResponse_SubDetail1_adjudicationId TEXT,
	claimResponse_AdjudicationId TEXT,

	FOREIGN KEY (claimResponse_SubDetail1_adjudicationId)
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Total_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Total_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Total_extensionId)
		REFERENCES claimResponse_Total (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Total_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Total_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Total_modifierExtensionId)
		REFERENCES claimResponse_Total (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Payment_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Payment_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Payment_extensionId)
		REFERENCES claimResponse_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Payment_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Payment_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Payment_modifierExtensionId)
		REFERENCES claimResponse_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_ProcessNote_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_ProcessNote_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_ProcessNote_extensionId)
		REFERENCES claimResponse_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_ProcessNote_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_ProcessNote_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_ProcessNote_modifierExtensionId)
		REFERENCES claimResponse_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Insurance_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Insurance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Insurance_extensionId)
		REFERENCES claimResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Insurance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Insurance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Insurance_modifierExtensionId)
		REFERENCES claimResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Error_extension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Error_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Error_extensionId)
		REFERENCES claimResponse_Error (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE claimResponse_Error_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	claimResponse_Error_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (claimResponse_Error_modifierExtensionId)
		REFERENCES claimResponse_Error (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_contained_resourceList(
	id TEXT PRIMARY KEY,
	clinicalImpression_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (clinicalImpression_containedId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_extension_extension(
	id TEXT PRIMARY KEY,
	clinicalImpression_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (clinicalImpression_extensionId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	clinicalImpression_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (clinicalImpression_modifierExtensionId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_identifier_identifier(
	id TEXT PRIMARY KEY,
	clinicalImpression_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (clinicalImpression_identifierId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_problem_reference(
	id TEXT PRIMARY KEY,
	clinicalImpression_problemId TEXT,
	referenceId TEXT,

	FOREIGN KEY (clinicalImpression_problemId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_protocol_uri(
	id TEXT PRIMARY KEY,
	clinicalImpression_protocolId TEXT,
	uriId TEXT,

	FOREIGN KEY (clinicalImpression_protocolId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression__protocol_element(
	id TEXT PRIMARY KEY,
	clinicalImpression__protocolId TEXT,
	elementId TEXT,

	FOREIGN KEY (clinicalImpression__protocolId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_prognosisCodeableConcept_codeableConcept(
	id TEXT PRIMARY KEY,
	clinicalImpression_prognosisCodeableConceptId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (clinicalImpression_prognosisCodeableConceptId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_prognosisReference_reference(
	id TEXT PRIMARY KEY,
	clinicalImpression_prognosisReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (clinicalImpression_prognosisReferenceId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_supportingInfo_reference(
	id TEXT PRIMARY KEY,
	clinicalImpression_supportingInfoId TEXT,
	referenceId TEXT,

	FOREIGN KEY (clinicalImpression_supportingInfoId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_note_annotation(
	id TEXT PRIMARY KEY,
	clinicalImpression_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (clinicalImpression_noteId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_Investigation_extension_extension(
	id TEXT PRIMARY KEY,
	clinicalImpression_Investigation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (clinicalImpression_Investigation_extensionId)
		REFERENCES clinicalImpression_Investigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_Investigation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	clinicalImpression_Investigation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (clinicalImpression_Investigation_modifierExtensionId)
		REFERENCES clinicalImpression_Investigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_Investigation_item_reference(
	id TEXT PRIMARY KEY,
	clinicalImpression_Investigation_itemId TEXT,
	referenceId TEXT,

	FOREIGN KEY (clinicalImpression_Investigation_itemId)
		REFERENCES clinicalImpression_Investigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_Finding_extension_extension(
	id TEXT PRIMARY KEY,
	clinicalImpression_Finding_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (clinicalImpression_Finding_extensionId)
		REFERENCES clinicalImpression_Finding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE clinicalImpression_Finding_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	clinicalImpression_Finding_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (clinicalImpression_Finding_modifierExtensionId)
		REFERENCES clinicalImpression_Finding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_contained_resourceList(
	id TEXT PRIMARY KEY,
	codeSystem_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (codeSystem_containedId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_extension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_extensionId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_modifierExtensionId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_identifier_identifier(
	id TEXT PRIMARY KEY,
	codeSystem_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (codeSystem_identifierId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_contact_contactDetail(
	id TEXT PRIMARY KEY,
	codeSystem_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (codeSystem_contactId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_useContext_usageContext(
	id TEXT PRIMARY KEY,
	codeSystem_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (codeSystem_useContextId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	codeSystem_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (codeSystem_jurisdictionId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_concept_codeSystem_Concept(
	id TEXT PRIMARY KEY,
	codeSystem_conceptId TEXT,
	codeSystem_ConceptId TEXT,

	FOREIGN KEY (codeSystem_conceptId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Filter_extension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Filter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Filter_extensionId)
		REFERENCES codeSystem_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Filter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Filter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Filter_modifierExtensionId)
		REFERENCES codeSystem_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Filter_operator_code(
	id TEXT PRIMARY KEY,
	codeSystem_Filter_operatorId TEXT,
	codeId TEXT,

	FOREIGN KEY (codeSystem_Filter_operatorId)
		REFERENCES codeSystem_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Filter__operator_element(
	id TEXT PRIMARY KEY,
	codeSystem_Filter__operatorId TEXT,
	elementId TEXT,

	FOREIGN KEY (codeSystem_Filter__operatorId)
		REFERENCES codeSystem_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Property_extension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Property_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Property_extensionId)
		REFERENCES codeSystem_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Property_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Property_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Property_modifierExtensionId)
		REFERENCES codeSystem_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Concept_extension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Concept_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Concept_extensionId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Concept_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Concept_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Concept_modifierExtensionId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Concept_concept_codeSystem_Concept(
	id TEXT PRIMARY KEY,
	codeSystem_Concept_conceptId TEXT,
	codeSystem_ConceptId TEXT,

	FOREIGN KEY (codeSystem_Concept_conceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Designation_extension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Designation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Designation_extensionId)
		REFERENCES codeSystem_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Designation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Designation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Designation_modifierExtensionId)
		REFERENCES codeSystem_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Property1_extension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Property1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Property1_extensionId)
		REFERENCES codeSystem_Property1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE codeSystem_Property1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	codeSystem_Property1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (codeSystem_Property1_modifierExtensionId)
		REFERENCES codeSystem_Property1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_contained_resourceList(
	id TEXT PRIMARY KEY,
	communication_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (communication_containedId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_extension_extension(
	id TEXT PRIMARY KEY,
	communication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communication_extensionId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	communication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communication_modifierExtensionId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_identifier_identifier(
	id TEXT PRIMARY KEY,
	communication_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (communication_identifierId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	communication_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (communication_instantiatesCanonicalId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	communication_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (communication_instantiatesUriId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	communication__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (communication__instantiatesUriId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_basedOn_reference(
	id TEXT PRIMARY KEY,
	communication_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communication_basedOnId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_partOf_reference(
	id TEXT PRIMARY KEY,
	communication_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communication_partOfId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_inResponseTo_reference(
	id TEXT PRIMARY KEY,
	communication_inResponseToId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communication_inResponseToId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_category_codeableConcept(
	id TEXT PRIMARY KEY,
	communication_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (communication_categoryId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_medium_codeableConcept(
	id TEXT PRIMARY KEY,
	communication_mediumId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (communication_mediumId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_about_reference(
	id TEXT PRIMARY KEY,
	communication_aboutId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communication_aboutId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_recipient_reference(
	id TEXT PRIMARY KEY,
	communication_recipientId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communication_recipientId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	communication_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (communication_reasonCodeId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_reasonReference_reference(
	id TEXT PRIMARY KEY,
	communication_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communication_reasonReferenceId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_note_annotation(
	id TEXT PRIMARY KEY,
	communication_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (communication_noteId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_Payload_extension_extension(
	id TEXT PRIMARY KEY,
	communication_Payload_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communication_Payload_extensionId)
		REFERENCES communication_Payload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communication_Payload_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	communication_Payload_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communication_Payload_modifierExtensionId)
		REFERENCES communication_Payload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_contained_resourceList(
	id TEXT PRIMARY KEY,
	communicationRequest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (communicationRequest_containedId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_extension_extension(
	id TEXT PRIMARY KEY,
	communicationRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communicationRequest_extensionId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	communicationRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communicationRequest_modifierExtensionId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_identifier_identifier(
	id TEXT PRIMARY KEY,
	communicationRequest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (communicationRequest_identifierId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_basedOn_reference(
	id TEXT PRIMARY KEY,
	communicationRequest_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communicationRequest_basedOnId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_replaces_reference(
	id TEXT PRIMARY KEY,
	communicationRequest_replacesId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communicationRequest_replacesId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_category_codeableConcept(
	id TEXT PRIMARY KEY,
	communicationRequest_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (communicationRequest_categoryId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_medium_codeableConcept(
	id TEXT PRIMARY KEY,
	communicationRequest_mediumId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (communicationRequest_mediumId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_about_reference(
	id TEXT PRIMARY KEY,
	communicationRequest_aboutId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communicationRequest_aboutId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_recipient_reference(
	id TEXT PRIMARY KEY,
	communicationRequest_recipientId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communicationRequest_recipientId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	communicationRequest_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (communicationRequest_reasonCodeId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_reasonReference_reference(
	id TEXT PRIMARY KEY,
	communicationRequest_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (communicationRequest_reasonReferenceId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_note_annotation(
	id TEXT PRIMARY KEY,
	communicationRequest_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (communicationRequest_noteId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_Payload_extension_extension(
	id TEXT PRIMARY KEY,
	communicationRequest_Payload_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communicationRequest_Payload_extensionId)
		REFERENCES communicationRequest_Payload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE communicationRequest_Payload_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	communicationRequest_Payload_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (communicationRequest_Payload_modifierExtensionId)
		REFERENCES communicationRequest_Payload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	compartmentDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (compartmentDefinition_containedId)
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	compartmentDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (compartmentDefinition_extensionId)
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	compartmentDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (compartmentDefinition_modifierExtensionId)
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	compartmentDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (compartmentDefinition_contactId)
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	compartmentDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (compartmentDefinition_useContextId)
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_Resource_extension_extension(
	id TEXT PRIMARY KEY,
	compartmentDefinition_Resource_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (compartmentDefinition_Resource_extensionId)
		REFERENCES compartmentDefinition_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_Resource_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	compartmentDefinition_Resource_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (compartmentDefinition_Resource_modifierExtensionId)
		REFERENCES compartmentDefinition_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_Resource_param_string(
	id TEXT PRIMARY KEY,
	compartmentDefinition_Resource_paramId TEXT,
	stringId TEXT,

	FOREIGN KEY (compartmentDefinition_Resource_paramId)
		REFERENCES compartmentDefinition_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE compartmentDefinition_Resource__param_element(
	id TEXT PRIMARY KEY,
	compartmentDefinition_Resource__paramId TEXT,
	elementId TEXT,

	FOREIGN KEY (compartmentDefinition_Resource__paramId)
		REFERENCES compartmentDefinition_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_contained_resourceList(
	id TEXT PRIMARY KEY,
	composition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (composition_containedId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_extension_extension(
	id TEXT PRIMARY KEY,
	composition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_extensionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	composition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_modifierExtensionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_category_codeableConcept(
	id TEXT PRIMARY KEY,
	composition_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (composition_categoryId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_author_reference(
	id TEXT PRIMARY KEY,
	composition_authorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (composition_authorId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_section_composition_Section(
	id TEXT PRIMARY KEY,
	composition_sectionId TEXT,
	composition_SectionId TEXT,

	FOREIGN KEY (composition_sectionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_SectionId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Attester_extension_extension(
	id TEXT PRIMARY KEY,
	composition_Attester_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_Attester_extensionId)
		REFERENCES composition_Attester (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Attester_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	composition_Attester_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_Attester_modifierExtensionId)
		REFERENCES composition_Attester (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_RelatesTo_extension_extension(
	id TEXT PRIMARY KEY,
	composition_RelatesTo_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_RelatesTo_extensionId)
		REFERENCES composition_RelatesTo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_RelatesTo_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	composition_RelatesTo_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_RelatesTo_modifierExtensionId)
		REFERENCES composition_RelatesTo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Event_extension_extension(
	id TEXT PRIMARY KEY,
	composition_Event_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_Event_extensionId)
		REFERENCES composition_Event (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Event_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	composition_Event_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_Event_modifierExtensionId)
		REFERENCES composition_Event (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Event_code_codeableConcept(
	id TEXT PRIMARY KEY,
	composition_Event_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (composition_Event_codeId)
		REFERENCES composition_Event (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Event_detail_reference(
	id TEXT PRIMARY KEY,
	composition_Event_detailId TEXT,
	referenceId TEXT,

	FOREIGN KEY (composition_Event_detailId)
		REFERENCES composition_Event (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Section_extension_extension(
	id TEXT PRIMARY KEY,
	composition_Section_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_Section_extensionId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Section_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	composition_Section_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (composition_Section_modifierExtensionId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Section_author_reference(
	id TEXT PRIMARY KEY,
	composition_Section_authorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (composition_Section_authorId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Section_entry_reference(
	id TEXT PRIMARY KEY,
	composition_Section_entryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (composition_Section_entryId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE composition_Section_section_composition_Section(
	id TEXT PRIMARY KEY,
	composition_Section_sectionId TEXT,
	composition_SectionId TEXT,

	FOREIGN KEY (composition_Section_sectionId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_SectionId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_contained_resourceList(
	id TEXT PRIMARY KEY,
	conceptMap_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (conceptMap_containedId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_extension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_extensionId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_modifierExtensionId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_contact_contactDetail(
	id TEXT PRIMARY KEY,
	conceptMap_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (conceptMap_contactId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_useContext_usageContext(
	id TEXT PRIMARY KEY,
	conceptMap_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (conceptMap_useContextId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	conceptMap_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (conceptMap_jurisdictionId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Group_extension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Group_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Group_extensionId)
		REFERENCES conceptMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Group_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Group_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Group_modifierExtensionId)
		REFERENCES conceptMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Element_extension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Element_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Element_extensionId)
		REFERENCES conceptMap_Element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Element_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Element_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Element_modifierExtensionId)
		REFERENCES conceptMap_Element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Target_extension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Target_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Target_extensionId)
		REFERENCES conceptMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Target_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Target_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Target_modifierExtensionId)
		REFERENCES conceptMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Target_dependsOn_conceptMap_DependsOn(
	id TEXT PRIMARY KEY,
	conceptMap_Target_dependsOnId TEXT,
	conceptMap_DependsOnId TEXT,

	FOREIGN KEY (conceptMap_Target_dependsOnId)
		REFERENCES conceptMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_DependsOnId)
		REFERENCES conceptMap_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Target_product_conceptMap_DependsOn(
	id TEXT PRIMARY KEY,
	conceptMap_Target_productId TEXT,
	conceptMap_DependsOnId TEXT,

	FOREIGN KEY (conceptMap_Target_productId)
		REFERENCES conceptMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_DependsOnId)
		REFERENCES conceptMap_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_DependsOn_extension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_DependsOn_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_DependsOn_extensionId)
		REFERENCES conceptMap_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_DependsOn_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_DependsOn_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_DependsOn_modifierExtensionId)
		REFERENCES conceptMap_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Unmapped_extension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Unmapped_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Unmapped_extensionId)
		REFERENCES conceptMap_Unmapped (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE conceptMap_Unmapped_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	conceptMap_Unmapped_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (conceptMap_Unmapped_modifierExtensionId)
		REFERENCES conceptMap_Unmapped (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_contained_resourceList(
	id TEXT PRIMARY KEY,
	condition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (condition_containedId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_extension_extension(
	id TEXT PRIMARY KEY,
	condition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (condition_extensionId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	condition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (condition_modifierExtensionId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_identifier_identifier(
	id TEXT PRIMARY KEY,
	condition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (condition_identifierId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_category_codeableConcept(
	id TEXT PRIMARY KEY,
	condition_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (condition_categoryId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_bodySite_codeableConcept(
	id TEXT PRIMARY KEY,
	condition_bodySiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (condition_bodySiteId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_note_annotation(
	id TEXT PRIMARY KEY,
	condition_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (condition_noteId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_Stage_extension_extension(
	id TEXT PRIMARY KEY,
	condition_Stage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (condition_Stage_extensionId)
		REFERENCES condition_Stage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_Stage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	condition_Stage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (condition_Stage_modifierExtensionId)
		REFERENCES condition_Stage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_Stage_assessment_reference(
	id TEXT PRIMARY KEY,
	condition_Stage_assessmentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (condition_Stage_assessmentId)
		REFERENCES condition_Stage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_Evidence_extension_extension(
	id TEXT PRIMARY KEY,
	condition_Evidence_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (condition_Evidence_extensionId)
		REFERENCES condition_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_Evidence_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	condition_Evidence_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (condition_Evidence_modifierExtensionId)
		REFERENCES condition_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_Evidence_code_codeableConcept(
	id TEXT PRIMARY KEY,
	condition_Evidence_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (condition_Evidence_codeId)
		REFERENCES condition_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE condition_Evidence_detail_reference(
	id TEXT PRIMARY KEY,
	condition_Evidence_detailId TEXT,
	referenceId TEXT,

	FOREIGN KEY (condition_Evidence_detailId)
		REFERENCES condition_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_contained_resourceList(
	id TEXT PRIMARY KEY,
	consent_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (consent_containedId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_extension_extension(
	id TEXT PRIMARY KEY,
	consent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_extensionId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	consent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_modifierExtensionId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_identifier_identifier(
	id TEXT PRIMARY KEY,
	consent_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (consent_identifierId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_category_codeableConcept(
	id TEXT PRIMARY KEY,
	consent_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (consent_categoryId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_performer_reference(
	id TEXT PRIMARY KEY,
	consent_performerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (consent_performerId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_organization_reference(
	id TEXT PRIMARY KEY,
	consent_organizationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (consent_organizationId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Policy_extension_extension(
	id TEXT PRIMARY KEY,
	consent_Policy_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Policy_extensionId)
		REFERENCES consent_Policy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Policy_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	consent_Policy_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Policy_modifierExtensionId)
		REFERENCES consent_Policy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Verification_extension_extension(
	id TEXT PRIMARY KEY,
	consent_Verification_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Verification_extensionId)
		REFERENCES consent_Verification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Verification_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	consent_Verification_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Verification_modifierExtensionId)
		REFERENCES consent_Verification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Provision_extension_extension(
	id TEXT PRIMARY KEY,
	consent_Provision_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Provision_extensionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Provision_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	consent_Provision_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Provision_modifierExtensionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Provision_action_codeableConcept(
	id TEXT PRIMARY KEY,
	consent_Provision_actionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (consent_Provision_actionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Provision_securityLabel_coding(
	id TEXT PRIMARY KEY,
	consent_Provision_securityLabelId TEXT,
	codingId TEXT,

	FOREIGN KEY (consent_Provision_securityLabelId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Provision_purpose_coding(
	id TEXT PRIMARY KEY,
	consent_Provision_purposeId TEXT,
	codingId TEXT,

	FOREIGN KEY (consent_Provision_purposeId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Provision_class_coding(
	id TEXT PRIMARY KEY,
	consent_Provision_classId TEXT,
	codingId TEXT,

	FOREIGN KEY (consent_Provision_classId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Provision_code_codeableConcept(
	id TEXT PRIMARY KEY,
	consent_Provision_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (consent_Provision_codeId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Actor_extension_extension(
	id TEXT PRIMARY KEY,
	consent_Actor_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Actor_extensionId)
		REFERENCES consent_Actor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Actor_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	consent_Actor_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Actor_modifierExtensionId)
		REFERENCES consent_Actor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Data_extension_extension(
	id TEXT PRIMARY KEY,
	consent_Data_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Data_extensionId)
		REFERENCES consent_Data (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE consent_Data_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	consent_Data_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (consent_Data_modifierExtensionId)
		REFERENCES consent_Data (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_contained_resourceList(
	id TEXT PRIMARY KEY,
	contract_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (contract_containedId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_extension_extension(
	id TEXT PRIMARY KEY,
	contract_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_extensionId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_modifierExtensionId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_identifier_identifier(
	id TEXT PRIMARY KEY,
	contract_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (contract_identifierId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_subject_reference(
	id TEXT PRIMARY KEY,
	contract_subjectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_subjectId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_authority_reference(
	id TEXT PRIMARY KEY,
	contract_authorityId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_authorityId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_domain_reference(
	id TEXT PRIMARY KEY,
	contract_domainId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_domainId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_site_reference(
	id TEXT PRIMARY KEY,
	contract_siteId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_siteId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_alias_string(
	id TEXT PRIMARY KEY,
	contract_aliasId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_aliasId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract__alias_element(
	id TEXT PRIMARY KEY,
	contract__aliasId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract__aliasId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_subType_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_subTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_subTypeId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_term_contract_Term(
	id TEXT PRIMARY KEY,
	contract_termId TEXT,
	contract_TermId TEXT,

	FOREIGN KEY (contract_termId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_supportingInfo_reference(
	id TEXT PRIMARY KEY,
	contract_supportingInfoId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_supportingInfoId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_relevantHistory_reference(
	id TEXT PRIMARY KEY,
	contract_relevantHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_relevantHistoryId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ContentDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	contract_ContentDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_ContentDefinition_extensionId)
		REFERENCES contract_ContentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ContentDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_ContentDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_ContentDefinition_modifierExtensionId)
		REFERENCES contract_ContentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Term_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Term_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Term_extensionId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Term_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Term_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Term_modifierExtensionId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Term_group_contract_Term(
	id TEXT PRIMARY KEY,
	contract_Term_groupId TEXT,
	contract_TermId TEXT,

	FOREIGN KEY (contract_Term_groupId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_SecurityLabel_extension_extension(
	id TEXT PRIMARY KEY,
	contract_SecurityLabel_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_SecurityLabel_extensionId)
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_SecurityLabel_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_SecurityLabel_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_SecurityLabel_modifierExtensionId)
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_SecurityLabel_number_unsignedInt(
	id TEXT PRIMARY KEY,
	contract_SecurityLabel_numberId TEXT,
	unsignedIntId TEXT,

	FOREIGN KEY (contract_SecurityLabel_numberId)
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_SecurityLabel__number_element(
	id TEXT PRIMARY KEY,
	contract_SecurityLabel__numberId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_SecurityLabel__numberId)
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_SecurityLabel_category_coding(
	id TEXT PRIMARY KEY,
	contract_SecurityLabel_categoryId TEXT,
	codingId TEXT,

	FOREIGN KEY (contract_SecurityLabel_categoryId)
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_SecurityLabel_control_coding(
	id TEXT PRIMARY KEY,
	contract_SecurityLabel_controlId TEXT,
	codingId TEXT,

	FOREIGN KEY (contract_SecurityLabel_controlId)
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Offer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Offer_extensionId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Offer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Offer_modifierExtensionId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer_identifier_identifier(
	id TEXT PRIMARY KEY,
	contract_Offer_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (contract_Offer_identifierId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer_decisionMode_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_Offer_decisionModeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_Offer_decisionModeId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer_answer_contract_Answer(
	id TEXT PRIMARY KEY,
	contract_Offer_answerId TEXT,
	contract_AnswerId TEXT,

	FOREIGN KEY (contract_Offer_answerId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AnswerId)
		REFERENCES contract_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer_linkId_string(
	id TEXT PRIMARY KEY,
	contract_Offer_linkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Offer_linkIdId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer__linkId_element(
	id TEXT PRIMARY KEY,
	contract_Offer__linkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Offer__linkIdId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer_securityLabelNumber_unsignedInt(
	id TEXT PRIMARY KEY,
	contract_Offer_securityLabelNumberId TEXT,
	unsignedIntId TEXT,

	FOREIGN KEY (contract_Offer_securityLabelNumberId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Offer__securityLabelNumber_element(
	id TEXT PRIMARY KEY,
	contract_Offer__securityLabelNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Offer__securityLabelNumberId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Party_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Party_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Party_extensionId)
		REFERENCES contract_Party (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Party_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Party_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Party_modifierExtensionId)
		REFERENCES contract_Party (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Party_reference_reference(
	id TEXT PRIMARY KEY,
	contract_Party_referenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_Party_referenceId)
		REFERENCES contract_Party (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Answer_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Answer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Answer_extensionId)
		REFERENCES contract_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Answer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Answer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Answer_modifierExtensionId)
		REFERENCES contract_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Asset_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Asset_extensionId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Asset_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Asset_modifierExtensionId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_type_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_Asset_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_Asset_typeId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_typeReference_reference(
	id TEXT PRIMARY KEY,
	contract_Asset_typeReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_Asset_typeReferenceId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_subtype_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_Asset_subtypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_Asset_subtypeId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_periodType_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_Asset_periodTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_Asset_periodTypeId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_period_period(
	id TEXT PRIMARY KEY,
	contract_Asset_periodId TEXT,
	periodId TEXT,

	FOREIGN KEY (contract_Asset_periodId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (periodId)
		REFERENCES "period" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_usePeriod_period(
	id TEXT PRIMARY KEY,
	contract_Asset_usePeriodId TEXT,
	periodId TEXT,

	FOREIGN KEY (contract_Asset_usePeriodId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (periodId)
		REFERENCES "period" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_linkId_string(
	id TEXT PRIMARY KEY,
	contract_Asset_linkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Asset_linkIdId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset__linkId_element(
	id TEXT PRIMARY KEY,
	contract_Asset__linkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Asset__linkIdId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_answer_contract_Answer(
	id TEXT PRIMARY KEY,
	contract_Asset_answerId TEXT,
	contract_AnswerId TEXT,

	FOREIGN KEY (contract_Asset_answerId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AnswerId)
		REFERENCES contract_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset_securityLabelNumber_unsignedInt(
	id TEXT PRIMARY KEY,
	contract_Asset_securityLabelNumberId TEXT,
	unsignedIntId TEXT,

	FOREIGN KEY (contract_Asset_securityLabelNumberId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Asset__securityLabelNumber_element(
	id TEXT PRIMARY KEY,
	contract_Asset__securityLabelNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Asset__securityLabelNumberId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Context_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Context_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Context_extensionId)
		REFERENCES contract_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Context_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Context_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Context_modifierExtensionId)
		REFERENCES contract_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Context_code_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_Context_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_Context_codeId)
		REFERENCES contract_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ValuedItem_extension_extension(
	id TEXT PRIMARY KEY,
	contract_ValuedItem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_ValuedItem_extensionId)
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ValuedItem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_ValuedItem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_ValuedItem_modifierExtensionId)
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ValuedItem_linkId_string(
	id TEXT PRIMARY KEY,
	contract_ValuedItem_linkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_ValuedItem_linkIdId)
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ValuedItem__linkId_element(
	id TEXT PRIMARY KEY,
	contract_ValuedItem__linkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_ValuedItem__linkIdId)
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ValuedItem_securityLabelNumber_unsignedInt(
	id TEXT PRIMARY KEY,
	contract_ValuedItem_securityLabelNumberId TEXT,
	unsignedIntId TEXT,

	FOREIGN KEY (contract_ValuedItem_securityLabelNumberId)
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_ValuedItem__securityLabelNumber_element(
	id TEXT PRIMARY KEY,
	contract_ValuedItem__securityLabelNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_ValuedItem__securityLabelNumberId)
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Action_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Action_extensionId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Action_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Action_modifierExtensionId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_linkId_string(
	id TEXT PRIMARY KEY,
	contract_Action_linkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Action_linkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action__linkId_element(
	id TEXT PRIMARY KEY,
	contract_Action__linkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Action__linkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_contextLinkId_string(
	id TEXT PRIMARY KEY,
	contract_Action_contextLinkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Action_contextLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action__contextLinkId_element(
	id TEXT PRIMARY KEY,
	contract_Action__contextLinkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Action__contextLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_requester_reference(
	id TEXT PRIMARY KEY,
	contract_Action_requesterId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_Action_requesterId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_requesterLinkId_string(
	id TEXT PRIMARY KEY,
	contract_Action_requesterLinkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Action_requesterLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action__requesterLinkId_element(
	id TEXT PRIMARY KEY,
	contract_Action__requesterLinkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Action__requesterLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_performerType_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_Action_performerTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_Action_performerTypeId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_performerLinkId_string(
	id TEXT PRIMARY KEY,
	contract_Action_performerLinkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Action_performerLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action__performerLinkId_element(
	id TEXT PRIMARY KEY,
	contract_Action__performerLinkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Action__performerLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	contract_Action_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (contract_Action_reasonCodeId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_reasonReference_reference(
	id TEXT PRIMARY KEY,
	contract_Action_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_Action_reasonReferenceId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_reason_string(
	id TEXT PRIMARY KEY,
	contract_Action_reasonId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Action_reasonId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action__reason_element(
	id TEXT PRIMARY KEY,
	contract_Action__reasonId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Action__reasonId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_reasonLinkId_string(
	id TEXT PRIMARY KEY,
	contract_Action_reasonLinkIdId TEXT,
	stringId TEXT,

	FOREIGN KEY (contract_Action_reasonLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action__reasonLinkId_element(
	id TEXT PRIMARY KEY,
	contract_Action__reasonLinkIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Action__reasonLinkIdId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_note_annotation(
	id TEXT PRIMARY KEY,
	contract_Action_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (contract_Action_noteId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action_securityLabelNumber_unsignedInt(
	id TEXT PRIMARY KEY,
	contract_Action_securityLabelNumberId TEXT,
	unsignedIntId TEXT,

	FOREIGN KEY (contract_Action_securityLabelNumberId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Action__securityLabelNumber_element(
	id TEXT PRIMARY KEY,
	contract_Action__securityLabelNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (contract_Action__securityLabelNumberId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Subject_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Subject_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Subject_extensionId)
		REFERENCES contract_Subject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Subject_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Subject_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Subject_modifierExtensionId)
		REFERENCES contract_Subject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Subject_reference_reference(
	id TEXT PRIMARY KEY,
	contract_Subject_referenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (contract_Subject_referenceId)
		REFERENCES contract_Subject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Signer_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Signer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Signer_extensionId)
		REFERENCES contract_Signer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Signer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Signer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Signer_modifierExtensionId)
		REFERENCES contract_Signer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Signer_signature_signature(
	id TEXT PRIMARY KEY,
	contract_Signer_signatureId TEXT,
	signatureId TEXT,

	FOREIGN KEY (contract_Signer_signatureId)
		REFERENCES contract_Signer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (signatureId)
		REFERENCES "signature" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Friendly_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Friendly_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Friendly_extensionId)
		REFERENCES contract_Friendly (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Friendly_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Friendly_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Friendly_modifierExtensionId)
		REFERENCES contract_Friendly (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Legal_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Legal_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Legal_extensionId)
		REFERENCES contract_Legal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Legal_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Legal_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Legal_modifierExtensionId)
		REFERENCES contract_Legal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Rule_extension_extension(
	id TEXT PRIMARY KEY,
	contract_Rule_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Rule_extensionId)
		REFERENCES contract_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE contract_Rule_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	contract_Rule_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (contract_Rule_modifierExtensionId)
		REFERENCES contract_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_contained_resourceList(
	id TEXT PRIMARY KEY,
	coverage_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (coverage_containedId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_extension_extension(
	id TEXT PRIMARY KEY,
	coverage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_extensionId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_modifierExtensionId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_identifier_identifier(
	id TEXT PRIMARY KEY,
	coverage_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (coverage_identifierId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_payor_reference(
	id TEXT PRIMARY KEY,
	coverage_payorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (coverage_payorId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_contract_reference(
	id TEXT PRIMARY KEY,
	coverage_contractId TEXT,
	referenceId TEXT,

	FOREIGN KEY (coverage_contractId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_Class_extension_extension(
	id TEXT PRIMARY KEY,
	coverage_Class_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_Class_extensionId)
		REFERENCES coverage_Class (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_Class_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverage_Class_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_Class_modifierExtensionId)
		REFERENCES coverage_Class (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_CostToBeneficiary_extension_extension(
	id TEXT PRIMARY KEY,
	coverage_CostToBeneficiary_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_CostToBeneficiary_extensionId)
		REFERENCES coverage_CostToBeneficiary (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_CostToBeneficiary_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverage_CostToBeneficiary_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_CostToBeneficiary_modifierExtensionId)
		REFERENCES coverage_CostToBeneficiary (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_Exception_extension_extension(
	id TEXT PRIMARY KEY,
	coverage_Exception_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_Exception_extensionId)
		REFERENCES coverage_Exception (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverage_Exception_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverage_Exception_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverage_Exception_modifierExtensionId)
		REFERENCES coverage_Exception (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_contained_resourceList(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_containedId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_extensionId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_modifierExtensionId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_identifier_identifier(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_identifierId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest__purpose_element(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest__purposeId TEXT,
	elementId TEXT,

	FOREIGN KEY (coverageEligibilityRequest__purposeId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_SupportingInfo_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_SupportingInfo_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_SupportingInfo_extensionId)
		REFERENCES coverageEligibilityRequest_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_SupportingInfo_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_SupportingInfo_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_SupportingInfo_modifierExtensionId)
		REFERENCES coverageEligibilityRequest_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Insurance_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Insurance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Insurance_extensionId)
		REFERENCES coverageEligibilityRequest_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Insurance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Insurance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Insurance_modifierExtensionId)
		REFERENCES coverageEligibilityRequest_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Item_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Item_extensionId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Item_modifierExtensionId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Item_supportingInfoSequence_positiveInt(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Item_supportingInfoSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Item_supportingInfoSequenceId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Item__supportingInfoSequence_element(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Item__supportingInfoSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Item__supportingInfoSequenceId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Item_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Item_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Item_modifierId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Item_detail_reference(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Item_detailId TEXT,
	referenceId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Item_detailId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Diagnosis_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Diagnosis_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Diagnosis_extensionId)
		REFERENCES coverageEligibilityRequest_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityRequest_Diagnosis_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_Diagnosis_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityRequest_Diagnosis_modifierExtensionId)
		REFERENCES coverageEligibilityRequest_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_contained_resourceList(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_containedId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_extensionId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_modifierExtensionId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_identifier_identifier(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_identifierId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse__purpose_element(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse__purposeId TEXT,
	elementId TEXT,

	FOREIGN KEY (coverageEligibilityResponse__purposeId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Insurance_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Insurance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Insurance_extensionId)
		REFERENCES coverageEligibilityResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Insurance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Insurance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Insurance_modifierExtensionId)
		REFERENCES coverageEligibilityResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Item_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Item_extensionId)
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Item_modifierExtensionId)
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Item_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Item_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Item_modifierId)
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Item_authorizationSupporting_codeableConcept(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Item_authorizationSupportingId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Item_authorizationSupportingId)
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Benefit_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Benefit_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Benefit_extensionId)
		REFERENCES coverageEligibilityResponse_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Benefit_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Benefit_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Benefit_modifierExtensionId)
		REFERENCES coverageEligibilityResponse_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Error_extension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Error_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Error_extensionId)
		REFERENCES coverageEligibilityResponse_Error (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE coverageEligibilityResponse_Error_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_Error_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (coverageEligibilityResponse_Error_modifierExtensionId)
		REFERENCES coverageEligibilityResponse_Error (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_contained_resourceList(
	id TEXT PRIMARY KEY,
	detectedIssue_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (detectedIssue_containedId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_extension_extension(
	id TEXT PRIMARY KEY,
	detectedIssue_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (detectedIssue_extensionId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	detectedIssue_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (detectedIssue_modifierExtensionId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_identifier_identifier(
	id TEXT PRIMARY KEY,
	detectedIssue_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (detectedIssue_identifierId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_implicated_reference(
	id TEXT PRIMARY KEY,
	detectedIssue_implicatedId TEXT,
	referenceId TEXT,

	FOREIGN KEY (detectedIssue_implicatedId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_Evidence_extension_extension(
	id TEXT PRIMARY KEY,
	detectedIssue_Evidence_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (detectedIssue_Evidence_extensionId)
		REFERENCES detectedIssue_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_Evidence_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	detectedIssue_Evidence_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (detectedIssue_Evidence_modifierExtensionId)
		REFERENCES detectedIssue_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_Evidence_code_codeableConcept(
	id TEXT PRIMARY KEY,
	detectedIssue_Evidence_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (detectedIssue_Evidence_codeId)
		REFERENCES detectedIssue_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_Evidence_detail_reference(
	id TEXT PRIMARY KEY,
	detectedIssue_Evidence_detailId TEXT,
	referenceId TEXT,

	FOREIGN KEY (detectedIssue_Evidence_detailId)
		REFERENCES detectedIssue_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_Mitigation_extension_extension(
	id TEXT PRIMARY KEY,
	detectedIssue_Mitigation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (detectedIssue_Mitigation_extensionId)
		REFERENCES detectedIssue_Mitigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE detectedIssue_Mitigation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	detectedIssue_Mitigation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (detectedIssue_Mitigation_modifierExtensionId)
		REFERENCES detectedIssue_Mitigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_contained_resourceList(
	id TEXT PRIMARY KEY,
	device_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (device_containedId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_extension_extension(
	id TEXT PRIMARY KEY,
	device_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_extensionId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	device_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_modifierExtensionId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_identifier_identifier(
	id TEXT PRIMARY KEY,
	device_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (device_identifierId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_statusReason_codeableConcept(
	id TEXT PRIMARY KEY,
	device_statusReasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (device_statusReasonId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_contact_contactPoint(
	id TEXT PRIMARY KEY,
	device_contactId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (device_contactId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_note_annotation(
	id TEXT PRIMARY KEY,
	device_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (device_noteId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_safety_codeableConcept(
	id TEXT PRIMARY KEY,
	device_safetyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (device_safetyId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_UdiCarrier_extension_extension(
	id TEXT PRIMARY KEY,
	device_UdiCarrier_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_UdiCarrier_extensionId)
		REFERENCES device_UdiCarrier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_UdiCarrier_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	device_UdiCarrier_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_UdiCarrier_modifierExtensionId)
		REFERENCES device_UdiCarrier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_DeviceName_extension_extension(
	id TEXT PRIMARY KEY,
	device_DeviceName_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_DeviceName_extensionId)
		REFERENCES device_DeviceName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_DeviceName_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	device_DeviceName_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_DeviceName_modifierExtensionId)
		REFERENCES device_DeviceName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Specialization_extension_extension(
	id TEXT PRIMARY KEY,
	device_Specialization_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_Specialization_extensionId)
		REFERENCES device_Specialization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Specialization_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	device_Specialization_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_Specialization_modifierExtensionId)
		REFERENCES device_Specialization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Version_extension_extension(
	id TEXT PRIMARY KEY,
	device_Version_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_Version_extensionId)
		REFERENCES device_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Version_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	device_Version_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_Version_modifierExtensionId)
		REFERENCES device_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Property_extension_extension(
	id TEXT PRIMARY KEY,
	device_Property_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_Property_extensionId)
		REFERENCES device_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Property_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	device_Property_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (device_Property_modifierExtensionId)
		REFERENCES device_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Property_valueQuantity_quantity(
	id TEXT PRIMARY KEY,
	device_Property_valueQuantityId TEXT,
	quantityId TEXT,

	FOREIGN KEY (device_Property_valueQuantityId)
		REFERENCES device_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (quantityId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE device_Property_valueCode_codeableConcept(
	id TEXT PRIMARY KEY,
	device_Property_valueCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (device_Property_valueCodeId)
		REFERENCES device_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	deviceDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (deviceDefinition_containedId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_extensionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_modifierExtensionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	deviceDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (deviceDefinition_identifierId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_version_string(
	id TEXT PRIMARY KEY,
	deviceDefinition_versionId TEXT,
	stringId TEXT,

	FOREIGN KEY (deviceDefinition_versionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition__version_element(
	id TEXT PRIMARY KEY,
	deviceDefinition__versionId TEXT,
	elementId TEXT,

	FOREIGN KEY (deviceDefinition__versionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_safety_codeableConcept(
	id TEXT PRIMARY KEY,
	deviceDefinition_safetyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (deviceDefinition_safetyId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_shelfLifeStorage_productShelfLife(
	id TEXT PRIMARY KEY,
	deviceDefinition_shelfLifeStorageId TEXT,
	productShelfLifeId TEXT,

	FOREIGN KEY (deviceDefinition_shelfLifeStorageId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (productShelfLifeId)
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_languageCode_codeableConcept(
	id TEXT PRIMARY KEY,
	deviceDefinition_languageCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (deviceDefinition_languageCodeId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_contact_contactPoint(
	id TEXT PRIMARY KEY,
	deviceDefinition_contactId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (deviceDefinition_contactId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_note_annotation(
	id TEXT PRIMARY KEY,
	deviceDefinition_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (deviceDefinition_noteId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_UdiDeviceIdentifier_extension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_UdiDeviceIdentifier_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_UdiDeviceIdentifier_extensionId)
		REFERENCES deviceDefinition_UdiDeviceIdentifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_UdiDeviceIdentifier_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_UdiDeviceIdentifier_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_UdiDeviceIdentifier_modifierExtensionId)
		REFERENCES deviceDefinition_UdiDeviceIdentifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_DeviceName_extension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_DeviceName_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_DeviceName_extensionId)
		REFERENCES deviceDefinition_DeviceName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_DeviceName_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_DeviceName_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_DeviceName_modifierExtensionId)
		REFERENCES deviceDefinition_DeviceName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Specialization_extension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Specialization_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Specialization_extensionId)
		REFERENCES deviceDefinition_Specialization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Specialization_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Specialization_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Specialization_modifierExtensionId)
		REFERENCES deviceDefinition_Specialization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Capability_extension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Capability_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Capability_extensionId)
		REFERENCES deviceDefinition_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Capability_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Capability_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Capability_modifierExtensionId)
		REFERENCES deviceDefinition_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Capability_description_codeableConcept(
	id TEXT PRIMARY KEY,
	deviceDefinition_Capability_descriptionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (deviceDefinition_Capability_descriptionId)
		REFERENCES deviceDefinition_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Property_extension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Property_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Property_extensionId)
		REFERENCES deviceDefinition_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Property_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Property_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Property_modifierExtensionId)
		REFERENCES deviceDefinition_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Property_valueQuantity_quantity(
	id TEXT PRIMARY KEY,
	deviceDefinition_Property_valueQuantityId TEXT,
	quantityId TEXT,

	FOREIGN KEY (deviceDefinition_Property_valueQuantityId)
		REFERENCES deviceDefinition_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (quantityId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Property_valueCode_codeableConcept(
	id TEXT PRIMARY KEY,
	deviceDefinition_Property_valueCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (deviceDefinition_Property_valueCodeId)
		REFERENCES deviceDefinition_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Material_extension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Material_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Material_extensionId)
		REFERENCES deviceDefinition_Material (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceDefinition_Material_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceDefinition_Material_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceDefinition_Material_modifierExtensionId)
		REFERENCES deviceDefinition_Material (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceMetric_contained_resourceList(
	id TEXT PRIMARY KEY,
	deviceMetric_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (deviceMetric_containedId)
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceMetric_extension_extension(
	id TEXT PRIMARY KEY,
	deviceMetric_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceMetric_extensionId)
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceMetric_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceMetric_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceMetric_modifierExtensionId)
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceMetric_identifier_identifier(
	id TEXT PRIMARY KEY,
	deviceMetric_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (deviceMetric_identifierId)
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceMetric_Calibration_extension_extension(
	id TEXT PRIMARY KEY,
	deviceMetric_Calibration_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceMetric_Calibration_extensionId)
		REFERENCES deviceMetric_Calibration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceMetric_Calibration_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceMetric_Calibration_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceMetric_Calibration_modifierExtensionId)
		REFERENCES deviceMetric_Calibration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_contained_resourceList(
	id TEXT PRIMARY KEY,
	deviceRequest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (deviceRequest_containedId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_extension_extension(
	id TEXT PRIMARY KEY,
	deviceRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceRequest_extensionId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceRequest_modifierExtensionId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_identifier_identifier(
	id TEXT PRIMARY KEY,
	deviceRequest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (deviceRequest_identifierId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	deviceRequest_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (deviceRequest_instantiatesCanonicalId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	deviceRequest_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (deviceRequest_instantiatesUriId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	deviceRequest__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (deviceRequest__instantiatesUriId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_basedOn_reference(
	id TEXT PRIMARY KEY,
	deviceRequest_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceRequest_basedOnId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_priorRequest_reference(
	id TEXT PRIMARY KEY,
	deviceRequest_priorRequestId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceRequest_priorRequestId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	deviceRequest_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (deviceRequest_reasonCodeId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_reasonReference_reference(
	id TEXT PRIMARY KEY,
	deviceRequest_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceRequest_reasonReferenceId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_insurance_reference(
	id TEXT PRIMARY KEY,
	deviceRequest_insuranceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceRequest_insuranceId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_supportingInfo_reference(
	id TEXT PRIMARY KEY,
	deviceRequest_supportingInfoId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceRequest_supportingInfoId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_note_annotation(
	id TEXT PRIMARY KEY,
	deviceRequest_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (deviceRequest_noteId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_relevantHistory_reference(
	id TEXT PRIMARY KEY,
	deviceRequest_relevantHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceRequest_relevantHistoryId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	deviceRequest_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceRequest_Parameter_extensionId)
		REFERENCES deviceRequest_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceRequest_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceRequest_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceRequest_Parameter_modifierExtensionId)
		REFERENCES deviceRequest_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_contained_resourceList(
	id TEXT PRIMARY KEY,
	deviceUseStatement_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (deviceUseStatement_containedId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_extension_extension(
	id TEXT PRIMARY KEY,
	deviceUseStatement_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceUseStatement_extensionId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	deviceUseStatement_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (deviceUseStatement_modifierExtensionId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_identifier_identifier(
	id TEXT PRIMARY KEY,
	deviceUseStatement_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (deviceUseStatement_identifierId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_basedOn_reference(
	id TEXT PRIMARY KEY,
	deviceUseStatement_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceUseStatement_basedOnId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_derivedFrom_reference(
	id TEXT PRIMARY KEY,
	deviceUseStatement_derivedFromId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceUseStatement_derivedFromId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	deviceUseStatement_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (deviceUseStatement_reasonCodeId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_reasonReference_reference(
	id TEXT PRIMARY KEY,
	deviceUseStatement_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (deviceUseStatement_reasonReferenceId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE deviceUseStatement_note_annotation(
	id TEXT PRIMARY KEY,
	deviceUseStatement_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (deviceUseStatement_noteId)
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_contained_resourceList(
	id TEXT PRIMARY KEY,
	diagnosticReport_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (diagnosticReport_containedId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_extension_extension(
	id TEXT PRIMARY KEY,
	diagnosticReport_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (diagnosticReport_extensionId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	diagnosticReport_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (diagnosticReport_modifierExtensionId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_identifier_identifier(
	id TEXT PRIMARY KEY,
	diagnosticReport_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (diagnosticReport_identifierId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_basedOn_reference(
	id TEXT PRIMARY KEY,
	diagnosticReport_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (diagnosticReport_basedOnId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_category_codeableConcept(
	id TEXT PRIMARY KEY,
	diagnosticReport_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (diagnosticReport_categoryId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_performer_reference(
	id TEXT PRIMARY KEY,
	diagnosticReport_performerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (diagnosticReport_performerId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_resultsInterpreter_reference(
	id TEXT PRIMARY KEY,
	diagnosticReport_resultsInterpreterId TEXT,
	referenceId TEXT,

	FOREIGN KEY (diagnosticReport_resultsInterpreterId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_specimen_reference(
	id TEXT PRIMARY KEY,
	diagnosticReport_specimenId TEXT,
	referenceId TEXT,

	FOREIGN KEY (diagnosticReport_specimenId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_result_reference(
	id TEXT PRIMARY KEY,
	diagnosticReport_resultId TEXT,
	referenceId TEXT,

	FOREIGN KEY (diagnosticReport_resultId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_imagingStudy_reference(
	id TEXT PRIMARY KEY,
	diagnosticReport_imagingStudyId TEXT,
	referenceId TEXT,

	FOREIGN KEY (diagnosticReport_imagingStudyId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_conclusionCode_codeableConcept(
	id TEXT PRIMARY KEY,
	diagnosticReport_conclusionCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (diagnosticReport_conclusionCodeId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_presentedForm_attachment(
	id TEXT PRIMARY KEY,
	diagnosticReport_presentedFormId TEXT,
	attachmentId TEXT,

	FOREIGN KEY (diagnosticReport_presentedFormId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_Media_extension_extension(
	id TEXT PRIMARY KEY,
	diagnosticReport_Media_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (diagnosticReport_Media_extensionId)
		REFERENCES diagnosticReport_Media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE diagnosticReport_Media_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	diagnosticReport_Media_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (diagnosticReport_Media_modifierExtensionId)
		REFERENCES diagnosticReport_Media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_contained_resourceList(
	id TEXT PRIMARY KEY,
	documentManifest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (documentManifest_containedId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_extension_extension(
	id TEXT PRIMARY KEY,
	documentManifest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentManifest_extensionId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	documentManifest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentManifest_modifierExtensionId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_identifier_identifier(
	id TEXT PRIMARY KEY,
	documentManifest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (documentManifest_identifierId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_author_reference(
	id TEXT PRIMARY KEY,
	documentManifest_authorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (documentManifest_authorId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_recipient_reference(
	id TEXT PRIMARY KEY,
	documentManifest_recipientId TEXT,
	referenceId TEXT,

	FOREIGN KEY (documentManifest_recipientId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_content_reference(
	id TEXT PRIMARY KEY,
	documentManifest_contentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (documentManifest_contentId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_Related_extension_extension(
	id TEXT PRIMARY KEY,
	documentManifest_Related_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentManifest_Related_extensionId)
		REFERENCES documentManifest_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentManifest_Related_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	documentManifest_Related_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentManifest_Related_modifierExtensionId)
		REFERENCES documentManifest_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_contained_resourceList(
	id TEXT PRIMARY KEY,
	documentReference_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (documentReference_containedId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_extension_extension(
	id TEXT PRIMARY KEY,
	documentReference_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_extensionId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	documentReference_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_modifierExtensionId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_identifier_identifier(
	id TEXT PRIMARY KEY,
	documentReference_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (documentReference_identifierId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_category_codeableConcept(
	id TEXT PRIMARY KEY,
	documentReference_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (documentReference_categoryId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_author_reference(
	id TEXT PRIMARY KEY,
	documentReference_authorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (documentReference_authorId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_securityLabel_codeableConcept(
	id TEXT PRIMARY KEY,
	documentReference_securityLabelId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (documentReference_securityLabelId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_RelatesTo_extension_extension(
	id TEXT PRIMARY KEY,
	documentReference_RelatesTo_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_RelatesTo_extensionId)
		REFERENCES documentReference_RelatesTo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_RelatesTo_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	documentReference_RelatesTo_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_RelatesTo_modifierExtensionId)
		REFERENCES documentReference_RelatesTo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_Content_extension_extension(
	id TEXT PRIMARY KEY,
	documentReference_Content_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_Content_extensionId)
		REFERENCES documentReference_Content (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_Content_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	documentReference_Content_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_Content_modifierExtensionId)
		REFERENCES documentReference_Content (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_Context_extension_extension(
	id TEXT PRIMARY KEY,
	documentReference_Context_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_Context_extensionId)
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_Context_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	documentReference_Context_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (documentReference_Context_modifierExtensionId)
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_Context_encounter_reference(
	id TEXT PRIMARY KEY,
	documentReference_Context_encounterId TEXT,
	referenceId TEXT,

	FOREIGN KEY (documentReference_Context_encounterId)
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_Context_event_codeableConcept(
	id TEXT PRIMARY KEY,
	documentReference_Context_eventId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (documentReference_Context_eventId)
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE documentReference_Context_related_reference(
	id TEXT PRIMARY KEY,
	documentReference_Context_relatedId TEXT,
	referenceId TEXT,

	FOREIGN KEY (documentReference_Context_relatedId)
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_contained_resourceList(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_containedId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_extension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_extensionId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_modifierExtensionId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_identifier_identifier(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_identifierId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_contact_contactDetail(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_contactId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_note_annotation(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_noteId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_useContext_usageContext(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_useContextId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_jurisdictionId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_topicId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_author_contactDetail(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_authorId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_editor_contactDetail(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_editorId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_reviewerId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_endorserId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_relatedArtifactId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_SampleSize_extension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_SampleSize_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_SampleSize_extensionId)
		REFERENCES effectEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_SampleSize_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_SampleSize_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_SampleSize_modifierExtensionId)
		REFERENCES effectEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_ResultsByExposure_extension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_ResultsByExposure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_ResultsByExposure_extensionId)
		REFERENCES effectEvidenceSynthesis_ResultsByExposure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_ResultsByExposure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_ResultsByExposure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_ResultsByExposure_modifierExtensionId)
		REFERENCES effectEvidenceSynthesis_ResultsByExposure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_EffectEstimate_extension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_EffectEstimate_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_EffectEstimate_extensionId)
		REFERENCES effectEvidenceSynthesis_EffectEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_EffectEstimate_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_EffectEstimate_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_EffectEstimate_modifierExtensionId)
		REFERENCES effectEvidenceSynthesis_EffectEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_PrecisionEstimate_extension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_PrecisionEstimate_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_PrecisionEstimate_extensionId)
		REFERENCES effectEvidenceSynthesis_PrecisionEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_PrecisionEstimate_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_PrecisionEstimate_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_PrecisionEstimate_modifierExtensionId)
		REFERENCES effectEvidenceSynthesis_PrecisionEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_Certainty_extension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_Certainty_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_Certainty_extensionId)
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_Certainty_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_Certainty_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_Certainty_modifierExtensionId)
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_Certainty_rating_codeableConcept(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_Certainty_ratingId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_Certainty_ratingId)
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_Certainty_note_annotation(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_Certainty_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_Certainty_noteId)
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_CertaintySubcomponent_extension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_CertaintySubcomponent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_CertaintySubcomponent_extensionId)
		REFERENCES effectEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_CertaintySubcomponent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_CertaintySubcomponent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_CertaintySubcomponent_modifierExtensionId)
		REFERENCES effectEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_CertaintySubcomponent_rating_codeableConcept(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_CertaintySubcomponent_ratingId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_CertaintySubcomponent_ratingId)
		REFERENCES effectEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE effectEvidenceSynthesis_CertaintySubcomponent_note_annotation(
	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_CertaintySubcomponent_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (effectEvidenceSynthesis_CertaintySubcomponent_noteId)
		REFERENCES effectEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_contained_resourceList(
	id TEXT PRIMARY KEY,
	encounter_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (encounter_containedId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_extension_extension(
	id TEXT PRIMARY KEY,
	encounter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_extensionId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	encounter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_modifierExtensionId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_identifier_identifier(
	id TEXT PRIMARY KEY,
	encounter_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (encounter_identifierId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_type_codeableConcept(
	id TEXT PRIMARY KEY,
	encounter_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (encounter_typeId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_episodeOfCare_reference(
	id TEXT PRIMARY KEY,
	encounter_episodeOfCareId TEXT,
	referenceId TEXT,

	FOREIGN KEY (encounter_episodeOfCareId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_basedOn_reference(
	id TEXT PRIMARY KEY,
	encounter_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (encounter_basedOnId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_appointment_reference(
	id TEXT PRIMARY KEY,
	encounter_appointmentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (encounter_appointmentId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	encounter_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (encounter_reasonCodeId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_reasonReference_reference(
	id TEXT PRIMARY KEY,
	encounter_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (encounter_reasonReferenceId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_account_reference(
	id TEXT PRIMARY KEY,
	encounter_accountId TEXT,
	referenceId TEXT,

	FOREIGN KEY (encounter_accountId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_StatusHistory_extension_extension(
	id TEXT PRIMARY KEY,
	encounter_StatusHistory_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_StatusHistory_extensionId)
		REFERENCES encounter_StatusHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_StatusHistory_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	encounter_StatusHistory_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_StatusHistory_modifierExtensionId)
		REFERENCES encounter_StatusHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_ClassHistory_extension_extension(
	id TEXT PRIMARY KEY,
	encounter_ClassHistory_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_ClassHistory_extensionId)
		REFERENCES encounter_ClassHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_ClassHistory_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	encounter_ClassHistory_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_ClassHistory_modifierExtensionId)
		REFERENCES encounter_ClassHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Participant_extension_extension(
	id TEXT PRIMARY KEY,
	encounter_Participant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Participant_extensionId)
		REFERENCES encounter_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Participant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	encounter_Participant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Participant_modifierExtensionId)
		REFERENCES encounter_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Participant_type_codeableConcept(
	id TEXT PRIMARY KEY,
	encounter_Participant_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (encounter_Participant_typeId)
		REFERENCES encounter_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Diagnosis_extension_extension(
	id TEXT PRIMARY KEY,
	encounter_Diagnosis_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Diagnosis_extensionId)
		REFERENCES encounter_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Diagnosis_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	encounter_Diagnosis_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Diagnosis_modifierExtensionId)
		REFERENCES encounter_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Hospitalization_extension_extension(
	id TEXT PRIMARY KEY,
	encounter_Hospitalization_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Hospitalization_extensionId)
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Hospitalization_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	encounter_Hospitalization_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Hospitalization_modifierExtensionId)
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Hospitalization_dietPreference_codeableConcept(
	id TEXT PRIMARY KEY,
	encounter_Hospitalization_dietPreferenceId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (encounter_Hospitalization_dietPreferenceId)
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Hospitalization_specialCourtesy_codeableConcept(
	id TEXT PRIMARY KEY,
	encounter_Hospitalization_specialCourtesyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (encounter_Hospitalization_specialCourtesyId)
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Hospitalization_specialArrangement_codeableConcept(
	id TEXT PRIMARY KEY,
	encounter_Hospitalization_specialArrangementId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (encounter_Hospitalization_specialArrangementId)
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Location_extension_extension(
	id TEXT PRIMARY KEY,
	encounter_Location_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Location_extensionId)
		REFERENCES encounter_Location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE encounter_Location_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	encounter_Location_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (encounter_Location_modifierExtensionId)
		REFERENCES encounter_Location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_contained_resourceList(
	id TEXT PRIMARY KEY,
	endpoint_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (endpoint_containedId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_extension_extension(
	id TEXT PRIMARY KEY,
	endpoint_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (endpoint_extensionId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	endpoint_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (endpoint_modifierExtensionId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_identifier_identifier(
	id TEXT PRIMARY KEY,
	endpoint_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (endpoint_identifierId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_contact_contactPoint(
	id TEXT PRIMARY KEY,
	endpoint_contactId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (endpoint_contactId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_payloadType_codeableConcept(
	id TEXT PRIMARY KEY,
	endpoint_payloadTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (endpoint_payloadTypeId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_payloadMimeType_code(
	id TEXT PRIMARY KEY,
	endpoint_payloadMimeTypeId TEXT,
	codeId TEXT,

	FOREIGN KEY (endpoint_payloadMimeTypeId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint__payloadMimeType_element(
	id TEXT PRIMARY KEY,
	endpoint__payloadMimeTypeId TEXT,
	elementId TEXT,

	FOREIGN KEY (endpoint__payloadMimeTypeId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint_header_string(
	id TEXT PRIMARY KEY,
	endpoint_headerId TEXT,
	stringId TEXT,

	FOREIGN KEY (endpoint_headerId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE endpoint__header_element(
	id TEXT PRIMARY KEY,
	endpoint__headerId TEXT,
	elementId TEXT,

	FOREIGN KEY (endpoint__headerId)
		REFERENCES "endpoint" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentRequest_contained_resourceList(
	id TEXT PRIMARY KEY,
	enrollmentRequest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (enrollmentRequest_containedId)
		REFERENCES enrollmentRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentRequest_extension_extension(
	id TEXT PRIMARY KEY,
	enrollmentRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (enrollmentRequest_extensionId)
		REFERENCES enrollmentRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	enrollmentRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (enrollmentRequest_modifierExtensionId)
		REFERENCES enrollmentRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentRequest_identifier_identifier(
	id TEXT PRIMARY KEY,
	enrollmentRequest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (enrollmentRequest_identifierId)
		REFERENCES enrollmentRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentResponse_contained_resourceList(
	id TEXT PRIMARY KEY,
	enrollmentResponse_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (enrollmentResponse_containedId)
		REFERENCES enrollmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentResponse_extension_extension(
	id TEXT PRIMARY KEY,
	enrollmentResponse_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (enrollmentResponse_extensionId)
		REFERENCES enrollmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentResponse_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	enrollmentResponse_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (enrollmentResponse_modifierExtensionId)
		REFERENCES enrollmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE enrollmentResponse_identifier_identifier(
	id TEXT PRIMARY KEY,
	enrollmentResponse_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (enrollmentResponse_identifierId)
		REFERENCES enrollmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_contained_resourceList(
	id TEXT PRIMARY KEY,
	episodeOfCare_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (episodeOfCare_containedId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_extension_extension(
	id TEXT PRIMARY KEY,
	episodeOfCare_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (episodeOfCare_extensionId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	episodeOfCare_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (episodeOfCare_modifierExtensionId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_identifier_identifier(
	id TEXT PRIMARY KEY,
	episodeOfCare_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (episodeOfCare_identifierId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_type_codeableConcept(
	id TEXT PRIMARY KEY,
	episodeOfCare_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (episodeOfCare_typeId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_referralRequest_reference(
	id TEXT PRIMARY KEY,
	episodeOfCare_referralRequestId TEXT,
	referenceId TEXT,

	FOREIGN KEY (episodeOfCare_referralRequestId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_team_reference(
	id TEXT PRIMARY KEY,
	episodeOfCare_teamId TEXT,
	referenceId TEXT,

	FOREIGN KEY (episodeOfCare_teamId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_account_reference(
	id TEXT PRIMARY KEY,
	episodeOfCare_accountId TEXT,
	referenceId TEXT,

	FOREIGN KEY (episodeOfCare_accountId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_StatusHistory_extension_extension(
	id TEXT PRIMARY KEY,
	episodeOfCare_StatusHistory_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (episodeOfCare_StatusHistory_extensionId)
		REFERENCES episodeOfCare_StatusHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_StatusHistory_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	episodeOfCare_StatusHistory_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (episodeOfCare_StatusHistory_modifierExtensionId)
		REFERENCES episodeOfCare_StatusHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_Diagnosis_extension_extension(
	id TEXT PRIMARY KEY,
	episodeOfCare_Diagnosis_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (episodeOfCare_Diagnosis_extensionId)
		REFERENCES episodeOfCare_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE episodeOfCare_Diagnosis_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	episodeOfCare_Diagnosis_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (episodeOfCare_Diagnosis_modifierExtensionId)
		REFERENCES episodeOfCare_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	eventDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (eventDefinition_containedId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	eventDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (eventDefinition_extensionId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	eventDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (eventDefinition_modifierExtensionId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	eventDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (eventDefinition_identifierId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	eventDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (eventDefinition_contactId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	eventDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (eventDefinition_useContextId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	eventDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (eventDefinition_jurisdictionId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	eventDefinition_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (eventDefinition_topicId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_author_contactDetail(
	id TEXT PRIMARY KEY,
	eventDefinition_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (eventDefinition_authorId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_editor_contactDetail(
	id TEXT PRIMARY KEY,
	eventDefinition_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (eventDefinition_editorId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	eventDefinition_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (eventDefinition_reviewerId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	eventDefinition_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (eventDefinition_endorserId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	eventDefinition_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (eventDefinition_relatedArtifactId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE eventDefinition_trigger_triggerDefinition(
	id TEXT PRIMARY KEY,
	eventDefinition_triggerId TEXT,
	triggerDefinitionId TEXT,

	FOREIGN KEY (eventDefinition_triggerId)
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (triggerDefinitionId)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_contained_resourceList(
	id TEXT PRIMARY KEY,
	evidence_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (evidence_containedId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_extension_extension(
	id TEXT PRIMARY KEY,
	evidence_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (evidence_extensionId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	evidence_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (evidence_modifierExtensionId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_identifier_identifier(
	id TEXT PRIMARY KEY,
	evidence_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (evidence_identifierId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_contact_contactDetail(
	id TEXT PRIMARY KEY,
	evidence_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidence_contactId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_note_annotation(
	id TEXT PRIMARY KEY,
	evidence_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (evidence_noteId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_useContext_usageContext(
	id TEXT PRIMARY KEY,
	evidence_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (evidence_useContextId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	evidence_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (evidence_jurisdictionId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	evidence_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (evidence_topicId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_author_contactDetail(
	id TEXT PRIMARY KEY,
	evidence_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidence_authorId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_editor_contactDetail(
	id TEXT PRIMARY KEY,
	evidence_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidence_editorId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	evidence_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidence_reviewerId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	evidence_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidence_endorserId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	evidence_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (evidence_relatedArtifactId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_exposureVariant_reference(
	id TEXT PRIMARY KEY,
	evidence_exposureVariantId TEXT,
	referenceId TEXT,

	FOREIGN KEY (evidence_exposureVariantId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidence_outcome_reference(
	id TEXT PRIMARY KEY,
	evidence_outcomeId TEXT,
	referenceId TEXT,

	FOREIGN KEY (evidence_outcomeId)
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_contained_resourceList(
	id TEXT PRIMARY KEY,
	evidenceVariable_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (evidenceVariable_containedId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_extension_extension(
	id TEXT PRIMARY KEY,
	evidenceVariable_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (evidenceVariable_extensionId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	evidenceVariable_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (evidenceVariable_modifierExtensionId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_identifier_identifier(
	id TEXT PRIMARY KEY,
	evidenceVariable_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (evidenceVariable_identifierId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_contact_contactDetail(
	id TEXT PRIMARY KEY,
	evidenceVariable_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidenceVariable_contactId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_note_annotation(
	id TEXT PRIMARY KEY,
	evidenceVariable_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (evidenceVariable_noteId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_useContext_usageContext(
	id TEXT PRIMARY KEY,
	evidenceVariable_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (evidenceVariable_useContextId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	evidenceVariable_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (evidenceVariable_jurisdictionId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	evidenceVariable_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (evidenceVariable_topicId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_author_contactDetail(
	id TEXT PRIMARY KEY,
	evidenceVariable_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidenceVariable_authorId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_editor_contactDetail(
	id TEXT PRIMARY KEY,
	evidenceVariable_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidenceVariable_editorId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	evidenceVariable_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidenceVariable_reviewerId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	evidenceVariable_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (evidenceVariable_endorserId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	evidenceVariable_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (evidenceVariable_relatedArtifactId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_Characteristic_extension_extension(
	id TEXT PRIMARY KEY,
	evidenceVariable_Characteristic_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (evidenceVariable_Characteristic_extensionId)
		REFERENCES evidenceVariable_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_Characteristic_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	evidenceVariable_Characteristic_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (evidenceVariable_Characteristic_modifierExtensionId)
		REFERENCES evidenceVariable_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE evidenceVariable_Characteristic_usageContext_usageContext(
	id TEXT PRIMARY KEY,
	evidenceVariable_Characteristic_usageContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (evidenceVariable_Characteristic_usageContextId)
		REFERENCES evidenceVariable_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_contained_resourceList(
	id TEXT PRIMARY KEY,
	exampleScenario_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (exampleScenario_containedId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_extensionId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_modifierExtensionId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_identifier_identifier(
	id TEXT PRIMARY KEY,
	exampleScenario_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (exampleScenario_identifierId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_contact_contactDetail(
	id TEXT PRIMARY KEY,
	exampleScenario_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (exampleScenario_contactId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_useContext_usageContext(
	id TEXT PRIMARY KEY,
	exampleScenario_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (exampleScenario_useContextId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	exampleScenario_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (exampleScenario_jurisdictionId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_process_exampleScenario_Process(
	id TEXT PRIMARY KEY,
	exampleScenario_processId TEXT,
	exampleScenario_ProcessId TEXT,

	FOREIGN KEY (exampleScenario_processId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_ProcessId)
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_workflow_canonical(
	id TEXT PRIMARY KEY,
	exampleScenario_workflowId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (exampleScenario_workflowId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Actor_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Actor_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Actor_extensionId)
		REFERENCES exampleScenario_Actor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Actor_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Actor_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Actor_modifierExtensionId)
		REFERENCES exampleScenario_Actor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Instance_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Instance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Instance_extensionId)
		REFERENCES exampleScenario_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Instance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Instance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Instance_modifierExtensionId)
		REFERENCES exampleScenario_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Version_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Version_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Version_extensionId)
		REFERENCES exampleScenario_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Version_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Version_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Version_modifierExtensionId)
		REFERENCES exampleScenario_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_ContainedInstance_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_ContainedInstance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_ContainedInstance_extensionId)
		REFERENCES exampleScenario_ContainedInstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_ContainedInstance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_ContainedInstance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_ContainedInstance_modifierExtensionId)
		REFERENCES exampleScenario_ContainedInstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Process_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Process_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Process_extensionId)
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Process_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Process_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Process_modifierExtensionId)
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Process_step_exampleScenario_Step(
	id TEXT PRIMARY KEY,
	exampleScenario_Process_stepId TEXT,
	exampleScenario_StepId TEXT,

	FOREIGN KEY (exampleScenario_Process_stepId)
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_StepId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Step_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Step_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Step_extensionId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Step_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Step_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Step_modifierExtensionId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Step_process_exampleScenario_Process(
	id TEXT PRIMARY KEY,
	exampleScenario_Step_processId TEXT,
	exampleScenario_ProcessId TEXT,

	FOREIGN KEY (exampleScenario_Step_processId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_ProcessId)
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Operation_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Operation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Operation_extensionId)
		REFERENCES exampleScenario_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Operation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Operation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Operation_modifierExtensionId)
		REFERENCES exampleScenario_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Alternative_extension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Alternative_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Alternative_extensionId)
		REFERENCES exampleScenario_Alternative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Alternative_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	exampleScenario_Alternative_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (exampleScenario_Alternative_modifierExtensionId)
		REFERENCES exampleScenario_Alternative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE exampleScenario_Alternative_step_exampleScenario_Step(
	id TEXT PRIMARY KEY,
	exampleScenario_Alternative_stepId TEXT,
	exampleScenario_StepId TEXT,

	FOREIGN KEY (exampleScenario_Alternative_stepId)
		REFERENCES exampleScenario_Alternative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_StepId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_contained_resourceList(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (explanationOfBenefit_containedId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_extensionId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_modifierExtensionId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_identifier_identifier(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (explanationOfBenefit_identifierId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_preAuthRef_string(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_preAuthRefId TEXT,
	stringId TEXT,

	FOREIGN KEY (explanationOfBenefit_preAuthRefId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit__preAuthRef_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit__preAuthRefId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit__preAuthRefId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_preAuthRefPeriod_period(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_preAuthRefPeriodId TEXT,
	periodId TEXT,

	FOREIGN KEY (explanationOfBenefit_preAuthRefPeriodId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (periodId)
		REFERENCES "period" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_adjudication_explanationOfBenefit_Adjudication(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_adjudicationId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,

	FOREIGN KEY (explanationOfBenefit_adjudicationId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Related_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Related_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Related_extensionId)
		REFERENCES explanationOfBenefit_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Related_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Related_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Related_modifierExtensionId)
		REFERENCES explanationOfBenefit_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Payee_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Payee_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Payee_extensionId)
		REFERENCES explanationOfBenefit_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Payee_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Payee_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Payee_modifierExtensionId)
		REFERENCES explanationOfBenefit_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_CareTeam_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_CareTeam_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_CareTeam_extensionId)
		REFERENCES explanationOfBenefit_CareTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_CareTeam_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_CareTeam_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_CareTeam_modifierExtensionId)
		REFERENCES explanationOfBenefit_CareTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SupportingInfo_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SupportingInfo_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_SupportingInfo_extensionId)
		REFERENCES explanationOfBenefit_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SupportingInfo_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SupportingInfo_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_SupportingInfo_modifierExtensionId)
		REFERENCES explanationOfBenefit_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Diagnosis_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Diagnosis_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Diagnosis_extensionId)
		REFERENCES explanationOfBenefit_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Diagnosis_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Diagnosis_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Diagnosis_modifierExtensionId)
		REFERENCES explanationOfBenefit_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Diagnosis_type_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Diagnosis_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Diagnosis_typeId)
		REFERENCES explanationOfBenefit_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Procedure_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Procedure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Procedure_extensionId)
		REFERENCES explanationOfBenefit_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Procedure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Procedure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Procedure_modifierExtensionId)
		REFERENCES explanationOfBenefit_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Procedure_type_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Procedure_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Procedure_typeId)
		REFERENCES explanationOfBenefit_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Procedure_udi_reference(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Procedure_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (explanationOfBenefit_Procedure_udiId)
		REFERENCES explanationOfBenefit_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Insurance_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Insurance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Insurance_extensionId)
		REFERENCES explanationOfBenefit_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Insurance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Insurance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Insurance_modifierExtensionId)
		REFERENCES explanationOfBenefit_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Insurance_preAuthRef_string(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Insurance_preAuthRefId TEXT,
	stringId TEXT,

	FOREIGN KEY (explanationOfBenefit_Insurance_preAuthRefId)
		REFERENCES explanationOfBenefit_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Insurance__preAuthRef_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Insurance__preAuthRefId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Insurance__preAuthRefId)
		REFERENCES explanationOfBenefit_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Accident_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Accident_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Accident_extensionId)
		REFERENCES explanationOfBenefit_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Accident_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Accident_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Accident_modifierExtensionId)
		REFERENCES explanationOfBenefit_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_extensionId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_modifierExtensionId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_careTeamSequence_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_careTeamSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_careTeamSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item__careTeamSequence_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item__careTeamSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item__careTeamSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_diagnosisSequence_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_diagnosisSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_diagnosisSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item__diagnosisSequence_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item__diagnosisSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item__diagnosisSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_procedureSequence_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_procedureSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_procedureSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item__procedureSequence_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item__procedureSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item__procedureSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_informationSequence_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_informationSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_informationSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item__informationSequence_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item__informationSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item__informationSequenceId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_modifierId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_programCodeId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_udi_reference(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_udiId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_subSite_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_subSiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_subSiteId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_encounter_reference(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_encounterId TEXT,
	referenceId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_encounterId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_noteNumberId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item__noteNumber_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item__noteNumberId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Item_adjudication_explanationOfBenefit_Adjudication(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Item_adjudicationId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,

	FOREIGN KEY (explanationOfBenefit_Item_adjudicationId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Adjudication_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Adjudication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Adjudication_extensionId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Adjudication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Adjudication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Adjudication_modifierExtensionId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail_extensionId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail_modifierExtensionId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail_modifierId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail_programCodeId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail_udi_reference(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail_udiId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail_noteNumberId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail__noteNumber_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail__noteNumberId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail_adjudication_explanationOfBenefit_Adjudication(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail_adjudicationId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail_adjudicationId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail_extensionId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail_modifierExtensionId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail_modifierId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail_programCodeId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail_udi_reference(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail_udiId TEXT,
	referenceId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail_udiId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail_noteNumberId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail__noteNumber_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail__noteNumberId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail_adjudication_explanationOfBenefit_Adjudication(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail_adjudicationId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail_adjudicationId)
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_extensionId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_modifierExtensionId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_itemSequence_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_itemSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_itemSequenceId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem__itemSequence_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem__itemSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem__itemSequenceId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_detailSequence_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_detailSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_detailSequenceId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem__detailSequence_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem__detailSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem__detailSequenceId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_subDetailSequence_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_subDetailSequenceId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_subDetailSequenceId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem__subDetailSequence_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem__subDetailSequenceId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem__subDetailSequenceId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_provider_reference(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_providerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_providerId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_modifierId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_programCode_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_programCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_programCodeId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_subSite_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_subSiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_subSiteId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_noteNumberId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem__noteNumber_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem__noteNumberId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_AddItem_adjudication_explanationOfBenefit_Adjudication(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItem_adjudicationId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,

	FOREIGN KEY (explanationOfBenefit_AddItem_adjudicationId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail1_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail1_extensionId)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail1_modifierExtensionId)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail1_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail1_modifierId)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail1_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail1_noteNumberId)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail1__noteNumber_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail1__noteNumberId)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Detail1_adjudication_explanationOfBenefit_Adjudication(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1_adjudicationId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,

	FOREIGN KEY (explanationOfBenefit_Detail1_adjudicationId)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail1_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail1_extensionId)
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail1_modifierExtensionId)
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail1_modifier_codeableConcept(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail1_modifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail1_modifierId)
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail1_noteNumber_positiveInt(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail1_noteNumberId TEXT,
	positiveIntId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail1_noteNumberId)
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail1__noteNumber_element(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail1__noteNumberId TEXT,
	elementId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail1__noteNumberId)
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_SubDetail1_adjudication_explanationOfBenefit_Adjudication(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_SubDetail1_adjudicationId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,

	FOREIGN KEY (explanationOfBenefit_SubDetail1_adjudicationId)
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Total_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Total_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Total_extensionId)
		REFERENCES explanationOfBenefit_Total (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Total_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Total_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Total_modifierExtensionId)
		REFERENCES explanationOfBenefit_Total (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Payment_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Payment_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Payment_extensionId)
		REFERENCES explanationOfBenefit_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Payment_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Payment_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Payment_modifierExtensionId)
		REFERENCES explanationOfBenefit_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_ProcessNote_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_ProcessNote_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_ProcessNote_extensionId)
		REFERENCES explanationOfBenefit_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_ProcessNote_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_ProcessNote_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_ProcessNote_modifierExtensionId)
		REFERENCES explanationOfBenefit_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_BenefitBalance_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_BenefitBalance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_BenefitBalance_extensionId)
		REFERENCES explanationOfBenefit_BenefitBalance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_BenefitBalance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_BenefitBalance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_BenefitBalance_modifierExtensionId)
		REFERENCES explanationOfBenefit_BenefitBalance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Financial_extension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Financial_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Financial_extensionId)
		REFERENCES explanationOfBenefit_Financial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE explanationOfBenefit_Financial_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	explanationOfBenefit_Financial_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (explanationOfBenefit_Financial_modifierExtensionId)
		REFERENCES explanationOfBenefit_Financial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_contained_resourceList(
	id TEXT PRIMARY KEY,
	familyMemberHistory_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (familyMemberHistory_containedId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_extension_extension(
	id TEXT PRIMARY KEY,
	familyMemberHistory_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (familyMemberHistory_extensionId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	familyMemberHistory_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (familyMemberHistory_modifierExtensionId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_identifier_identifier(
	id TEXT PRIMARY KEY,
	familyMemberHistory_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (familyMemberHistory_identifierId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	familyMemberHistory_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (familyMemberHistory_instantiatesCanonicalId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	familyMemberHistory_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (familyMemberHistory_instantiatesUriId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	familyMemberHistory__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (familyMemberHistory__instantiatesUriId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	familyMemberHistory_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (familyMemberHistory_reasonCodeId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_reasonReference_reference(
	id TEXT PRIMARY KEY,
	familyMemberHistory_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (familyMemberHistory_reasonReferenceId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_note_annotation(
	id TEXT PRIMARY KEY,
	familyMemberHistory_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (familyMemberHistory_noteId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_Condition_extension_extension(
	id TEXT PRIMARY KEY,
	familyMemberHistory_Condition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (familyMemberHistory_Condition_extensionId)
		REFERENCES familyMemberHistory_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_Condition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	familyMemberHistory_Condition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (familyMemberHistory_Condition_modifierExtensionId)
		REFERENCES familyMemberHistory_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE familyMemberHistory_Condition_note_annotation(
	id TEXT PRIMARY KEY,
	familyMemberHistory_Condition_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (familyMemberHistory_Condition_noteId)
		REFERENCES familyMemberHistory_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE flag_contained_resourceList(
	id TEXT PRIMARY KEY,
	flag_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (flag_containedId)
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE flag_extension_extension(
	id TEXT PRIMARY KEY,
	flag_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (flag_extensionId)
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE flag_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	flag_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (flag_modifierExtensionId)
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE flag_identifier_identifier(
	id TEXT PRIMARY KEY,
	flag_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (flag_identifierId)
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE flag_category_codeableConcept(
	id TEXT PRIMARY KEY,
	flag_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (flag_categoryId)
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_contained_resourceList(
	id TEXT PRIMARY KEY,
	goal_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (goal_containedId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_extension_extension(
	id TEXT PRIMARY KEY,
	goal_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (goal_extensionId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	goal_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (goal_modifierExtensionId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_identifier_identifier(
	id TEXT PRIMARY KEY,
	goal_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (goal_identifierId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_category_codeableConcept(
	id TEXT PRIMARY KEY,
	goal_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (goal_categoryId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_addresses_reference(
	id TEXT PRIMARY KEY,
	goal_addressesId TEXT,
	referenceId TEXT,

	FOREIGN KEY (goal_addressesId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_note_annotation(
	id TEXT PRIMARY KEY,
	goal_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (goal_noteId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_outcomeCode_codeableConcept(
	id TEXT PRIMARY KEY,
	goal_outcomeCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (goal_outcomeCodeId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_outcomeReference_reference(
	id TEXT PRIMARY KEY,
	goal_outcomeReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (goal_outcomeReferenceId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_Target_extension_extension(
	id TEXT PRIMARY KEY,
	goal_Target_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (goal_Target_extensionId)
		REFERENCES goal_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE goal_Target_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	goal_Target_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (goal_Target_modifierExtensionId)
		REFERENCES goal_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	graphDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (graphDefinition_containedId)
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_extensionId)
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_modifierExtensionId)
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	graphDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (graphDefinition_contactId)
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	graphDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (graphDefinition_useContextId)
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	graphDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (graphDefinition_jurisdictionId)
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_link_graphDefinition_Link(
	id TEXT PRIMARY KEY,
	graphDefinition_linkId TEXT,
	graphDefinition_LinkId TEXT,

	FOREIGN KEY (graphDefinition_linkId)
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinition_LinkId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_Link_extension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_Link_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_Link_extensionId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_Link_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_Link_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_Link_modifierExtensionId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_Target_extension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_Target_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_Target_extensionId)
		REFERENCES graphDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_Target_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_Target_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_Target_modifierExtensionId)
		REFERENCES graphDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_Target_link_graphDefinition_Link(
	id TEXT PRIMARY KEY,
	graphDefinition_Target_linkId TEXT,
	graphDefinition_LinkId TEXT,

	FOREIGN KEY (graphDefinition_Target_linkId)
		REFERENCES graphDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinition_LinkId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_Compartment_extension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_Compartment_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_Compartment_extensionId)
		REFERENCES graphDefinition_Compartment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE graphDefinition_Compartment_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	graphDefinition_Compartment_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (graphDefinition_Compartment_modifierExtensionId)
		REFERENCES graphDefinition_Compartment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_contained_resourceList(
	id TEXT PRIMARY KEY,
	group_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (group_containedId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_extension_extension(
	id TEXT PRIMARY KEY,
	group_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (group_extensionId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	group_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (group_modifierExtensionId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_identifier_identifier(
	id TEXT PRIMARY KEY,
	group_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (group_identifierId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_Characteristic_extension_extension(
	id TEXT PRIMARY KEY,
	group_Characteristic_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (group_Characteristic_extensionId)
		REFERENCES group_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_Characteristic_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	group_Characteristic_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (group_Characteristic_modifierExtensionId)
		REFERENCES group_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_Member_extension_extension(
	id TEXT PRIMARY KEY,
	group_Member_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (group_Member_extensionId)
		REFERENCES group_Member (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE group_Member_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	group_Member_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (group_Member_modifierExtensionId)
		REFERENCES group_Member (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_contained_resourceList(
	id TEXT PRIMARY KEY,
	guidanceResponse_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (guidanceResponse_containedId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_extension_extension(
	id TEXT PRIMARY KEY,
	guidanceResponse_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (guidanceResponse_extensionId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	guidanceResponse_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (guidanceResponse_modifierExtensionId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_identifier_identifier(
	id TEXT PRIMARY KEY,
	guidanceResponse_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (guidanceResponse_identifierId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	guidanceResponse_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (guidanceResponse_reasonCodeId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_reasonReference_reference(
	id TEXT PRIMARY KEY,
	guidanceResponse_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (guidanceResponse_reasonReferenceId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_note_annotation(
	id TEXT PRIMARY KEY,
	guidanceResponse_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (guidanceResponse_noteId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_evaluationMessage_reference(
	id TEXT PRIMARY KEY,
	guidanceResponse_evaluationMessageId TEXT,
	referenceId TEXT,

	FOREIGN KEY (guidanceResponse_evaluationMessageId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE guidanceResponse_dataRequirement_dataRequirement(
	id TEXT PRIMARY KEY,
	guidanceResponse_dataRequirementId TEXT,
	dataRequirementId TEXT,

	FOREIGN KEY (guidanceResponse_dataRequirementId)
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_contained_resourceList(
	id TEXT PRIMARY KEY,
	healthcareService_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (healthcareService_containedId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_extension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_extensionId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_modifierExtensionId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_identifier_identifier(
	id TEXT PRIMARY KEY,
	healthcareService_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (healthcareService_identifierId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_category_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_categoryId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_type_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_typeId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_specialty_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_specialtyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_specialtyId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_location_reference(
	id TEXT PRIMARY KEY,
	healthcareService_locationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (healthcareService_locationId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	healthcareService_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (healthcareService_telecomId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_coverageArea_reference(
	id TEXT PRIMARY KEY,
	healthcareService_coverageAreaId TEXT,
	referenceId TEXT,

	FOREIGN KEY (healthcareService_coverageAreaId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_serviceProvisionCode_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_serviceProvisionCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_serviceProvisionCodeId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_program_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_programId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_programId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_characteristic_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_characteristicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_characteristicId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_communication_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_communicationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_communicationId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_referralMethod_codeableConcept(
	id TEXT PRIMARY KEY,
	healthcareService_referralMethodId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (healthcareService_referralMethodId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_endpoint_reference(
	id TEXT PRIMARY KEY,
	healthcareService_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (healthcareService_endpointId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_Eligibility_extension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_Eligibility_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_Eligibility_extensionId)
		REFERENCES healthcareService_Eligibility (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_Eligibility_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_Eligibility_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_Eligibility_modifierExtensionId)
		REFERENCES healthcareService_Eligibility (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_AvailableTime_extension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_AvailableTime_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_AvailableTime_extensionId)
		REFERENCES healthcareService_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_AvailableTime_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_AvailableTime_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_AvailableTime_modifierExtensionId)
		REFERENCES healthcareService_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_AvailableTime__daysOfWeek_element(
	id TEXT PRIMARY KEY,
	healthcareService_AvailableTime__daysOfWeekId TEXT,
	elementId TEXT,

	FOREIGN KEY (healthcareService_AvailableTime__daysOfWeekId)
		REFERENCES healthcareService_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_NotAvailable_extension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_NotAvailable_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_NotAvailable_extensionId)
		REFERENCES healthcareService_NotAvailable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE healthcareService_NotAvailable_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	healthcareService_NotAvailable_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (healthcareService_NotAvailable_modifierExtensionId)
		REFERENCES healthcareService_NotAvailable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_contained_resourceList(
	id TEXT PRIMARY KEY,
	imagingStudy_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (imagingStudy_containedId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_extension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_extensionId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_modifierExtensionId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_identifier_identifier(
	id TEXT PRIMARY KEY,
	imagingStudy_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (imagingStudy_identifierId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_modality_coding(
	id TEXT PRIMARY KEY,
	imagingStudy_modalityId TEXT,
	codingId TEXT,

	FOREIGN KEY (imagingStudy_modalityId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_basedOn_reference(
	id TEXT PRIMARY KEY,
	imagingStudy_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (imagingStudy_basedOnId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_interpreter_reference(
	id TEXT PRIMARY KEY,
	imagingStudy_interpreterId TEXT,
	referenceId TEXT,

	FOREIGN KEY (imagingStudy_interpreterId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_endpoint_reference(
	id TEXT PRIMARY KEY,
	imagingStudy_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (imagingStudy_endpointId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_procedureCode_codeableConcept(
	id TEXT PRIMARY KEY,
	imagingStudy_procedureCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (imagingStudy_procedureCodeId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	imagingStudy_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (imagingStudy_reasonCodeId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_reasonReference_reference(
	id TEXT PRIMARY KEY,
	imagingStudy_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (imagingStudy_reasonReferenceId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_note_annotation(
	id TEXT PRIMARY KEY,
	imagingStudy_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (imagingStudy_noteId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Series_extension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_Series_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_Series_extensionId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Series_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_Series_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_Series_modifierExtensionId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Series_endpoint_reference(
	id TEXT PRIMARY KEY,
	imagingStudy_Series_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (imagingStudy_Series_endpointId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Series_specimen_reference(
	id TEXT PRIMARY KEY,
	imagingStudy_Series_specimenId TEXT,
	referenceId TEXT,

	FOREIGN KEY (imagingStudy_Series_specimenId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Performer_extension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_Performer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_Performer_extensionId)
		REFERENCES imagingStudy_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Performer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_Performer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_Performer_modifierExtensionId)
		REFERENCES imagingStudy_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Instance_extension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_Instance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_Instance_extensionId)
		REFERENCES imagingStudy_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE imagingStudy_Instance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	imagingStudy_Instance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (imagingStudy_Instance_modifierExtensionId)
		REFERENCES imagingStudy_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_contained_resourceList(
	id TEXT PRIMARY KEY,
	immunization_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (immunization_containedId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_extension_extension(
	id TEXT PRIMARY KEY,
	immunization_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_extensionId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunization_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_modifierExtensionId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_identifier_identifier(
	id TEXT PRIMARY KEY,
	immunization_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (immunization_identifierId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_note_annotation(
	id TEXT PRIMARY KEY,
	immunization_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (immunization_noteId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	immunization_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunization_reasonCodeId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_reasonReference_reference(
	id TEXT PRIMARY KEY,
	immunization_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (immunization_reasonReferenceId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_subpotentReason_codeableConcept(
	id TEXT PRIMARY KEY,
	immunization_subpotentReasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunization_subpotentReasonId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_programEligibility_codeableConcept(
	id TEXT PRIMARY KEY,
	immunization_programEligibilityId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunization_programEligibilityId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_Performer_extension_extension(
	id TEXT PRIMARY KEY,
	immunization_Performer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_Performer_extensionId)
		REFERENCES immunization_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_Performer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunization_Performer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_Performer_modifierExtensionId)
		REFERENCES immunization_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_Education_extension_extension(
	id TEXT PRIMARY KEY,
	immunization_Education_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_Education_extensionId)
		REFERENCES immunization_Education (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_Education_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunization_Education_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_Education_modifierExtensionId)
		REFERENCES immunization_Education (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_Reaction_extension_extension(
	id TEXT PRIMARY KEY,
	immunization_Reaction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_Reaction_extensionId)
		REFERENCES immunization_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_Reaction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunization_Reaction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_Reaction_modifierExtensionId)
		REFERENCES immunization_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_ProtocolApplied_extension_extension(
	id TEXT PRIMARY KEY,
	immunization_ProtocolApplied_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_ProtocolApplied_extensionId)
		REFERENCES immunization_ProtocolApplied (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_ProtocolApplied_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunization_ProtocolApplied_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunization_ProtocolApplied_modifierExtensionId)
		REFERENCES immunization_ProtocolApplied (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunization_ProtocolApplied_targetDisease_codeableConcept(
	id TEXT PRIMARY KEY,
	immunization_ProtocolApplied_targetDiseaseId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunization_ProtocolApplied_targetDiseaseId)
		REFERENCES immunization_ProtocolApplied (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationEvaluation_contained_resourceList(
	id TEXT PRIMARY KEY,
	immunizationEvaluation_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (immunizationEvaluation_containedId)
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationEvaluation_extension_extension(
	id TEXT PRIMARY KEY,
	immunizationEvaluation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationEvaluation_extensionId)
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationEvaluation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunizationEvaluation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationEvaluation_modifierExtensionId)
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationEvaluation_identifier_identifier(
	id TEXT PRIMARY KEY,
	immunizationEvaluation_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (immunizationEvaluation_identifierId)
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationEvaluation_doseStatusReason_codeableConcept(
	id TEXT PRIMARY KEY,
	immunizationEvaluation_doseStatusReasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunizationEvaluation_doseStatusReasonId)
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_contained_resourceList(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (immunizationRecommendation_containedId)
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_extension_extension(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationRecommendation_extensionId)
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationRecommendation_modifierExtensionId)
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_identifier_identifier(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (immunizationRecommendation_identifierId)
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_Recommendation_extension_extension(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_Recommendation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationRecommendation_Recommendation_extensionId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_Recommendation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_Recommendation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationRecommendation_Recommendation_modifierExtensionId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_Recommendation_vaccineCode_codeableConcept(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_Recommendation_vaccineCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunizationRecommendation_Recommendation_vaccineCodeId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_Recommendation_contraindicatedVaccineCode_codeableConcept(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_Recommendation_contraindicatedVaccineCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunizationRecommendation_Recommendation_contraindicatedVaccineCodeId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_Recommendation_forecastReason_codeableConcept(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_Recommendation_forecastReasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (immunizationRecommendation_Recommendation_forecastReasonId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_Recommendation_supportingImmunization_reference(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_Recommendation_supportingImmunizationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (immunizationRecommendation_Recommendation_supportingImmunizationId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_Recommendation_supportingPatientInformation_reference(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_Recommendation_supportingPatientInformationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (immunizationRecommendation_Recommendation_supportingPatientInformationId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_DateCriterion_extension_extension(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_DateCriterion_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationRecommendation_DateCriterion_extensionId)
		REFERENCES immunizationRecommendation_DateCriterion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE immunizationRecommendation_DateCriterion_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	immunizationRecommendation_DateCriterion_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (immunizationRecommendation_DateCriterion_modifierExtensionId)
		REFERENCES immunizationRecommendation_DateCriterion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_contained_resourceList(
	id TEXT PRIMARY KEY,
	implementationGuide_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (implementationGuide_containedId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_extensionId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_modifierExtensionId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_contact_contactDetail(
	id TEXT PRIMARY KEY,
	implementationGuide_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (implementationGuide_contactId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_useContext_usageContext(
	id TEXT PRIMARY KEY,
	implementationGuide_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (implementationGuide_useContextId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	implementationGuide_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (implementationGuide_jurisdictionId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide__fhirVersion_element(
	id TEXT PRIMARY KEY,
	implementationGuide__fhirVersionId TEXT,
	elementId TEXT,

	FOREIGN KEY (implementationGuide__fhirVersionId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_DependsOn_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_DependsOn_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_DependsOn_extensionId)
		REFERENCES implementationGuide_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_DependsOn_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_DependsOn_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_DependsOn_modifierExtensionId)
		REFERENCES implementationGuide_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Global_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Global_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Global_extensionId)
		REFERENCES implementationGuide_Global (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Global_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Global_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Global_modifierExtensionId)
		REFERENCES implementationGuide_Global (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Definition_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Definition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Definition_extensionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Definition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Definition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Definition_modifierExtensionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Grouping_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Grouping_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Grouping_extensionId)
		REFERENCES implementationGuide_Grouping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Grouping_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Grouping_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Grouping_modifierExtensionId)
		REFERENCES implementationGuide_Grouping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Resource_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Resource_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Resource_extensionId)
		REFERENCES implementationGuide_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Resource_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Resource_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Resource_modifierExtensionId)
		REFERENCES implementationGuide_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Resource__fhirVersion_element(
	id TEXT PRIMARY KEY,
	implementationGuide_Resource__fhirVersionId TEXT,
	elementId TEXT,

	FOREIGN KEY (implementationGuide_Resource__fhirVersionId)
		REFERENCES implementationGuide_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Page_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Page_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Page_extensionId)
		REFERENCES implementationGuide_Page (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Page_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Page_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Page_modifierExtensionId)
		REFERENCES implementationGuide_Page (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Parameter_extensionId)
		REFERENCES implementationGuide_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Parameter_modifierExtensionId)
		REFERENCES implementationGuide_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Template_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Template_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Template_extensionId)
		REFERENCES implementationGuide_Template (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Template_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Template_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Template_modifierExtensionId)
		REFERENCES implementationGuide_Template (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Manifest_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Manifest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Manifest_extensionId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Manifest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Manifest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Manifest_modifierExtensionId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Manifest_image_string(
	id TEXT PRIMARY KEY,
	implementationGuide_Manifest_imageId TEXT,
	stringId TEXT,

	FOREIGN KEY (implementationGuide_Manifest_imageId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Manifest__image_element(
	id TEXT PRIMARY KEY,
	implementationGuide_Manifest__imageId TEXT,
	elementId TEXT,

	FOREIGN KEY (implementationGuide_Manifest__imageId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Manifest_other_string(
	id TEXT PRIMARY KEY,
	implementationGuide_Manifest_otherId TEXT,
	stringId TEXT,

	FOREIGN KEY (implementationGuide_Manifest_otherId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Manifest__other_element(
	id TEXT PRIMARY KEY,
	implementationGuide_Manifest__otherId TEXT,
	elementId TEXT,

	FOREIGN KEY (implementationGuide_Manifest__otherId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Resource1_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Resource1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Resource1_extensionId)
		REFERENCES implementationGuide_Resource1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Resource1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Resource1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Resource1_modifierExtensionId)
		REFERENCES implementationGuide_Resource1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Page1_extension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Page1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Page1_extensionId)
		REFERENCES implementationGuide_Page1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Page1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	implementationGuide_Page1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (implementationGuide_Page1_modifierExtensionId)
		REFERENCES implementationGuide_Page1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Page1_anchor_string(
	id TEXT PRIMARY KEY,
	implementationGuide_Page1_anchorId TEXT,
	stringId TEXT,

	FOREIGN KEY (implementationGuide_Page1_anchorId)
		REFERENCES implementationGuide_Page1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE implementationGuide_Page1__anchor_element(
	id TEXT PRIMARY KEY,
	implementationGuide_Page1__anchorId TEXT,
	elementId TEXT,

	FOREIGN KEY (implementationGuide_Page1__anchorId)
		REFERENCES implementationGuide_Page1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_contained_resourceList(
	id TEXT PRIMARY KEY,
	insurancePlan_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (insurancePlan_containedId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_extensionId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_modifierExtensionId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_identifier_identifier(
	id TEXT PRIMARY KEY,
	insurancePlan_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (insurancePlan_identifierId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_type_codeableConcept(
	id TEXT PRIMARY KEY,
	insurancePlan_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (insurancePlan_typeId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_alias_string(
	id TEXT PRIMARY KEY,
	insurancePlan_aliasId TEXT,
	stringId TEXT,

	FOREIGN KEY (insurancePlan_aliasId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan__alias_element(
	id TEXT PRIMARY KEY,
	insurancePlan__aliasId TEXT,
	elementId TEXT,

	FOREIGN KEY (insurancePlan__aliasId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_coverageArea_reference(
	id TEXT PRIMARY KEY,
	insurancePlan_coverageAreaId TEXT,
	referenceId TEXT,

	FOREIGN KEY (insurancePlan_coverageAreaId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_endpoint_reference(
	id TEXT PRIMARY KEY,
	insurancePlan_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (insurancePlan_endpointId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_network_reference(
	id TEXT PRIMARY KEY,
	insurancePlan_networkId TEXT,
	referenceId TEXT,

	FOREIGN KEY (insurancePlan_networkId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Contact_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Contact_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Contact_extensionId)
		REFERENCES insurancePlan_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Contact_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Contact_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Contact_modifierExtensionId)
		REFERENCES insurancePlan_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Contact_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	insurancePlan_Contact_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (insurancePlan_Contact_telecomId)
		REFERENCES insurancePlan_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Coverage_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Coverage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Coverage_extensionId)
		REFERENCES insurancePlan_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Coverage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Coverage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Coverage_modifierExtensionId)
		REFERENCES insurancePlan_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Coverage_network_reference(
	id TEXT PRIMARY KEY,
	insurancePlan_Coverage_networkId TEXT,
	referenceId TEXT,

	FOREIGN KEY (insurancePlan_Coverage_networkId)
		REFERENCES insurancePlan_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Benefit_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Benefit_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Benefit_extensionId)
		REFERENCES insurancePlan_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Benefit_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Benefit_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Benefit_modifierExtensionId)
		REFERENCES insurancePlan_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Limit_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Limit_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Limit_extensionId)
		REFERENCES insurancePlan_Limit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Limit_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Limit_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Limit_modifierExtensionId)
		REFERENCES insurancePlan_Limit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Plan_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Plan_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Plan_extensionId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Plan_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Plan_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Plan_modifierExtensionId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Plan_identifier_identifier(
	id TEXT PRIMARY KEY,
	insurancePlan_Plan_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (insurancePlan_Plan_identifierId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Plan_coverageArea_reference(
	id TEXT PRIMARY KEY,
	insurancePlan_Plan_coverageAreaId TEXT,
	referenceId TEXT,

	FOREIGN KEY (insurancePlan_Plan_coverageAreaId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Plan_network_reference(
	id TEXT PRIMARY KEY,
	insurancePlan_Plan_networkId TEXT,
	referenceId TEXT,

	FOREIGN KEY (insurancePlan_Plan_networkId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_GeneralCost_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_GeneralCost_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_GeneralCost_extensionId)
		REFERENCES insurancePlan_GeneralCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_GeneralCost_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_GeneralCost_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_GeneralCost_modifierExtensionId)
		REFERENCES insurancePlan_GeneralCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_SpecificCost_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_SpecificCost_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_SpecificCost_extensionId)
		REFERENCES insurancePlan_SpecificCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_SpecificCost_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_SpecificCost_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_SpecificCost_modifierExtensionId)
		REFERENCES insurancePlan_SpecificCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Benefit1_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Benefit1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Benefit1_extensionId)
		REFERENCES insurancePlan_Benefit1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Benefit1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Benefit1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Benefit1_modifierExtensionId)
		REFERENCES insurancePlan_Benefit1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Cost_extension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Cost_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Cost_extensionId)
		REFERENCES insurancePlan_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Cost_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	insurancePlan_Cost_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (insurancePlan_Cost_modifierExtensionId)
		REFERENCES insurancePlan_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE insurancePlan_Cost_qualifiers_codeableConcept(
	id TEXT PRIMARY KEY,
	insurancePlan_Cost_qualifiersId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (insurancePlan_Cost_qualifiersId)
		REFERENCES insurancePlan_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_contained_resourceList(
	id TEXT PRIMARY KEY,
	invoice_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (invoice_containedId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_extension_extension(
	id TEXT PRIMARY KEY,
	invoice_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_extensionId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	invoice_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_modifierExtensionId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_identifier_identifier(
	id TEXT PRIMARY KEY,
	invoice_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (invoice_identifierId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_totalPriceComponent_invoice_PriceComponent(
	id TEXT PRIMARY KEY,
	invoice_totalPriceComponentId TEXT,
	invoice_PriceComponentId TEXT,

	FOREIGN KEY (invoice_totalPriceComponentId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoice_PriceComponentId)
		REFERENCES invoice_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_note_annotation(
	id TEXT PRIMARY KEY,
	invoice_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (invoice_noteId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_Participant_extension_extension(
	id TEXT PRIMARY KEY,
	invoice_Participant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_Participant_extensionId)
		REFERENCES invoice_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_Participant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	invoice_Participant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_Participant_modifierExtensionId)
		REFERENCES invoice_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_LineItem_extension_extension(
	id TEXT PRIMARY KEY,
	invoice_LineItem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_LineItem_extensionId)
		REFERENCES invoice_LineItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_LineItem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	invoice_LineItem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_LineItem_modifierExtensionId)
		REFERENCES invoice_LineItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_LineItem_priceComponent_invoice_PriceComponent(
	id TEXT PRIMARY KEY,
	invoice_LineItem_priceComponentId TEXT,
	invoice_PriceComponentId TEXT,

	FOREIGN KEY (invoice_LineItem_priceComponentId)
		REFERENCES invoice_LineItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoice_PriceComponentId)
		REFERENCES invoice_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_PriceComponent_extension_extension(
	id TEXT PRIMARY KEY,
	invoice_PriceComponent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_PriceComponent_extensionId)
		REFERENCES invoice_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE invoice_PriceComponent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	invoice_PriceComponent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (invoice_PriceComponent_modifierExtensionId)
		REFERENCES invoice_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_contained_resourceList(
	id TEXT PRIMARY KEY,
	library_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (library_containedId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_extension_extension(
	id TEXT PRIMARY KEY,
	library_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (library_extensionId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	library_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (library_modifierExtensionId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_identifier_identifier(
	id TEXT PRIMARY KEY,
	library_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (library_identifierId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_contact_contactDetail(
	id TEXT PRIMARY KEY,
	library_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (library_contactId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_useContext_usageContext(
	id TEXT PRIMARY KEY,
	library_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (library_useContextId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	library_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (library_jurisdictionId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	library_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (library_topicId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_author_contactDetail(
	id TEXT PRIMARY KEY,
	library_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (library_authorId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_editor_contactDetail(
	id TEXT PRIMARY KEY,
	library_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (library_editorId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	library_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (library_reviewerId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	library_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (library_endorserId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	library_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (library_relatedArtifactId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_dataRequirement_dataRequirement(
	id TEXT PRIMARY KEY,
	library_dataRequirementId TEXT,
	dataRequirementId TEXT,

	FOREIGN KEY (library_dataRequirementId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE library_content_attachment(
	id TEXT PRIMARY KEY,
	library_contentId TEXT,
	attachmentId TEXT,

	FOREIGN KEY (library_contentId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE linkage_contained_resourceList(
	id TEXT PRIMARY KEY,
	linkage_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (linkage_containedId)
		REFERENCES linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE linkage_extension_extension(
	id TEXT PRIMARY KEY,
	linkage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (linkage_extensionId)
		REFERENCES linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE linkage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	linkage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (linkage_modifierExtensionId)
		REFERENCES linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE linkage_Item_extension_extension(
	id TEXT PRIMARY KEY,
	linkage_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (linkage_Item_extensionId)
		REFERENCES linkage_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE linkage_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	linkage_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (linkage_Item_modifierExtensionId)
		REFERENCES linkage_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE list_contained_resourceList(
	id TEXT PRIMARY KEY,
	list_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (list_containedId)
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE list_extension_extension(
	id TEXT PRIMARY KEY,
	list_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (list_extensionId)
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE list_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	list_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (list_modifierExtensionId)
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE list_identifier_identifier(
	id TEXT PRIMARY KEY,
	list_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (list_identifierId)
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE list_note_annotation(
	id TEXT PRIMARY KEY,
	list_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (list_noteId)
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE list_Entry_extension_extension(
	id TEXT PRIMARY KEY,
	list_Entry_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (list_Entry_extensionId)
		REFERENCES list_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE list_Entry_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	list_Entry_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (list_Entry_modifierExtensionId)
		REFERENCES list_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_contained_resourceList(
	id TEXT PRIMARY KEY,
	location_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (location_containedId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_extension_extension(
	id TEXT PRIMARY KEY,
	location_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (location_extensionId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	location_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (location_modifierExtensionId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_identifier_identifier(
	id TEXT PRIMARY KEY,
	location_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (location_identifierId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_alias_string(
	id TEXT PRIMARY KEY,
	location_aliasId TEXT,
	stringId TEXT,

	FOREIGN KEY (location_aliasId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location__alias_element(
	id TEXT PRIMARY KEY,
	location__aliasId TEXT,
	elementId TEXT,

	FOREIGN KEY (location__aliasId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_type_codeableConcept(
	id TEXT PRIMARY KEY,
	location_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (location_typeId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	location_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (location_telecomId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_endpoint_reference(
	id TEXT PRIMARY KEY,
	location_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (location_endpointId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_Position_extension_extension(
	id TEXT PRIMARY KEY,
	location_Position_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (location_Position_extensionId)
		REFERENCES location_Position (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_Position_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	location_Position_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (location_Position_modifierExtensionId)
		REFERENCES location_Position (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_HoursOfOperation_extension_extension(
	id TEXT PRIMARY KEY,
	location_HoursOfOperation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (location_HoursOfOperation_extensionId)
		REFERENCES location_HoursOfOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_HoursOfOperation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	location_HoursOfOperation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (location_HoursOfOperation_modifierExtensionId)
		REFERENCES location_HoursOfOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_HoursOfOperation_daysOfWeek_code(
	id TEXT PRIMARY KEY,
	location_HoursOfOperation_daysOfWeekId TEXT,
	codeId TEXT,

	FOREIGN KEY (location_HoursOfOperation_daysOfWeekId)
		REFERENCES location_HoursOfOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE location_HoursOfOperation__daysOfWeek_element(
	id TEXT PRIMARY KEY,
	location_HoursOfOperation__daysOfWeekId TEXT,
	elementId TEXT,

	FOREIGN KEY (location_HoursOfOperation__daysOfWeekId)
		REFERENCES location_HoursOfOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_contained_resourceList(
	id TEXT PRIMARY KEY,
	measure_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (measure_containedId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_extension_extension(
	id TEXT PRIMARY KEY,
	measure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_extensionId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_modifierExtensionId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_identifier_identifier(
	id TEXT PRIMARY KEY,
	measure_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (measure_identifierId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_contact_contactDetail(
	id TEXT PRIMARY KEY,
	measure_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (measure_contactId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_useContext_usageContext(
	id TEXT PRIMARY KEY,
	measure_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (measure_useContextId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	measure_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (measure_jurisdictionId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	measure_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (measure_topicId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_author_contactDetail(
	id TEXT PRIMARY KEY,
	measure_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (measure_authorId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_editor_contactDetail(
	id TEXT PRIMARY KEY,
	measure_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (measure_editorId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	measure_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (measure_reviewerId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	measure_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (measure_endorserId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	measure_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (measure_relatedArtifactId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_library_canonical(
	id TEXT PRIMARY KEY,
	measure_libraryId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (measure_libraryId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_type_codeableConcept(
	id TEXT PRIMARY KEY,
	measure_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (measure_typeId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure__definition_element(
	id TEXT PRIMARY KEY,
	measure__definitionId TEXT,
	elementId TEXT,

	FOREIGN KEY (measure__definitionId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Group_extension_extension(
	id TEXT PRIMARY KEY,
	measure_Group_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Group_extensionId)
		REFERENCES measure_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Group_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measure_Group_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Group_modifierExtensionId)
		REFERENCES measure_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Population_extension_extension(
	id TEXT PRIMARY KEY,
	measure_Population_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Population_extensionId)
		REFERENCES measure_Population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Population_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measure_Population_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Population_modifierExtensionId)
		REFERENCES measure_Population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Stratifier_extension_extension(
	id TEXT PRIMARY KEY,
	measure_Stratifier_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Stratifier_extensionId)
		REFERENCES measure_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Stratifier_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measure_Stratifier_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Stratifier_modifierExtensionId)
		REFERENCES measure_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Component_extension_extension(
	id TEXT PRIMARY KEY,
	measure_Component_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Component_extensionId)
		REFERENCES measure_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_Component_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measure_Component_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_Component_modifierExtensionId)
		REFERENCES measure_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_SupplementalData_extension_extension(
	id TEXT PRIMARY KEY,
	measure_SupplementalData_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_SupplementalData_extensionId)
		REFERENCES measure_SupplementalData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_SupplementalData_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measure_SupplementalData_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measure_SupplementalData_modifierExtensionId)
		REFERENCES measure_SupplementalData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measure_SupplementalData_usage_codeableConcept(
	id TEXT PRIMARY KEY,
	measure_SupplementalData_usageId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (measure_SupplementalData_usageId)
		REFERENCES measure_SupplementalData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_contained_resourceList(
	id TEXT PRIMARY KEY,
	measureReport_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (measureReport_containedId)
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_extension_extension(
	id TEXT PRIMARY KEY,
	measureReport_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_extensionId)
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measureReport_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_modifierExtensionId)
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_identifier_identifier(
	id TEXT PRIMARY KEY,
	measureReport_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (measureReport_identifierId)
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_evaluatedResource_reference(
	id TEXT PRIMARY KEY,
	measureReport_evaluatedResourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (measureReport_evaluatedResourceId)
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Group_extension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Group_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Group_extensionId)
		REFERENCES measureReport_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Group_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Group_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Group_modifierExtensionId)
		REFERENCES measureReport_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Population_extension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Population_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Population_extensionId)
		REFERENCES measureReport_Population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Population_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Population_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Population_modifierExtensionId)
		REFERENCES measureReport_Population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Stratifier_extension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Stratifier_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Stratifier_extensionId)
		REFERENCES measureReport_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Stratifier_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Stratifier_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Stratifier_modifierExtensionId)
		REFERENCES measureReport_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Stratifier_code_codeableConcept(
	id TEXT PRIMARY KEY,
	measureReport_Stratifier_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (measureReport_Stratifier_codeId)
		REFERENCES measureReport_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Stratum_extension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Stratum_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Stratum_extensionId)
		REFERENCES measureReport_Stratum (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Stratum_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Stratum_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Stratum_modifierExtensionId)
		REFERENCES measureReport_Stratum (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Component_extension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Component_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Component_extensionId)
		REFERENCES measureReport_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Component_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Component_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Component_modifierExtensionId)
		REFERENCES measureReport_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Population1_extension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Population1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Population1_extensionId)
		REFERENCES measureReport_Population1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE measureReport_Population1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	measureReport_Population1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (measureReport_Population1_modifierExtensionId)
		REFERENCES measureReport_Population1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_contained_resourceList(
	id TEXT PRIMARY KEY,
	media_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (media_containedId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_extension_extension(
	id TEXT PRIMARY KEY,
	media_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (media_extensionId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	media_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (media_modifierExtensionId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_identifier_identifier(
	id TEXT PRIMARY KEY,
	media_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (media_identifierId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_basedOn_reference(
	id TEXT PRIMARY KEY,
	media_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (media_basedOnId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_partOf_reference(
	id TEXT PRIMARY KEY,
	media_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (media_partOfId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	media_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (media_reasonCodeId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE media_note_annotation(
	id TEXT PRIMARY KEY,
	media_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (media_noteId)
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_contained_resourceList(
	id TEXT PRIMARY KEY,
	medication_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medication_containedId)
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_extension_extension(
	id TEXT PRIMARY KEY,
	medication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medication_extensionId)
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medication_modifierExtensionId)
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_identifier_identifier(
	id TEXT PRIMARY KEY,
	medication_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medication_identifierId)
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_Ingredient_extension_extension(
	id TEXT PRIMARY KEY,
	medication_Ingredient_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medication_Ingredient_extensionId)
		REFERENCES medication_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_Ingredient_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medication_Ingredient_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medication_Ingredient_modifierExtensionId)
		REFERENCES medication_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_Batch_extension_extension(
	id TEXT PRIMARY KEY,
	medication_Batch_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medication_Batch_extensionId)
		REFERENCES medication_Batch (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medication_Batch_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medication_Batch_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medication_Batch_modifierExtensionId)
		REFERENCES medication_Batch (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicationAdministration_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicationAdministration_containedId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_extension_extension(
	id TEXT PRIMARY KEY,
	medicationAdministration_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationAdministration_extensionId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationAdministration_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationAdministration_modifierExtensionId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicationAdministration_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicationAdministration_identifierId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_instantiates_uri(
	id TEXT PRIMARY KEY,
	medicationAdministration_instantiatesId TEXT,
	uriId TEXT,

	FOREIGN KEY (medicationAdministration_instantiatesId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration__instantiates_element(
	id TEXT PRIMARY KEY,
	medicationAdministration__instantiatesId TEXT,
	elementId TEXT,

	FOREIGN KEY (medicationAdministration__instantiatesId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_partOf_reference(
	id TEXT PRIMARY KEY,
	medicationAdministration_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationAdministration_partOfId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_statusReason_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationAdministration_statusReasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationAdministration_statusReasonId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_supportingInformation_reference(
	id TEXT PRIMARY KEY,
	medicationAdministration_supportingInformationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationAdministration_supportingInformationId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationAdministration_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationAdministration_reasonCodeId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_reasonReference_reference(
	id TEXT PRIMARY KEY,
	medicationAdministration_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationAdministration_reasonReferenceId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_device_reference(
	id TEXT PRIMARY KEY,
	medicationAdministration_deviceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationAdministration_deviceId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_note_annotation(
	id TEXT PRIMARY KEY,
	medicationAdministration_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (medicationAdministration_noteId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_eventHistory_reference(
	id TEXT PRIMARY KEY,
	medicationAdministration_eventHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationAdministration_eventHistoryId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_Performer_extension_extension(
	id TEXT PRIMARY KEY,
	medicationAdministration_Performer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationAdministration_Performer_extensionId)
		REFERENCES medicationAdministration_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_Performer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationAdministration_Performer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationAdministration_Performer_modifierExtensionId)
		REFERENCES medicationAdministration_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_Dosage_extension_extension(
	id TEXT PRIMARY KEY,
	medicationAdministration_Dosage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationAdministration_Dosage_extensionId)
		REFERENCES medicationAdministration_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationAdministration_Dosage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationAdministration_Dosage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationAdministration_Dosage_modifierExtensionId)
		REFERENCES medicationAdministration_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicationDispense_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicationDispense_containedId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_extension_extension(
	id TEXT PRIMARY KEY,
	medicationDispense_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationDispense_extensionId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationDispense_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationDispense_modifierExtensionId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicationDispense_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicationDispense_identifierId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_partOf_reference(
	id TEXT PRIMARY KEY,
	medicationDispense_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationDispense_partOfId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_supportingInformation_reference(
	id TEXT PRIMARY KEY,
	medicationDispense_supportingInformationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationDispense_supportingInformationId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_authorizingPrescription_reference(
	id TEXT PRIMARY KEY,
	medicationDispense_authorizingPrescriptionId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationDispense_authorizingPrescriptionId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_receiver_reference(
	id TEXT PRIMARY KEY,
	medicationDispense_receiverId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationDispense_receiverId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_note_annotation(
	id TEXT PRIMARY KEY,
	medicationDispense_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (medicationDispense_noteId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_dosageInstruction_dosage(
	id TEXT PRIMARY KEY,
	medicationDispense_dosageInstructionId TEXT,
	dosageId TEXT,

	FOREIGN KEY (medicationDispense_dosageInstructionId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_detectedIssue_reference(
	id TEXT PRIMARY KEY,
	medicationDispense_detectedIssueId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationDispense_detectedIssueId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_eventHistory_reference(
	id TEXT PRIMARY KEY,
	medicationDispense_eventHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationDispense_eventHistoryId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_Performer_extension_extension(
	id TEXT PRIMARY KEY,
	medicationDispense_Performer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationDispense_Performer_extensionId)
		REFERENCES medicationDispense_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_Performer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationDispense_Performer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationDispense_Performer_modifierExtensionId)
		REFERENCES medicationDispense_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_Substitution_extension_extension(
	id TEXT PRIMARY KEY,
	medicationDispense_Substitution_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationDispense_Substitution_extensionId)
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_Substitution_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationDispense_Substitution_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationDispense_Substitution_modifierExtensionId)
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_Substitution_reason_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationDispense_Substitution_reasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationDispense_Substitution_reasonId)
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationDispense_Substitution_responsibleParty_reference(
	id TEXT PRIMARY KEY,
	medicationDispense_Substitution_responsiblePartyId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationDispense_Substitution_responsiblePartyId)
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicationKnowledge_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicationKnowledge_containedId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_extensionId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_modifierExtensionId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_synonym_string(
	id TEXT PRIMARY KEY,
	medicationKnowledge_synonymId TEXT,
	stringId TEXT,

	FOREIGN KEY (medicationKnowledge_synonymId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge__synonym_element(
	id TEXT PRIMARY KEY,
	medicationKnowledge__synonymId TEXT,
	elementId TEXT,

	FOREIGN KEY (medicationKnowledge__synonymId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_associatedMedication_reference(
	id TEXT PRIMARY KEY,
	medicationKnowledge_associatedMedicationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationKnowledge_associatedMedicationId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_productType_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationKnowledge_productTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationKnowledge_productTypeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_intendedRoute_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationKnowledge_intendedRouteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationKnowledge_intendedRouteId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_contraindication_reference(
	id TEXT PRIMARY KEY,
	medicationKnowledge_contraindicationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationKnowledge_contraindicationId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_RelatedMedicationKnowledge_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_RelatedMedicationKnowledge_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_RelatedMedicationKnowledge_extensionId)
		REFERENCES medicationKnowledge_RelatedMedicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_RelatedMedicationKnowledge_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_RelatedMedicationKnowledge_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_RelatedMedicationKnowledge_modifierExtensionId)
		REFERENCES medicationKnowledge_RelatedMedicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_RelatedMedicationKnowledge_reference_reference(
	id TEXT PRIMARY KEY,
	medicationKnowledge_RelatedMedicationKnowledge_referenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationKnowledge_RelatedMedicationKnowledge_referenceId)
		REFERENCES medicationKnowledge_RelatedMedicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Monograph_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Monograph_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Monograph_extensionId)
		REFERENCES medicationKnowledge_Monograph (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Monograph_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Monograph_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Monograph_modifierExtensionId)
		REFERENCES medicationKnowledge_Monograph (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Ingredient_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Ingredient_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Ingredient_extensionId)
		REFERENCES medicationKnowledge_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Ingredient_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Ingredient_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Ingredient_modifierExtensionId)
		REFERENCES medicationKnowledge_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Cost_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Cost_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Cost_extensionId)
		REFERENCES medicationKnowledge_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Cost_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Cost_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Cost_modifierExtensionId)
		REFERENCES medicationKnowledge_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_MonitoringProgram_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_MonitoringProgram_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_MonitoringProgram_extensionId)
		REFERENCES medicationKnowledge_MonitoringProgram (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_MonitoringProgram_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_MonitoringProgram_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_MonitoringProgram_modifierExtensionId)
		REFERENCES medicationKnowledge_MonitoringProgram (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_AdministrationGuidelines_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_AdministrationGuidelines_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_AdministrationGuidelines_extensionId)
		REFERENCES medicationKnowledge_AdministrationGuidelines (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_AdministrationGuidelines_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_AdministrationGuidelines_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_AdministrationGuidelines_modifierExtensionId)
		REFERENCES medicationKnowledge_AdministrationGuidelines (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Dosage_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Dosage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Dosage_extensionId)
		REFERENCES medicationKnowledge_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Dosage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Dosage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Dosage_modifierExtensionId)
		REFERENCES medicationKnowledge_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Dosage_dosage_dosage(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Dosage_dosageId TEXT,
	dosageId TEXT,

	FOREIGN KEY (medicationKnowledge_Dosage_dosageId)
		REFERENCES medicationKnowledge_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_PatientCharacteristics_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_PatientCharacteristics_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_PatientCharacteristics_extensionId)
		REFERENCES medicationKnowledge_PatientCharacteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_PatientCharacteristics_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_PatientCharacteristics_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_PatientCharacteristics_modifierExtensionId)
		REFERENCES medicationKnowledge_PatientCharacteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_PatientCharacteristics_value_string(
	id TEXT PRIMARY KEY,
	medicationKnowledge_PatientCharacteristics_valueId TEXT,
	stringId TEXT,

	FOREIGN KEY (medicationKnowledge_PatientCharacteristics_valueId)
		REFERENCES medicationKnowledge_PatientCharacteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_PatientCharacteristics__value_element(
	id TEXT PRIMARY KEY,
	medicationKnowledge_PatientCharacteristics__valueId TEXT,
	elementId TEXT,

	FOREIGN KEY (medicationKnowledge_PatientCharacteristics__valueId)
		REFERENCES medicationKnowledge_PatientCharacteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_MedicineClassification_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_MedicineClassification_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_MedicineClassification_extensionId)
		REFERENCES medicationKnowledge_MedicineClassification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_MedicineClassification_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_MedicineClassification_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_MedicineClassification_modifierExtensionId)
		REFERENCES medicationKnowledge_MedicineClassification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_MedicineClassification_classification_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationKnowledge_MedicineClassification_classificationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationKnowledge_MedicineClassification_classificationId)
		REFERENCES medicationKnowledge_MedicineClassification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Packaging_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Packaging_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Packaging_extensionId)
		REFERENCES medicationKnowledge_Packaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Packaging_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Packaging_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Packaging_modifierExtensionId)
		REFERENCES medicationKnowledge_Packaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_DrugCharacteristic_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_DrugCharacteristic_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_DrugCharacteristic_extensionId)
		REFERENCES medicationKnowledge_DrugCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_DrugCharacteristic_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_DrugCharacteristic_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_DrugCharacteristic_modifierExtensionId)
		REFERENCES medicationKnowledge_DrugCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Regulatory_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Regulatory_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Regulatory_extensionId)
		REFERENCES medicationKnowledge_Regulatory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Regulatory_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Regulatory_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Regulatory_modifierExtensionId)
		REFERENCES medicationKnowledge_Regulatory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Substitution_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Substitution_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Substitution_extensionId)
		REFERENCES medicationKnowledge_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Substitution_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Substitution_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Substitution_modifierExtensionId)
		REFERENCES medicationKnowledge_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Schedule_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Schedule_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Schedule_extensionId)
		REFERENCES medicationKnowledge_Schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Schedule_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Schedule_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Schedule_modifierExtensionId)
		REFERENCES medicationKnowledge_Schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_MaxDispense_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_MaxDispense_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_MaxDispense_extensionId)
		REFERENCES medicationKnowledge_MaxDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_MaxDispense_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_MaxDispense_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_MaxDispense_modifierExtensionId)
		REFERENCES medicationKnowledge_MaxDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Kinetics_extension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Kinetics_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Kinetics_extensionId)
		REFERENCES medicationKnowledge_Kinetics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Kinetics_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Kinetics_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationKnowledge_Kinetics_modifierExtensionId)
		REFERENCES medicationKnowledge_Kinetics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Kinetics_areaUnderCurve_quantity(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Kinetics_areaUnderCurveId TEXT,
	quantityId TEXT,

	FOREIGN KEY (medicationKnowledge_Kinetics_areaUnderCurveId)
		REFERENCES medicationKnowledge_Kinetics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (quantityId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationKnowledge_Kinetics_lethalDose50_quantity(
	id TEXT PRIMARY KEY,
	medicationKnowledge_Kinetics_lethalDose50Id TEXT,
	quantityId TEXT,

	FOREIGN KEY (medicationKnowledge_Kinetics_lethalDose50Id)
		REFERENCES medicationKnowledge_Kinetics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (quantityId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicationRequest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicationRequest_containedId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_extension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_extensionId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_modifierExtensionId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicationRequest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicationRequest_identifierId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_category_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationRequest_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationRequest_categoryId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_supportingInformation_reference(
	id TEXT PRIMARY KEY,
	medicationRequest_supportingInformationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationRequest_supportingInformationId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationRequest_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationRequest_reasonCodeId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_reasonReference_reference(
	id TEXT PRIMARY KEY,
	medicationRequest_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationRequest_reasonReferenceId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	medicationRequest_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (medicationRequest_instantiatesCanonicalId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest__instantiatesCanonical_element(
	id TEXT PRIMARY KEY,
	medicationRequest__instantiatesCanonicalId TEXT,
	elementId TEXT,

	FOREIGN KEY (medicationRequest__instantiatesCanonicalId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	medicationRequest_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (medicationRequest_instantiatesUriId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	medicationRequest__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (medicationRequest__instantiatesUriId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_basedOn_reference(
	id TEXT PRIMARY KEY,
	medicationRequest_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationRequest_basedOnId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_insurance_reference(
	id TEXT PRIMARY KEY,
	medicationRequest_insuranceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationRequest_insuranceId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_note_annotation(
	id TEXT PRIMARY KEY,
	medicationRequest_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (medicationRequest_noteId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_dosageInstruction_dosage(
	id TEXT PRIMARY KEY,
	medicationRequest_dosageInstructionId TEXT,
	dosageId TEXT,

	FOREIGN KEY (medicationRequest_dosageInstructionId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_detectedIssue_reference(
	id TEXT PRIMARY KEY,
	medicationRequest_detectedIssueId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationRequest_detectedIssueId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_eventHistory_reference(
	id TEXT PRIMARY KEY,
	medicationRequest_eventHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationRequest_eventHistoryId)
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_DispenseRequest_extension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_DispenseRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_DispenseRequest_extensionId)
		REFERENCES medicationRequest_DispenseRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_DispenseRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_DispenseRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_DispenseRequest_modifierExtensionId)
		REFERENCES medicationRequest_DispenseRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_InitialFill_extension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_InitialFill_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_InitialFill_extensionId)
		REFERENCES medicationRequest_InitialFill (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_InitialFill_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_InitialFill_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_InitialFill_modifierExtensionId)
		REFERENCES medicationRequest_InitialFill (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_Substitution_extension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_Substitution_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_Substitution_extensionId)
		REFERENCES medicationRequest_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationRequest_Substitution_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationRequest_Substitution_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationRequest_Substitution_modifierExtensionId)
		REFERENCES medicationRequest_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicationStatement_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicationStatement_containedId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_extension_extension(
	id TEXT PRIMARY KEY,
	medicationStatement_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationStatement_extensionId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicationStatement_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicationStatement_modifierExtensionId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicationStatement_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicationStatement_identifierId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_basedOn_reference(
	id TEXT PRIMARY KEY,
	medicationStatement_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationStatement_basedOnId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_partOf_reference(
	id TEXT PRIMARY KEY,
	medicationStatement_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationStatement_partOfId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_statusReason_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationStatement_statusReasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationStatement_statusReasonId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_derivedFrom_reference(
	id TEXT PRIMARY KEY,
	medicationStatement_derivedFromId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationStatement_derivedFromId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	medicationStatement_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicationStatement_reasonCodeId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_reasonReference_reference(
	id TEXT PRIMARY KEY,
	medicationStatement_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicationStatement_reasonReferenceId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_note_annotation(
	id TEXT PRIMARY KEY,
	medicationStatement_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (medicationStatement_noteId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicationStatement_dosage_dosage(
	id TEXT PRIMARY KEY,
	medicationStatement_dosageId TEXT,
	dosageId TEXT,

	FOREIGN KEY (medicationStatement_dosageId)
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProduct_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProduct_containedId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_extensionId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_modifierExtensionId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicinalProduct_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProduct_identifierId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_specialMeasures_string(
	id TEXT PRIMARY KEY,
	medicinalProduct_specialMeasuresId TEXT,
	stringId TEXT,

	FOREIGN KEY (medicinalProduct_specialMeasuresId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct__specialMeasures_element(
	id TEXT PRIMARY KEY,
	medicinalProduct__specialMeasuresId TEXT,
	elementId TEXT,

	FOREIGN KEY (medicinalProduct__specialMeasuresId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_productClassification_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProduct_productClassificationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProduct_productClassificationId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_marketingStatus_marketingStatus(
	id TEXT PRIMARY KEY,
	medicinalProduct_marketingStatusId TEXT,
	marketingStatusId TEXT,

	FOREIGN KEY (medicinalProduct_marketingStatusId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (marketingStatusId)
		REFERENCES marketingStatus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_pharmaceuticalProduct_reference(
	id TEXT PRIMARY KEY,
	medicinalProduct_pharmaceuticalProductId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProduct_pharmaceuticalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_packagedMedicinalProduct_reference(
	id TEXT PRIMARY KEY,
	medicinalProduct_packagedMedicinalProductId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProduct_packagedMedicinalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_attachedDocument_reference(
	id TEXT PRIMARY KEY,
	medicinalProduct_attachedDocumentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProduct_attachedDocumentId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_masterFile_reference(
	id TEXT PRIMARY KEY,
	medicinalProduct_masterFileId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProduct_masterFileId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_contact_reference(
	id TEXT PRIMARY KEY,
	medicinalProduct_contactId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProduct_contactId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_clinicalTrial_reference(
	id TEXT PRIMARY KEY,
	medicinalProduct_clinicalTrialId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProduct_clinicalTrialId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_crossReference_identifier(
	id TEXT PRIMARY KEY,
	medicinalProduct_crossReferenceId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProduct_crossReferenceId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_Name_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_Name_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_Name_extensionId)
		REFERENCES medicinalProduct_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_Name_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_Name_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_Name_modifierExtensionId)
		REFERENCES medicinalProduct_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_NamePart_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_NamePart_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_NamePart_extensionId)
		REFERENCES medicinalProduct_NamePart (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_NamePart_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_NamePart_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_NamePart_modifierExtensionId)
		REFERENCES medicinalProduct_NamePart (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_CountryLanguage_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_CountryLanguage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_CountryLanguage_extensionId)
		REFERENCES medicinalProduct_CountryLanguage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_CountryLanguage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_CountryLanguage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_CountryLanguage_modifierExtensionId)
		REFERENCES medicinalProduct_CountryLanguage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_ManufacturingBusinessOperation_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_ManufacturingBusinessOperation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_ManufacturingBusinessOperation_extensionId)
		REFERENCES medicinalProduct_ManufacturingBusinessOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_ManufacturingBusinessOperation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_ManufacturingBusinessOperation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_ManufacturingBusinessOperation_modifierExtensionId)
		REFERENCES medicinalProduct_ManufacturingBusinessOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_ManufacturingBusinessOperation_manufacturer_reference(
	id TEXT PRIMARY KEY,
	medicinalProduct_ManufacturingBusinessOperation_manufacturerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProduct_ManufacturingBusinessOperation_manufacturerId)
		REFERENCES medicinalProduct_ManufacturingBusinessOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_SpecialDesignation_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_SpecialDesignation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_SpecialDesignation_extensionId)
		REFERENCES medicinalProduct_SpecialDesignation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_SpecialDesignation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProduct_SpecialDesignation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProduct_SpecialDesignation_modifierExtensionId)
		REFERENCES medicinalProduct_SpecialDesignation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProduct_SpecialDesignation_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicinalProduct_SpecialDesignation_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProduct_SpecialDesignation_identifierId)
		REFERENCES medicinalProduct_SpecialDesignation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_containedId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_extensionId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_modifierExtensionId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_identifierId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_country_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_countryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_countryId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_jurisdictionId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_JurisdictionalAuthorization_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_JurisdictionalAuthorization_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_JurisdictionalAuthorization_extensionId)
		REFERENCES medicinalProductAuthorization_JurisdictionalAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_JurisdictionalAuthorization_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_JurisdictionalAuthorization_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_JurisdictionalAuthorization_modifierExtensionId)
		REFERENCES medicinalProductAuthorization_JurisdictionalAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_JurisdictionalAuthorization_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_JurisdictionalAuthorization_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_JurisdictionalAuthorization_identifierId)
		REFERENCES medicinalProductAuthorization_JurisdictionalAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_JurisdictionalAuthorization_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_JurisdictionalAuthorization_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_JurisdictionalAuthorization_jurisdictionId)
		REFERENCES medicinalProductAuthorization_JurisdictionalAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_Procedure_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_Procedure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_Procedure_extensionId)
		REFERENCES medicinalProductAuthorization_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductAuthorization_Procedure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_Procedure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductAuthorization_Procedure_modifierExtensionId)
		REFERENCES medicinalProductAuthorization_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductContraindication_containedId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductContraindication_extensionId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductContraindication_modifierExtensionId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_subject_reference(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_subjectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductContraindication_subjectId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_comorbidity_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_comorbidityId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductContraindication_comorbidityId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_therapeuticIndication_reference(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_therapeuticIndicationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductContraindication_therapeuticIndicationId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_population_population(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_populationId TEXT,
	populationId TEXT,

	FOREIGN KEY (medicinalProductContraindication_populationId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (populationId)
		REFERENCES "population" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_OtherTherapy_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_OtherTherapy_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductContraindication_OtherTherapy_extensionId)
		REFERENCES medicinalProductContraindication_OtherTherapy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductContraindication_OtherTherapy_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductContraindication_OtherTherapy_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductContraindication_OtherTherapy_modifierExtensionId)
		REFERENCES medicinalProductContraindication_OtherTherapy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductIndication_containedId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIndication_extensionId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIndication_modifierExtensionId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_subject_reference(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_subjectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductIndication_subjectId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_comorbidity_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_comorbidityId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductIndication_comorbidityId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_undesirableEffect_reference(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_undesirableEffectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductIndication_undesirableEffectId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_population_population(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_populationId TEXT,
	populationId TEXT,

	FOREIGN KEY (medicinalProductIndication_populationId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (populationId)
		REFERENCES "population" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_OtherTherapy_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_OtherTherapy_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIndication_OtherTherapy_extensionId)
		REFERENCES medicinalProductIndication_OtherTherapy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIndication_OtherTherapy_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIndication_OtherTherapy_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIndication_OtherTherapy_modifierExtensionId)
		REFERENCES medicinalProductIndication_OtherTherapy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductIngredient_containedId)
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_extensionId)
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_modifierExtensionId)
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_manufacturer_reference(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_manufacturerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductIngredient_manufacturerId)
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_SpecifiedSubstance_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_SpecifiedSubstance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_SpecifiedSubstance_extensionId)
		REFERENCES medicinalProductIngredient_SpecifiedSubstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_SpecifiedSubstance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_SpecifiedSubstance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_SpecifiedSubstance_modifierExtensionId)
		REFERENCES medicinalProductIngredient_SpecifiedSubstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_SpecifiedSubstance_strength_medicinalProductIngredient_Strength(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_SpecifiedSubstance_strengthId TEXT,
	medicinalProductIngredient_StrengthId TEXT,

	FOREIGN KEY (medicinalProductIngredient_SpecifiedSubstance_strengthId)
		REFERENCES medicinalProductIngredient_SpecifiedSubstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_StrengthId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_Strength_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_Strength_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_Strength_extensionId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_Strength_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_Strength_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_Strength_modifierExtensionId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_Strength_country_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_Strength_countryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductIngredient_Strength_countryId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_ReferenceStrength_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_ReferenceStrength_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_ReferenceStrength_extensionId)
		REFERENCES medicinalProductIngredient_ReferenceStrength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_ReferenceStrength_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_ReferenceStrength_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_ReferenceStrength_modifierExtensionId)
		REFERENCES medicinalProductIngredient_ReferenceStrength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_ReferenceStrength_country_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_ReferenceStrength_countryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductIngredient_ReferenceStrength_countryId)
		REFERENCES medicinalProductIngredient_ReferenceStrength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_Substance_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_Substance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_Substance_extensionId)
		REFERENCES medicinalProductIngredient_Substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_Substance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_Substance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductIngredient_Substance_modifierExtensionId)
		REFERENCES medicinalProductIngredient_Substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductIngredient_Substance_strength_medicinalProductIngredient_Strength(
	id TEXT PRIMARY KEY,
	medicinalProductIngredient_Substance_strengthId TEXT,
	medicinalProductIngredient_StrengthId TEXT,

	FOREIGN KEY (medicinalProductIngredient_Substance_strengthId)
		REFERENCES medicinalProductIngredient_Substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_StrengthId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductInteraction_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductInteraction_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductInteraction_containedId)
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductInteraction_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductInteraction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductInteraction_extensionId)
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductInteraction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductInteraction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductInteraction_modifierExtensionId)
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductInteraction_subject_reference(
	id TEXT PRIMARY KEY,
	medicinalProductInteraction_subjectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductInteraction_subjectId)
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductInteraction_Interactant_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductInteraction_Interactant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductInteraction_Interactant_extensionId)
		REFERENCES medicinalProductInteraction_Interactant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductInteraction_Interactant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductInteraction_Interactant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductInteraction_Interactant_modifierExtensionId)
		REFERENCES medicinalProductInteraction_Interactant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductManufactured_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductManufactured_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductManufactured_containedId)
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductManufactured_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductManufactured_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductManufactured_extensionId)
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductManufactured_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductManufactured_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductManufactured_modifierExtensionId)
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductManufactured_manufacturer_reference(
	id TEXT PRIMARY KEY,
	medicinalProductManufactured_manufacturerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductManufactured_manufacturerId)
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductManufactured_ingredient_reference(
	id TEXT PRIMARY KEY,
	medicinalProductManufactured_ingredientId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductManufactured_ingredientId)
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductManufactured_otherCharacteristics_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductManufactured_otherCharacteristicsId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductManufactured_otherCharacteristicsId)
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductPackaged_containedId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPackaged_extensionId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPackaged_modifierExtensionId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProductPackaged_identifierId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_subject_reference(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_subjectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductPackaged_subjectId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_marketingStatus_marketingStatus(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_marketingStatusId TEXT,
	marketingStatusId TEXT,

	FOREIGN KEY (medicinalProductPackaged_marketingStatusId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (marketingStatusId)
		REFERENCES marketingStatus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_manufacturer_reference(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_manufacturerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductPackaged_manufacturerId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_packageItem_medicinalProductPackaged_PackageItem(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_packageItemId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,

	FOREIGN KEY (medicinalProductPackaged_packageItemId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_BatchIdentifier_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_BatchIdentifier_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPackaged_BatchIdentifier_extensionId)
		REFERENCES medicinalProductPackaged_BatchIdentifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_BatchIdentifier_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_BatchIdentifier_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPackaged_BatchIdentifier_modifierExtensionId)
		REFERENCES medicinalProductPackaged_BatchIdentifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_extensionId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_modifierExtensionId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_identifierId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_material_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_materialId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_materialId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_alternateMaterial_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_alternateMaterialId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_alternateMaterialId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_device_reference(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_deviceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_deviceId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_manufacturedItem_reference(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_manufacturedItemId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_manufacturedItemId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_packageItem_medicinalProductPackaged_PackageItem(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_packageItemId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_packageItemId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_otherCharacteristics_codeableConcept(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_otherCharacteristicsId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_otherCharacteristicsId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_shelfLifeStorage_productShelfLife(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_shelfLifeStorageId TEXT,
	productShelfLifeId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_shelfLifeStorageId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (productShelfLifeId)
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPackaged_PackageItem_manufacturer_reference(
	id TEXT PRIMARY KEY,
	medicinalProductPackaged_PackageItem_manufacturerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductPackaged_PackageItem_manufacturerId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_containedId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_extensionId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_modifierExtensionId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_identifier_identifier(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_identifierId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_ingredient_reference(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_ingredientId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_ingredientId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_device_reference(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_deviceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_deviceId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_Characteristics_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_Characteristics_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_Characteristics_extensionId)
		REFERENCES medicinalProductPharmaceutical_Characteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_Characteristics_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_Characteristics_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_Characteristics_modifierExtensionId)
		REFERENCES medicinalProductPharmaceutical_Characteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_RouteOfAdministration_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_RouteOfAdministration_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_RouteOfAdministration_extensionId)
		REFERENCES medicinalProductPharmaceutical_RouteOfAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_RouteOfAdministration_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_RouteOfAdministration_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_RouteOfAdministration_modifierExtensionId)
		REFERENCES medicinalProductPharmaceutical_RouteOfAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_TargetSpecies_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_TargetSpecies_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_TargetSpecies_extensionId)
		REFERENCES medicinalProductPharmaceutical_TargetSpecies (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_TargetSpecies_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_TargetSpecies_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_TargetSpecies_modifierExtensionId)
		REFERENCES medicinalProductPharmaceutical_TargetSpecies (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_WithdrawalPeriod_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_WithdrawalPeriod_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_WithdrawalPeriod_extensionId)
		REFERENCES medicinalProductPharmaceutical_WithdrawalPeriod (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductPharmaceutical_WithdrawalPeriod_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_WithdrawalPeriod_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductPharmaceutical_WithdrawalPeriod_modifierExtensionId)
		REFERENCES medicinalProductPharmaceutical_WithdrawalPeriod (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductUndesirableEffect_contained_resourceList(
	id TEXT PRIMARY KEY,
	medicinalProductUndesirableEffect_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (medicinalProductUndesirableEffect_containedId)
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductUndesirableEffect_extension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductUndesirableEffect_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductUndesirableEffect_extensionId)
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductUndesirableEffect_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	medicinalProductUndesirableEffect_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (medicinalProductUndesirableEffect_modifierExtensionId)
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductUndesirableEffect_subject_reference(
	id TEXT PRIMARY KEY,
	medicinalProductUndesirableEffect_subjectId TEXT,
	referenceId TEXT,

	FOREIGN KEY (medicinalProductUndesirableEffect_subjectId)
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE medicinalProductUndesirableEffect_population_population(
	id TEXT PRIMARY KEY,
	medicinalProductUndesirableEffect_populationId TEXT,
	populationId TEXT,

	FOREIGN KEY (medicinalProductUndesirableEffect_populationId)
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (populationId)
		REFERENCES "population" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	messageDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (messageDefinition_containedId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	messageDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageDefinition_extensionId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	messageDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageDefinition_modifierExtensionId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	messageDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (messageDefinition_identifierId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_replaces_canonical(
	id TEXT PRIMARY KEY,
	messageDefinition_replacesId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (messageDefinition_replacesId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	messageDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (messageDefinition_contactId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	messageDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (messageDefinition_useContextId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	messageDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (messageDefinition_jurisdictionId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_parent_canonical(
	id TEXT PRIMARY KEY,
	messageDefinition_parentId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (messageDefinition_parentId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_graph_canonical(
	id TEXT PRIMARY KEY,
	messageDefinition_graphId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (messageDefinition_graphId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_Focus_extension_extension(
	id TEXT PRIMARY KEY,
	messageDefinition_Focus_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageDefinition_Focus_extensionId)
		REFERENCES messageDefinition_Focus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_Focus_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	messageDefinition_Focus_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageDefinition_Focus_modifierExtensionId)
		REFERENCES messageDefinition_Focus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_AllowedResponse_extension_extension(
	id TEXT PRIMARY KEY,
	messageDefinition_AllowedResponse_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageDefinition_AllowedResponse_extensionId)
		REFERENCES messageDefinition_AllowedResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageDefinition_AllowedResponse_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	messageDefinition_AllowedResponse_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageDefinition_AllowedResponse_modifierExtensionId)
		REFERENCES messageDefinition_AllowedResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_contained_resourceList(
	id TEXT PRIMARY KEY,
	messageHeader_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (messageHeader_containedId)
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_extension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_extensionId)
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_modifierExtensionId)
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_focus_reference(
	id TEXT PRIMARY KEY,
	messageHeader_focusId TEXT,
	referenceId TEXT,

	FOREIGN KEY (messageHeader_focusId)
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_Destination_extension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_Destination_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_Destination_extensionId)
		REFERENCES messageHeader_Destination (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_Destination_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_Destination_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_Destination_modifierExtensionId)
		REFERENCES messageHeader_Destination (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_Source_extension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_Source_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_Source_extensionId)
		REFERENCES messageHeader_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_Source_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_Source_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_Source_modifierExtensionId)
		REFERENCES messageHeader_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_Response_extension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_Response_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_Response_extensionId)
		REFERENCES messageHeader_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE messageHeader_Response_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	messageHeader_Response_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (messageHeader_Response_modifierExtensionId)
		REFERENCES messageHeader_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_contained_resourceList(
	id TEXT PRIMARY KEY,
	molecularSequence_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (molecularSequence_containedId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_extensionId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_modifierExtensionId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_identifier_identifier(
	id TEXT PRIMARY KEY,
	molecularSequence_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (molecularSequence_identifierId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_pointer_reference(
	id TEXT PRIMARY KEY,
	molecularSequence_pointerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (molecularSequence_pointerId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_ReferenceSeq_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_ReferenceSeq_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_ReferenceSeq_extensionId)
		REFERENCES molecularSequence_ReferenceSeq (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_ReferenceSeq_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_ReferenceSeq_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_ReferenceSeq_modifierExtensionId)
		REFERENCES molecularSequence_ReferenceSeq (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Variant_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Variant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Variant_extensionId)
		REFERENCES molecularSequence_Variant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Variant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Variant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Variant_modifierExtensionId)
		REFERENCES molecularSequence_Variant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Quality_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Quality_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Quality_extensionId)
		REFERENCES molecularSequence_Quality (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Quality_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Quality_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Quality_modifierExtensionId)
		REFERENCES molecularSequence_Quality (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Roc_extensionId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Roc_modifierExtensionId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_score_integer(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_scoreId TEXT,
	integerId TEXT,

	FOREIGN KEY (molecularSequence_Roc_scoreId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (integerId)
		REFERENCES integer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc__score_element(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc__scoreId TEXT,
	elementId TEXT,

	FOREIGN KEY (molecularSequence_Roc__scoreId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_numTP_integer(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_numTPId TEXT,
	integerId TEXT,

	FOREIGN KEY (molecularSequence_Roc_numTPId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (integerId)
		REFERENCES integer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc__numTP_element(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc__numTPId TEXT,
	elementId TEXT,

	FOREIGN KEY (molecularSequence_Roc__numTPId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_numFP_integer(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_numFPId TEXT,
	integerId TEXT,

	FOREIGN KEY (molecularSequence_Roc_numFPId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (integerId)
		REFERENCES integer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc__numFP_element(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc__numFPId TEXT,
	elementId TEXT,

	FOREIGN KEY (molecularSequence_Roc__numFPId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_numFN_integer(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_numFNId TEXT,
	integerId TEXT,

	FOREIGN KEY (molecularSequence_Roc_numFNId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (integerId)
		REFERENCES integer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc__numFN_element(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc__numFNId TEXT,
	elementId TEXT,

	FOREIGN KEY (molecularSequence_Roc__numFNId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_precision_decimal(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_precisionId TEXT,
	decimalId TEXT,

	FOREIGN KEY (molecularSequence_Roc_precisionId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (decimalId)
		REFERENCES decimal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc__precision_element(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc__precisionId TEXT,
	elementId TEXT,

	FOREIGN KEY (molecularSequence_Roc__precisionId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_sensitivity_decimal(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_sensitivityId TEXT,
	decimalId TEXT,

	FOREIGN KEY (molecularSequence_Roc_sensitivityId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (decimalId)
		REFERENCES decimal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc__sensitivity_element(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc__sensitivityId TEXT,
	elementId TEXT,

	FOREIGN KEY (molecularSequence_Roc__sensitivityId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc_fMeasure_decimal(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc_fMeasureId TEXT,
	decimalId TEXT,

	FOREIGN KEY (molecularSequence_Roc_fMeasureId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (decimalId)
		REFERENCES decimal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Roc__fMeasure_element(
	id TEXT PRIMARY KEY,
	molecularSequence_Roc__fMeasureId TEXT,
	elementId TEXT,

	FOREIGN KEY (molecularSequence_Roc__fMeasureId)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Repository_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Repository_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Repository_extensionId)
		REFERENCES molecularSequence_Repository (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Repository_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Repository_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Repository_modifierExtensionId)
		REFERENCES molecularSequence_Repository (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_StructureVariant_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_StructureVariant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_StructureVariant_extensionId)
		REFERENCES molecularSequence_StructureVariant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_StructureVariant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_StructureVariant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_StructureVariant_modifierExtensionId)
		REFERENCES molecularSequence_StructureVariant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Outer_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Outer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Outer_extensionId)
		REFERENCES molecularSequence_Outer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Outer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Outer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Outer_modifierExtensionId)
		REFERENCES molecularSequence_Outer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Inner_extension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Inner_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Inner_extensionId)
		REFERENCES molecularSequence_Inner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE molecularSequence_Inner_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	molecularSequence_Inner_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (molecularSequence_Inner_modifierExtensionId)
		REFERENCES molecularSequence_Inner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_contained_resourceList(
	id TEXT PRIMARY KEY,
	namingSystem_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (namingSystem_containedId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_extension_extension(
	id TEXT PRIMARY KEY,
	namingSystem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (namingSystem_extensionId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	namingSystem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (namingSystem_modifierExtensionId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_contact_contactDetail(
	id TEXT PRIMARY KEY,
	namingSystem_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (namingSystem_contactId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_useContext_usageContext(
	id TEXT PRIMARY KEY,
	namingSystem_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (namingSystem_useContextId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	namingSystem_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (namingSystem_jurisdictionId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_UniqueId_extension_extension(
	id TEXT PRIMARY KEY,
	namingSystem_UniqueId_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (namingSystem_UniqueId_extensionId)
		REFERENCES namingSystem_UniqueId (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE namingSystem_UniqueId_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	namingSystem_UniqueId_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (namingSystem_UniqueId_modifierExtensionId)
		REFERENCES namingSystem_UniqueId (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_contained_resourceList(
	id TEXT PRIMARY KEY,
	nutritionOrder_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (nutritionOrder_containedId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_extension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_extensionId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_modifierExtensionId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_identifier_identifier(
	id TEXT PRIMARY KEY,
	nutritionOrder_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (nutritionOrder_identifierId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	nutritionOrder_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (nutritionOrder_instantiatesCanonicalId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	nutritionOrder_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (nutritionOrder_instantiatesUriId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	nutritionOrder__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (nutritionOrder__instantiatesUriId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_instantiates_uri(
	id TEXT PRIMARY KEY,
	nutritionOrder_instantiatesId TEXT,
	uriId TEXT,

	FOREIGN KEY (nutritionOrder_instantiatesId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder__instantiates_element(
	id TEXT PRIMARY KEY,
	nutritionOrder__instantiatesId TEXT,
	elementId TEXT,

	FOREIGN KEY (nutritionOrder__instantiatesId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_allergyIntolerance_reference(
	id TEXT PRIMARY KEY,
	nutritionOrder_allergyIntoleranceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (nutritionOrder_allergyIntoleranceId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_foodPreferenceModifier_codeableConcept(
	id TEXT PRIMARY KEY,
	nutritionOrder_foodPreferenceModifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (nutritionOrder_foodPreferenceModifierId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_excludeFoodModifier_codeableConcept(
	id TEXT PRIMARY KEY,
	nutritionOrder_excludeFoodModifierId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (nutritionOrder_excludeFoodModifierId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_note_annotation(
	id TEXT PRIMARY KEY,
	nutritionOrder_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (nutritionOrder_noteId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_OralDiet_extension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_OralDiet_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_OralDiet_extensionId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_OralDiet_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_OralDiet_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_OralDiet_modifierExtensionId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_OralDiet_type_codeableConcept(
	id TEXT PRIMARY KEY,
	nutritionOrder_OralDiet_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (nutritionOrder_OralDiet_typeId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_OralDiet_schedule_timing(
	id TEXT PRIMARY KEY,
	nutritionOrder_OralDiet_scheduleId TEXT,
	timingId TEXT,

	FOREIGN KEY (nutritionOrder_OralDiet_scheduleId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (timingId)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_OralDiet_fluidConsistencyType_codeableConcept(
	id TEXT PRIMARY KEY,
	nutritionOrder_OralDiet_fluidConsistencyTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (nutritionOrder_OralDiet_fluidConsistencyTypeId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Nutrient_extension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Nutrient_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Nutrient_extensionId)
		REFERENCES nutritionOrder_Nutrient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Nutrient_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Nutrient_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Nutrient_modifierExtensionId)
		REFERENCES nutritionOrder_Nutrient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Texture_extension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Texture_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Texture_extensionId)
		REFERENCES nutritionOrder_Texture (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Texture_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Texture_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Texture_modifierExtensionId)
		REFERENCES nutritionOrder_Texture (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Supplement_extension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Supplement_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Supplement_extensionId)
		REFERENCES nutritionOrder_Supplement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Supplement_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Supplement_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Supplement_modifierExtensionId)
		REFERENCES nutritionOrder_Supplement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Supplement_schedule_timing(
	id TEXT PRIMARY KEY,
	nutritionOrder_Supplement_scheduleId TEXT,
	timingId TEXT,

	FOREIGN KEY (nutritionOrder_Supplement_scheduleId)
		REFERENCES nutritionOrder_Supplement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (timingId)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_EnteralFormula_extension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_EnteralFormula_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_EnteralFormula_extensionId)
		REFERENCES nutritionOrder_EnteralFormula (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_EnteralFormula_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_EnteralFormula_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_EnteralFormula_modifierExtensionId)
		REFERENCES nutritionOrder_EnteralFormula (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Administration_extension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Administration_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Administration_extensionId)
		REFERENCES nutritionOrder_Administration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE nutritionOrder_Administration_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	nutritionOrder_Administration_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (nutritionOrder_Administration_modifierExtensionId)
		REFERENCES nutritionOrder_Administration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_contained_resourceList(
	id TEXT PRIMARY KEY,
	observation_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (observation_containedId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_extension_extension(
	id TEXT PRIMARY KEY,
	observation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observation_extensionId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	observation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observation_modifierExtensionId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_identifier_identifier(
	id TEXT PRIMARY KEY,
	observation_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (observation_identifierId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_basedOn_reference(
	id TEXT PRIMARY KEY,
	observation_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (observation_basedOnId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_partOf_reference(
	id TEXT PRIMARY KEY,
	observation_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (observation_partOfId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_category_codeableConcept(
	id TEXT PRIMARY KEY,
	observation_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (observation_categoryId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_focus_reference(
	id TEXT PRIMARY KEY,
	observation_focusId TEXT,
	referenceId TEXT,

	FOREIGN KEY (observation_focusId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_performer_reference(
	id TEXT PRIMARY KEY,
	observation_performerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (observation_performerId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_interpretation_codeableConcept(
	id TEXT PRIMARY KEY,
	observation_interpretationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (observation_interpretationId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_note_annotation(
	id TEXT PRIMARY KEY,
	observation_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (observation_noteId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_referenceRange_observation_ReferenceRange(
	id TEXT PRIMARY KEY,
	observation_referenceRangeId TEXT,
	observation_ReferenceRangeId TEXT,

	FOREIGN KEY (observation_referenceRangeId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observation_ReferenceRangeId)
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_hasMember_reference(
	id TEXT PRIMARY KEY,
	observation_hasMemberId TEXT,
	referenceId TEXT,

	FOREIGN KEY (observation_hasMemberId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_derivedFrom_reference(
	id TEXT PRIMARY KEY,
	observation_derivedFromId TEXT,
	referenceId TEXT,

	FOREIGN KEY (observation_derivedFromId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_ReferenceRange_extension_extension(
	id TEXT PRIMARY KEY,
	observation_ReferenceRange_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observation_ReferenceRange_extensionId)
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_ReferenceRange_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	observation_ReferenceRange_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observation_ReferenceRange_modifierExtensionId)
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_ReferenceRange_appliesTo_codeableConcept(
	id TEXT PRIMARY KEY,
	observation_ReferenceRange_appliesToId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (observation_ReferenceRange_appliesToId)
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_Component_extension_extension(
	id TEXT PRIMARY KEY,
	observation_Component_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observation_Component_extensionId)
		REFERENCES observation_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_Component_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	observation_Component_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observation_Component_modifierExtensionId)
		REFERENCES observation_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_Component_interpretation_codeableConcept(
	id TEXT PRIMARY KEY,
	observation_Component_interpretationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (observation_Component_interpretationId)
		REFERENCES observation_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observation_Component_referenceRange_observation_ReferenceRange(
	id TEXT PRIMARY KEY,
	observation_Component_referenceRangeId TEXT,
	observation_ReferenceRangeId TEXT,

	FOREIGN KEY (observation_Component_referenceRangeId)
		REFERENCES observation_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observation_ReferenceRangeId)
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	observationDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (observationDefinition_containedId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	observationDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observationDefinition_extensionId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	observationDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observationDefinition_modifierExtensionId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_category_codeableConcept(
	id TEXT PRIMARY KEY,
	observationDefinition_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (observationDefinition_categoryId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	observationDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (observationDefinition_identifierId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition__permittedDataType_element(
	id TEXT PRIMARY KEY,
	observationDefinition__permittedDataTypeId TEXT,
	elementId TEXT,

	FOREIGN KEY (observationDefinition__permittedDataTypeId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_QuantitativeDetails_extension_extension(
	id TEXT PRIMARY KEY,
	observationDefinition_QuantitativeDetails_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observationDefinition_QuantitativeDetails_extensionId)
		REFERENCES observationDefinition_QuantitativeDetails (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_QuantitativeDetails_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	observationDefinition_QuantitativeDetails_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observationDefinition_QuantitativeDetails_modifierExtensionId)
		REFERENCES observationDefinition_QuantitativeDetails (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_QualifiedInterval_extension_extension(
	id TEXT PRIMARY KEY,
	observationDefinition_QualifiedInterval_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observationDefinition_QualifiedInterval_extensionId)
		REFERENCES observationDefinition_QualifiedInterval (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_QualifiedInterval_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	observationDefinition_QualifiedInterval_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (observationDefinition_QualifiedInterval_modifierExtensionId)
		REFERENCES observationDefinition_QualifiedInterval (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE observationDefinition_QualifiedInterval_appliesTo_codeableConcept(
	id TEXT PRIMARY KEY,
	observationDefinition_QualifiedInterval_appliesToId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (observationDefinition_QualifiedInterval_appliesToId)
		REFERENCES observationDefinition_QualifiedInterval (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	operationDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (operationDefinition_containedId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_extensionId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_modifierExtensionId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	operationDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (operationDefinition_contactId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	operationDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (operationDefinition_useContextId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	operationDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (operationDefinition_jurisdictionId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_resource_code(
	id TEXT PRIMARY KEY,
	operationDefinition_resourceId TEXT,
	codeId TEXT,

	FOREIGN KEY (operationDefinition_resourceId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition__resource_element(
	id TEXT PRIMARY KEY,
	operationDefinition__resourceId TEXT,
	elementId TEXT,

	FOREIGN KEY (operationDefinition__resourceId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_parameter_operationDefinition_Parameter(
	id TEXT PRIMARY KEY,
	operationDefinition_parameterId TEXT,
	operationDefinition_ParameterId TEXT,

	FOREIGN KEY (operationDefinition_parameterId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_ParameterId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_Parameter_extensionId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_Parameter_modifierExtensionId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Parameter_targetProfile_canonical(
	id TEXT PRIMARY KEY,
	operationDefinition_Parameter_targetProfileId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (operationDefinition_Parameter_targetProfileId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Parameter_part_operationDefinition_Parameter(
	id TEXT PRIMARY KEY,
	operationDefinition_Parameter_partId TEXT,
	operationDefinition_ParameterId TEXT,

	FOREIGN KEY (operationDefinition_Parameter_partId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_ParameterId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Binding_extension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_Binding_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_Binding_extensionId)
		REFERENCES operationDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Binding_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_Binding_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_Binding_modifierExtensionId)
		REFERENCES operationDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_ReferencedFrom_extension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_ReferencedFrom_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_ReferencedFrom_extensionId)
		REFERENCES operationDefinition_ReferencedFrom (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_ReferencedFrom_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_ReferencedFrom_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_ReferencedFrom_modifierExtensionId)
		REFERENCES operationDefinition_ReferencedFrom (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Overload_extension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_Overload_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_Overload_extensionId)
		REFERENCES operationDefinition_Overload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Overload_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	operationDefinition_Overload_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationDefinition_Overload_modifierExtensionId)
		REFERENCES operationDefinition_Overload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Overload_parameterName_string(
	id TEXT PRIMARY KEY,
	operationDefinition_Overload_parameterNameId TEXT,
	stringId TEXT,

	FOREIGN KEY (operationDefinition_Overload_parameterNameId)
		REFERENCES operationDefinition_Overload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationDefinition_Overload__parameterName_element(
	id TEXT PRIMARY KEY,
	operationDefinition_Overload__parameterNameId TEXT,
	elementId TEXT,

	FOREIGN KEY (operationDefinition_Overload__parameterNameId)
		REFERENCES operationDefinition_Overload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_contained_resourceList(
	id TEXT PRIMARY KEY,
	operationOutcome_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (operationOutcome_containedId)
		REFERENCES operationOutcome (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_extension_extension(
	id TEXT PRIMARY KEY,
	operationOutcome_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationOutcome_extensionId)
		REFERENCES operationOutcome (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	operationOutcome_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationOutcome_modifierExtensionId)
		REFERENCES operationOutcome (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_Issue_extension_extension(
	id TEXT PRIMARY KEY,
	operationOutcome_Issue_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationOutcome_Issue_extensionId)
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_Issue_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	operationOutcome_Issue_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (operationOutcome_Issue_modifierExtensionId)
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_Issue_location_string(
	id TEXT PRIMARY KEY,
	operationOutcome_Issue_locationId TEXT,
	stringId TEXT,

	FOREIGN KEY (operationOutcome_Issue_locationId)
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_Issue__location_element(
	id TEXT PRIMARY KEY,
	operationOutcome_Issue__locationId TEXT,
	elementId TEXT,

	FOREIGN KEY (operationOutcome_Issue__locationId)
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_Issue_expression_string(
	id TEXT PRIMARY KEY,
	operationOutcome_Issue_expressionId TEXT,
	stringId TEXT,

	FOREIGN KEY (operationOutcome_Issue_expressionId)
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE operationOutcome_Issue__expression_element(
	id TEXT PRIMARY KEY,
	operationOutcome_Issue__expressionId TEXT,
	elementId TEXT,

	FOREIGN KEY (operationOutcome_Issue__expressionId)
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_contained_resourceList(
	id TEXT PRIMARY KEY,
	organization_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (organization_containedId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_extension_extension(
	id TEXT PRIMARY KEY,
	organization_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (organization_extensionId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	organization_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (organization_modifierExtensionId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_identifier_identifier(
	id TEXT PRIMARY KEY,
	organization_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (organization_identifierId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_type_codeableConcept(
	id TEXT PRIMARY KEY,
	organization_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (organization_typeId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_alias_string(
	id TEXT PRIMARY KEY,
	organization_aliasId TEXT,
	stringId TEXT,

	FOREIGN KEY (organization_aliasId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization__alias_element(
	id TEXT PRIMARY KEY,
	organization__aliasId TEXT,
	elementId TEXT,

	FOREIGN KEY (organization__aliasId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	organization_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (organization_telecomId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_address_address(
	id TEXT PRIMARY KEY,
	organization_addressId TEXT,
	addressId TEXT,

	FOREIGN KEY (organization_addressId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_endpoint_reference(
	id TEXT PRIMARY KEY,
	organization_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (organization_endpointId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_Contact_extension_extension(
	id TEXT PRIMARY KEY,
	organization_Contact_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (organization_Contact_extensionId)
		REFERENCES organization_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_Contact_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	organization_Contact_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (organization_Contact_modifierExtensionId)
		REFERENCES organization_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organization_Contact_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	organization_Contact_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (organization_Contact_telecomId)
		REFERENCES organization_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_contained_resourceList(
	id TEXT PRIMARY KEY,
	organizationAffiliation_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (organizationAffiliation_containedId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_extension_extension(
	id TEXT PRIMARY KEY,
	organizationAffiliation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (organizationAffiliation_extensionId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	organizationAffiliation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (organizationAffiliation_modifierExtensionId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_identifier_identifier(
	id TEXT PRIMARY KEY,
	organizationAffiliation_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (organizationAffiliation_identifierId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_network_reference(
	id TEXT PRIMARY KEY,
	organizationAffiliation_networkId TEXT,
	referenceId TEXT,

	FOREIGN KEY (organizationAffiliation_networkId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_code_codeableConcept(
	id TEXT PRIMARY KEY,
	organizationAffiliation_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (organizationAffiliation_codeId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_specialty_codeableConcept(
	id TEXT PRIMARY KEY,
	organizationAffiliation_specialtyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (organizationAffiliation_specialtyId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_location_reference(
	id TEXT PRIMARY KEY,
	organizationAffiliation_locationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (organizationAffiliation_locationId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_healthcareService_reference(
	id TEXT PRIMARY KEY,
	organizationAffiliation_healthcareServiceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (organizationAffiliation_healthcareServiceId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	organizationAffiliation_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (organizationAffiliation_telecomId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE organizationAffiliation_endpoint_reference(
	id TEXT PRIMARY KEY,
	organizationAffiliation_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (organizationAffiliation_endpointId)
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE parameters_parameter_parameters_Parameter(
	id TEXT PRIMARY KEY,
	parameters_parameterId TEXT,
	parameters_ParameterId TEXT,

	FOREIGN KEY (parameters_parameterId)
		REFERENCES parameters (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (parameters_ParameterId)
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE parameters_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	parameters_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (parameters_Parameter_extensionId)
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE parameters_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	parameters_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (parameters_Parameter_modifierExtensionId)
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE parameters_Parameter_part_parameters_Parameter(
	id TEXT PRIMARY KEY,
	parameters_Parameter_partId TEXT,
	parameters_ParameterId TEXT,

	FOREIGN KEY (parameters_Parameter_partId)
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (parameters_ParameterId)
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_contained_resourceList(
	id TEXT PRIMARY KEY,
	patient_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (patient_containedId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_extension_extension(
	id TEXT PRIMARY KEY,
	patient_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_extensionId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	patient_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_modifierExtensionId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_identifier_identifier(
	id TEXT PRIMARY KEY,
	patient_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (patient_identifierId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_name_humanName(
	id TEXT PRIMARY KEY,
	patient_nameId TEXT,
	humanNameId TEXT,

	FOREIGN KEY (patient_nameId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	patient_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (patient_telecomId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_address_address(
	id TEXT PRIMARY KEY,
	patient_addressId TEXT,
	addressId TEXT,

	FOREIGN KEY (patient_addressId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_photo_attachment(
	id TEXT PRIMARY KEY,
	patient_photoId TEXT,
	attachmentId TEXT,

	FOREIGN KEY (patient_photoId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_generalPractitioner_reference(
	id TEXT PRIMARY KEY,
	patient_generalPractitionerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (patient_generalPractitionerId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Contact_extension_extension(
	id TEXT PRIMARY KEY,
	patient_Contact_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_Contact_extensionId)
		REFERENCES patient_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Contact_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	patient_Contact_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_Contact_modifierExtensionId)
		REFERENCES patient_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Contact_relationship_codeableConcept(
	id TEXT PRIMARY KEY,
	patient_Contact_relationshipId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (patient_Contact_relationshipId)
		REFERENCES patient_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Contact_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	patient_Contact_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (patient_Contact_telecomId)
		REFERENCES patient_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Communication_extension_extension(
	id TEXT PRIMARY KEY,
	patient_Communication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_Communication_extensionId)
		REFERENCES patient_Communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Communication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	patient_Communication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_Communication_modifierExtensionId)
		REFERENCES patient_Communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Link_extension_extension(
	id TEXT PRIMARY KEY,
	patient_Link_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_Link_extensionId)
		REFERENCES patient_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE patient_Link_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	patient_Link_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (patient_Link_modifierExtensionId)
		REFERENCES patient_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentNotice_contained_resourceList(
	id TEXT PRIMARY KEY,
	paymentNotice_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (paymentNotice_containedId)
		REFERENCES paymentNotice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentNotice_extension_extension(
	id TEXT PRIMARY KEY,
	paymentNotice_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentNotice_extensionId)
		REFERENCES paymentNotice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentNotice_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	paymentNotice_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentNotice_modifierExtensionId)
		REFERENCES paymentNotice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentNotice_identifier_identifier(
	id TEXT PRIMARY KEY,
	paymentNotice_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (paymentNotice_identifierId)
		REFERENCES paymentNotice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_contained_resourceList(
	id TEXT PRIMARY KEY,
	paymentReconciliation_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (paymentReconciliation_containedId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_extension_extension(
	id TEXT PRIMARY KEY,
	paymentReconciliation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentReconciliation_extensionId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	paymentReconciliation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentReconciliation_modifierExtensionId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_identifier_identifier(
	id TEXT PRIMARY KEY,
	paymentReconciliation_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (paymentReconciliation_identifierId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_Detail_extension_extension(
	id TEXT PRIMARY KEY,
	paymentReconciliation_Detail_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentReconciliation_Detail_extensionId)
		REFERENCES paymentReconciliation_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_Detail_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	paymentReconciliation_Detail_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentReconciliation_Detail_modifierExtensionId)
		REFERENCES paymentReconciliation_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_ProcessNote_extension_extension(
	id TEXT PRIMARY KEY,
	paymentReconciliation_ProcessNote_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentReconciliation_ProcessNote_extensionId)
		REFERENCES paymentReconciliation_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE paymentReconciliation_ProcessNote_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	paymentReconciliation_ProcessNote_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (paymentReconciliation_ProcessNote_modifierExtensionId)
		REFERENCES paymentReconciliation_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_contained_resourceList(
	id TEXT PRIMARY KEY,
	person_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (person_containedId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_extension_extension(
	id TEXT PRIMARY KEY,
	person_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (person_extensionId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	person_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (person_modifierExtensionId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_identifier_identifier(
	id TEXT PRIMARY KEY,
	person_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (person_identifierId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_name_humanName(
	id TEXT PRIMARY KEY,
	person_nameId TEXT,
	humanNameId TEXT,

	FOREIGN KEY (person_nameId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	person_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (person_telecomId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_address_address(
	id TEXT PRIMARY KEY,
	person_addressId TEXT,
	addressId TEXT,

	FOREIGN KEY (person_addressId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_Link_extension_extension(
	id TEXT PRIMARY KEY,
	person_Link_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (person_Link_extensionId)
		REFERENCES person_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE person_Link_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	person_Link_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (person_Link_modifierExtensionId)
		REFERENCES person_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	planDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (planDefinition_containedId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_extensionId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_modifierExtensionId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	planDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (planDefinition_identifierId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	planDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (planDefinition_contactId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	planDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (planDefinition_useContextId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	planDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (planDefinition_jurisdictionId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	planDefinition_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (planDefinition_topicId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_author_contactDetail(
	id TEXT PRIMARY KEY,
	planDefinition_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (planDefinition_authorId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_editor_contactDetail(
	id TEXT PRIMARY KEY,
	planDefinition_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (planDefinition_editorId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	planDefinition_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (planDefinition_reviewerId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	planDefinition_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (planDefinition_endorserId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	planDefinition_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (planDefinition_relatedArtifactId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_library_canonical(
	id TEXT PRIMARY KEY,
	planDefinition_libraryId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (planDefinition_libraryId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_action_planDefinition_Action(
	id TEXT PRIMARY KEY,
	planDefinition_actionId TEXT,
	planDefinition_ActionId TEXT,

	FOREIGN KEY (planDefinition_actionId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Goal_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Goal_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Goal_extensionId)
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Goal_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Goal_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Goal_modifierExtensionId)
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Goal_addresses_codeableConcept(
	id TEXT PRIMARY KEY,
	planDefinition_Goal_addressesId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (planDefinition_Goal_addressesId)
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Goal_documentation_relatedArtifact(
	id TEXT PRIMARY KEY,
	planDefinition_Goal_documentationId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (planDefinition_Goal_documentationId)
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Target_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Target_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Target_extensionId)
		REFERENCES planDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Target_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Target_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Target_modifierExtensionId)
		REFERENCES planDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Action_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Action_extensionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Action_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Action_modifierExtensionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_code_codeableConcept(
	id TEXT PRIMARY KEY,
	planDefinition_Action_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (planDefinition_Action_codeId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_reason_codeableConcept(
	id TEXT PRIMARY KEY,
	planDefinition_Action_reasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (planDefinition_Action_reasonId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_documentation_relatedArtifact(
	id TEXT PRIMARY KEY,
	planDefinition_Action_documentationId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (planDefinition_Action_documentationId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_goalId_id(
	id TEXT PRIMARY KEY,
	planDefinition_Action_goalIdId TEXT,
	idId TEXT,

	FOREIGN KEY (planDefinition_Action_goalIdId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (idId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action__goalId_element(
	id TEXT PRIMARY KEY,
	planDefinition_Action__goalIdId TEXT,
	elementId TEXT,

	FOREIGN KEY (planDefinition_Action__goalIdId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_trigger_triggerDefinition(
	id TEXT PRIMARY KEY,
	planDefinition_Action_triggerId TEXT,
	triggerDefinitionId TEXT,

	FOREIGN KEY (planDefinition_Action_triggerId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (triggerDefinitionId)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_input_dataRequirement(
	id TEXT PRIMARY KEY,
	planDefinition_Action_inputId TEXT,
	dataRequirementId TEXT,

	FOREIGN KEY (planDefinition_Action_inputId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_output_dataRequirement(
	id TEXT PRIMARY KEY,
	planDefinition_Action_outputId TEXT,
	dataRequirementId TEXT,

	FOREIGN KEY (planDefinition_Action_outputId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Action_action_planDefinition_Action(
	id TEXT PRIMARY KEY,
	planDefinition_Action_actionId TEXT,
	planDefinition_ActionId TEXT,

	FOREIGN KEY (planDefinition_Action_actionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Condition_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Condition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Condition_extensionId)
		REFERENCES planDefinition_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Condition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Condition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Condition_modifierExtensionId)
		REFERENCES planDefinition_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_RelatedAction_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_RelatedAction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_RelatedAction_extensionId)
		REFERENCES planDefinition_RelatedAction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_RelatedAction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_RelatedAction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_RelatedAction_modifierExtensionId)
		REFERENCES planDefinition_RelatedAction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Participant_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Participant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Participant_extensionId)
		REFERENCES planDefinition_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_Participant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_Participant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_Participant_modifierExtensionId)
		REFERENCES planDefinition_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_DynamicValue_extension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_DynamicValue_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_DynamicValue_extensionId)
		REFERENCES planDefinition_DynamicValue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE planDefinition_DynamicValue_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	planDefinition_DynamicValue_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (planDefinition_DynamicValue_modifierExtensionId)
		REFERENCES planDefinition_DynamicValue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_contained_resourceList(
	id TEXT PRIMARY KEY,
	practitioner_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (practitioner_containedId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_extension_extension(
	id TEXT PRIMARY KEY,
	practitioner_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitioner_extensionId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	practitioner_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitioner_modifierExtensionId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_identifier_identifier(
	id TEXT PRIMARY KEY,
	practitioner_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (practitioner_identifierId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_name_humanName(
	id TEXT PRIMARY KEY,
	practitioner_nameId TEXT,
	humanNameId TEXT,

	FOREIGN KEY (practitioner_nameId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	practitioner_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (practitioner_telecomId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_address_address(
	id TEXT PRIMARY KEY,
	practitioner_addressId TEXT,
	addressId TEXT,

	FOREIGN KEY (practitioner_addressId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_photo_attachment(
	id TEXT PRIMARY KEY,
	practitioner_photoId TEXT,
	attachmentId TEXT,

	FOREIGN KEY (practitioner_photoId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_communication_codeableConcept(
	id TEXT PRIMARY KEY,
	practitioner_communicationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (practitioner_communicationId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_Qualification_extension_extension(
	id TEXT PRIMARY KEY,
	practitioner_Qualification_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitioner_Qualification_extensionId)
		REFERENCES practitioner_Qualification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_Qualification_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	practitioner_Qualification_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitioner_Qualification_modifierExtensionId)
		REFERENCES practitioner_Qualification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitioner_Qualification_identifier_identifier(
	id TEXT PRIMARY KEY,
	practitioner_Qualification_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (practitioner_Qualification_identifierId)
		REFERENCES practitioner_Qualification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_contained_resourceList(
	id TEXT PRIMARY KEY,
	practitionerRole_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (practitionerRole_containedId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_extension_extension(
	id TEXT PRIMARY KEY,
	practitionerRole_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitionerRole_extensionId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	practitionerRole_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitionerRole_modifierExtensionId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_identifier_identifier(
	id TEXT PRIMARY KEY,
	practitionerRole_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (practitionerRole_identifierId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_code_codeableConcept(
	id TEXT PRIMARY KEY,
	practitionerRole_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (practitionerRole_codeId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_specialty_codeableConcept(
	id TEXT PRIMARY KEY,
	practitionerRole_specialtyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (practitionerRole_specialtyId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_location_reference(
	id TEXT PRIMARY KEY,
	practitionerRole_locationId TEXT,
	referenceId TEXT,

	FOREIGN KEY (practitionerRole_locationId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_healthcareService_reference(
	id TEXT PRIMARY KEY,
	practitionerRole_healthcareServiceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (practitionerRole_healthcareServiceId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	practitionerRole_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (practitionerRole_telecomId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_endpoint_reference(
	id TEXT PRIMARY KEY,
	practitionerRole_endpointId TEXT,
	referenceId TEXT,

	FOREIGN KEY (practitionerRole_endpointId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_AvailableTime_extension_extension(
	id TEXT PRIMARY KEY,
	practitionerRole_AvailableTime_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitionerRole_AvailableTime_extensionId)
		REFERENCES practitionerRole_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_AvailableTime_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	practitionerRole_AvailableTime_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitionerRole_AvailableTime_modifierExtensionId)
		REFERENCES practitionerRole_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_AvailableTime_daysOfWeek_code(
	id TEXT PRIMARY KEY,
	practitionerRole_AvailableTime_daysOfWeekId TEXT,
	codeId TEXT,

	FOREIGN KEY (practitionerRole_AvailableTime_daysOfWeekId)
		REFERENCES practitionerRole_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_AvailableTime__daysOfWeek_element(
	id TEXT PRIMARY KEY,
	practitionerRole_AvailableTime__daysOfWeekId TEXT,
	elementId TEXT,

	FOREIGN KEY (practitionerRole_AvailableTime__daysOfWeekId)
		REFERENCES practitionerRole_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_NotAvailable_extension_extension(
	id TEXT PRIMARY KEY,
	practitionerRole_NotAvailable_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitionerRole_NotAvailable_extensionId)
		REFERENCES practitionerRole_NotAvailable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE practitionerRole_NotAvailable_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	practitionerRole_NotAvailable_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (practitionerRole_NotAvailable_modifierExtensionId)
		REFERENCES practitionerRole_NotAvailable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_contained_resourceList(
	id TEXT PRIMARY KEY,
	procedure_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (procedure_containedId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_extension_extension(
	id TEXT PRIMARY KEY,
	procedure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (procedure_extensionId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	procedure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (procedure_modifierExtensionId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_identifier_identifier(
	id TEXT PRIMARY KEY,
	procedure_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (procedure_identifierId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	procedure_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (procedure_instantiatesCanonicalId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	procedure_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (procedure_instantiatesUriId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	procedure__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (procedure__instantiatesUriId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_basedOn_reference(
	id TEXT PRIMARY KEY,
	procedure_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (procedure_basedOnId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_partOf_reference(
	id TEXT PRIMARY KEY,
	procedure_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (procedure_partOfId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	procedure_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (procedure_reasonCodeId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_reasonReference_reference(
	id TEXT PRIMARY KEY,
	procedure_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (procedure_reasonReferenceId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_bodySite_codeableConcept(
	id TEXT PRIMARY KEY,
	procedure_bodySiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (procedure_bodySiteId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_report_reference(
	id TEXT PRIMARY KEY,
	procedure_reportId TEXT,
	referenceId TEXT,

	FOREIGN KEY (procedure_reportId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_complication_codeableConcept(
	id TEXT PRIMARY KEY,
	procedure_complicationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (procedure_complicationId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_complicationDetail_reference(
	id TEXT PRIMARY KEY,
	procedure_complicationDetailId TEXT,
	referenceId TEXT,

	FOREIGN KEY (procedure_complicationDetailId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_followUp_codeableConcept(
	id TEXT PRIMARY KEY,
	procedure_followUpId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (procedure_followUpId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_note_annotation(
	id TEXT PRIMARY KEY,
	procedure_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (procedure_noteId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_usedReference_reference(
	id TEXT PRIMARY KEY,
	procedure_usedReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (procedure_usedReferenceId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_usedCode_codeableConcept(
	id TEXT PRIMARY KEY,
	procedure_usedCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (procedure_usedCodeId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_Performer_extension_extension(
	id TEXT PRIMARY KEY,
	procedure_Performer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (procedure_Performer_extensionId)
		REFERENCES procedure_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_Performer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	procedure_Performer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (procedure_Performer_modifierExtensionId)
		REFERENCES procedure_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_FocalDevice_extension_extension(
	id TEXT PRIMARY KEY,
	procedure_FocalDevice_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (procedure_FocalDevice_extensionId)
		REFERENCES procedure_FocalDevice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE procedure_FocalDevice_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	procedure_FocalDevice_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (procedure_FocalDevice_modifierExtensionId)
		REFERENCES procedure_FocalDevice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_contained_resourceList(
	id TEXT PRIMARY KEY,
	provenance_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (provenance_containedId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_extension_extension(
	id TEXT PRIMARY KEY,
	provenance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (provenance_extensionId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	provenance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (provenance_modifierExtensionId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_target_reference(
	id TEXT PRIMARY KEY,
	provenance_targetId TEXT,
	referenceId TEXT,

	FOREIGN KEY (provenance_targetId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_policy_uri(
	id TEXT PRIMARY KEY,
	provenance_policyId TEXT,
	uriId TEXT,

	FOREIGN KEY (provenance_policyId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance__policy_element(
	id TEXT PRIMARY KEY,
	provenance__policyId TEXT,
	elementId TEXT,

	FOREIGN KEY (provenance__policyId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_reason_codeableConcept(
	id TEXT PRIMARY KEY,
	provenance_reasonId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (provenance_reasonId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_agent_provenance_Agent(
	id TEXT PRIMARY KEY,
	provenance_agentId TEXT,
	provenance_AgentId TEXT,

	FOREIGN KEY (provenance_agentId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenance_AgentId)
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_signature_signature(
	id TEXT PRIMARY KEY,
	provenance_signatureId TEXT,
	signatureId TEXT,

	FOREIGN KEY (provenance_signatureId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (signatureId)
		REFERENCES "signature" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_Agent_extension_extension(
	id TEXT PRIMARY KEY,
	provenance_Agent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (provenance_Agent_extensionId)
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_Agent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	provenance_Agent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (provenance_Agent_modifierExtensionId)
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_Agent_role_codeableConcept(
	id TEXT PRIMARY KEY,
	provenance_Agent_roleId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (provenance_Agent_roleId)
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_Entity_extension_extension(
	id TEXT PRIMARY KEY,
	provenance_Entity_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (provenance_Entity_extensionId)
		REFERENCES provenance_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_Entity_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	provenance_Entity_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (provenance_Entity_modifierExtensionId)
		REFERENCES provenance_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE provenance_Entity_agent_provenance_Agent(
	id TEXT PRIMARY KEY,
	provenance_Entity_agentId TEXT,
	provenance_AgentId TEXT,

	FOREIGN KEY (provenance_Entity_agentId)
		REFERENCES provenance_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenance_AgentId)
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_contained_resourceList(
	id TEXT PRIMARY KEY,
	questionnaire_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (questionnaire_containedId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_extensionId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_modifierExtensionId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_identifier_identifier(
	id TEXT PRIMARY KEY,
	questionnaire_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (questionnaire_identifierId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_derivedFrom_canonical(
	id TEXT PRIMARY KEY,
	questionnaire_derivedFromId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (questionnaire_derivedFromId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_subjectType_code(
	id TEXT PRIMARY KEY,
	questionnaire_subjectTypeId TEXT,
	codeId TEXT,

	FOREIGN KEY (questionnaire_subjectTypeId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire__subjectType_element(
	id TEXT PRIMARY KEY,
	questionnaire__subjectTypeId TEXT,
	elementId TEXT,

	FOREIGN KEY (questionnaire__subjectTypeId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_contact_contactDetail(
	id TEXT PRIMARY KEY,
	questionnaire_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (questionnaire_contactId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_useContext_usageContext(
	id TEXT PRIMARY KEY,
	questionnaire_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (questionnaire_useContextId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	questionnaire_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (questionnaire_jurisdictionId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_code_coding(
	id TEXT PRIMARY KEY,
	questionnaire_codeId TEXT,
	codingId TEXT,

	FOREIGN KEY (questionnaire_codeId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_item_questionnaire_Item(
	id TEXT PRIMARY KEY,
	questionnaire_itemId TEXT,
	questionnaire_ItemId TEXT,

	FOREIGN KEY (questionnaire_itemId)
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_Item_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_Item_extensionId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_Item_modifierExtensionId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_Item_code_coding(
	id TEXT PRIMARY KEY,
	questionnaire_Item_codeId TEXT,
	codingId TEXT,

	FOREIGN KEY (questionnaire_Item_codeId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_Item_item_questionnaire_Item(
	id TEXT PRIMARY KEY,
	questionnaire_Item_itemId TEXT,
	questionnaire_ItemId TEXT,

	FOREIGN KEY (questionnaire_Item_itemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_EnableWhen_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_EnableWhen_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_EnableWhen_extensionId)
		REFERENCES questionnaire_EnableWhen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_EnableWhen_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_EnableWhen_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_EnableWhen_modifierExtensionId)
		REFERENCES questionnaire_EnableWhen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_AnswerOption_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_AnswerOption_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_AnswerOption_extensionId)
		REFERENCES questionnaire_AnswerOption (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_AnswerOption_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_AnswerOption_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_AnswerOption_modifierExtensionId)
		REFERENCES questionnaire_AnswerOption (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_Initial_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_Initial_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_Initial_extensionId)
		REFERENCES questionnaire_Initial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaire_Initial_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaire_Initial_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaire_Initial_modifierExtensionId)
		REFERENCES questionnaire_Initial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_contained_resourceList(
	id TEXT PRIMARY KEY,
	questionnaireResponse_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (questionnaireResponse_containedId)
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaireResponse_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaireResponse_extensionId)
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaireResponse_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaireResponse_modifierExtensionId)
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_basedOn_reference(
	id TEXT PRIMARY KEY,
	questionnaireResponse_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (questionnaireResponse_basedOnId)
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_partOf_reference(
	id TEXT PRIMARY KEY,
	questionnaireResponse_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (questionnaireResponse_partOfId)
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_item_questionnaireResponse_Item(
	id TEXT PRIMARY KEY,
	questionnaireResponse_itemId TEXT,
	questionnaireResponse_ItemId TEXT,

	FOREIGN KEY (questionnaireResponse_itemId)
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_Item_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaireResponse_Item_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaireResponse_Item_extensionId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_Item_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaireResponse_Item_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaireResponse_Item_modifierExtensionId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_Item_item_questionnaireResponse_Item(
	id TEXT PRIMARY KEY,
	questionnaireResponse_Item_itemId TEXT,
	questionnaireResponse_ItemId TEXT,

	FOREIGN KEY (questionnaireResponse_Item_itemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_Answer_extension_extension(
	id TEXT PRIMARY KEY,
	questionnaireResponse_Answer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaireResponse_Answer_extensionId)
		REFERENCES questionnaireResponse_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_Answer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	questionnaireResponse_Answer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (questionnaireResponse_Answer_modifierExtensionId)
		REFERENCES questionnaireResponse_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE questionnaireResponse_Answer_item_questionnaireResponse_Item(
	id TEXT PRIMARY KEY,
	questionnaireResponse_Answer_itemId TEXT,
	questionnaireResponse_ItemId TEXT,

	FOREIGN KEY (questionnaireResponse_Answer_itemId)
		REFERENCES questionnaireResponse_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_contained_resourceList(
	id TEXT PRIMARY KEY,
	relatedPerson_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (relatedPerson_containedId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_extension_extension(
	id TEXT PRIMARY KEY,
	relatedPerson_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (relatedPerson_extensionId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	relatedPerson_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (relatedPerson_modifierExtensionId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_identifier_identifier(
	id TEXT PRIMARY KEY,
	relatedPerson_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (relatedPerson_identifierId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_relationship_codeableConcept(
	id TEXT PRIMARY KEY,
	relatedPerson_relationshipId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (relatedPerson_relationshipId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_name_humanName(
	id TEXT PRIMARY KEY,
	relatedPerson_nameId TEXT,
	humanNameId TEXT,

	FOREIGN KEY (relatedPerson_nameId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_telecom_contactPoint(
	id TEXT PRIMARY KEY,
	relatedPerson_telecomId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (relatedPerson_telecomId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_address_address(
	id TEXT PRIMARY KEY,
	relatedPerson_addressId TEXT,
	addressId TEXT,

	FOREIGN KEY (relatedPerson_addressId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId)
		REFERENCES "address" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_photo_attachment(
	id TEXT PRIMARY KEY,
	relatedPerson_photoId TEXT,
	attachmentId TEXT,

	FOREIGN KEY (relatedPerson_photoId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_Communication_extension_extension(
	id TEXT PRIMARY KEY,
	relatedPerson_Communication_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (relatedPerson_Communication_extensionId)
		REFERENCES relatedPerson_Communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE relatedPerson_Communication_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	relatedPerson_Communication_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (relatedPerson_Communication_modifierExtensionId)
		REFERENCES relatedPerson_Communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_contained_resourceList(
	id TEXT PRIMARY KEY,
	requestGroup_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (requestGroup_containedId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_extension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_extensionId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_modifierExtensionId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_identifier_identifier(
	id TEXT PRIMARY KEY,
	requestGroup_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (requestGroup_identifierId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	requestGroup_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (requestGroup_instantiatesCanonicalId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup__instantiatesCanonical_element(
	id TEXT PRIMARY KEY,
	requestGroup__instantiatesCanonicalId TEXT,
	elementId TEXT,

	FOREIGN KEY (requestGroup__instantiatesCanonicalId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	requestGroup_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (requestGroup_instantiatesUriId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	requestGroup__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (requestGroup__instantiatesUriId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_basedOn_reference(
	id TEXT PRIMARY KEY,
	requestGroup_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (requestGroup_basedOnId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_replaces_reference(
	id TEXT PRIMARY KEY,
	requestGroup_replacesId TEXT,
	referenceId TEXT,

	FOREIGN KEY (requestGroup_replacesId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	requestGroup_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (requestGroup_reasonCodeId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_reasonReference_reference(
	id TEXT PRIMARY KEY,
	requestGroup_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (requestGroup_reasonReferenceId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_note_annotation(
	id TEXT PRIMARY KEY,
	requestGroup_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (requestGroup_noteId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_action_requestGroup_Action(
	id TEXT PRIMARY KEY,
	requestGroup_actionId TEXT,
	requestGroup_ActionId TEXT,

	FOREIGN KEY (requestGroup_actionId)
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Action_extension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_Action_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_Action_extensionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Action_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_Action_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_Action_modifierExtensionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Action_code_codeableConcept(
	id TEXT PRIMARY KEY,
	requestGroup_Action_codeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (requestGroup_Action_codeId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Action_documentation_relatedArtifact(
	id TEXT PRIMARY KEY,
	requestGroup_Action_documentationId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (requestGroup_Action_documentationId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Action_participant_reference(
	id TEXT PRIMARY KEY,
	requestGroup_Action_participantId TEXT,
	referenceId TEXT,

	FOREIGN KEY (requestGroup_Action_participantId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Action_action_requestGroup_Action(
	id TEXT PRIMARY KEY,
	requestGroup_Action_actionId TEXT,
	requestGroup_ActionId TEXT,

	FOREIGN KEY (requestGroup_Action_actionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Condition_extension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_Condition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_Condition_extensionId)
		REFERENCES requestGroup_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_Condition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_Condition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_Condition_modifierExtensionId)
		REFERENCES requestGroup_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_RelatedAction_extension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_RelatedAction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_RelatedAction_extensionId)
		REFERENCES requestGroup_RelatedAction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE requestGroup_RelatedAction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	requestGroup_RelatedAction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (requestGroup_RelatedAction_modifierExtensionId)
		REFERENCES requestGroup_RelatedAction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	researchDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (researchDefinition_containedId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	researchDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchDefinition_extensionId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	researchDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchDefinition_modifierExtensionId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	researchDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (researchDefinition_identifierId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	researchDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchDefinition_contactId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_comment_string(
	id TEXT PRIMARY KEY,
	researchDefinition_commentId TEXT,
	stringId TEXT,

	FOREIGN KEY (researchDefinition_commentId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition__comment_element(
	id TEXT PRIMARY KEY,
	researchDefinition__commentId TEXT,
	elementId TEXT,

	FOREIGN KEY (researchDefinition__commentId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	researchDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (researchDefinition_useContextId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	researchDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchDefinition_jurisdictionId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	researchDefinition_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchDefinition_topicId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_author_contactDetail(
	id TEXT PRIMARY KEY,
	researchDefinition_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchDefinition_authorId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_editor_contactDetail(
	id TEXT PRIMARY KEY,
	researchDefinition_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchDefinition_editorId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	researchDefinition_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchDefinition_reviewerId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	researchDefinition_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchDefinition_endorserId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	researchDefinition_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (researchDefinition_relatedArtifactId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchDefinition_library_canonical(
	id TEXT PRIMARY KEY,
	researchDefinition_libraryId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (researchDefinition_libraryId)
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	researchElementDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (researchElementDefinition_containedId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	researchElementDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchElementDefinition_extensionId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	researchElementDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchElementDefinition_modifierExtensionId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	researchElementDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (researchElementDefinition_identifierId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	researchElementDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchElementDefinition_contactId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_comment_string(
	id TEXT PRIMARY KEY,
	researchElementDefinition_commentId TEXT,
	stringId TEXT,

	FOREIGN KEY (researchElementDefinition_commentId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition__comment_element(
	id TEXT PRIMARY KEY,
	researchElementDefinition__commentId TEXT,
	elementId TEXT,

	FOREIGN KEY (researchElementDefinition__commentId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	researchElementDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (researchElementDefinition_useContextId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	researchElementDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchElementDefinition_jurisdictionId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	researchElementDefinition_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchElementDefinition_topicId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_author_contactDetail(
	id TEXT PRIMARY KEY,
	researchElementDefinition_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchElementDefinition_authorId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_editor_contactDetail(
	id TEXT PRIMARY KEY,
	researchElementDefinition_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchElementDefinition_editorId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	researchElementDefinition_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchElementDefinition_reviewerId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	researchElementDefinition_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchElementDefinition_endorserId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	researchElementDefinition_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (researchElementDefinition_relatedArtifactId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_library_canonical(
	id TEXT PRIMARY KEY,
	researchElementDefinition_libraryId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (researchElementDefinition_libraryId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_Characteristic_extension_extension(
	id TEXT PRIMARY KEY,
	researchElementDefinition_Characteristic_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchElementDefinition_Characteristic_extensionId)
		REFERENCES researchElementDefinition_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_Characteristic_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	researchElementDefinition_Characteristic_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchElementDefinition_Characteristic_modifierExtensionId)
		REFERENCES researchElementDefinition_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchElementDefinition_Characteristic_usageContext_usageContext(
	id TEXT PRIMARY KEY,
	researchElementDefinition_Characteristic_usageContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (researchElementDefinition_Characteristic_usageContextId)
		REFERENCES researchElementDefinition_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_contained_resourceList(
	id TEXT PRIMARY KEY,
	researchStudy_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (researchStudy_containedId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_extension_extension(
	id TEXT PRIMARY KEY,
	researchStudy_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchStudy_extensionId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	researchStudy_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchStudy_modifierExtensionId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_identifier_identifier(
	id TEXT PRIMARY KEY,
	researchStudy_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (researchStudy_identifierId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_protocol_reference(
	id TEXT PRIMARY KEY,
	researchStudy_protocolId TEXT,
	referenceId TEXT,

	FOREIGN KEY (researchStudy_protocolId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_partOf_reference(
	id TEXT PRIMARY KEY,
	researchStudy_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (researchStudy_partOfId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_category_codeableConcept(
	id TEXT PRIMARY KEY,
	researchStudy_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchStudy_categoryId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_focus_codeableConcept(
	id TEXT PRIMARY KEY,
	researchStudy_focusId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchStudy_focusId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_condition_codeableConcept(
	id TEXT PRIMARY KEY,
	researchStudy_conditionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchStudy_conditionId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_contact_contactDetail(
	id TEXT PRIMARY KEY,
	researchStudy_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (researchStudy_contactId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	researchStudy_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (researchStudy_relatedArtifactId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_keyword_codeableConcept(
	id TEXT PRIMARY KEY,
	researchStudy_keywordId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchStudy_keywordId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_location_codeableConcept(
	id TEXT PRIMARY KEY,
	researchStudy_locationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (researchStudy_locationId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_enrollment_reference(
	id TEXT PRIMARY KEY,
	researchStudy_enrollmentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (researchStudy_enrollmentId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_site_reference(
	id TEXT PRIMARY KEY,
	researchStudy_siteId TEXT,
	referenceId TEXT,

	FOREIGN KEY (researchStudy_siteId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_note_annotation(
	id TEXT PRIMARY KEY,
	researchStudy_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (researchStudy_noteId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_Arm_extension_extension(
	id TEXT PRIMARY KEY,
	researchStudy_Arm_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchStudy_Arm_extensionId)
		REFERENCES researchStudy_Arm (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_Arm_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	researchStudy_Arm_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchStudy_Arm_modifierExtensionId)
		REFERENCES researchStudy_Arm (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_Objective_extension_extension(
	id TEXT PRIMARY KEY,
	researchStudy_Objective_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchStudy_Objective_extensionId)
		REFERENCES researchStudy_Objective (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchStudy_Objective_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	researchStudy_Objective_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchStudy_Objective_modifierExtensionId)
		REFERENCES researchStudy_Objective (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchSubject_contained_resourceList(
	id TEXT PRIMARY KEY,
	researchSubject_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (researchSubject_containedId)
		REFERENCES researchSubject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchSubject_extension_extension(
	id TEXT PRIMARY KEY,
	researchSubject_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchSubject_extensionId)
		REFERENCES researchSubject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchSubject_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	researchSubject_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (researchSubject_modifierExtensionId)
		REFERENCES researchSubject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE researchSubject_identifier_identifier(
	id TEXT PRIMARY KEY,
	researchSubject_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (researchSubject_identifierId)
		REFERENCES researchSubject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_contained_resourceList(
	id TEXT PRIMARY KEY,
	riskAssessment_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (riskAssessment_containedId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_extension_extension(
	id TEXT PRIMARY KEY,
	riskAssessment_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskAssessment_extensionId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskAssessment_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskAssessment_modifierExtensionId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_identifier_identifier(
	id TEXT PRIMARY KEY,
	riskAssessment_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (riskAssessment_identifierId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	riskAssessment_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (riskAssessment_reasonCodeId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_reasonReference_reference(
	id TEXT PRIMARY KEY,
	riskAssessment_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (riskAssessment_reasonReferenceId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_basis_reference(
	id TEXT PRIMARY KEY,
	riskAssessment_basisId TEXT,
	referenceId TEXT,

	FOREIGN KEY (riskAssessment_basisId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_note_annotation(
	id TEXT PRIMARY KEY,
	riskAssessment_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (riskAssessment_noteId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_Prediction_extension_extension(
	id TEXT PRIMARY KEY,
	riskAssessment_Prediction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskAssessment_Prediction_extensionId)
		REFERENCES riskAssessment_Prediction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskAssessment_Prediction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskAssessment_Prediction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskAssessment_Prediction_modifierExtensionId)
		REFERENCES riskAssessment_Prediction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_contained_resourceList(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_containedId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_extension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_extensionId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_modifierExtensionId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_identifier_identifier(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_identifierId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_contact_contactDetail(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_contactId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_note_annotation(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_noteId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_useContext_usageContext(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_useContextId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_jurisdictionId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_topic_codeableConcept(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_topicId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_topicId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_author_contactDetail(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_authorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_authorId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_editor_contactDetail(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_editorId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_editorId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_reviewer_contactDetail(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_reviewerId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_reviewerId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_endorser_contactDetail(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_endorserId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_endorserId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_relatedArtifact_relatedArtifact(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_relatedArtifactId TEXT,
	relatedArtifactId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_relatedArtifactId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_SampleSize_extension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_SampleSize_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_SampleSize_extensionId)
		REFERENCES riskEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_SampleSize_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_SampleSize_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_SampleSize_modifierExtensionId)
		REFERENCES riskEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_RiskEstimate_extension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_RiskEstimate_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_RiskEstimate_extensionId)
		REFERENCES riskEvidenceSynthesis_RiskEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_RiskEstimate_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_RiskEstimate_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_RiskEstimate_modifierExtensionId)
		REFERENCES riskEvidenceSynthesis_RiskEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_PrecisionEstimate_extension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_PrecisionEstimate_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_PrecisionEstimate_extensionId)
		REFERENCES riskEvidenceSynthesis_PrecisionEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_PrecisionEstimate_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_PrecisionEstimate_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_PrecisionEstimate_modifierExtensionId)
		REFERENCES riskEvidenceSynthesis_PrecisionEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_Certainty_extension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_Certainty_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_Certainty_extensionId)
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_Certainty_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_Certainty_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_Certainty_modifierExtensionId)
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_Certainty_rating_codeableConcept(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_Certainty_ratingId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_Certainty_ratingId)
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_Certainty_note_annotation(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_Certainty_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_Certainty_noteId)
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_CertaintySubcomponent_extension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_CertaintySubcomponent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_CertaintySubcomponent_extensionId)
		REFERENCES riskEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_CertaintySubcomponent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_CertaintySubcomponent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_CertaintySubcomponent_modifierExtensionId)
		REFERENCES riskEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_CertaintySubcomponent_rating_codeableConcept(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_CertaintySubcomponent_ratingId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_CertaintySubcomponent_ratingId)
		REFERENCES riskEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE riskEvidenceSynthesis_CertaintySubcomponent_note_annotation(
	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_CertaintySubcomponent_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (riskEvidenceSynthesis_CertaintySubcomponent_noteId)
		REFERENCES riskEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_contained_resourceList(
	id TEXT PRIMARY KEY,
	schedule_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (schedule_containedId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_extension_extension(
	id TEXT PRIMARY KEY,
	schedule_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (schedule_extensionId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	schedule_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (schedule_modifierExtensionId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_identifier_identifier(
	id TEXT PRIMARY KEY,
	schedule_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (schedule_identifierId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_serviceCategory_codeableConcept(
	id TEXT PRIMARY KEY,
	schedule_serviceCategoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (schedule_serviceCategoryId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_serviceType_codeableConcept(
	id TEXT PRIMARY KEY,
	schedule_serviceTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (schedule_serviceTypeId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_specialty_codeableConcept(
	id TEXT PRIMARY KEY,
	schedule_specialtyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (schedule_specialtyId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE schedule_actor_reference(
	id TEXT PRIMARY KEY,
	schedule_actorId TEXT,
	referenceId TEXT,

	FOREIGN KEY (schedule_actorId)
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_contained_resourceList(
	id TEXT PRIMARY KEY,
	searchParameter_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (searchParameter_containedId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_extension_extension(
	id TEXT PRIMARY KEY,
	searchParameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (searchParameter_extensionId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	searchParameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (searchParameter_modifierExtensionId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_contact_contactDetail(
	id TEXT PRIMARY KEY,
	searchParameter_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (searchParameter_contactId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_useContext_usageContext(
	id TEXT PRIMARY KEY,
	searchParameter_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (searchParameter_useContextId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	searchParameter_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (searchParameter_jurisdictionId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_base_code(
	id TEXT PRIMARY KEY,
	searchParameter_baseId TEXT,
	codeId TEXT,

	FOREIGN KEY (searchParameter_baseId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter__base_element(
	id TEXT PRIMARY KEY,
	searchParameter__baseId TEXT,
	elementId TEXT,

	FOREIGN KEY (searchParameter__baseId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_target_code(
	id TEXT PRIMARY KEY,
	searchParameter_targetId TEXT,
	codeId TEXT,

	FOREIGN KEY (searchParameter_targetId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter__target_element(
	id TEXT PRIMARY KEY,
	searchParameter__targetId TEXT,
	elementId TEXT,

	FOREIGN KEY (searchParameter__targetId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter__comparator_element(
	id TEXT PRIMARY KEY,
	searchParameter__comparatorId TEXT,
	elementId TEXT,

	FOREIGN KEY (searchParameter__comparatorId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter__modifier_element(
	id TEXT PRIMARY KEY,
	searchParameter__modifierId TEXT,
	elementId TEXT,

	FOREIGN KEY (searchParameter__modifierId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_chain_string(
	id TEXT PRIMARY KEY,
	searchParameter_chainId TEXT,
	stringId TEXT,

	FOREIGN KEY (searchParameter_chainId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter__chain_element(
	id TEXT PRIMARY KEY,
	searchParameter__chainId TEXT,
	elementId TEXT,

	FOREIGN KEY (searchParameter__chainId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_Component_extension_extension(
	id TEXT PRIMARY KEY,
	searchParameter_Component_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (searchParameter_Component_extensionId)
		REFERENCES searchParameter_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE searchParameter_Component_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	searchParameter_Component_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (searchParameter_Component_modifierExtensionId)
		REFERENCES searchParameter_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_contained_resourceList(
	id TEXT PRIMARY KEY,
	serviceRequest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (serviceRequest_containedId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_extension_extension(
	id TEXT PRIMARY KEY,
	serviceRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (serviceRequest_extensionId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	serviceRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (serviceRequest_modifierExtensionId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_identifier_identifier(
	id TEXT PRIMARY KEY,
	serviceRequest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (serviceRequest_identifierId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_instantiatesCanonical_canonical(
	id TEXT PRIMARY KEY,
	serviceRequest_instantiatesCanonicalId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (serviceRequest_instantiatesCanonicalId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_instantiatesUri_uri(
	id TEXT PRIMARY KEY,
	serviceRequest_instantiatesUriId TEXT,
	uriId TEXT,

	FOREIGN KEY (serviceRequest_instantiatesUriId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest__instantiatesUri_element(
	id TEXT PRIMARY KEY,
	serviceRequest__instantiatesUriId TEXT,
	elementId TEXT,

	FOREIGN KEY (serviceRequest__instantiatesUriId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_basedOn_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_basedOnId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_replaces_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_replacesId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_replacesId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_category_codeableConcept(
	id TEXT PRIMARY KEY,
	serviceRequest_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (serviceRequest_categoryId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_orderDetail_codeableConcept(
	id TEXT PRIMARY KEY,
	serviceRequest_orderDetailId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (serviceRequest_orderDetailId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_performer_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_performerId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_performerId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_locationCode_codeableConcept(
	id TEXT PRIMARY KEY,
	serviceRequest_locationCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (serviceRequest_locationCodeId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_locationReference_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_locationReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_locationReferenceId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	serviceRequest_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (serviceRequest_reasonCodeId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_reasonReference_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_reasonReferenceId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_insurance_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_insuranceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_insuranceId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_supportingInfo_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_supportingInfoId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_supportingInfoId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_specimen_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_specimenId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_specimenId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_bodySite_codeableConcept(
	id TEXT PRIMARY KEY,
	serviceRequest_bodySiteId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (serviceRequest_bodySiteId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_note_annotation(
	id TEXT PRIMARY KEY,
	serviceRequest_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (serviceRequest_noteId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE serviceRequest_relevantHistory_reference(
	id TEXT PRIMARY KEY,
	serviceRequest_relevantHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (serviceRequest_relevantHistoryId)
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE slot_contained_resourceList(
	id TEXT PRIMARY KEY,
	slot_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (slot_containedId)
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE slot_extension_extension(
	id TEXT PRIMARY KEY,
	slot_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (slot_extensionId)
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE slot_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	slot_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (slot_modifierExtensionId)
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE slot_identifier_identifier(
	id TEXT PRIMARY KEY,
	slot_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (slot_identifierId)
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE slot_serviceCategory_codeableConcept(
	id TEXT PRIMARY KEY,
	slot_serviceCategoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (slot_serviceCategoryId)
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE slot_serviceType_codeableConcept(
	id TEXT PRIMARY KEY,
	slot_serviceTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (slot_serviceTypeId)
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE slot_specialty_codeableConcept(
	id TEXT PRIMARY KEY,
	slot_specialtyId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (slot_specialtyId)
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_contained_resourceList(
	id TEXT PRIMARY KEY,
	specimen_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (specimen_containedId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_extension_extension(
	id TEXT PRIMARY KEY,
	specimen_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_extensionId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimen_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_modifierExtensionId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_identifier_identifier(
	id TEXT PRIMARY KEY,
	specimen_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (specimen_identifierId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_parent_reference(
	id TEXT PRIMARY KEY,
	specimen_parentId TEXT,
	referenceId TEXT,

	FOREIGN KEY (specimen_parentId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_request_reference(
	id TEXT PRIMARY KEY,
	specimen_requestId TEXT,
	referenceId TEXT,

	FOREIGN KEY (specimen_requestId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_condition_codeableConcept(
	id TEXT PRIMARY KEY,
	specimen_conditionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (specimen_conditionId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_note_annotation(
	id TEXT PRIMARY KEY,
	specimen_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (specimen_noteId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Collection_extension_extension(
	id TEXT PRIMARY KEY,
	specimen_Collection_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_Collection_extensionId)
		REFERENCES specimen_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Collection_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimen_Collection_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_Collection_modifierExtensionId)
		REFERENCES specimen_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Processing_extension_extension(
	id TEXT PRIMARY KEY,
	specimen_Processing_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_Processing_extensionId)
		REFERENCES specimen_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Processing_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimen_Processing_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_Processing_modifierExtensionId)
		REFERENCES specimen_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Processing_additive_reference(
	id TEXT PRIMARY KEY,
	specimen_Processing_additiveId TEXT,
	referenceId TEXT,

	FOREIGN KEY (specimen_Processing_additiveId)
		REFERENCES specimen_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Container_extension_extension(
	id TEXT PRIMARY KEY,
	specimen_Container_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_Container_extensionId)
		REFERENCES specimen_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Container_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimen_Container_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimen_Container_modifierExtensionId)
		REFERENCES specimen_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimen_Container_identifier_identifier(
	id TEXT PRIMARY KEY,
	specimen_Container_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (specimen_Container_identifierId)
		REFERENCES specimen_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	specimenDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (specimenDefinition_containedId)
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_extensionId)
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_modifierExtensionId)
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_patientPreparation_codeableConcept(
	id TEXT PRIMARY KEY,
	specimenDefinition_patientPreparationId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (specimenDefinition_patientPreparationId)
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_collection_codeableConcept(
	id TEXT PRIMARY KEY,
	specimenDefinition_collectionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (specimenDefinition_collectionId)
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_TypeTested_extension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_TypeTested_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_TypeTested_extensionId)
		REFERENCES specimenDefinition_TypeTested (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_TypeTested_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_TypeTested_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_TypeTested_modifierExtensionId)
		REFERENCES specimenDefinition_TypeTested (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_TypeTested_rejectionCriterion_codeableConcept(
	id TEXT PRIMARY KEY,
	specimenDefinition_TypeTested_rejectionCriterionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (specimenDefinition_TypeTested_rejectionCriterionId)
		REFERENCES specimenDefinition_TypeTested (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_Container_extension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_Container_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_Container_extensionId)
		REFERENCES specimenDefinition_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_Container_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_Container_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_Container_modifierExtensionId)
		REFERENCES specimenDefinition_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_Additive_extension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_Additive_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_Additive_extensionId)
		REFERENCES specimenDefinition_Additive (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_Additive_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_Additive_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_Additive_modifierExtensionId)
		REFERENCES specimenDefinition_Additive (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_Handling_extension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_Handling_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_Handling_extensionId)
		REFERENCES specimenDefinition_Handling (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE specimenDefinition_Handling_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	specimenDefinition_Handling_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (specimenDefinition_Handling_modifierExtensionId)
		REFERENCES specimenDefinition_Handling (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_contained_resourceList(
	id TEXT PRIMARY KEY,
	structureDefinition_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (structureDefinition_containedId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_extension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_extensionId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_modifierExtensionId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_identifier_identifier(
	id TEXT PRIMARY KEY,
	structureDefinition_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (structureDefinition_identifierId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_contact_contactDetail(
	id TEXT PRIMARY KEY,
	structureDefinition_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (structureDefinition_contactId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_useContext_usageContext(
	id TEXT PRIMARY KEY,
	structureDefinition_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (structureDefinition_useContextId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	structureDefinition_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (structureDefinition_jurisdictionId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_keyword_coding(
	id TEXT PRIMARY KEY,
	structureDefinition_keywordId TEXT,
	codingId TEXT,

	FOREIGN KEY (structureDefinition_keywordId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_contextInvariant_string(
	id TEXT PRIMARY KEY,
	structureDefinition_contextInvariantId TEXT,
	stringId TEXT,

	FOREIGN KEY (structureDefinition_contextInvariantId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition__contextInvariant_element(
	id TEXT PRIMARY KEY,
	structureDefinition__contextInvariantId TEXT,
	elementId TEXT,

	FOREIGN KEY (structureDefinition__contextInvariantId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Mapping_extension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Mapping_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Mapping_extensionId)
		REFERENCES structureDefinition_Mapping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Mapping_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Mapping_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Mapping_modifierExtensionId)
		REFERENCES structureDefinition_Mapping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Context_extension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Context_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Context_extensionId)
		REFERENCES structureDefinition_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Context_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Context_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Context_modifierExtensionId)
		REFERENCES structureDefinition_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Snapshot_extension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Snapshot_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Snapshot_extensionId)
		REFERENCES structureDefinition_Snapshot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Snapshot_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Snapshot_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Snapshot_modifierExtensionId)
		REFERENCES structureDefinition_Snapshot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Snapshot_element_elementDefinition(
	id TEXT PRIMARY KEY,
	structureDefinition_Snapshot_elementId TEXT,
	elementDefinitionId TEXT,

	FOREIGN KEY (structureDefinition_Snapshot_elementId)
		REFERENCES structureDefinition_Snapshot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Differential_extension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Differential_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Differential_extensionId)
		REFERENCES structureDefinition_Differential (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Differential_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureDefinition_Differential_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureDefinition_Differential_modifierExtensionId)
		REFERENCES structureDefinition_Differential (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureDefinition_Differential_element_elementDefinition(
	id TEXT PRIMARY KEY,
	structureDefinition_Differential_elementId TEXT,
	elementDefinitionId TEXT,

	FOREIGN KEY (structureDefinition_Differential_elementId)
		REFERENCES structureDefinition_Differential (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_contained_resourceList(
	id TEXT PRIMARY KEY,
	structureMap_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (structureMap_containedId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_extensionId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_modifierExtensionId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_identifier_identifier(
	id TEXT PRIMARY KEY,
	structureMap_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (structureMap_identifierId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_contact_contactDetail(
	id TEXT PRIMARY KEY,
	structureMap_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (structureMap_contactId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_useContext_usageContext(
	id TEXT PRIMARY KEY,
	structureMap_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (structureMap_useContextId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	structureMap_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (structureMap_jurisdictionId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_import_canonical(
	id TEXT PRIMARY KEY,
	structureMap_importId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (structureMap_importId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Structure_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Structure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Structure_extensionId)
		REFERENCES structureMap_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Structure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Structure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Structure_modifierExtensionId)
		REFERENCES structureMap_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Group_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Group_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Group_extensionId)
		REFERENCES structureMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Group_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Group_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Group_modifierExtensionId)
		REFERENCES structureMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Group_rule_structureMap_Rule(
	id TEXT PRIMARY KEY,
	structureMap_Group_ruleId TEXT,
	structureMap_RuleId TEXT,

	FOREIGN KEY (structureMap_Group_ruleId)
		REFERENCES structureMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Input_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Input_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Input_extensionId)
		REFERENCES structureMap_Input (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Input_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Input_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Input_modifierExtensionId)
		REFERENCES structureMap_Input (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Rule_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Rule_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Rule_extensionId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Rule_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Rule_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Rule_modifierExtensionId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Rule_rule_structureMap_Rule(
	id TEXT PRIMARY KEY,
	structureMap_Rule_ruleId TEXT,
	structureMap_RuleId TEXT,

	FOREIGN KEY (structureMap_Rule_ruleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Source_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Source_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Source_extensionId)
		REFERENCES structureMap_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Source_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Source_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Source_modifierExtensionId)
		REFERENCES structureMap_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Target_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Target_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Target_extensionId)
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Target_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Target_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Target_modifierExtensionId)
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Target__listMode_element(
	id TEXT PRIMARY KEY,
	structureMap_Target__listModeId TEXT,
	elementId TEXT,

	FOREIGN KEY (structureMap_Target__listModeId)
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Parameter_extensionId)
		REFERENCES structureMap_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Parameter_modifierExtensionId)
		REFERENCES structureMap_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Dependent_extension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Dependent_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Dependent_extensionId)
		REFERENCES structureMap_Dependent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Dependent_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	structureMap_Dependent_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (structureMap_Dependent_modifierExtensionId)
		REFERENCES structureMap_Dependent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Dependent_variable_string(
	id TEXT PRIMARY KEY,
	structureMap_Dependent_variableId TEXT,
	stringId TEXT,

	FOREIGN KEY (structureMap_Dependent_variableId)
		REFERENCES structureMap_Dependent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE structureMap_Dependent__variable_element(
	id TEXT PRIMARY KEY,
	structureMap_Dependent__variableId TEXT,
	elementId TEXT,

	FOREIGN KEY (structureMap_Dependent__variableId)
		REFERENCES structureMap_Dependent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_contained_resourceList(
	id TEXT PRIMARY KEY,
	subscription_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (subscription_containedId)
		REFERENCES subscription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_extension_extension(
	id TEXT PRIMARY KEY,
	subscription_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (subscription_extensionId)
		REFERENCES subscription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	subscription_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (subscription_modifierExtensionId)
		REFERENCES subscription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_contact_contactPoint(
	id TEXT PRIMARY KEY,
	subscription_contactId TEXT,
	contactPointId TEXT,

	FOREIGN KEY (subscription_contactId)
		REFERENCES subscription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_Channel_extension_extension(
	id TEXT PRIMARY KEY,
	subscription_Channel_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (subscription_Channel_extensionId)
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_Channel_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	subscription_Channel_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (subscription_Channel_modifierExtensionId)
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_Channel_header_string(
	id TEXT PRIMARY KEY,
	subscription_Channel_headerId TEXT,
	stringId TEXT,

	FOREIGN KEY (subscription_Channel_headerId)
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE subscription_Channel__header_element(
	id TEXT PRIMARY KEY,
	subscription_Channel__headerId TEXT,
	elementId TEXT,

	FOREIGN KEY (subscription_Channel__headerId)
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_contained_resourceList(
	id TEXT PRIMARY KEY,
	substance_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (substance_containedId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_extension_extension(
	id TEXT PRIMARY KEY,
	substance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substance_extensionId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substance_modifierExtensionId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_identifier_identifier(
	id TEXT PRIMARY KEY,
	substance_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (substance_identifierId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_category_codeableConcept(
	id TEXT PRIMARY KEY,
	substance_categoryId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (substance_categoryId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_Instance_extension_extension(
	id TEXT PRIMARY KEY,
	substance_Instance_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substance_Instance_extensionId)
		REFERENCES substance_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_Instance_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substance_Instance_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substance_Instance_modifierExtensionId)
		REFERENCES substance_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_Ingredient_extension_extension(
	id TEXT PRIMARY KEY,
	substance_Ingredient_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substance_Ingredient_extensionId)
		REFERENCES substance_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substance_Ingredient_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substance_Ingredient_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substance_Ingredient_modifierExtensionId)
		REFERENCES substance_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_contained_resourceList(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (substanceNucleicAcid_containedId)
		REFERENCES substanceNucleicAcid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_extension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_extensionId)
		REFERENCES substanceNucleicAcid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_modifierExtensionId)
		REFERENCES substanceNucleicAcid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_Subunit_extension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_Subunit_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_Subunit_extensionId)
		REFERENCES substanceNucleicAcid_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_Subunit_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_Subunit_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_Subunit_modifierExtensionId)
		REFERENCES substanceNucleicAcid_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_Linkage_extension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_Linkage_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_Linkage_extensionId)
		REFERENCES substanceNucleicAcid_Linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_Linkage_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_Linkage_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_Linkage_modifierExtensionId)
		REFERENCES substanceNucleicAcid_Linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_Sugar_extension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_Sugar_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_Sugar_extensionId)
		REFERENCES substanceNucleicAcid_Sugar (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceNucleicAcid_Sugar_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceNucleicAcid_Sugar_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceNucleicAcid_Sugar_modifierExtensionId)
		REFERENCES substanceNucleicAcid_Sugar (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_contained_resourceList(
	id TEXT PRIMARY KEY,
	substancePolymer_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (substancePolymer_containedId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_extension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_extensionId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_modifierExtensionId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_copolymerConnectivity_codeableConcept(
	id TEXT PRIMARY KEY,
	substancePolymer_copolymerConnectivityId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (substancePolymer_copolymerConnectivityId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_modification_string(
	id TEXT PRIMARY KEY,
	substancePolymer_modificationId TEXT,
	stringId TEXT,

	FOREIGN KEY (substancePolymer_modificationId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer__modification_element(
	id TEXT PRIMARY KEY,
	substancePolymer__modificationId TEXT,
	elementId TEXT,

	FOREIGN KEY (substancePolymer__modificationId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_MonomerSet_extension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_MonomerSet_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_MonomerSet_extensionId)
		REFERENCES substancePolymer_MonomerSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_MonomerSet_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_MonomerSet_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_MonomerSet_modifierExtensionId)
		REFERENCES substancePolymer_MonomerSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_StartingMaterial_extension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_StartingMaterial_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_StartingMaterial_extensionId)
		REFERENCES substancePolymer_StartingMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_StartingMaterial_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_StartingMaterial_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_StartingMaterial_modifierExtensionId)
		REFERENCES substancePolymer_StartingMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_Repeat_extension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_Repeat_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_Repeat_extensionId)
		REFERENCES substancePolymer_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_Repeat_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_Repeat_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_Repeat_modifierExtensionId)
		REFERENCES substancePolymer_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_RepeatUnit_extension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_RepeatUnit_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_RepeatUnit_extensionId)
		REFERENCES substancePolymer_RepeatUnit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_RepeatUnit_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_RepeatUnit_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_RepeatUnit_modifierExtensionId)
		REFERENCES substancePolymer_RepeatUnit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_DegreeOfPolymerisation_extension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_DegreeOfPolymerisation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_DegreeOfPolymerisation_extensionId)
		REFERENCES substancePolymer_DegreeOfPolymerisation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_DegreeOfPolymerisation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_DegreeOfPolymerisation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_DegreeOfPolymerisation_modifierExtensionId)
		REFERENCES substancePolymer_DegreeOfPolymerisation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_StructuralRepresentation_extension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_StructuralRepresentation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_StructuralRepresentation_extensionId)
		REFERENCES substancePolymer_StructuralRepresentation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substancePolymer_StructuralRepresentation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substancePolymer_StructuralRepresentation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substancePolymer_StructuralRepresentation_modifierExtensionId)
		REFERENCES substancePolymer_StructuralRepresentation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceProtein_contained_resourceList(
	id TEXT PRIMARY KEY,
	substanceProtein_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (substanceProtein_containedId)
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceProtein_extension_extension(
	id TEXT PRIMARY KEY,
	substanceProtein_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceProtein_extensionId)
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceProtein_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceProtein_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceProtein_modifierExtensionId)
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceProtein_disulfideLinkage_string(
	id TEXT PRIMARY KEY,
	substanceProtein_disulfideLinkageId TEXT,
	stringId TEXT,

	FOREIGN KEY (substanceProtein_disulfideLinkageId)
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceProtein__disulfideLinkage_element(
	id TEXT PRIMARY KEY,
	substanceProtein__disulfideLinkageId TEXT,
	elementId TEXT,

	FOREIGN KEY (substanceProtein__disulfideLinkageId)
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceProtein_Subunit_extension_extension(
	id TEXT PRIMARY KEY,
	substanceProtein_Subunit_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceProtein_Subunit_extensionId)
		REFERENCES substanceProtein_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceProtein_Subunit_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceProtein_Subunit_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceProtein_Subunit_modifierExtensionId)
		REFERENCES substanceProtein_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_contained_resourceList(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (substanceReferenceInformation_containedId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_extension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_extensionId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_modifierExtensionId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Gene_extension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Gene_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Gene_extensionId)
		REFERENCES substanceReferenceInformation_Gene (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Gene_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Gene_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Gene_modifierExtensionId)
		REFERENCES substanceReferenceInformation_Gene (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Gene_source_reference(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Gene_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Gene_sourceId)
		REFERENCES substanceReferenceInformation_Gene (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_GeneElement_extension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_GeneElement_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_GeneElement_extensionId)
		REFERENCES substanceReferenceInformation_GeneElement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_GeneElement_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_GeneElement_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_GeneElement_modifierExtensionId)
		REFERENCES substanceReferenceInformation_GeneElement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_GeneElement_source_reference(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_GeneElement_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceReferenceInformation_GeneElement_sourceId)
		REFERENCES substanceReferenceInformation_GeneElement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Classification_extension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Classification_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Classification_extensionId)
		REFERENCES substanceReferenceInformation_Classification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Classification_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Classification_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Classification_modifierExtensionId)
		REFERENCES substanceReferenceInformation_Classification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Classification_subtype_codeableConcept(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Classification_subtypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Classification_subtypeId)
		REFERENCES substanceReferenceInformation_Classification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Classification_source_reference(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Classification_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Classification_sourceId)
		REFERENCES substanceReferenceInformation_Classification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Target_extension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Target_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Target_extensionId)
		REFERENCES substanceReferenceInformation_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Target_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Target_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Target_modifierExtensionId)
		REFERENCES substanceReferenceInformation_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceReferenceInformation_Target_source_reference(
	id TEXT PRIMARY KEY,
	substanceReferenceInformation_Target_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceReferenceInformation_Target_sourceId)
		REFERENCES substanceReferenceInformation_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_contained_resourceList(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (substanceSourceMaterial_containedId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_extensionId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_modifierExtensionId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_parentSubstanceId_identifier(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_parentSubstanceIdId TEXT,
	identifierId TEXT,

	FOREIGN KEY (substanceSourceMaterial_parentSubstanceIdId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_parentSubstanceName_string(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_parentSubstanceNameId TEXT,
	stringId TEXT,

	FOREIGN KEY (substanceSourceMaterial_parentSubstanceNameId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial__parentSubstanceName_element(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial__parentSubstanceNameId TEXT,
	elementId TEXT,

	FOREIGN KEY (substanceSourceMaterial__parentSubstanceNameId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_countryOfOrigin_codeableConcept(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_countryOfOriginId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (substanceSourceMaterial_countryOfOriginId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_geographicalLocation_string(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_geographicalLocationId TEXT,
	stringId TEXT,

	FOREIGN KEY (substanceSourceMaterial_geographicalLocationId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial__geographicalLocation_element(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial__geographicalLocationId TEXT,
	elementId TEXT,

	FOREIGN KEY (substanceSourceMaterial__geographicalLocationId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_FractionDescription_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_FractionDescription_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_FractionDescription_extensionId)
		REFERENCES substanceSourceMaterial_FractionDescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_FractionDescription_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_FractionDescription_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_FractionDescription_modifierExtensionId)
		REFERENCES substanceSourceMaterial_FractionDescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_Organism_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_Organism_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_Organism_extensionId)
		REFERENCES substanceSourceMaterial_Organism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_Organism_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_Organism_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_Organism_modifierExtensionId)
		REFERENCES substanceSourceMaterial_Organism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_Author_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_Author_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_Author_extensionId)
		REFERENCES substanceSourceMaterial_Author (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_Author_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_Author_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_Author_modifierExtensionId)
		REFERENCES substanceSourceMaterial_Author (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_Hybrid_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_Hybrid_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_Hybrid_extensionId)
		REFERENCES substanceSourceMaterial_Hybrid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_Hybrid_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_Hybrid_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_Hybrid_modifierExtensionId)
		REFERENCES substanceSourceMaterial_Hybrid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_OrganismGeneral_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_OrganismGeneral_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_OrganismGeneral_extensionId)
		REFERENCES substanceSourceMaterial_OrganismGeneral (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_OrganismGeneral_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_OrganismGeneral_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_OrganismGeneral_modifierExtensionId)
		REFERENCES substanceSourceMaterial_OrganismGeneral (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_PartDescription_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_PartDescription_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_PartDescription_extensionId)
		REFERENCES substanceSourceMaterial_PartDescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSourceMaterial_PartDescription_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSourceMaterial_PartDescription_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSourceMaterial_PartDescription_modifierExtensionId)
		REFERENCES substanceSourceMaterial_PartDescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_contained_resourceList(
	id TEXT PRIMARY KEY,
	substanceSpecification_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (substanceSpecification_containedId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_extensionId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_modifierExtensionId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_source_reference(
	id TEXT PRIMARY KEY,
	substanceSpecification_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceSpecification_sourceId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_name_substanceSpecification_Name(
	id TEXT PRIMARY KEY,
	substanceSpecification_nameId TEXT,
	substanceSpecification_NameId TEXT,

	FOREIGN KEY (substanceSpecification_nameId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_NameId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Moiety_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Moiety_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Moiety_extensionId)
		REFERENCES substanceSpecification_Moiety (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Moiety_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Moiety_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Moiety_modifierExtensionId)
		REFERENCES substanceSpecification_Moiety (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Property_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Property_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Property_extensionId)
		REFERENCES substanceSpecification_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Property_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Property_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Property_modifierExtensionId)
		REFERENCES substanceSpecification_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Structure_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Structure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Structure_extensionId)
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Structure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Structure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Structure_modifierExtensionId)
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Structure_source_reference(
	id TEXT PRIMARY KEY,
	substanceSpecification_Structure_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceSpecification_Structure_sourceId)
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Isotope_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Isotope_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Isotope_extensionId)
		REFERENCES substanceSpecification_Isotope (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Isotope_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Isotope_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Isotope_modifierExtensionId)
		REFERENCES substanceSpecification_Isotope (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_MolecularWeight_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_MolecularWeight_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_MolecularWeight_extensionId)
		REFERENCES substanceSpecification_MolecularWeight (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_MolecularWeight_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_MolecularWeight_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_MolecularWeight_modifierExtensionId)
		REFERENCES substanceSpecification_MolecularWeight (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Representation_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Representation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Representation_extensionId)
		REFERENCES substanceSpecification_Representation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Representation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Representation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Representation_modifierExtensionId)
		REFERENCES substanceSpecification_Representation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Code_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Code_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Code_extensionId)
		REFERENCES substanceSpecification_Code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Code_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Code_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Code_modifierExtensionId)
		REFERENCES substanceSpecification_Code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Code_source_reference(
	id TEXT PRIMARY KEY,
	substanceSpecification_Code_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceSpecification_Code_sourceId)
		REFERENCES substanceSpecification_Code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Name_extensionId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Name_modifierExtensionId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_language_codeableConcept(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_languageId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (substanceSpecification_Name_languageId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_domain_codeableConcept(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_domainId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (substanceSpecification_Name_domainId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (substanceSpecification_Name_jurisdictionId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_synonym_substanceSpecification_Name(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_synonymId TEXT,
	substanceSpecification_NameId TEXT,

	FOREIGN KEY (substanceSpecification_Name_synonymId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_NameId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_translation_substanceSpecification_Name(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_translationId TEXT,
	substanceSpecification_NameId TEXT,

	FOREIGN KEY (substanceSpecification_Name_translationId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_NameId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Name_source_reference(
	id TEXT PRIMARY KEY,
	substanceSpecification_Name_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceSpecification_Name_sourceId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Official_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Official_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Official_extensionId)
		REFERENCES substanceSpecification_Official (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Official_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Official_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Official_modifierExtensionId)
		REFERENCES substanceSpecification_Official (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Relationship_extension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Relationship_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Relationship_extensionId)
		REFERENCES substanceSpecification_Relationship (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Relationship_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	substanceSpecification_Relationship_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (substanceSpecification_Relationship_modifierExtensionId)
		REFERENCES substanceSpecification_Relationship (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE substanceSpecification_Relationship_source_reference(
	id TEXT PRIMARY KEY,
	substanceSpecification_Relationship_sourceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (substanceSpecification_Relationship_sourceId)
		REFERENCES substanceSpecification_Relationship (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_contained_resourceList(
	id TEXT PRIMARY KEY,
	supplyDelivery_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (supplyDelivery_containedId)
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_extension_extension(
	id TEXT PRIMARY KEY,
	supplyDelivery_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyDelivery_extensionId)
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	supplyDelivery_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyDelivery_modifierExtensionId)
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_identifier_identifier(
	id TEXT PRIMARY KEY,
	supplyDelivery_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (supplyDelivery_identifierId)
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_basedOn_reference(
	id TEXT PRIMARY KEY,
	supplyDelivery_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (supplyDelivery_basedOnId)
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_partOf_reference(
	id TEXT PRIMARY KEY,
	supplyDelivery_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (supplyDelivery_partOfId)
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_receiver_reference(
	id TEXT PRIMARY KEY,
	supplyDelivery_receiverId TEXT,
	referenceId TEXT,

	FOREIGN KEY (supplyDelivery_receiverId)
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_SuppliedItem_extension_extension(
	id TEXT PRIMARY KEY,
	supplyDelivery_SuppliedItem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyDelivery_SuppliedItem_extensionId)
		REFERENCES supplyDelivery_SuppliedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyDelivery_SuppliedItem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	supplyDelivery_SuppliedItem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyDelivery_SuppliedItem_modifierExtensionId)
		REFERENCES supplyDelivery_SuppliedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_contained_resourceList(
	id TEXT PRIMARY KEY,
	supplyRequest_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (supplyRequest_containedId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_extension_extension(
	id TEXT PRIMARY KEY,
	supplyRequest_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyRequest_extensionId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	supplyRequest_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyRequest_modifierExtensionId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_identifier_identifier(
	id TEXT PRIMARY KEY,
	supplyRequest_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (supplyRequest_identifierId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_supplier_reference(
	id TEXT PRIMARY KEY,
	supplyRequest_supplierId TEXT,
	referenceId TEXT,

	FOREIGN KEY (supplyRequest_supplierId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_reasonCode_codeableConcept(
	id TEXT PRIMARY KEY,
	supplyRequest_reasonCodeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (supplyRequest_reasonCodeId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_reasonReference_reference(
	id TEXT PRIMARY KEY,
	supplyRequest_reasonReferenceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (supplyRequest_reasonReferenceId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	supplyRequest_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyRequest_Parameter_extensionId)
		REFERENCES supplyRequest_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE supplyRequest_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	supplyRequest_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (supplyRequest_Parameter_modifierExtensionId)
		REFERENCES supplyRequest_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_contained_resourceList(
	id TEXT PRIMARY KEY,
	task_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (task_containedId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_extension_extension(
	id TEXT PRIMARY KEY,
	task_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_extensionId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	task_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_modifierExtensionId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_identifier_identifier(
	id TEXT PRIMARY KEY,
	task_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (task_identifierId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_basedOn_reference(
	id TEXT PRIMARY KEY,
	task_basedOnId TEXT,
	referenceId TEXT,

	FOREIGN KEY (task_basedOnId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_partOf_reference(
	id TEXT PRIMARY KEY,
	task_partOfId TEXT,
	referenceId TEXT,

	FOREIGN KEY (task_partOfId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_performerType_codeableConcept(
	id TEXT PRIMARY KEY,
	task_performerTypeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (task_performerTypeId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_insurance_reference(
	id TEXT PRIMARY KEY,
	task_insuranceId TEXT,
	referenceId TEXT,

	FOREIGN KEY (task_insuranceId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_note_annotation(
	id TEXT PRIMARY KEY,
	task_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (task_noteId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_relevantHistory_reference(
	id TEXT PRIMARY KEY,
	task_relevantHistoryId TEXT,
	referenceId TEXT,

	FOREIGN KEY (task_relevantHistoryId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_Restriction_extension_extension(
	id TEXT PRIMARY KEY,
	task_Restriction_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_Restriction_extensionId)
		REFERENCES task_Restriction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_Restriction_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	task_Restriction_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_Restriction_modifierExtensionId)
		REFERENCES task_Restriction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_Restriction_recipient_reference(
	id TEXT PRIMARY KEY,
	task_Restriction_recipientId TEXT,
	referenceId TEXT,

	FOREIGN KEY (task_Restriction_recipientId)
		REFERENCES task_Restriction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_Input_extension_extension(
	id TEXT PRIMARY KEY,
	task_Input_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_Input_extensionId)
		REFERENCES task_Input (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_Input_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	task_Input_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_Input_modifierExtensionId)
		REFERENCES task_Input (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_Output_extension_extension(
	id TEXT PRIMARY KEY,
	task_Output_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_Output_extensionId)
		REFERENCES task_Output (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE task_Output_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	task_Output_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (task_Output_modifierExtensionId)
		REFERENCES task_Output (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_contained_resourceList(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (terminologyCapabilities_containedId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_extensionId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_modifierExtensionId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_contact_contactDetail(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (terminologyCapabilities_contactId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_useContext_usageContext(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (terminologyCapabilities_useContextId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (terminologyCapabilities_jurisdictionId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Software_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Software_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Software_extensionId)
		REFERENCES terminologyCapabilities_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Software_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Software_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Software_modifierExtensionId)
		REFERENCES terminologyCapabilities_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Implementation_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Implementation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Implementation_extensionId)
		REFERENCES terminologyCapabilities_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Implementation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Implementation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Implementation_modifierExtensionId)
		REFERENCES terminologyCapabilities_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_CodeSystem_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_CodeSystem_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_CodeSystem_extensionId)
		REFERENCES terminologyCapabilities_CodeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_CodeSystem_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_CodeSystem_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_CodeSystem_modifierExtensionId)
		REFERENCES terminologyCapabilities_CodeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Version_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Version_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Version_extensionId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Version_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Version_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Version_modifierExtensionId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Version_language_code(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Version_languageId TEXT,
	codeId TEXT,

	FOREIGN KEY (terminologyCapabilities_Version_languageId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Version__language_element(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Version__languageId TEXT,
	elementId TEXT,

	FOREIGN KEY (terminologyCapabilities_Version__languageId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Version_property_code(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Version_propertyId TEXT,
	codeId TEXT,

	FOREIGN KEY (terminologyCapabilities_Version_propertyId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Version__property_element(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Version__propertyId TEXT,
	elementId TEXT,

	FOREIGN KEY (terminologyCapabilities_Version__propertyId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Filter_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Filter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Filter_extensionId)
		REFERENCES terminologyCapabilities_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Filter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Filter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Filter_modifierExtensionId)
		REFERENCES terminologyCapabilities_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Filter_op_code(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Filter_opId TEXT,
	codeId TEXT,

	FOREIGN KEY (terminologyCapabilities_Filter_opId)
		REFERENCES terminologyCapabilities_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeId)
		REFERENCES "code" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Filter__op_element(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Filter__opId TEXT,
	elementId TEXT,

	FOREIGN KEY (terminologyCapabilities_Filter__opId)
		REFERENCES terminologyCapabilities_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Expansion_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Expansion_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Expansion_extensionId)
		REFERENCES terminologyCapabilities_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Expansion_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Expansion_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Expansion_modifierExtensionId)
		REFERENCES terminologyCapabilities_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Parameter_extensionId)
		REFERENCES terminologyCapabilities_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Parameter_modifierExtensionId)
		REFERENCES terminologyCapabilities_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_ValidateCode_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_ValidateCode_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_ValidateCode_extensionId)
		REFERENCES terminologyCapabilities_ValidateCode (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_ValidateCode_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_ValidateCode_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_ValidateCode_modifierExtensionId)
		REFERENCES terminologyCapabilities_ValidateCode (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Translation_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Translation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Translation_extensionId)
		REFERENCES terminologyCapabilities_Translation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Translation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Translation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Translation_modifierExtensionId)
		REFERENCES terminologyCapabilities_Translation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Closure_extension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Closure_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Closure_extensionId)
		REFERENCES terminologyCapabilities_Closure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE terminologyCapabilities_Closure_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	terminologyCapabilities_Closure_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (terminologyCapabilities_Closure_modifierExtensionId)
		REFERENCES terminologyCapabilities_Closure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_contained_resourceList(
	id TEXT PRIMARY KEY,
	testReport_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (testReport_containedId)
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_extensionId)
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_modifierExtensionId)
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Participant_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Participant_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Participant_extensionId)
		REFERENCES testReport_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Participant_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Participant_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Participant_modifierExtensionId)
		REFERENCES testReport_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Setup_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Setup_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Setup_extensionId)
		REFERENCES testReport_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Setup_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Setup_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Setup_modifierExtensionId)
		REFERENCES testReport_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Action_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Action_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Action_extensionId)
		REFERENCES testReport_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Action_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Action_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Action_modifierExtensionId)
		REFERENCES testReport_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Operation_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Operation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Operation_extensionId)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Operation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Operation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Operation_modifierExtensionId)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Assert_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Assert_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Assert_extensionId)
		REFERENCES testReport_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Assert_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Assert_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Assert_modifierExtensionId)
		REFERENCES testReport_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Test_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Test_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Test_extensionId)
		REFERENCES testReport_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Test_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Test_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Test_modifierExtensionId)
		REFERENCES testReport_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Action1_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Action1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Action1_extensionId)
		REFERENCES testReport_Action1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Action1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Action1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Action1_modifierExtensionId)
		REFERENCES testReport_Action1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Teardown_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Teardown_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Teardown_extensionId)
		REFERENCES testReport_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Teardown_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Teardown_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Teardown_modifierExtensionId)
		REFERENCES testReport_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Action2_extension_extension(
	id TEXT PRIMARY KEY,
	testReport_Action2_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Action2_extensionId)
		REFERENCES testReport_Action2 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testReport_Action2_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testReport_Action2_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testReport_Action2_modifierExtensionId)
		REFERENCES testReport_Action2 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_contained_resourceList(
	id TEXT PRIMARY KEY,
	testScript_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (testScript_containedId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_extensionId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_modifierExtensionId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_contact_contactDetail(
	id TEXT PRIMARY KEY,
	testScript_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (testScript_contactId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_useContext_usageContext(
	id TEXT PRIMARY KEY,
	testScript_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (testScript_useContextId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	testScript_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (testScript_jurisdictionId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_profile_reference(
	id TEXT PRIMARY KEY,
	testScript_profileId TEXT,
	referenceId TEXT,

	FOREIGN KEY (testScript_profileId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Origin_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Origin_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Origin_extensionId)
		REFERENCES testScript_Origin (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Origin_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Origin_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Origin_modifierExtensionId)
		REFERENCES testScript_Origin (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Destination_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Destination_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Destination_extensionId)
		REFERENCES testScript_Destination (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Destination_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Destination_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Destination_modifierExtensionId)
		REFERENCES testScript_Destination (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Metadata_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Metadata_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Metadata_extensionId)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Metadata_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Metadata_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Metadata_modifierExtensionId)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Link_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Link_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Link_extensionId)
		REFERENCES testScript_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Link_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Link_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Link_modifierExtensionId)
		REFERENCES testScript_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Capability_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Capability_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Capability_extensionId)
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Capability_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Capability_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Capability_modifierExtensionId)
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Capability_origin_integer(
	id TEXT PRIMARY KEY,
	testScript_Capability_originId TEXT,
	integerId TEXT,

	FOREIGN KEY (testScript_Capability_originId)
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (integerId)
		REFERENCES integer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Capability__origin_element(
	id TEXT PRIMARY KEY,
	testScript_Capability__originId TEXT,
	elementId TEXT,

	FOREIGN KEY (testScript_Capability__originId)
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Capability_link_uri(
	id TEXT PRIMARY KEY,
	testScript_Capability_linkId TEXT,
	uriId TEXT,

	FOREIGN KEY (testScript_Capability_linkId)
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Capability__link_element(
	id TEXT PRIMARY KEY,
	testScript_Capability__linkId TEXT,
	elementId TEXT,

	FOREIGN KEY (testScript_Capability__linkId)
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Fixture_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Fixture_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Fixture_extensionId)
		REFERENCES testScript_Fixture (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Fixture_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Fixture_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Fixture_modifierExtensionId)
		REFERENCES testScript_Fixture (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Variable_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Variable_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Variable_extensionId)
		REFERENCES testScript_Variable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Variable_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Variable_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Variable_modifierExtensionId)
		REFERENCES testScript_Variable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Setup_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Setup_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Setup_extensionId)
		REFERENCES testScript_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Setup_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Setup_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Setup_modifierExtensionId)
		REFERENCES testScript_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Action_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Action_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Action_extensionId)
		REFERENCES testScript_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Action_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Action_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Action_modifierExtensionId)
		REFERENCES testScript_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Operation_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Operation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Operation_extensionId)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Operation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Operation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Operation_modifierExtensionId)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_RequestHeader_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_RequestHeader_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_RequestHeader_extensionId)
		REFERENCES testScript_RequestHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_RequestHeader_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_RequestHeader_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_RequestHeader_modifierExtensionId)
		REFERENCES testScript_RequestHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Assert_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Assert_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Assert_extensionId)
		REFERENCES testScript_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Assert_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Assert_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Assert_modifierExtensionId)
		REFERENCES testScript_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Test_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Test_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Test_extensionId)
		REFERENCES testScript_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Test_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Test_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Test_modifierExtensionId)
		REFERENCES testScript_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Action1_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Action1_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Action1_extensionId)
		REFERENCES testScript_Action1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Action1_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Action1_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Action1_modifierExtensionId)
		REFERENCES testScript_Action1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Teardown_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Teardown_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Teardown_extensionId)
		REFERENCES testScript_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Teardown_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Teardown_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Teardown_modifierExtensionId)
		REFERENCES testScript_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Action2_extension_extension(
	id TEXT PRIMARY KEY,
	testScript_Action2_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Action2_extensionId)
		REFERENCES testScript_Action2 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE testScript_Action2_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	testScript_Action2_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (testScript_Action2_modifierExtensionId)
		REFERENCES testScript_Action2 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_contained_resourceList(
	id TEXT PRIMARY KEY,
	valueSet_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (valueSet_containedId)
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_extensionId)
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_modifierExtensionId)
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_identifier_identifier(
	id TEXT PRIMARY KEY,
	valueSet_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (valueSet_identifierId)
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_contact_contactDetail(
	id TEXT PRIMARY KEY,
	valueSet_contactId TEXT,
	contactDetailId TEXT,

	FOREIGN KEY (valueSet_contactId)
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_useContext_usageContext(
	id TEXT PRIMARY KEY,
	valueSet_useContextId TEXT,
	usageContextId TEXT,

	FOREIGN KEY (valueSet_useContextId)
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_jurisdiction_codeableConcept(
	id TEXT PRIMARY KEY,
	valueSet_jurisdictionId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (valueSet_jurisdictionId)
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Compose_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Compose_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Compose_extensionId)
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Compose_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Compose_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Compose_modifierExtensionId)
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Compose_include_valueSet_Include(
	id TEXT PRIMARY KEY,
	valueSet_Compose_includeId TEXT,
	valueSet_IncludeId TEXT,

	FOREIGN KEY (valueSet_Compose_includeId)
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_IncludeId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Compose_exclude_valueSet_Include(
	id TEXT PRIMARY KEY,
	valueSet_Compose_excludeId TEXT,
	valueSet_IncludeId TEXT,

	FOREIGN KEY (valueSet_Compose_excludeId)
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_IncludeId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Include_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Include_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Include_extensionId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Include_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Include_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Include_modifierExtensionId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Include_valueSet_canonical(
	id TEXT PRIMARY KEY,
	valueSet_Include_valueSetId TEXT,
	canonicalId TEXT,

	FOREIGN KEY (valueSet_Include_valueSetId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Concept_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Concept_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Concept_extensionId)
		REFERENCES valueSet_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Concept_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Concept_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Concept_modifierExtensionId)
		REFERENCES valueSet_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Concept_designation_valueSet_Designation(
	id TEXT PRIMARY KEY,
	valueSet_Concept_designationId TEXT,
	valueSet_DesignationId TEXT,

	FOREIGN KEY (valueSet_Concept_designationId)
		REFERENCES valueSet_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_DesignationId)
		REFERENCES valueSet_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Designation_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Designation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Designation_extensionId)
		REFERENCES valueSet_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Designation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Designation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Designation_modifierExtensionId)
		REFERENCES valueSet_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Filter_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Filter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Filter_extensionId)
		REFERENCES valueSet_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Filter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Filter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Filter_modifierExtensionId)
		REFERENCES valueSet_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Expansion_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Expansion_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Expansion_extensionId)
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Expansion_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Expansion_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Expansion_modifierExtensionId)
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Expansion_contains_valueSet_Contains(
	id TEXT PRIMARY KEY,
	valueSet_Expansion_containsId TEXT,
	valueSet_ContainsId TEXT,

	FOREIGN KEY (valueSet_Expansion_containsId)
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ContainsId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Parameter_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Parameter_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Parameter_extensionId)
		REFERENCES valueSet_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Parameter_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Parameter_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Parameter_modifierExtensionId)
		REFERENCES valueSet_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Contains_extension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Contains_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Contains_extensionId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Contains_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	valueSet_Contains_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (valueSet_Contains_modifierExtensionId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Contains_designation_valueSet_Designation(
	id TEXT PRIMARY KEY,
	valueSet_Contains_designationId TEXT,
	valueSet_DesignationId TEXT,

	FOREIGN KEY (valueSet_Contains_designationId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_DesignationId)
		REFERENCES valueSet_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE valueSet_Contains_contains_valueSet_Contains(
	id TEXT PRIMARY KEY,
	valueSet_Contains_containsId TEXT,
	valueSet_ContainsId TEXT,

	FOREIGN KEY (valueSet_Contains_containsId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ContainsId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_contained_resourceList(
	id TEXT PRIMARY KEY,
	verificationResult_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (verificationResult_containedId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_extension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_extensionId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_modifierExtensionId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_target_reference(
	id TEXT PRIMARY KEY,
	verificationResult_targetId TEXT,
	referenceId TEXT,

	FOREIGN KEY (verificationResult_targetId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_targetLocation_string(
	id TEXT PRIMARY KEY,
	verificationResult_targetLocationId TEXT,
	stringId TEXT,

	FOREIGN KEY (verificationResult_targetLocationId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult__targetLocation_element(
	id TEXT PRIMARY KEY,
	verificationResult__targetLocationId TEXT,
	elementId TEXT,

	FOREIGN KEY (verificationResult__targetLocationId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_validationProcess_codeableConcept(
	id TEXT PRIMARY KEY,
	verificationResult_validationProcessId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (verificationResult_validationProcessId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_PrimarySource_extension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_PrimarySource_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_PrimarySource_extensionId)
		REFERENCES verificationResult_PrimarySource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_PrimarySource_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_PrimarySource_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_PrimarySource_modifierExtensionId)
		REFERENCES verificationResult_PrimarySource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_PrimarySource_type_codeableConcept(
	id TEXT PRIMARY KEY,
	verificationResult_PrimarySource_typeId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (verificationResult_PrimarySource_typeId)
		REFERENCES verificationResult_PrimarySource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_PrimarySource_communicationMethod_codeableConcept(
	id TEXT PRIMARY KEY,
	verificationResult_PrimarySource_communicationMethodId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (verificationResult_PrimarySource_communicationMethodId)
		REFERENCES verificationResult_PrimarySource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_PrimarySource_pushTypeAvailable_codeableConcept(
	id TEXT PRIMARY KEY,
	verificationResult_PrimarySource_pushTypeAvailableId TEXT,
	codeableConceptId TEXT,

	FOREIGN KEY (verificationResult_PrimarySource_pushTypeAvailableId)
		REFERENCES verificationResult_PrimarySource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_Attestation_extension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_Attestation_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_Attestation_extensionId)
		REFERENCES verificationResult_Attestation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_Attestation_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_Attestation_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_Attestation_modifierExtensionId)
		REFERENCES verificationResult_Attestation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_Validator_extension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_Validator_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_Validator_extensionId)
		REFERENCES verificationResult_Validator (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE verificationResult_Validator_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	verificationResult_Validator_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (verificationResult_Validator_modifierExtensionId)
		REFERENCES verificationResult_Validator (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_contained_resourceList(
	id TEXT PRIMARY KEY,
	visionPrescription_containedId TEXT,
	resourceListId TEXT,

	FOREIGN KEY (visionPrescription_containedId)
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_extension_extension(
	id TEXT PRIMARY KEY,
	visionPrescription_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (visionPrescription_extensionId)
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	visionPrescription_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (visionPrescription_modifierExtensionId)
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_identifier_identifier(
	id TEXT PRIMARY KEY,
	visionPrescription_identifierId TEXT,
	identifierId TEXT,

	FOREIGN KEY (visionPrescription_identifierId)
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_LensSpecification_extension_extension(
	id TEXT PRIMARY KEY,
	visionPrescription_LensSpecification_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (visionPrescription_LensSpecification_extensionId)
		REFERENCES visionPrescription_LensSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_LensSpecification_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	visionPrescription_LensSpecification_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (visionPrescription_LensSpecification_modifierExtensionId)
		REFERENCES visionPrescription_LensSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_LensSpecification_note_annotation(
	id TEXT PRIMARY KEY,
	visionPrescription_LensSpecification_noteId TEXT,
	annotationId TEXT,

	FOREIGN KEY (visionPrescription_LensSpecification_noteId)
		REFERENCES visionPrescription_LensSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_Prism_extension_extension(
	id TEXT PRIMARY KEY,
	visionPrescription_Prism_extensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (visionPrescription_Prism_extensionId)
		REFERENCES visionPrescription_Prism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE visionPrescription_Prism_modifierExtension_extension(
	id TEXT PRIMARY KEY,
	visionPrescription_Prism_modifierExtensionId TEXT,
	extensionId TEXT,

	FOREIGN KEY (visionPrescription_Prism_modifierExtensionId)
		REFERENCES visionPrescription_Prism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
);

CREATE TABLE timing_Repeat_When_enum(
	id TEXT PRIMARY KEY,
	timing_RepeatId TEXT,
	enum TEXT CHECK( enum IN ('MORN','MORN.early','MORN.late','NOON','AFT','AFT.early','AFT.late','EVE','EVE.early','EVE.late','NIGHT','PHS','HS','WAKE','C','CM','CD','CV','AC','ACM','ACD','ACV','PC','PCM','PCD','PCV') ),

	FOREIGN KEY (timing_RepeatId)
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE elementDefinition_Representation_enum(
	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT,
	enum TEXT CHECK( enum IN ('xmlAttr','xmlText','typeAttr','cdaText','xhtml') ),

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE elementDefinition_Type_Aggregation_enum(
	id TEXT PRIMARY KEY,
	elementDefinition_TypeId TEXT,
	enum TEXT CHECK( enum IN ('contained','referenced','bundled') ),

	FOREIGN KEY (elementDefinition_TypeId)
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE allergyIntolerance_Category_enum(
	id TEXT PRIMARY KEY,
	allergyIntoleranceId TEXT,
	enum TEXT CHECK( enum IN ('food','medication','environment','biologic') ),

	FOREIGN KEY (allergyIntoleranceId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE capabilityStatement_Resource_ReferencePolicy_enum(
	id TEXT PRIMARY KEY,
	capabilityStatement_ResourceId TEXT,
	enum TEXT CHECK( enum IN ('literal','logical','resolves','enforced','local') ),

	FOREIGN KEY (capabilityStatement_ResourceId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coverageEligibilityRequest_Purpose_enum(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequestId TEXT,
	enum TEXT CHECK( enum IN ('auth-requirements','benefits','discovery','validation') ),

	FOREIGN KEY (coverageEligibilityRequestId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coverageEligibilityResponse_Purpose_enum(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponseId TEXT,
	enum TEXT CHECK( enum IN ('auth-requirements','benefits','discovery','validation') ),

	FOREIGN KEY (coverageEligibilityResponseId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE healthcareService_AvailableTime_DaysOfWeek_enum(
	id TEXT PRIMARY KEY,
	healthcareService_AvailableTimeId TEXT,
	enum TEXT CHECK( enum IN ('mon','tue','wed','thu','fri','sat','sun') ),

	FOREIGN KEY (healthcareService_AvailableTimeId)
		REFERENCES healthcareService_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE implementationGuide_FhirVersion_enum(
	id TEXT PRIMARY KEY,
	implementationGuideId TEXT,
	enum TEXT CHECK( enum IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),

	FOREIGN KEY (implementationGuideId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE implementationGuide_Resource_FhirVersion_enum(
	id TEXT PRIMARY KEY,
	implementationGuide_ResourceId TEXT,
	enum TEXT CHECK( enum IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),

	FOREIGN KEY (implementationGuide_ResourceId)
		REFERENCES implementationGuide_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE observationDefinition_PermittedDataType_enum(
	id TEXT PRIMARY KEY,
	observationDefinitionId TEXT,
	enum TEXT CHECK( enum IN ('Quantity','CodeableConcept','string','boolean','integer','Range','Ratio','SampledData','time','dateTime','Period') ),

	FOREIGN KEY (observationDefinitionId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE searchParameter_Comparator_enum(
	id TEXT PRIMARY KEY,
	searchParameterId TEXT,
	enum TEXT CHECK( enum IN ('eq','ne','gt','lt','ge','le','sa','eb','ap') ),

	FOREIGN KEY (searchParameterId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE searchParameter_Modifier_enum(
	id TEXT PRIMARY KEY,
	searchParameterId TEXT,
	enum TEXT CHECK( enum IN ('missing','exact','contains','not','text','in','not-in','below','above','type','identifier','ofType') ),

	FOREIGN KEY (searchParameterId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE structureMap_Target_ListMode_enum(
	id TEXT PRIMARY KEY,
	structureMap_TargetId TEXT,
	enum TEXT CHECK( enum IN ('first','share','last','collate') ),

	FOREIGN KEY (structureMap_TargetId)
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

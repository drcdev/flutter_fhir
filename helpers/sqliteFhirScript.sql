CREATE TABLE element(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: element__extension

);

CREATE TABLE extension(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: extension__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE narrative(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: narrative__extension
	"status" TEXT CHECK( "status" IN ('generated','extensions','additional','empty') ),
	_status TEXT, -- Foreign Key to element table
	div TEXT,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE annotation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: annotation__extension
	authorReference TEXT, -- Foreign Key to reference table
	authorString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_authorString TEXT, -- Foreign Key to element table
	"time" DATETIME,
	_time TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (authorReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_time)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE attachment(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: attachment__extension
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"size" INTEGER,
	_size TEXT, -- Foreign Key to element table
	"hash" TEXT,
	_hash TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	creation DATETIME,
	_creation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_size)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_hash)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_creation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE identifier(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: identifier__extension
	"use" TEXT CHECK( "use" IN ('usual','official','temp','secondary','old') ),
	_use TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	assigner TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assigner)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeableConcept(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeableConcept__extension
	coding BOOLEAN, -- true if 1+ item is referenced from bridge table: codeableConcept__coding
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coding(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coding__extension
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	userSelected BOOLEAN,
	_userSelected TEXT, -- Foreign Key to element table

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_userSelected)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE quantity(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: quantity__extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE duration(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: duration__extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE distance(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: distance__extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "count"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: count__extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE money(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: money__extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	currency TEXT,
	_currency TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_currency)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE age(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: age__extension
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	comparator TEXT CHECK( comparator IN ('<','<=','>=','>') ),
	_comparator TEXT, -- Foreign Key to element table
	unit TEXT,
	_unit TEXT, -- Foreign Key to element table
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comparator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_unit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "range"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: range__extension
	low TEXT, -- Foreign Key to quantity table
	high TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (low)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (high)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "period"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: period__extension
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE ratio(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: ratio__extension
	numerator TEXT, -- Foreign Key to quantity table
	denominator TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (numerator)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (denominator)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE reference(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: reference__extension
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	display TEXT,
	_display TEXT, -- Foreign Key to element table

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE sampledData(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: sampledData__extension
	origin TEXT, -- Foreign Key to quantity table
	"period" REAL,
	_period TEXT, -- Foreign Key to element table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	lowerLimit REAL,
	_lowerLimit TEXT, -- Foreign Key to element table
	upperLimit REAL,
	_upperLimit TEXT, -- Foreign Key to element table
	dimensions INTEGER,
	_dimensions TEXT, -- Foreign Key to element table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table

	FOREIGN KEY (origin)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_period)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lowerLimit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_upperLimit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dimensions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "signature"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: signature__extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: signature__coding
	"when" DATETIME,
	_when TEXT, -- Foreign Key to element table
	who TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table
	targetFormat TEXT,
	_targetFormat TEXT, -- Foreign Key to element table
	sigFormat TEXT,
	_sigFormat TEXT, -- Foreign Key to element table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table

	FOREIGN KEY (_when)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetFormat)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sigFormat)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE humanName(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__extension
	"use" TEXT CHECK( "use" IN ('usual','official','temp','nickname','anonymous','old','maiden') ),
	_use TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	family TEXT,
	_family TEXT, -- Foreign Key to element table
	given BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__string
	_given BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__element
	prefix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__string
	_prefix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__element
	suffix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__string
	_suffix BOOLEAN, -- true if 1+ item is referenced from bridge table: humanName__element
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_family)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "address"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: address__extension
	"use" TEXT CHECK( "use" IN ('home','work','temp','old','billing') ),
	_use TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('postal','physical','both') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"line" BOOLEAN, -- true if 1+ item is referenced from bridge table: address__string
	_line BOOLEAN, -- true if 1+ item is referenced from bridge table: address__element
	city TEXT,
	_city TEXT, -- Foreign Key to element table
	district TEXT,
	_district TEXT, -- Foreign Key to element table
	"state" TEXT,
	_state TEXT, -- Foreign Key to element table
	postalCode TEXT,
	_postalCode TEXT, -- Foreign Key to element table
	country TEXT,
	_country TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_city)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_district)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_state)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_postalCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_country)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contactPoint(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contactPoint__extension
	"system" TEXT CHECK( "system" IN ('phone','fax','email','pager','url','sms','other') ),
	_system TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	"use" TEXT CHECK( "use" IN ('home','work','temp','old','mobile') ),
	_use TEXT, -- Foreign Key to element table
	"rank" INTEGER,
	_rank TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rank)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE timing(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing__extension
	"event" BOOLEAN, -- true if 1+ rows in dateTime correspond to this entry
	_event BOOLEAN, -- true if 1+ item is referenced from bridge table: timing__element
	"repeat" TEXT, -- Foreign Key to timing_Repeat table
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY ("repeat")
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE timing_Repeat(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__extension
	boundsDuration TEXT, -- Foreign Key to duration table
	boundsRange TEXT, -- Foreign Key to range table
	boundsPeriod TEXT, -- Foreign Key to period table
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	countMax INTEGER,
	_countMax TEXT, -- Foreign Key to element table
	duration REAL,
	_duration TEXT, -- Foreign Key to element table
	durationMax REAL,
	_durationMax TEXT, -- Foreign Key to element table
	durationUnit TEXT CHECK( durationUnit IN ('s','min','h','d','wk','mo','a') ),
	_durationUnit TEXT, -- Foreign Key to element table
	frequency INTEGER,
	_frequency TEXT, -- Foreign Key to element table
	frequencyMax INTEGER,
	_frequencyMax TEXT, -- Foreign Key to element table
	"period" REAL,
	_period TEXT, -- Foreign Key to element table
	periodMax REAL,
	_periodMax TEXT, -- Foreign Key to element table
	periodUnit TEXT CHECK( periodUnit IN ('s','min','h','d','wk','mo','a') ),
	_periodUnit TEXT, -- Foreign Key to element table
	dayOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__code
	_dayOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__element
	timeOfDay BOOLEAN, -- true if 1+ rows in time correspond to this entry
	_timeOfDay BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__element
	"when" BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: MORN/MORN.early/MORN.late/NOON/AFT/AFT.early/AFT.late/EVE/EVE.early/EVE.late/NIGHT/PHS/HS/WAKE/C/CM/CD/CV/AC/ACM/ACD/ACV/PC/PCM/PCD/PCV,
	_when BOOLEAN, -- true if 1+ item is referenced from bridge table: timing_Repeat__element
	offset INTEGER,
	_offset TEXT, -- Foreign Key to element table

	FOREIGN KEY (boundsDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (boundsRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (boundsPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_countMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_duration)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_durationMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_durationUnit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_frequency)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_frequencyMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_period)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_periodMax)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_periodUnit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_offset)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE meta(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: meta__extension
	versionId TEXT, -- Foreign Key to id table
	_versionId TEXT, -- Foreign Key to element table
	lastUpdated DATETIME,
	_lastUpdated TEXT, -- Foreign Key to element table
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: meta__canonical
	"security" BOOLEAN, -- true if 1+ item is referenced from bridge table: meta__coding
	tag BOOLEAN, -- true if 1+ item is referenced from bridge table: meta__coding

	FOREIGN KEY (versionId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastUpdated)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contactDetail(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contactDetail__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: contactDetail__contactPoint

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contributor(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contributor__extension
	"type" TEXT CHECK( "type" IN ('author','editor','reviewer','endorser') ),
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: contributor__contactDetail

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement__extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement__canonical
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	mustSupport BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement__string
	_mustSupport BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement__element
	codeFilter BOOLEAN, -- true if 1+ rows in DataRequirement_CodeFilter correspond to this entry
	dateFilter BOOLEAN, -- true if 1+ rows in DataRequirement_DateFilter correspond to this entry
	"limit" INTEGER,
	_limit TEXT, -- Foreign Key to element table
	sort BOOLEAN, -- true if 1+ rows in DataRequirement_Sort correspond to this entry

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_limit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement_CodeFilter(

	id TEXT PRIMARY KEY,
	dataRequirementId TEXT, -- Foreign Key to dataRequirement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_CodeFilter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_CodeFilter__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	searchParam TEXT,
	_searchParam TEXT, -- Foreign Key to element table
	valueSet TEXT,
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_CodeFilter__coding

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_searchParam)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement_DateFilter(

	id TEXT PRIMARY KEY,
	dataRequirementId TEXT, -- Foreign Key to dataRequirement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_DateFilter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_DateFilter__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	searchParam TEXT,
	_searchParam TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valuePeriod TEXT, -- Foreign Key to period table
	valueDuration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_searchParam)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dataRequirement_Sort(

	id TEXT PRIMARY KEY,
	dataRequirementId TEXT, -- Foreign Key to dataRequirement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_Sort__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dataRequirement_Sort__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	direction TEXT CHECK( direction IN ('ascending','descending') ),
	_direction TEXT, -- Foreign Key to element table

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_direction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE parameterDefinition(

	id TEXT PRIMARY KEY,
	libraryId TEXT, -- Foreign Key to library table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: parameterDefinition__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"use" TEXT,
	_use TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" TEXT,

	FOREIGN KEY (libraryId)
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE relatedArtifact(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedArtifact__extension
	"type" TEXT CHECK( "type" IN ('documentation','justification','citation','predecessor','successor','derived-from','depends-on','composed-of') ),
	_type TEXT, -- Foreign Key to element table
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	citation TEXT,
	_citation TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	document TEXT, -- Foreign Key to attachment table
	"resource" TEXT,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_citation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (document)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE triggerDefinition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: triggerDefinition__extension
	"type" TEXT CHECK( "type" IN ('named-event','periodic','data-changed','data-added','data-modified','data-removed','data-accessed','data-access-ended') ),
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	timingTiming TEXT, -- Foreign Key to timing table
	timingReference TEXT, -- Foreign Key to reference table
	timingDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_timingDate TEXT, -- Foreign Key to element table
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	"data" BOOLEAN, -- true if 1+ item is referenced from bridge table: triggerDefinition__dataRequirement
	"condition" TEXT, -- Foreign Key to expression table

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE usageContext(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: usageContext__extension
	"code" TEXT, -- Foreign Key to coding table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("code")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dosage(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	additionalInstruction BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage__codeableConcept
	patientInstruction TEXT,
	_patientInstruction TEXT, -- Foreign Key to element table
	timing TEXT, -- Foreign Key to timing table
	asNeededBoolean BOOLEAN, -- pattern: ^true|false$
	_asNeededBoolean TEXT, -- Foreign Key to element table
	asNeededCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"site" TEXT, -- Foreign Key to codeableConcept table
	"route" TEXT, -- Foreign Key to codeableConcept table
	"method" TEXT, -- Foreign Key to codeableConcept table
	doseAndRate BOOLEAN, -- true if 1+ rows in Dosage_DoseAndRate correspond to this entry
	maxDosePerPeriod TEXT, -- Foreign Key to ratio table
	maxDosePerAdministration TEXT, -- Foreign Key to quantity table
	maxDosePerLifetime TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patientInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timing)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_asNeededBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asNeededCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("site")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("route")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerPeriod)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerAdministration)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerLifetime)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE dosage_DoseAndRate(

	id TEXT PRIMARY KEY,
	dosageId TEXT, -- Foreign Key to dosage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage_DoseAndRate__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: dosage_DoseAndRate__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	doseRange TEXT, -- Foreign Key to range table
	doseQuantity TEXT, -- Foreign Key to quantity table
	rateRatio TEXT, -- Foreign Key to ratio table
	rateRange TEXT, -- Foreign Key to range table
	rateQuantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "population"(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: population__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: population__extension
	ageRange TEXT, -- Foreign Key to range table
	ageCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	gender TEXT, -- Foreign Key to codeableConcept table
	race TEXT, -- Foreign Key to codeableConcept table
	physiologicalCondition TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (ageRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ageCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (gender)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (race)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physiologicalCondition)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE productShelfLife(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: productShelfLife__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: productShelfLife__extension
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to quantity table
	specialPrecautionsForStorage BOOLEAN, -- true if 1+ item is referenced from bridge table: productShelfLife__codeableConcept

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE prodCharacteristic(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__extension
	height TEXT, -- Foreign Key to quantity table
	width TEXT, -- Foreign Key to quantity table
	"depth" TEXT, -- Foreign Key to quantity table
	"weight" TEXT, -- Foreign Key to quantity table
	nominalVolume TEXT, -- Foreign Key to quantity table
	externalDiameter TEXT, -- Foreign Key to quantity table
	shape TEXT,
	_shape TEXT, -- Foreign Key to element table
	color BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__string
	_color BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__element
	imprint BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__string
	_imprint BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__element
	"image" BOOLEAN, -- true if 1+ item is referenced from bridge table: prodCharacteristic__attachment
	scoring TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (height)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (width)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("depth")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("weight")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nominalVolume)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (externalDiameter)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shape)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scoring)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE marketingStatus(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: marketingStatus__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: marketingStatus__extension
	country TEXT, -- Foreign Key to codeableConcept table
	jurisdiction TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	dateRange TEXT, -- Foreign Key to period table
	restoreDate DATETIME,
	_restoreDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (country)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (jurisdiction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dateRange)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_restoreDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceAmount(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount__extension
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountRange TEXT, -- Foreign Key to range table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table
	amountType TEXT, -- Foreign Key to codeableConcept table
	amountText TEXT,
	_amountText TEXT, -- Foreign Key to element table
	referenceRange TEXT, -- Foreign Key to substanceAmount_ReferenceRange table

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountText)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceRange)
		REFERENCES substanceAmount_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceAmount_ReferenceRange(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount_ReferenceRange__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceAmount_ReferenceRange__extension
	lowLimit TEXT, -- Foreign Key to quantity table
	highLimit TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (lowLimit)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (highLimit)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE expression(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: expression__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	"language" TEXT CHECK( "language" IN ('text/cql','text/fhirpath','application/x-fhir-query') ),
	_language TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	representation BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: xmlAttr/xmlText/typeAttr/cdaText/xhtml,
	_representation BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__element
	sliceName TEXT,
	_sliceName TEXT, -- Foreign Key to element table
	sliceIsConstraining BOOLEAN,
	_sliceIsConstraining TEXT, -- Foreign Key to element table
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__coding
	slicing TEXT, -- Foreign Key to elementDefinition_Slicing table
	short TEXT,
	_short TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	requirements TEXT,
	_requirements TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__element
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	base TEXT, -- Foreign Key to elementDefinition_Base table
	contentReference TEXT,
	_contentReference TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ rows in ElementDefinition_Type correspond to this entry
	defaultValueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_defaultValueBase64Binary TEXT, -- Foreign Key to element table
	defaultValueBoolean BOOLEAN, -- pattern: ^true|false$
	_defaultValueBoolean TEXT, -- Foreign Key to element table
	defaultValueCanonical TEXT, -- pattern: ^\S*$
	_defaultValueCanonical TEXT, -- Foreign Key to element table
	defaultValueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_defaultValueCode TEXT, -- Foreign Key to element table
	defaultValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_defaultValueDate TEXT, -- Foreign Key to element table
	defaultValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_defaultValueDateTime TEXT, -- Foreign Key to element table
	defaultValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_defaultValueDecimal TEXT, -- Foreign Key to element table
	defaultValueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_defaultValueId TEXT, -- Foreign Key to element table
	defaultValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_defaultValueInstant TEXT, -- Foreign Key to element table
	defaultValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_defaultValueInteger TEXT, -- Foreign Key to element table
	defaultValueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueMarkdown TEXT, -- Foreign Key to element table
	defaultValueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_defaultValueOid TEXT, -- Foreign Key to element table
	defaultValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_defaultValuePositiveInt TEXT, -- Foreign Key to element table
	defaultValueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueString TEXT, -- Foreign Key to element table
	defaultValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_defaultValueTime TEXT, -- Foreign Key to element table
	defaultValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_defaultValueUnsignedInt TEXT, -- Foreign Key to element table
	defaultValueUri TEXT, -- pattern: ^\S*$
	_defaultValueUri TEXT, -- Foreign Key to element table
	defaultValueUrl TEXT, -- pattern: ^\S*$
	_defaultValueUrl TEXT, -- Foreign Key to element table
	defaultValueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_defaultValueUuid TEXT, -- Foreign Key to element table
	defaultValueAddress TEXT, -- Foreign Key to address table
	defaultValueAge TEXT, -- Foreign Key to age table
	defaultValueAnnotation TEXT, -- Foreign Key to annotation table
	defaultValueAttachment TEXT, -- Foreign Key to attachment table
	defaultValueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	defaultValueCoding TEXT, -- Foreign Key to coding table
	defaultValueContactPoint TEXT, -- Foreign Key to contactPoint table
	defaultValueCount TEXT, -- Foreign Key to count table
	defaultValueDistance TEXT, -- Foreign Key to distance table
	defaultValueDuration TEXT, -- Foreign Key to duration table
	defaultValueHumanName TEXT, -- Foreign Key to humanName table
	defaultValueIdentifier TEXT, -- Foreign Key to identifier table
	defaultValueMoney TEXT, -- Foreign Key to money table
	defaultValuePeriod TEXT, -- Foreign Key to period table
	defaultValueQuantity TEXT, -- Foreign Key to quantity table
	defaultValueRange TEXT, -- Foreign Key to range table
	defaultValueRatio TEXT, -- Foreign Key to ratio table
	defaultValueReference TEXT, -- Foreign Key to reference table
	defaultValueSampledData TEXT, -- Foreign Key to sampledData table
	defaultValueSignature TEXT, -- Foreign Key to signature table
	defaultValueTiming TEXT, -- Foreign Key to timing table
	defaultValueContactDetail TEXT, -- Foreign Key to contactDetail table
	defaultValueContributor TEXT, -- Foreign Key to contributor table
	defaultValueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	defaultValueExpression TEXT, -- Foreign Key to expression table
	defaultValueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	defaultValueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	defaultValueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	defaultValueUsageContext TEXT, -- Foreign Key to usageContext table
	defaultValueDosage TEXT, -- Foreign Key to dosage table
	defaultValueMeta TEXT, -- Foreign Key to meta table
	meaningWhenMissing TEXT,
	_meaningWhenMissing TEXT, -- Foreign Key to element table
	orderMeaning TEXT,
	_orderMeaning TEXT, -- Foreign Key to element table
	fixedBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_fixedBase64Binary TEXT, -- Foreign Key to element table
	fixedBoolean BOOLEAN, -- pattern: ^true|false$
	_fixedBoolean TEXT, -- Foreign Key to element table
	fixedCanonical TEXT, -- pattern: ^\S*$
	_fixedCanonical TEXT, -- Foreign Key to element table
	fixedCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_fixedCode TEXT, -- Foreign Key to element table
	fixedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_fixedDate TEXT, -- Foreign Key to element table
	fixedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_fixedDateTime TEXT, -- Foreign Key to element table
	fixedDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_fixedDecimal TEXT, -- Foreign Key to element table
	fixedId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_fixedId TEXT, -- Foreign Key to element table
	fixedInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_fixedInstant TEXT, -- Foreign Key to element table
	fixedInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_fixedInteger TEXT, -- Foreign Key to element table
	fixedMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_fixedMarkdown TEXT, -- Foreign Key to element table
	fixedOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_fixedOid TEXT, -- Foreign Key to element table
	fixedPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_fixedPositiveInt TEXT, -- Foreign Key to element table
	fixedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_fixedString TEXT, -- Foreign Key to element table
	fixedTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_fixedTime TEXT, -- Foreign Key to element table
	fixedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_fixedUnsignedInt TEXT, -- Foreign Key to element table
	fixedUri TEXT, -- pattern: ^\S*$
	_fixedUri TEXT, -- Foreign Key to element table
	fixedUrl TEXT, -- pattern: ^\S*$
	_fixedUrl TEXT, -- Foreign Key to element table
	fixedUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_fixedUuid TEXT, -- Foreign Key to element table
	fixedAddress TEXT, -- Foreign Key to address table
	fixedAge TEXT, -- Foreign Key to age table
	fixedAnnotation TEXT, -- Foreign Key to annotation table
	fixedAttachment TEXT, -- Foreign Key to attachment table
	fixedCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	fixedCoding TEXT, -- Foreign Key to coding table
	fixedContactPoint TEXT, -- Foreign Key to contactPoint table
	fixedCount TEXT, -- Foreign Key to count table
	fixedDistance TEXT, -- Foreign Key to distance table
	fixedDuration TEXT, -- Foreign Key to duration table
	fixedHumanName TEXT, -- Foreign Key to humanName table
	fixedIdentifier TEXT, -- Foreign Key to identifier table
	fixedMoney TEXT, -- Foreign Key to money table
	fixedPeriod TEXT, -- Foreign Key to period table
	fixedQuantity TEXT, -- Foreign Key to quantity table
	fixedRange TEXT, -- Foreign Key to range table
	fixedRatio TEXT, -- Foreign Key to ratio table
	fixedReference TEXT, -- Foreign Key to reference table
	fixedSampledData TEXT, -- Foreign Key to sampledData table
	fixedSignature TEXT, -- Foreign Key to signature table
	fixedTiming TEXT, -- Foreign Key to timing table
	fixedContactDetail TEXT, -- Foreign Key to contactDetail table
	fixedContributor TEXT, -- Foreign Key to contributor table
	fixedDataRequirement TEXT, -- Foreign Key to dataRequirement table
	fixedExpression TEXT, -- Foreign Key to expression table
	fixedParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	fixedRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	fixedTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	fixedUsageContext TEXT, -- Foreign Key to usageContext table
	fixedDosage TEXT, -- Foreign Key to dosage table
	fixedMeta TEXT, -- Foreign Key to meta table
	patternBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_patternBase64Binary TEXT, -- Foreign Key to element table
	patternBoolean BOOLEAN, -- pattern: ^true|false$
	_patternBoolean TEXT, -- Foreign Key to element table
	patternCanonical TEXT, -- pattern: ^\S*$
	_patternCanonical TEXT, -- Foreign Key to element table
	patternCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_patternCode TEXT, -- Foreign Key to element table
	patternDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_patternDate TEXT, -- Foreign Key to element table
	patternDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_patternDateTime TEXT, -- Foreign Key to element table
	patternDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_patternDecimal TEXT, -- Foreign Key to element table
	patternId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_patternId TEXT, -- Foreign Key to element table
	patternInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_patternInstant TEXT, -- Foreign Key to element table
	patternInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_patternInteger TEXT, -- Foreign Key to element table
	patternMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_patternMarkdown TEXT, -- Foreign Key to element table
	patternOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_patternOid TEXT, -- Foreign Key to element table
	patternPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_patternPositiveInt TEXT, -- Foreign Key to element table
	patternString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_patternString TEXT, -- Foreign Key to element table
	patternTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_patternTime TEXT, -- Foreign Key to element table
	patternUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_patternUnsignedInt TEXT, -- Foreign Key to element table
	patternUri TEXT, -- pattern: ^\S*$
	_patternUri TEXT, -- Foreign Key to element table
	patternUrl TEXT, -- pattern: ^\S*$
	_patternUrl TEXT, -- Foreign Key to element table
	patternUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_patternUuid TEXT, -- Foreign Key to element table
	patternAddress TEXT, -- Foreign Key to address table
	patternAge TEXT, -- Foreign Key to age table
	patternAnnotation TEXT, -- Foreign Key to annotation table
	patternAttachment TEXT, -- Foreign Key to attachment table
	patternCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	patternCoding TEXT, -- Foreign Key to coding table
	patternContactPoint TEXT, -- Foreign Key to contactPoint table
	patternCount TEXT, -- Foreign Key to count table
	patternDistance TEXT, -- Foreign Key to distance table
	patternDuration TEXT, -- Foreign Key to duration table
	patternHumanName TEXT, -- Foreign Key to humanName table
	patternIdentifier TEXT, -- Foreign Key to identifier table
	patternMoney TEXT, -- Foreign Key to money table
	patternPeriod TEXT, -- Foreign Key to period table
	patternQuantity TEXT, -- Foreign Key to quantity table
	patternRange TEXT, -- Foreign Key to range table
	patternRatio TEXT, -- Foreign Key to ratio table
	patternReference TEXT, -- Foreign Key to reference table
	patternSampledData TEXT, -- Foreign Key to sampledData table
	patternSignature TEXT, -- Foreign Key to signature table
	patternTiming TEXT, -- Foreign Key to timing table
	patternContactDetail TEXT, -- Foreign Key to contactDetail table
	patternContributor TEXT, -- Foreign Key to contributor table
	patternDataRequirement TEXT, -- Foreign Key to dataRequirement table
	patternExpression TEXT, -- Foreign Key to expression table
	patternParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	patternRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	patternTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	patternUsageContext TEXT, -- Foreign Key to usageContext table
	patternDosage TEXT, -- Foreign Key to dosage table
	patternMeta TEXT, -- Foreign Key to meta table
	example BOOLEAN, -- true if 1+ rows in ElementDefinition_Example correspond to this entry
	minValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_minValueDate TEXT, -- Foreign Key to element table
	minValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_minValueDateTime TEXT, -- Foreign Key to element table
	minValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_minValueInstant TEXT, -- Foreign Key to element table
	minValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_minValueTime TEXT, -- Foreign Key to element table
	minValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_minValueDecimal TEXT, -- Foreign Key to element table
	minValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_minValueInteger TEXT, -- Foreign Key to element table
	minValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_minValuePositiveInt TEXT, -- Foreign Key to element table
	minValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_minValueUnsignedInt TEXT, -- Foreign Key to element table
	minValueQuantity TEXT, -- Foreign Key to quantity table
	maxValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_maxValueDate TEXT, -- Foreign Key to element table
	maxValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_maxValueDateTime TEXT, -- Foreign Key to element table
	maxValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_maxValueInstant TEXT, -- Foreign Key to element table
	maxValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_maxValueTime TEXT, -- Foreign Key to element table
	maxValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_maxValueDecimal TEXT, -- Foreign Key to element table
	maxValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_maxValueInteger TEXT, -- Foreign Key to element table
	maxValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_maxValuePositiveInt TEXT, -- Foreign Key to element table
	maxValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_maxValueUnsignedInt TEXT, -- Foreign Key to element table
	maxValueQuantity TEXT, -- Foreign Key to quantity table
	"maxLength" INTEGER,
	_maxLength TEXT, -- Foreign Key to element table
	"condition" BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__id
	_condition BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition__element
	"constraint" BOOLEAN, -- true if 1+ rows in ElementDefinition_Constraint correspond to this entry
	mustSupport BOOLEAN,
	_mustSupport TEXT, -- Foreign Key to element table
	isModifier BOOLEAN,
	_isModifier TEXT, -- Foreign Key to element table
	isModifierReason TEXT,
	_isModifierReason TEXT, -- Foreign Key to element table
	isSummary BOOLEAN,
	_isSummary TEXT, -- Foreign Key to element table
	"binding" TEXT, -- Foreign Key to elementDefinition_Binding table
	mapping BOOLEAN, -- true if 1+ rows in ElementDefinition_Mapping correspond to this entry

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sliceName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sliceIsConstraining)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (slicing)
		REFERENCES elementDefinition_Slicing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_short)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirements)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (base)
		REFERENCES elementDefinition_Base (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentReference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_meaningWhenMissing)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_orderMeaning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fixedUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fixedMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patternUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patternMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (minValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxLength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mustSupport)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isModifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isModifierReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isSummary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("binding")
		REFERENCES elementDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Slicing(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Slicing__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Slicing__extension
	discriminator BOOLEAN, -- true if 1+ rows in ElementDefinition_Discriminator correspond to this entry
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	ordered BOOLEAN,
	_ordered TEXT, -- Foreign Key to element table
	rules TEXT CHECK( rules IN ('closed','open','openAtEnd') ),
	_rules TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ordered)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Discriminator(

	id TEXT PRIMARY KEY,
	elementDefinition_SlicingId TEXT, -- Foreign Key to elementDefinition_Slicing table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Discriminator__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Discriminator__extension
	"type" TEXT CHECK( "type" IN ('value','exists','pattern','type','profile') ),
	_type TEXT, -- Foreign Key to element table
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table

	FOREIGN KEY (elementDefinition_SlicingId)
		REFERENCES elementDefinition_Slicing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Base(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Base__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Base__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Type(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type__canonical
	targetProfile BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type__canonical
	aggregation BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: contained/referenced/bundled,
	_aggregation BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Type__element
	versioning TEXT CHECK( versioning IN ('either','independent','specific') ),
	_versioning TEXT, -- Foreign Key to element table

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versioning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Example(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Example__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Example__extension
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Constraint(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Constraint__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Constraint__extension
	"key" TEXT, -- Foreign Key to id table
	_key TEXT, -- Foreign Key to element table
	requirements TEXT,
	_requirements TEXT, -- Foreign Key to element table
	severity TEXT CHECK( severity IN ('error','warning') ),
	_severity TEXT, -- Foreign Key to element table
	human TEXT,
	_human TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	xpath TEXT,
	_xpath TEXT, -- Foreign Key to element table
	"source" TEXT,

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("key")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_key)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirements)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_human)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_xpath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Binding(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Binding__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Binding__extension
	strength TEXT CHECK( strength IN ('required','extensible','preferred','example') ),
	_strength TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	valueSet TEXT,

	FOREIGN KEY (_strength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE elementDefinition_Mapping(

	id TEXT PRIMARY KEY,
	elementDefinitionId TEXT, -- Foreign Key to elementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Mapping__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: elementDefinition_Mapping__extension
	"identity" TEXT, -- Foreign Key to id table
	_identity TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	map TEXT,
	_map TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("identity")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_map)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE account(

	resourceType TEXT, -- resourceType: account
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: account__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: account__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: account__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: account__identifier
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error','on-hold','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: account__reference
	servicePeriod TEXT, -- Foreign Key to period table
	coverage BOOLEAN, -- true if 1+ rows in Account_Coverage correspond to this entry
	"owner" TEXT, -- Foreign Key to reference table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	guarantor BOOLEAN, -- true if 1+ rows in Account_Guarantor correspond to this entry
	partOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE account_Coverage(

	id TEXT PRIMARY KEY,
	accountId TEXT, -- Foreign Key to account table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Coverage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Coverage__extension
	coverage TEXT, -- Foreign Key to reference table
	"priority" INTEGER,
	_priority TEXT, -- Foreign Key to element table

	FOREIGN KEY (accountId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE account_Guarantor(

	id TEXT PRIMARY KEY,
	accountId TEXT, -- Foreign Key to account table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Guarantor__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: account_Guarantor__extension
	party TEXT, -- Foreign Key to reference table
	onHold BOOLEAN,
	_onHold TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (accountId)
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onHold)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE activityDefinition(

	resourceType TEXT, -- resourceType: activityDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__canonical
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	"profile" TEXT,
	"code" TEXT, -- Foreign Key to codeableConcept table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	timingTiming TEXT, -- Foreign Key to timing table
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	timingAge TEXT, -- Foreign Key to age table
	timingPeriod TEXT, -- Foreign Key to period table
	timingRange TEXT, -- Foreign Key to range table
	timingDuration TEXT, -- Foreign Key to duration table
	"location" TEXT, -- Foreign Key to reference table
	participant BOOLEAN, -- true if 1+ rows in ActivityDefinition_Participant correspond to this entry
	productReference TEXT, -- Foreign Key to reference table
	productCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	dosage BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__dosage
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__codeableConcept
	specimenRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__reference
	observationRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__reference
	observationResultRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition__reference
	transform TEXT,
	dynamicValue BOOLEAN, -- true if 1+ rows in ActivityDefinition_DynamicValue correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE activityDefinition_Participant(

	id TEXT PRIMARY KEY,
	activityDefinitionId TEXT, -- Foreign Key to activityDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_Participant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_Participant__extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (activityDefinitionId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE activityDefinition_DynamicValue(

	id TEXT PRIMARY KEY,
	activityDefinitionId TEXT, -- Foreign Key to activityDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_DynamicValue__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: activityDefinition_DynamicValue__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (activityDefinitionId)
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE adverseEvent(

	resourceType TEXT, -- resourceType: adverseEvent
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__extension
	identifier TEXT, -- Foreign Key to identifier table
	actuality TEXT CHECK( actuality IN ('actual','potential') ),
	_actuality TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__codeableConcept
	"event" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	detected DATETIME,
	_detected TEXT, -- Foreign Key to element table
	recordedDate DATETIME,
	_recordedDate TEXT, -- Foreign Key to element table
	resultingCondition BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__reference
	"location" TEXT, -- Foreign Key to reference table
	seriousness TEXT, -- Foreign Key to codeableConcept table
	severity TEXT, -- Foreign Key to codeableConcept table
	outcome TEXT, -- Foreign Key to codeableConcept table
	recorder TEXT, -- Foreign Key to reference table
	contributor BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__reference
	suspectEntity BOOLEAN, -- true if 1+ rows in AdverseEvent_SuspectEntity correspond to this entry
	subjectMedicalHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__reference
	referenceDocument BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__reference
	study BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actuality)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("event")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detected)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (seriousness)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (severity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE adverseEvent_SuspectEntity(

	id TEXT PRIMARY KEY,
	adverseEventId TEXT, -- Foreign Key to adverseEvent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_SuspectEntity__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_SuspectEntity__extension
	"instance" TEXT, -- Foreign Key to reference table
	causality BOOLEAN, -- true if 1+ rows in AdverseEvent_Causality correspond to this entry

	FOREIGN KEY (adverseEventId)
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("instance")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE adverseEvent_Causality(

	id TEXT PRIMARY KEY,
	adverseEvent_SuspectEntityId TEXT, -- Foreign Key to adverseEvent_SuspectEntity table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_Causality__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: adverseEvent_Causality__extension
	assessment TEXT, -- Foreign Key to codeableConcept table
	productRelatedness TEXT,
	_productRelatedness TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	"method" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (adverseEvent_SuspectEntityId)
		REFERENCES adverseEvent_SuspectEntity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assessment)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productRelatedness)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE allergyIntolerance(

	resourceType TEXT, -- resourceType: allergyIntolerance
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance__identifier
	clinicalStatus TEXT, -- Foreign Key to codeableConcept table
	verificationStatus TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT CHECK( "type" IN ('allergy','intolerance') ),
	_type TEXT, -- Foreign Key to element table
	category BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: food/medication/environment/biologic,
	_category BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance__element
	criticality TEXT CHECK( criticality IN ('low','high','unable-to-assess') ),
	_criticality TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	onsetDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_onsetDateTime TEXT, -- Foreign Key to element table
	onsetAge TEXT, -- Foreign Key to age table
	onsetPeriod TEXT, -- Foreign Key to period table
	onsetRange TEXT, -- Foreign Key to range table
	onsetString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_onsetString TEXT, -- Foreign Key to element table
	recordedDate DATETIME,
	_recordedDate TEXT, -- Foreign Key to element table
	recorder TEXT, -- Foreign Key to reference table
	asserter TEXT, -- Foreign Key to reference table
	lastOccurrence DATETIME,
	_lastOccurrence TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance__annotation
	reaction BOOLEAN, -- true if 1+ rows in AllergyIntolerance_Reaction correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (clinicalStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (verificationStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_criticality)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asserter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastOccurrence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE allergyIntolerance_Reaction(

	id TEXT PRIMARY KEY,
	allergyIntoleranceId TEXT, -- Foreign Key to allergyIntolerance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction__extension
	substance TEXT, -- Foreign Key to codeableConcept table
	manifestation BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction__codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	onset DATETIME,
	_onset TEXT, -- Foreign Key to element table
	severity TEXT CHECK( severity IN ('mild','moderate','severe') ),
	_severity TEXT, -- Foreign Key to element table
	exposureRoute TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: allergyIntolerance_Reaction__annotation

	FOREIGN KEY (allergyIntoleranceId)
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onset)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureRoute)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE appointment(

	resourceType TEXT, -- resourceType: appointment
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__identifier
	"status" TEXT CHECK( "status" IN ('proposed','pending','booked','arrived','fulfilled','cancelled','noshow','entered-in-error','checked-in','waitlist') ),
	_status TEXT, -- Foreign Key to element table
	cancelationReason TEXT, -- Foreign Key to codeableConcept table
	serviceCategory BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__codeableConcept
	serviceType BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__codeableConcept
	appointmentType TEXT, -- Foreign Key to codeableConcept table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__reference
	"priority" INTEGER,
	_priority TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__reference
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	minutesDuration INTEGER,
	_minutesDuration TEXT, -- Foreign Key to element table
	slot BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__reference
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	patientInstruction TEXT,
	_patientInstruction TEXT, -- Foreign Key to element table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__reference
	participant BOOLEAN, -- true if 1+ rows in Appointment_Participant correspond to this entry
	requestedPeriod BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment__period

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cancelationReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (appointmentType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minutesDuration)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patientInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE appointment_Participant(

	id TEXT PRIMARY KEY,
	appointmentId TEXT, -- Foreign Key to appointment table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_Participant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_Participant__extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: appointment_Participant__codeableConcept
	actor TEXT, -- Foreign Key to reference table
	"required" TEXT CHECK( "required" IN ('required','optional','information-only') ),
	_required TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('accepted','declined','tentative','needs-action') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (appointmentId)
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_required)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE appointmentResponse(

	resourceType TEXT, -- resourceType: appointmentResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse__identifier
	appointment TEXT, -- Foreign Key to reference table
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	participantType BOOLEAN, -- true if 1+ item is referenced from bridge table: appointmentResponse__codeableConcept
	actor TEXT, -- Foreign Key to reference table
	participantStatus TEXT,
	_participantStatus TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (appointment)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent(

	resourceType TEXT, -- resourceType: auditEvent
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent__extension
	"type" TEXT, -- Foreign Key to coding table
	subtype BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent__coding
	"action" TEXT CHECK( "action" IN ('C','R','U','D','E') ),
	_action TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	recorded DATETIME,
	_recorded TEXT, -- Foreign Key to element table
	outcome TEXT CHECK( outcome IN ('0','4','8','12') ),
	_outcome TEXT, -- Foreign Key to element table
	outcomeDesc TEXT,
	_outcomeDesc TEXT, -- Foreign Key to element table
	purposeOfEvent BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent__codeableConcept
	agent BOOLEAN, -- true if 1+ rows in AuditEvent_Agent correspond to this entry
	"source" TEXT, -- Foreign Key to auditEvent_Source table
	entity BOOLEAN, -- true if 1+ rows in AuditEvent_Entity correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_action)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recorded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcomeDesc)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES auditEvent_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Agent(

	id TEXT PRIMARY KEY,
	auditEventId TEXT, -- Foreign Key to auditEvent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"role" BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent__codeableConcept
	who TEXT, -- Foreign Key to reference table
	altId TEXT,
	_altId TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	requestor BOOLEAN,
	_requestor TEXT, -- Foreign Key to element table
	"location" TEXT, -- Foreign Key to reference table
	"policy" BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent__uri
	_policy BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent__element
	media TEXT, -- Foreign Key to coding table
	network TEXT, -- Foreign Key to auditEvent_Network table
	purposeOfUse BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Agent__codeableConcept

	FOREIGN KEY (auditEventId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_altId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (media)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (network)
		REFERENCES auditEvent_Network (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Network(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Network__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Network__extension
	"address" TEXT,
	_address TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('1','2','3','4','5') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (_address)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Source(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Source__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Source__extension
	"site" TEXT,
	_site TEXT, -- Foreign Key to element table
	observer TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Source__coding

	FOREIGN KEY (_site)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (observer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Entity(

	id TEXT PRIMARY KEY,
	auditEventId TEXT, -- Foreign Key to auditEvent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Entity__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Entity__extension
	what TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to coding table
	"role" TEXT, -- Foreign Key to coding table
	lifecycle TEXT, -- Foreign Key to coding table
	securityLabel BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Entity__coding
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	query TEXT,
	_query TEXT, -- Foreign Key to element table
	detail BOOLEAN, -- true if 1+ rows in AuditEvent_Detail correspond to this entry

	FOREIGN KEY (auditEventId)
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (what)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (lifecycle)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_query)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE auditEvent_Detail(

	id TEXT PRIMARY KEY,
	auditEvent_EntityId TEXT, -- Foreign Key to auditEvent_Entity table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Detail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: auditEvent_Detail__extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table

	FOREIGN KEY (auditEvent_EntityId)
		REFERENCES auditEvent_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE basic(

	resourceType TEXT, -- resourceType: basic
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: basic__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: basic__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: basic__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: basic__identifier
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	created DATE,
	_created TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE binary(

	resourceType TEXT, -- resourceType: binary
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	securityContext TEXT, -- Foreign Key to reference table
	"data" TEXT,
	_data TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (securityContext)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_data)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct(

	resourceType TEXT, -- resourceType: biologicallyDerivedProduct
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct__identifier
	productCategory TEXT CHECK( productCategory IN ('organ','tissue','fluid','cells','biologicalAgent') ),
	_productCategory TEXT, -- Foreign Key to element table
	productCode TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT CHECK( "status" IN ('available','unavailable') ),
	_status TEXT, -- Foreign Key to element table
	request BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct__reference
	quantity INTEGER,
	_quantity TEXT, -- Foreign Key to element table
	parent BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct__reference
	"collection" TEXT, -- Foreign Key to biologicallyDerivedProduct_Collection table
	processing BOOLEAN, -- true if 1+ rows in BiologicallyDerivedProduct_Processing correspond to this entry
	manipulation TEXT, -- Foreign Key to biologicallyDerivedProduct_Manipulation table
	storage BOOLEAN, -- true if 1+ rows in BiologicallyDerivedProduct_Storage correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productCategory)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_quantity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("collection")
		REFERENCES biologicallyDerivedProduct_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manipulation)
		REFERENCES biologicallyDerivedProduct_Manipulation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Collection(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Collection__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Collection__extension
	collector TEXT, -- Foreign Key to reference table
	"source" TEXT, -- Foreign Key to reference table
	collectedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_collectedDateTime TEXT, -- Foreign Key to element table
	collectedPeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (collector)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_collectedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (collectedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Processing(

	id TEXT PRIMARY KEY,
	biologicallyDerivedProductId TEXT, -- Foreign Key to biologicallyDerivedProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Processing__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Processing__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"procedure" TEXT, -- Foreign Key to codeableConcept table
	additive TEXT, -- Foreign Key to reference table
	timeDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timeDateTime TEXT, -- Foreign Key to element table
	timePeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (biologicallyDerivedProductId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("procedure")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additive)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Manipulation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Manipulation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Manipulation__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	timeDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timeDateTime TEXT, -- Foreign Key to element table
	timePeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE biologicallyDerivedProduct_Storage(

	id TEXT PRIMARY KEY,
	biologicallyDerivedProductId TEXT, -- Foreign Key to biologicallyDerivedProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Storage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: biologicallyDerivedProduct_Storage__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	temperature REAL,
	_temperature TEXT, -- Foreign Key to element table
	scale TEXT CHECK( scale IN ('farenheit','celsius','kelvin') ),
	_scale TEXT, -- Foreign Key to element table
	duration TEXT, -- Foreign Key to period table

	FOREIGN KEY (biologicallyDerivedProductId)
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_temperature)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_scale)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bodyStructure(

	resourceType TEXT, -- resourceType: bodyStructure
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	morphology TEXT, -- Foreign Key to codeableConcept table
	"location" TEXT, -- Foreign Key to codeableConcept table
	locationQualifier BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure__codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"image" BOOLEAN, -- true if 1+ item is referenced from bridge table: bodyStructure__attachment
	patient TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (morphology)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle(

	resourceType TEXT, -- resourceType: bundle
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT CHECK( "type" IN ('document','message','transaction','transaction-response','batch','batch-response','history','searchset','collection') ),
	_type TEXT, -- Foreign Key to element table
	"timestamp" DATETIME,
	_timestamp TEXT, -- Foreign Key to element table
	total INTEGER,
	_total TEXT, -- Foreign Key to element table
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle__bundle_Link
	entry BOOLEAN, -- true if 1+ rows in Bundle_Entry correspond to this entry
	"signature" TEXT, -- Foreign Key to signature table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timestamp)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_total)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("signature")
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Link(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Link__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Link__extension
	relation TEXT,
	_relation TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table

	FOREIGN KEY (_relation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Entry(

	id TEXT PRIMARY KEY,
	bundleId TEXT, -- Foreign Key to bundle table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Entry__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Entry__extension
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Entry__bundle_Link
	fullUrl TEXT,
	_fullUrl TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to resourceList table
	"search" TEXT, -- Foreign Key to bundle_Search table
	request TEXT, -- Foreign Key to bundle_Request table
	response TEXT, -- Foreign Key to bundle_Response table

	FOREIGN KEY (bundleId)
		REFERENCES bundle (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fullUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("search")
		REFERENCES bundle_Search (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES bundle_Request (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES bundle_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Search(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Search__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Search__extension
	mode TEXT CHECK( mode IN ('match','include','outcome') ),
	_mode TEXT, -- Foreign Key to element table
	score REAL,
	_score TEXT, -- Foreign Key to element table

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_score)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Request(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Request__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Request__extension
	"method" TEXT CHECK( "method" IN ('GET','HEAD','POST','PUT','DELETE','PATCH') ),
	_method TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	ifNoneMatch TEXT,
	_ifNoneMatch TEXT, -- Foreign Key to element table
	ifModifiedSince DATETIME,
	_ifModifiedSince TEXT, -- Foreign Key to element table
	ifMatch TEXT,
	_ifMatch TEXT, -- Foreign Key to element table
	ifNoneExist TEXT,
	_ifNoneExist TEXT, -- Foreign Key to element table

	FOREIGN KEY (_method)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifNoneMatch)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifModifiedSince)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifMatch)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ifNoneExist)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE bundle_Response(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Response__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: bundle_Response__extension
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"location" TEXT,
	_location TEXT, -- Foreign Key to element table
	etag TEXT,
	_etag TEXT, -- Foreign Key to element table
	lastModified DATETIME,
	_lastModified TEXT, -- Foreign Key to element table
	outcome TEXT, -- Foreign Key to resourceList table

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_location)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_etag)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastModified)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement(

	resourceType TEXT, -- resourceType: capabilityStatement
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	kind TEXT CHECK( kind IN ('instance','capability','requirements') ),
	_kind TEXT, -- Foreign Key to element table
	instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__canonical
	imports BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__canonical
	software TEXT, -- Foreign Key to capabilityStatement_Software table
	"implementation" TEXT, -- Foreign Key to capabilityStatement_Implementation table
	fhirVersion TEXT CHECK( fhirVersion IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),
	_fhirVersion TEXT, -- Foreign Key to element table
	format BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__code
	_format BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__element
	patchFormat BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__code
	_patchFormat BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__element
	implementationGuide BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement__canonical
	rest BOOLEAN, -- true if 1+ rows in CapabilityStatement_Rest correspond to this entry
	messaging BOOLEAN, -- true if 1+ rows in CapabilityStatement_Messaging correspond to this entry
	document BOOLEAN, -- true if 1+ rows in CapabilityStatement_Document correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (software)
		REFERENCES capabilityStatement_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("implementation")
		REFERENCES capabilityStatement_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fhirVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Software(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Software__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Software__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	releaseDate DATETIME,
	_releaseDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_releaseDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Implementation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Implementation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Implementation__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	custodian TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (custodian)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Rest(

	id TEXT PRIMARY KEY,
	capabilityStatementId TEXT, -- Foreign Key to capabilityStatement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest__extension
	mode TEXT CHECK( mode IN ('client','server') ),
	_mode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"security" TEXT, -- Foreign Key to capabilityStatement_Security table
	"resource" BOOLEAN, -- true if 1+ rows in CapabilityStatement_Resource correspond to this entry
	interaction BOOLEAN, -- true if 1+ rows in CapabilityStatement_Interaction1 correspond to this entry
	searchParam BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest__capabilityStatement_SearchParam
	operation BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest__capabilityStatement_Operation
	compartment BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Rest__canonical

	FOREIGN KEY (capabilityStatementId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("security")
		REFERENCES capabilityStatement_Security (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Security(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Security__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Security__extension
	cors BOOLEAN,
	_cors TEXT, -- Foreign Key to element table
	service BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Security__codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (_cors)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Resource(

	id TEXT PRIMARY KEY,
	capabilityStatement_RestId TEXT, -- Foreign Key to capabilityStatement_Rest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" TEXT,
	supportedProfile BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__canonical
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	interaction BOOLEAN, -- true if 1+ rows in CapabilityStatement_Interaction correspond to this entry
	versioning TEXT CHECK( versioning IN ('no-version','versioned','versioned-update') ),
	_versioning TEXT, -- Foreign Key to element table
	readHistory BOOLEAN,
	_readHistory TEXT, -- Foreign Key to element table
	updateCreate BOOLEAN,
	_updateCreate TEXT, -- Foreign Key to element table
	conditionalCreate BOOLEAN,
	_conditionalCreate TEXT, -- Foreign Key to element table
	conditionalRead TEXT CHECK( conditionalRead IN ('not-supported','modified-since','not-match','full-support') ),
	_conditionalRead TEXT, -- Foreign Key to element table
	conditionalUpdate BOOLEAN,
	_conditionalUpdate TEXT, -- Foreign Key to element table
	conditionalDelete TEXT CHECK( conditionalDelete IN ('not-supported','single','multiple') ),
	_conditionalDelete TEXT, -- Foreign Key to element table
	referencePolicy BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: literal/logical/resolves/enforced/local,
	_referencePolicy BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__element
	searchInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__string
	_searchInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__element
	searchRevInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__string
	_searchRevInclude BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__element
	searchParam BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__capabilityStatement_SearchParam
	operation BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Resource__capabilityStatement_Operation

	FOREIGN KEY (capabilityStatement_RestId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versioning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readHistory)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_updateCreate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalCreate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalRead)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalUpdate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conditionalDelete)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Interaction(

	id TEXT PRIMARY KEY,
	capabilityStatement_ResourceId TEXT, -- Foreign Key to capabilityStatement_Resource table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction__extension
	"code" TEXT CHECK( "code" IN ('read','vread','update','patch','delete','history-instance','history-type','create','search-type') ),
	_code TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (capabilityStatement_ResourceId)
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_SearchParam(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SearchParam__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SearchParam__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"definition" TEXT,
	"type" TEXT CHECK( "type" IN ('number','date','string','token','reference','composite','quantity','uri','special') ),
	_type TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Operation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Operation__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"definition" TEXT,
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Interaction1(

	id TEXT PRIMARY KEY,
	capabilityStatement_RestId TEXT, -- Foreign Key to capabilityStatement_Rest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Interaction1__extension
	"code" TEXT CHECK( "code" IN ('transaction','batch','search-system','history-system') ),
	_code TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (capabilityStatement_RestId)
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Messaging(

	id TEXT PRIMARY KEY,
	capabilityStatementId TEXT, -- Foreign Key to capabilityStatement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Messaging__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Messaging__extension
	"endpoint" BOOLEAN, -- true if 1+ rows in CapabilityStatement_Endpoint correspond to this entry
	reliableCache INTEGER,
	_reliableCache TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	supportedMessage BOOLEAN, -- true if 1+ rows in CapabilityStatement_SupportedMessage correspond to this entry

	FOREIGN KEY (capabilityStatementId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reliableCache)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Endpoint(

	id TEXT PRIMARY KEY,
	capabilityStatement_MessagingId TEXT, -- Foreign Key to capabilityStatement_Messaging table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Endpoint__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Endpoint__extension
	protocol TEXT, -- Foreign Key to coding table
	"address" TEXT,
	_address TEXT, -- Foreign Key to element table

	FOREIGN KEY (capabilityStatement_MessagingId)
		REFERENCES capabilityStatement_Messaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (protocol)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_address)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_SupportedMessage(

	id TEXT PRIMARY KEY,
	capabilityStatement_MessagingId TEXT, -- Foreign Key to capabilityStatement_Messaging table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SupportedMessage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_SupportedMessage__extension
	mode TEXT CHECK( mode IN ('sender','receiver') ),
	_mode TEXT, -- Foreign Key to element table
	"definition" TEXT,

	FOREIGN KEY (capabilityStatement_MessagingId)
		REFERENCES capabilityStatement_Messaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE capabilityStatement_Document(

	id TEXT PRIMARY KEY,
	capabilityStatementId TEXT, -- Foreign Key to capabilityStatement table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Document__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: capabilityStatement_Document__extension
	mode TEXT CHECK( mode IN ('producer','consumer') ),
	_mode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"profile" TEXT,

	FOREIGN KEY (capabilityStatementId)
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE carePlan(

	resourceType TEXT, -- resourceType: carePlan
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__codeableConcept
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	contributor BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	careTeam BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	addresses BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	goal BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__reference
	activity BOOLEAN, -- true if 1+ rows in CarePlan_Activity correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE carePlan_Activity(

	id TEXT PRIMARY KEY,
	carePlanId TEXT, -- Foreign Key to carePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity__extension
	outcomeCodeableConcept BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity__codeableConcept
	outcomeReference BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity__reference
	progress BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Activity__annotation
	reference TEXT, -- Foreign Key to reference table
	detail TEXT, -- Foreign Key to carePlan_Detail table

	FOREIGN KEY (carePlanId)
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detail)
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE carePlan_Detail(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__extension
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__element
	"code" TEXT, -- Foreign Key to codeableConcept table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__reference
	goal BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__reference
	"status" TEXT CHECK( "status" IN ('not-started','scheduled','in-progress','on-hold','completed','cancelled','stopped','unknown','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	scheduledTiming TEXT, -- Foreign Key to timing table
	scheduledPeriod TEXT, -- Foreign Key to period table
	scheduledString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_scheduledString TEXT, -- Foreign Key to element table
	"location" TEXT, -- Foreign Key to reference table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: carePlan_Detail__reference
	productCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	productReference TEXT, -- Foreign Key to reference table
	dailyAmount TEXT, -- Foreign Key to quantity table
	quantity TEXT, -- Foreign Key to quantity table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scheduledTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scheduledPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_scheduledString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dailyAmount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE careTeam(

	resourceType TEXT, -- resourceType: careTeam
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__identifier
	"status" TEXT CHECK( "status" IN ('proposed','active','suspended','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__codeableConcept
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	participant BOOLEAN, -- true if 1+ rows in CareTeam_Participant correspond to this entry
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__reference
	managingOrganization BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__reference
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__contactPoint
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE careTeam_Participant(

	id TEXT PRIMARY KEY,
	careTeamId TEXT, -- Foreign Key to careTeam table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_Participant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_Participant__extension
	"role" BOOLEAN, -- true if 1+ item is referenced from bridge table: careTeam_Participant__codeableConcept
	"member" TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (careTeamId)
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("member")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE catalogEntry(

	resourceType TEXT, -- resourceType: catalogEntry
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	orderable BOOLEAN,
	_orderable TEXT, -- Foreign Key to element table
	referencedItem TEXT, -- Foreign Key to reference table
	additionalIdentifier BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__identifier
	classification BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__codeableConcept
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	validityPeriod TEXT, -- Foreign Key to period table
	validTo DATETIME,
	_validTo TEXT, -- Foreign Key to element table
	lastUpdated DATETIME,
	_lastUpdated TEXT, -- Foreign Key to element table
	additionalCharacteristic BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__codeableConcept
	additionalClassification BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry__codeableConcept
	relatedEntry BOOLEAN, -- true if 1+ rows in CatalogEntry_RelatedEntry correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_orderable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referencedItem)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validTo)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastUpdated)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE catalogEntry_RelatedEntry(

	id TEXT PRIMARY KEY,
	catalogEntryId TEXT, -- Foreign Key to catalogEntry table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_RelatedEntry__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: catalogEntry_RelatedEntry__extension
	relationtype TEXT CHECK( relationtype IN ('triggers','is-replaced-by') ),
	_relationtype TEXT, -- Foreign Key to element table
	item TEXT, -- Foreign Key to reference table

	FOREIGN KEY (catalogEntryId)
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relationtype)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (item)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItem(

	resourceType TEXT, -- resourceType: chargeItem
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__identifier
	definitionUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__uri
	_definitionUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__element
	definitionCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__canonical
	"status" TEXT CHECK( "status" IN ('planned','billable','not-billable','aborted','billed','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__reference
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	performer BOOLEAN, -- true if 1+ rows in ChargeItem_Performer correspond to this entry
	performingOrganization TEXT, -- Foreign Key to reference table
	requestingOrganization TEXT, -- Foreign Key to reference table
	costCenter TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	bodysite BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__codeableConcept
	factorOverride REAL,
	_factorOverride TEXT, -- Foreign Key to element table
	priceOverride TEXT, -- Foreign Key to money table
	overrideReason TEXT,
	_overrideReason TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	enteredDate DATETIME,
	_enteredDate TEXT, -- Foreign Key to element table
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__codeableConcept
	service BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__reference
	productReference TEXT, -- Foreign Key to reference table
	productCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	account BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__annotation
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (costCenter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factorOverride)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (priceOverride)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_overrideReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_enteredDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItem_Performer(

	id TEXT PRIMARY KEY,
	chargeItemId TEXT, -- Foreign Key to chargeItem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_Performer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItem_Performer__extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (chargeItemId)
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition(

	resourceType TEXT, -- resourceType: chargeItemDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	derivedFromUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__uri
	_derivedFromUri BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__element
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__canonical
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__canonical
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"instance" BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__reference
	applicability BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition__chargeItemDefinition_Applicability
	propertyGroup BOOLEAN, -- true if 1+ rows in ChargeItemDefinition_PropertyGroup correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition_Applicability(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_Applicability__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_Applicability__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition_PropertyGroup(

	id TEXT PRIMARY KEY,
	chargeItemDefinitionId TEXT, -- Foreign Key to chargeItemDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PropertyGroup__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PropertyGroup__extension
	applicability BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PropertyGroup__chargeItemDefinition_Applicability
	priceComponent BOOLEAN, -- true if 1+ rows in ChargeItemDefinition_PriceComponent correspond to this entry

	FOREIGN KEY (chargeItemDefinitionId)
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE chargeItemDefinition_PriceComponent(

	id TEXT PRIMARY KEY,
	chargeItemDefinition_PropertyGroupId TEXT, -- Foreign Key to chargeItemDefinition_PropertyGroup table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PriceComponent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: chargeItemDefinition_PriceComponent__extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (chargeItemDefinition_PropertyGroupId)
		REFERENCES chargeItemDefinition_PropertyGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim(

	resourceType TEXT, -- resourceType: claim
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: claim__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"use" TEXT CHECK( "use" IN ('claim','preauthorization','predetermination') ),
	_use TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	billablePeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	insurer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	fundsReserve TEXT, -- Foreign Key to codeableConcept table
	related BOOLEAN, -- true if 1+ rows in Claim_Related correspond to this entry
	prescription TEXT, -- Foreign Key to reference table
	originalPrescription TEXT, -- Foreign Key to reference table
	payee TEXT, -- Foreign Key to claim_Payee table
	referral TEXT, -- Foreign Key to reference table
	facility TEXT, -- Foreign Key to reference table
	careTeam BOOLEAN, -- true if 1+ rows in Claim_CareTeam correspond to this entry
	supportingInfo BOOLEAN, -- true if 1+ rows in Claim_SupportingInfo correspond to this entry
	diagnosis BOOLEAN, -- true if 1+ rows in Claim_Diagnosis correspond to this entry
	"procedure" BOOLEAN, -- true if 1+ rows in Claim_Procedure correspond to this entry
	insurance BOOLEAN, -- true if 1+ rows in Claim_Insurance correspond to this entry
	accident TEXT, -- Foreign Key to claim_Accident table
	item BOOLEAN, -- true if 1+ rows in Claim_Item correspond to this entry
	total TEXT, -- Foreign Key to money table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (billablePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserve)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (prescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (originalPrescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES claim_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referral)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (accident)
		REFERENCES claim_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (total)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Related(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Related__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Related__extension
	claim TEXT, -- Foreign Key to reference table
	relationship TEXT, -- Foreign Key to codeableConcept table
	reference TEXT, -- Foreign Key to identifier table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claim)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Payee(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Payee__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Payee__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	party TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_CareTeam(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_CareTeam__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_CareTeam__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"provider" TEXT, -- Foreign Key to reference table
	responsible BOOLEAN,
	_responsible TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table
	qualification TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responsible)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (qualification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_SupportingInfo(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SupportingInfo__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SupportingInfo__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	timingDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_timingDate TEXT, -- Foreign Key to element table
	timingPeriod TEXT, -- Foreign Key to period table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueReference TEXT, -- Foreign Key to reference table
	reason TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Diagnosis(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Diagnosis__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Diagnosis__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	diagnosisCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	diagnosisReference TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Diagnosis__codeableConcept
	onAdmission TEXT, -- Foreign Key to codeableConcept table
	packageCode TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onAdmission)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Procedure(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure__codeableConcept
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	procedureCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	procedureReference TEXT, -- Foreign Key to reference table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Procedure__reference

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Insurance(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	coverage TEXT, -- Foreign Key to reference table
	businessArrangement TEXT,
	_businessArrangement TEXT, -- Foreign Key to element table
	preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance__string
	_preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Insurance__element
	claimResponse TEXT, -- Foreign Key to reference table

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_businessArrangement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claimResponse)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Accident(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Accident__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Accident__extension
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Item(

	id TEXT PRIMARY KEY,
	claimId TEXT, -- Foreign Key to claim table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__positiveInt
	_careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__element
	diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__positiveInt
	_diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__element
	procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__positiveInt
	_procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__element
	informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__positiveInt
	_informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__element
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__reference
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__codeableConcept
	encounter BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Item__reference
	detail BOOLEAN, -- true if 1+ rows in Claim_Detail correspond to this entry

	FOREIGN KEY (claimId)
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_Detail(

	id TEXT PRIMARY KEY,
	claim_ItemId TEXT, -- Foreign Key to claim_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_Detail__reference
	subDetail BOOLEAN, -- true if 1+ rows in Claim_SubDetail correspond to this entry

	FOREIGN KEY (claim_ItemId)
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claim_SubDetail(

	id TEXT PRIMARY KEY,
	claim_DetailId TEXT, -- Foreign Key to claim_Detail table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: claim_SubDetail__reference

	FOREIGN KEY (claim_DetailId)
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse(

	resourceType TEXT, -- resourceType: claimResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"use" TEXT,
	_use TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	insurer TEXT, -- Foreign Key to reference table
	requestor TEXT, -- Foreign Key to reference table
	request TEXT, -- Foreign Key to reference table
	outcome TEXT,
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	preAuthRef TEXT,
	_preAuthRef TEXT, -- Foreign Key to element table
	preAuthPeriod TEXT, -- Foreign Key to period table
	payeeType TEXT, -- Foreign Key to codeableConcept table
	item BOOLEAN, -- true if 1+ rows in ClaimResponse_Item correspond to this entry
	addItem BOOLEAN, -- true if 1+ rows in ClaimResponse_AddItem correspond to this entry
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse__claimResponse_Adjudication
	total BOOLEAN, -- true if 1+ rows in ClaimResponse_Total correspond to this entry
	payment TEXT, -- Foreign Key to claimResponse_Payment table
	fundsReserve TEXT, -- Foreign Key to codeableConcept table
	formCode TEXT, -- Foreign Key to codeableConcept table
	form TEXT, -- Foreign Key to attachment table
	processNote BOOLEAN, -- true if 1+ rows in ClaimResponse_ProcessNote correspond to this entry
	communicationRequest BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse__reference
	insurance BOOLEAN, -- true if 1+ rows in ClaimResponse_Insurance correspond to this entry
	error BOOLEAN, -- true if 1+ rows in ClaimResponse_Error correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preAuthRef)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (preAuthPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payeeType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payment)
		REFERENCES claimResponse_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserve)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (formCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Item(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item__extension
	itemSequence INTEGER,
	_itemSequence TEXT, -- Foreign Key to element table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Item__claimResponse_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ClaimResponse_Detail correspond to this entry

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_itemSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Adjudication(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Adjudication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Adjudication__extension
	category TEXT, -- Foreign Key to codeableConcept table
	reason TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Detail(

	id TEXT PRIMARY KEY,
	claimResponse_ItemId TEXT, -- Foreign Key to claimResponse_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail__extension
	detailSequence INTEGER,
	_detailSequence TEXT, -- Foreign Key to element table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail__claimResponse_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ClaimResponse_SubDetail correspond to this entry

	FOREIGN KEY (claimResponse_ItemId)
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_SubDetail(

	id TEXT PRIMARY KEY,
	claimResponse_DetailId TEXT, -- Foreign Key to claimResponse_Detail table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail__extension
	subDetailSequence INTEGER,
	_subDetailSequence TEXT, -- Foreign Key to element table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail__claimResponse_Adjudication

	FOREIGN KEY (claimResponse_DetailId)
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subDetailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_AddItem(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__extension
	itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__positiveInt
	_itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__element
	detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__positiveInt
	_detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__element
	subdetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__positiveInt
	_subdetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__element
	"provider" BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__reference
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__codeableConcept
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_AddItem__claimResponse_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ClaimResponse_Detail1 correspond to this entry

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Detail1(

	id TEXT PRIMARY KEY,
	claimResponse_AddItemId TEXT, -- Foreign Key to claimResponse_AddItem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1__extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Detail1__claimResponse_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ClaimResponse_SubDetail1 correspond to this entry

	FOREIGN KEY (claimResponse_AddItemId)
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_SubDetail1(

	id TEXT PRIMARY KEY,
	claimResponse_Detail1Id TEXT, -- Foreign Key to claimResponse_Detail1 table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1__extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_SubDetail1__claimResponse_Adjudication

	FOREIGN KEY (claimResponse_Detail1Id)
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Total(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Total__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Total__extension
	category TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Payment(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Payment__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Payment__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	adjustment TEXT, -- Foreign Key to money table
	adjustmentReason TEXT, -- Foreign Key to codeableConcept table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table
	identifier TEXT, -- Foreign Key to identifier table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustment)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustmentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_ProcessNote(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_ProcessNote__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_ProcessNote__extension
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('display','print','printoper') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"language" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Insurance(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Insurance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Insurance__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	coverage TEXT, -- Foreign Key to reference table
	businessArrangement TEXT,
	_businessArrangement TEXT, -- Foreign Key to element table
	claimResponse TEXT, -- Foreign Key to reference table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_businessArrangement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claimResponse)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE claimResponse_Error(

	id TEXT PRIMARY KEY,
	claimResponseId TEXT, -- Foreign Key to claimResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Error__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: claimResponse_Error__extension
	itemSequence INTEGER,
	_itemSequence TEXT, -- Foreign Key to element table
	detailSequence INTEGER,
	_detailSequence TEXT, -- Foreign Key to element table
	subDetailSequence INTEGER,
	_subDetailSequence TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (claimResponseId)
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_itemSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subDetailSequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE clinicalImpression(

	resourceType TEXT, -- resourceType: clinicalImpression
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	assessor TEXT, -- Foreign Key to reference table
	previous TEXT, -- Foreign Key to reference table
	problem BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__reference
	investigation BOOLEAN, -- true if 1+ rows in ClinicalImpression_Investigation correspond to this entry
	protocol BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__uri
	_protocol BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__element
	summary TEXT,
	_summary TEXT, -- Foreign Key to element table
	finding BOOLEAN, -- true if 1+ rows in ClinicalImpression_Finding correspond to this entry
	prognosisCodeableConcept BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__codeableConcept
	prognosisReference BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assessor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (previous)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_summary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE clinicalImpression_Investigation(

	id TEXT PRIMARY KEY,
	clinicalImpressionId TEXT, -- Foreign Key to clinicalImpression table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Investigation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Investigation__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Investigation__reference

	FOREIGN KEY (clinicalImpressionId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE clinicalImpression_Finding(

	id TEXT PRIMARY KEY,
	clinicalImpressionId TEXT, -- Foreign Key to clinicalImpression table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Finding__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: clinicalImpression_Finding__extension
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	basis TEXT,
	_basis TEXT, -- Foreign Key to element table

	FOREIGN KEY (clinicalImpressionId)
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_basis)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem(

	resourceType TEXT, -- resourceType: codeSystem
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	caseSensitive BOOLEAN,
	_caseSensitive TEXT, -- Foreign Key to element table
	valueSet TEXT,
	hierarchyMeaning TEXT CHECK( hierarchyMeaning IN ('grouped-by','is-a','part-of','classified-with') ),
	_hierarchyMeaning TEXT, -- Foreign Key to element table
	compositional BOOLEAN,
	_compositional TEXT, -- Foreign Key to element table
	versionNeeded BOOLEAN,
	_versionNeeded TEXT, -- Foreign Key to element table
	content TEXT CHECK( content IN ('not-present','example','fragment','complete','supplement') ),
	_content TEXT, -- Foreign Key to element table
	supplements TEXT,
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	"filter" BOOLEAN, -- true if 1+ rows in CodeSystem_Filter correspond to this entry
	property BOOLEAN, -- true if 1+ rows in CodeSystem_Property correspond to this entry
	concept BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem__codeSystem_Concept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_caseSensitive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_hierarchyMeaning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compositional)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionNeeded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_content)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Filter(

	id TEXT PRIMARY KEY,
	codeSystemId TEXT, -- Foreign Key to codeSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	operator BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter__code
	_operator BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Filter__element
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystemId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Property(

	id TEXT PRIMARY KEY,
	codeSystemId TEXT, -- Foreign Key to codeSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('code','Coding','string','integer','boolean','dateTime','decimal') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystemId)
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Concept(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Concept__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Concept__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	designation BOOLEAN, -- true if 1+ rows in CodeSystem_Designation correspond to this entry
	property BOOLEAN, -- true if 1+ rows in CodeSystem_Property1 correspond to this entry
	concept BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Concept__codeSystem_Concept

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Designation(

	id TEXT PRIMARY KEY,
	codeSystem_ConceptId TEXT, -- Foreign Key to codeSystem_Concept table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Designation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Designation__extension
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"use" TEXT, -- Foreign Key to coding table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("use")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE codeSystem_Property1(

	id TEXT PRIMARY KEY,
	codeSystem_ConceptId TEXT, -- Foreign Key to codeSystem_Concept table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: codeSystem_Property1__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueCoding TEXT, -- Foreign Key to coding table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table

	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communication(

	resourceType TEXT, -- resourceType: communication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__reference
	inResponseTo BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	medium BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	topic TEXT, -- Foreign Key to codeableConcept table
	about BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__reference
	encounter TEXT, -- Foreign Key to reference table
	sent DATETIME,
	_sent TEXT, -- Foreign Key to element table
	received DATETIME,
	_received TEXT, -- Foreign Key to element table
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__reference
	sender TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__reference
	payload BOOLEAN, -- true if 1+ rows in Communication_Payload correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: communication__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topic)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_received)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sender)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communication_Payload(

	id TEXT PRIMARY KEY,
	communicationId TEXT, -- Foreign Key to communication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_Payload__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communication_Payload__extension
	contentString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_contentString TEXT, -- Foreign Key to element table
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (communicationId)
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communicationRequest(

	resourceType TEXT, -- resourceType: communicationRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	medium BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	about BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__reference
	encounter TEXT, -- Foreign Key to reference table
	payload BOOLEAN, -- true if 1+ rows in CommunicationRequest_Payload correspond to this entry
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__reference
	sender TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sender)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE communicationRequest_Payload(

	id TEXT PRIMARY KEY,
	communicationRequestId TEXT, -- Foreign Key to communicationRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_Payload__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: communicationRequest_Payload__extension
	contentString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_contentString TEXT, -- Foreign Key to element table
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (communicationRequestId)
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE compartmentDefinition(

	resourceType TEXT, -- resourceType: compartmentDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition__usageContext
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"code" TEXT CHECK( "code" IN ('Patient','Encounter','RelatedPerson','Practitioner','Device') ),
	_code TEXT, -- Foreign Key to element table
	"search" BOOLEAN,
	_search TEXT, -- Foreign Key to element table
	"resource" BOOLEAN, -- true if 1+ rows in CompartmentDefinition_Resource correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_search)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE compartmentDefinition_Resource(

	id TEXT PRIMARY KEY,
	compartmentDefinitionId TEXT, -- Foreign Key to compartmentDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	param BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource__string
	_param BOOLEAN, -- true if 1+ item is referenced from bridge table: compartmentDefinition_Resource__element
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (compartmentDefinitionId)
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition(

	resourceType TEXT, -- resourceType: composition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: composition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition__extension
	identifier TEXT, -- Foreign Key to identifier table
	"status" TEXT CHECK( "status" IN ('preliminary','final','amended','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: composition__codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: composition__reference
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	confidentiality TEXT,
	_confidentiality TEXT, -- Foreign Key to element table
	attester BOOLEAN, -- true if 1+ rows in Composition_Attester correspond to this entry
	custodian TEXT, -- Foreign Key to reference table
	relatesTo BOOLEAN, -- true if 1+ rows in Composition_RelatesTo correspond to this entry
	"event" BOOLEAN, -- true if 1+ rows in Composition_Event correspond to this entry
	section BOOLEAN, -- true if 1+ item is referenced from bridge table: composition__composition_Section

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_confidentiality)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (custodian)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_Attester(

	id TEXT PRIMARY KEY,
	compositionId TEXT, -- Foreign Key to composition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Attester__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Attester__extension
	mode TEXT CHECK( mode IN ('personal','professional','legal','official') ),
	_mode TEXT, -- Foreign Key to element table
	"time" DATETIME,
	_time TEXT, -- Foreign Key to element table
	party TEXT, -- Foreign Key to reference table

	FOREIGN KEY (compositionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_time)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_RelatesTo(

	id TEXT PRIMARY KEY,
	compositionId TEXT, -- Foreign Key to composition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_RelatesTo__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_RelatesTo__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	targetIdentifier TEXT, -- Foreign Key to identifier table
	targetReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (compositionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_Event(

	id TEXT PRIMARY KEY,
	compositionId TEXT, -- Foreign Key to composition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event__extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event__codeableConcept
	"period" TEXT, -- Foreign Key to period table
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Event__reference

	FOREIGN KEY (compositionId)
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE composition_Section(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section__extension
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section__reference
	focus TEXT, -- Foreign Key to reference table
	"text" TEXT, -- Foreign Key to narrative table
	mode TEXT,
	_mode TEXT, -- Foreign Key to element table
	orderedBy TEXT, -- Foreign Key to codeableConcept table
	entry BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section__reference
	emptyReason TEXT, -- Foreign Key to codeableConcept table
	section BOOLEAN, -- true if 1+ item is referenced from bridge table: composition_Section__composition_Section

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (focus)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orderedBy)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (emptyReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap(

	resourceType TEXT, -- resourceType: conceptMap
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	sourceUri TEXT, -- pattern: ^\S*$
	_sourceUri TEXT, -- Foreign Key to element table
	sourceCanonical TEXT, -- pattern: ^\S*$
	_sourceCanonical TEXT, -- Foreign Key to element table
	targetUri TEXT, -- pattern: ^\S*$
	_targetUri TEXT, -- Foreign Key to element table
	targetCanonical TEXT, -- pattern: ^\S*$
	_targetCanonical TEXT, -- Foreign Key to element table
	"group" BOOLEAN, -- true if 1+ rows in ConceptMap_Group correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Group(

	id TEXT PRIMARY KEY,
	conceptMapId TEXT, -- Foreign Key to conceptMap table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Group__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Group__extension
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	sourceVersion TEXT,
	_sourceVersion TEXT, -- Foreign Key to element table
	"target" TEXT,
	_target TEXT, -- Foreign Key to element table
	targetVersion TEXT,
	_targetVersion TEXT, -- Foreign Key to element table
	element BOOLEAN, -- true if 1+ rows in ConceptMap_Element correspond to this entry
	unmapped TEXT, -- Foreign Key to conceptMap_Unmapped table

	FOREIGN KEY (conceptMapId)
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_target)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unmapped)
		REFERENCES conceptMap_Unmapped (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Element(

	id TEXT PRIMARY KEY,
	conceptMap_GroupId TEXT, -- Foreign Key to conceptMap_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Element__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Element__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	"target" BOOLEAN, -- true if 1+ rows in ConceptMap_Target correspond to this entry

	FOREIGN KEY (conceptMap_GroupId)
		REFERENCES conceptMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Target(

	id TEXT PRIMARY KEY,
	conceptMap_ElementId TEXT, -- Foreign Key to conceptMap_Element table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	equivalence TEXT CHECK( equivalence IN ('relatedto','equivalent','equal','wider','subsumes','narrower','specializes','inexact','unmatched','disjoint') ),
	_equivalence TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	dependsOn BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target__conceptMap_DependsOn
	product BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Target__conceptMap_DependsOn

	FOREIGN KEY (conceptMap_ElementId)
		REFERENCES conceptMap_Element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_equivalence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_DependsOn(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_DependsOn__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_DependsOn__extension
	property TEXT,
	_property TEXT, -- Foreign Key to element table
	"system" TEXT,
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table

	FOREIGN KEY (_property)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE conceptMap_Unmapped(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Unmapped__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: conceptMap_Unmapped__extension
	mode TEXT CHECK( mode IN ('provided','fixed','other-map') ),
	_mode TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	"url" TEXT,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "condition"(

	resourceType TEXT, -- resourceType: condition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: condition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: condition__identifier
	clinicalStatus TEXT, -- Foreign Key to codeableConcept table
	verificationStatus TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: condition__codeableConcept
	severity TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: condition__codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	onsetDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_onsetDateTime TEXT, -- Foreign Key to element table
	onsetAge TEXT, -- Foreign Key to age table
	onsetPeriod TEXT, -- Foreign Key to period table
	onsetRange TEXT, -- Foreign Key to range table
	onsetString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_onsetString TEXT, -- Foreign Key to element table
	abatementDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_abatementDateTime TEXT, -- Foreign Key to element table
	abatementAge TEXT, -- Foreign Key to age table
	abatementPeriod TEXT, -- Foreign Key to period table
	abatementRange TEXT, -- Foreign Key to range table
	abatementString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_abatementString TEXT, -- Foreign Key to element table
	recordedDate DATETIME,
	_recordedDate TEXT, -- Foreign Key to element table
	recorder TEXT, -- Foreign Key to reference table
	asserter TEXT, -- Foreign Key to reference table
	stage BOOLEAN, -- true if 1+ rows in Condition_Stage correspond to this entry
	evidence BOOLEAN, -- true if 1+ rows in Condition_Evidence correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: condition__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (clinicalStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (verificationStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (severity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abatementDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abatementAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abatementPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abatementRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abatementString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asserter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE condition_Stage(

	id TEXT PRIMARY KEY,
	conditionId TEXT, -- Foreign Key to "condition" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Stage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Stage__extension
	summary TEXT, -- Foreign Key to codeableConcept table
	assessment BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Stage__reference
	"type" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (conditionId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (summary)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE condition_Evidence(

	id TEXT PRIMARY KEY,
	conditionId TEXT, -- Foreign Key to "condition" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence__extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence__codeableConcept
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: condition_Evidence__reference

	FOREIGN KEY (conditionId)
		REFERENCES "condition" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent(

	resourceType TEXT, -- resourceType: consent
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: consent__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: consent__identifier
	"status" TEXT CHECK( "status" IN ('draft','proposed','active','rejected','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"scope" TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: consent__codeableConcept
	patient TEXT, -- Foreign Key to reference table
	"dateTime" DATETIME,
	_dateTime TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: consent__reference
	organization BOOLEAN, -- true if 1+ item is referenced from bridge table: consent__reference
	sourceAttachment TEXT, -- Foreign Key to attachment table
	sourceReference TEXT, -- Foreign Key to reference table
	"policy" BOOLEAN, -- true if 1+ rows in Consent_Policy correspond to this entry
	policyRule TEXT, -- Foreign Key to codeableConcept table
	verification BOOLEAN, -- true if 1+ rows in Consent_Verification correspond to this entry
	provision TEXT, -- Foreign Key to consent_Provision table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("scope")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (policyRule)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (provision)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Policy(

	id TEXT PRIMARY KEY,
	consentId TEXT, -- Foreign Key to consent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Policy__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Policy__extension
	authority TEXT,
	_authority TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table

	FOREIGN KEY (consentId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Verification(

	id TEXT PRIMARY KEY,
	consentId TEXT, -- Foreign Key to consent table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Verification__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Verification__extension
	verified BOOLEAN,
	_verified TEXT, -- Foreign Key to element table
	verifiedWith TEXT, -- Foreign Key to reference table
	verificationDate DATETIME,
	_verificationDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (consentId)
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_verified)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (verifiedWith)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_verificationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Provision(

	id TEXT PRIMARY KEY,
	consent_ProvisionId TEXT, -- Foreign Key to consent_Provision table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision__extension
	"type" TEXT CHECK( "type" IN ('deny','permit') ),
	_type TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	actor BOOLEAN, -- true if 1+ rows in Consent_Actor correspond to this entry
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision__codeableConcept
	securityLabel BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision__coding
	purpose BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision__coding
	class BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision__coding
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Provision__codeableConcept
	dataPeriod TEXT, -- Foreign Key to period table
	"data" BOOLEAN, -- true if 1+ rows in Consent_Data correspond to this entry
	provision BOOLEAN, -- true if 1+ rows in Consent_Provision correspond to this entry

	FOREIGN KEY (consent_ProvisionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Actor(

	id TEXT PRIMARY KEY,
	consent_ProvisionId TEXT, -- Foreign Key to consent_Provision table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Actor__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Actor__extension
	"role" TEXT, -- Foreign Key to codeableConcept table
	reference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (consent_ProvisionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE consent_Data(

	id TEXT PRIMARY KEY,
	consent_ProvisionId TEXT, -- Foreign Key to consent_Provision table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Data__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: consent_Data__extension
	meaning TEXT CHECK( meaning IN ('instance','related','dependents','authoredby') ),
	_meaning TEXT, -- Foreign Key to element table
	reference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (consent_ProvisionId)
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_meaning)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract(

	resourceType TEXT, -- resourceType: contract
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__identifier
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	legalState TEXT, -- Foreign Key to codeableConcept table
	instantiatesCanonical TEXT, -- Foreign Key to reference table
	instantiatesUri TEXT,
	_instantiatesUri TEXT, -- Foreign Key to element table
	contentDerivative TEXT, -- Foreign Key to codeableConcept table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	applies TEXT, -- Foreign Key to period table
	expirationType TEXT, -- Foreign Key to codeableConcept table
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__reference
	authority BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__reference
	"domain" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__reference
	"site" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__reference
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__element
	author TEXT, -- Foreign Key to reference table
	"scope" TEXT, -- Foreign Key to codeableConcept table
	topicCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	topicReference TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__codeableConcept
	contentDefinition TEXT, -- Foreign Key to contract_ContentDefinition table
	term BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__contract_Term
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__reference
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: contract__reference
	signer BOOLEAN, -- true if 1+ rows in Contract_Signer correspond to this entry
	friendly BOOLEAN, -- true if 1+ rows in Contract_Friendly correspond to this entry
	legal BOOLEAN, -- true if 1+ rows in Contract_Legal correspond to this entry
	"rule" BOOLEAN, -- true if 1+ rows in Contract_Rule correspond to this entry
	legallyBindingAttachment TEXT, -- Foreign Key to attachment table
	legallyBindingReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (instantiatesCanonical)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instantiatesUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentDerivative)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (applies)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expirationType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("scope")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentDefinition)
		REFERENCES contract_ContentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legallyBindingAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legallyBindingReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_ContentDefinition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ContentDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ContentDefinition__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	publisher TEXT, -- Foreign Key to reference table
	publicationDate DATETIME,
	_publicationDate TEXT, -- Foreign Key to element table
	publicationStatus TEXT,
	_publicationStatus TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (publisher)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publicationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publicationStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Term(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Term__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Term__extension
	identifier TEXT, -- Foreign Key to identifier table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	applies TEXT, -- Foreign Key to period table
	topicCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	topicReference TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	securityLabel BOOLEAN, -- true if 1+ rows in Contract_SecurityLabel correspond to this entry
	offer TEXT, -- Foreign Key to contract_Offer table
	asset BOOLEAN, -- true if 1+ rows in Contract_Asset correspond to this entry
	"action" BOOLEAN, -- true if 1+ rows in Contract_Action correspond to this entry
	"group" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Term__contract_Term

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (applies)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (topicReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offer)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_SecurityLabel(

	id TEXT PRIMARY KEY,
	contract_TermId TEXT, -- Foreign Key to contract_Term table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel__extension
	number BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel__unsignedInt
	_number BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel__element
	classification TEXT, -- Foreign Key to coding table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel__coding
	control BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_SecurityLabel__coding

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (classification)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Offer(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__identifier
	party BOOLEAN, -- true if 1+ rows in Contract_Party correspond to this entry
	topic TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	decision TEXT, -- Foreign Key to codeableConcept table
	decisionMode BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__codeableConcept
	answer BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__contract_Answer
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__element
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Offer__element

	FOREIGN KEY (topic)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (decision)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Party(

	id TEXT PRIMARY KEY,
	contract_OfferId TEXT, -- Foreign Key to contract_Offer table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Party__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Party__extension
	reference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Party__reference
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (contract_OfferId)
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Answer(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Answer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Answer__extension
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCoding TEXT, -- Foreign Key to coding table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Asset(

	id TEXT PRIMARY KEY,
	contract_TermId TEXT, -- Foreign Key to contract_Term table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__extension
	"scope" TEXT, -- Foreign Key to codeableConcept table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__codeableConcept
	typeReference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__reference
	subtype BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__codeableConcept
	relationship TEXT, -- Foreign Key to coding table
	context BOOLEAN, -- true if 1+ rows in Contract_Context correspond to this entry
	"condition" TEXT,
	_condition TEXT, -- Foreign Key to element table
	periodType BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__codeableConcept
	"period" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__period
	usePeriod BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__period
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__element
	answer BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__contract_Answer
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Asset__element
	valuedItem BOOLEAN, -- true if 1+ rows in Contract_ValuedItem correspond to this entry

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("scope")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_condition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Context(

	id TEXT PRIMARY KEY,
	contract_AssetId TEXT, -- Foreign Key to contract_Asset table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Context__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Context__extension
	reference TEXT, -- Foreign Key to reference table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Context__codeableConcept
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (contract_AssetId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_ValuedItem(

	id TEXT PRIMARY KEY,
	contract_AssetId TEXT, -- Foreign Key to contract_Asset table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__extension
	entityCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	entityReference TEXT, -- Foreign Key to reference table
	identifier TEXT, -- Foreign Key to identifier table
	effectiveTime DATETIME,
	_effectiveTime TEXT, -- Foreign Key to element table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	points REAL,
	_points TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	payment TEXT,
	_payment TEXT, -- Foreign Key to element table
	paymentDate DATETIME,
	_paymentDate TEXT, -- Foreign Key to element table
	responsible TEXT, -- Foreign Key to reference table
	recipient TEXT, -- Foreign Key to reference table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__element
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_ValuedItem__element

	FOREIGN KEY (contract_AssetId)
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (entityCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (entityReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_points)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_payment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responsible)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recipient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Action(

	id TEXT PRIMARY KEY,
	contract_TermId TEXT, -- Foreign Key to contract_Term table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__extension
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" BOOLEAN, -- true if 1+ rows in Contract_Subject correspond to this entry
	intent TEXT, -- Foreign Key to codeableConcept table
	linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__string
	_linkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__element
	"status" TEXT, -- Foreign Key to codeableConcept table
	context TEXT, -- Foreign Key to reference table
	contextLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__string
	_contextLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__element
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	requester BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__reference
	requesterLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__string
	_requesterLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__element
	performerType BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__codeableConcept
	performerRole TEXT, -- Foreign Key to codeableConcept table
	performer TEXT, -- Foreign Key to reference table
	performerLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__string
	_performerLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__element
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__reference
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__string
	_reason BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__element
	reasonLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__string
	_reasonLinkId BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__element
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__annotation
	securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__unsignedInt
	_securityLabelNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Action__element

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intent)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerRole)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Subject(

	id TEXT PRIMARY KEY,
	contract_ActionId TEXT, -- Foreign Key to contract_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Subject__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Subject__extension
	reference BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Subject__reference
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (contract_ActionId)
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Signer(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Signer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Signer__extension
	"type" TEXT, -- Foreign Key to coding table
	party TEXT, -- Foreign Key to reference table
	"signature" BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Signer__signature

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Friendly(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Friendly__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Friendly__extension
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Legal(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Legal__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Legal__extension
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE contract_Rule(

	id TEXT PRIMARY KEY,
	contractId TEXT, -- Foreign Key to contract table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Rule__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: contract_Rule__extension
	contentAttachment TEXT, -- Foreign Key to attachment table
	contentReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (contractId)
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contentReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage(

	resourceType TEXT, -- resourceType: coverage
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	policyHolder TEXT, -- Foreign Key to reference table
	subscriber TEXT, -- Foreign Key to reference table
	subscriberId TEXT,
	_subscriberId TEXT, -- Foreign Key to element table
	beneficiary TEXT, -- Foreign Key to reference table
	"dependent" TEXT,
	_dependent TEXT, -- Foreign Key to element table
	relationship TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table
	payor BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage__reference
	class BOOLEAN, -- true if 1+ rows in Coverage_Class correspond to this entry
	"order" INTEGER,
	_order TEXT, -- Foreign Key to element table
	network TEXT,
	_network TEXT, -- Foreign Key to element table
	costToBeneficiary BOOLEAN, -- true if 1+ rows in Coverage_CostToBeneficiary correspond to this entry
	subrogation BOOLEAN,
	_subrogation TEXT, -- Foreign Key to element table
	contract BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (policyHolder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subscriber)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subscriberId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (beneficiary)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dependent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_order)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_network)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subrogation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage_Class(

	id TEXT PRIMARY KEY,
	coverageId TEXT, -- Foreign Key to coverage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Class__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Class__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage_CostToBeneficiary(

	id TEXT PRIMARY KEY,
	coverageId TEXT, -- Foreign Key to coverage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_CostToBeneficiary__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_CostToBeneficiary__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueMoney TEXT, -- Foreign Key to money table
	exception BOOLEAN, -- true if 1+ rows in Coverage_Exception correspond to this entry

	FOREIGN KEY (coverageId)
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverage_Exception(

	id TEXT PRIMARY KEY,
	coverage_CostToBeneficiaryId TEXT, -- Foreign Key to coverage_CostToBeneficiary table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Exception__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverage_Exception__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (coverage_CostToBeneficiaryId)
		REFERENCES coverage_CostToBeneficiary (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest(

	resourceType TEXT, -- resourceType: coverageEligibilityRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	purpose BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: auth-requirements/benefits/discovery/validation,
	_purpose BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest__element
	patient TEXT, -- Foreign Key to reference table
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	insurer TEXT, -- Foreign Key to reference table
	facility TEXT, -- Foreign Key to reference table
	supportingInfo BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_SupportingInfo correspond to this entry
	insurance BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_Insurance correspond to this entry
	item BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_Item correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_SupportingInfo(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequestId TEXT, -- Foreign Key to coverageEligibilityRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_SupportingInfo__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_SupportingInfo__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	information TEXT, -- Foreign Key to reference table
	appliesToAll BOOLEAN,
	_appliesToAll TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageEligibilityRequestId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (information)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_appliesToAll)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_Insurance(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequestId TEXT, -- Foreign Key to coverageEligibilityRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Insurance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Insurance__extension
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	coverage TEXT, -- Foreign Key to reference table
	businessArrangement TEXT,
	_businessArrangement TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageEligibilityRequestId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_businessArrangement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_Item(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequestId TEXT, -- Foreign Key to coverageEligibilityRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item__extension
	supportingInfoSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item__positiveInt
	_supportingInfoSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item__element
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item__codeableConcept
	"provider" TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	facility TEXT, -- Foreign Key to reference table
	diagnosis BOOLEAN, -- true if 1+ rows in CoverageEligibilityRequest_Diagnosis correspond to this entry
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Item__reference

	FOREIGN KEY (coverageEligibilityRequestId)
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityRequest_Diagnosis(

	id TEXT PRIMARY KEY,
	coverageEligibilityRequest_ItemId TEXT, -- Foreign Key to coverageEligibilityRequest_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Diagnosis__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityRequest_Diagnosis__extension
	diagnosisCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	diagnosisReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (coverageEligibilityRequest_ItemId)
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse(

	resourceType TEXT, -- resourceType: coverageEligibilityResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	purpose BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: auth-requirements/benefits/discovery/validation,
	_purpose BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse__element
	patient TEXT, -- Foreign Key to reference table
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	requestor TEXT, -- Foreign Key to reference table
	request TEXT, -- Foreign Key to reference table
	outcome TEXT CHECK( outcome IN ('queued','complete','error','partial') ),
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	insurer TEXT, -- Foreign Key to reference table
	insurance BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Insurance correspond to this entry
	preAuthRef TEXT,
	_preAuthRef TEXT, -- Foreign Key to element table
	form TEXT, -- Foreign Key to codeableConcept table
	error BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Error correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preAuthRef)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Insurance(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponseId TEXT, -- Foreign Key to coverageEligibilityResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Insurance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Insurance__extension
	coverage TEXT, -- Foreign Key to reference table
	inforce BOOLEAN,
	_inforce TEXT, -- Foreign Key to element table
	benefitPeriod TEXT, -- Foreign Key to period table
	item BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Item correspond to this entry

	FOREIGN KEY (coverageEligibilityResponseId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inforce)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (benefitPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Item(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_InsuranceId TEXT, -- Foreign Key to coverageEligibilityResponse_Insurance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item__extension
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item__codeableConcept
	"provider" TEXT, -- Foreign Key to reference table
	excluded BOOLEAN,
	_excluded TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	network TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	term TEXT, -- Foreign Key to codeableConcept table
	benefit BOOLEAN, -- true if 1+ rows in CoverageEligibilityResponse_Benefit correspond to this entry
	authorizationRequired BOOLEAN,
	_authorizationRequired TEXT, -- Foreign Key to element table
	authorizationSupporting BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Item__codeableConcept
	authorizationUrl TEXT,
	_authorizationUrl TEXT, -- Foreign Key to element table

	FOREIGN KEY (coverageEligibilityResponse_InsuranceId)
		REFERENCES coverageEligibilityResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_excluded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (network)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (term)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorizationRequired)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorizationUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Benefit(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponse_ItemId TEXT, -- Foreign Key to coverageEligibilityResponse_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Benefit__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Benefit__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	allowedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_allowedUnsignedInt TEXT, -- Foreign Key to element table
	allowedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_allowedString TEXT, -- Foreign Key to element table
	allowedMoney TEXT, -- Foreign Key to money table
	usedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_usedUnsignedInt TEXT, -- Foreign Key to element table
	usedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_usedString TEXT, -- Foreign Key to element table
	usedMoney TEXT, -- Foreign Key to money table

	FOREIGN KEY (coverageEligibilityResponse_ItemId)
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (allowedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (usedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE coverageEligibilityResponse_Error(

	id TEXT PRIMARY KEY,
	coverageEligibilityResponseId TEXT, -- Foreign Key to coverageEligibilityResponse table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Error__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: coverageEligibilityResponse_Error__extension
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (coverageEligibilityResponseId)
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE detectedIssue(

	resourceType TEXT, -- resourceType: detectedIssue
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	severity TEXT CHECK( severity IN ('high','moderate','low') ),
	_severity TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	identifiedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_identifiedDateTime TEXT, -- Foreign Key to element table
	identifiedPeriod TEXT, -- Foreign Key to period table
	author TEXT, -- Foreign Key to reference table
	implicated BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue__reference
	evidence BOOLEAN, -- true if 1+ rows in DetectedIssue_Evidence correspond to this entry
	detail TEXT,
	_detail TEXT, -- Foreign Key to element table
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table
	mitigation BOOLEAN, -- true if 1+ rows in DetectedIssue_Mitigation correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identifiedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifiedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detail)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE detectedIssue_Evidence(

	id TEXT PRIMARY KEY,
	detectedIssueId TEXT, -- Foreign Key to detectedIssue table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence__extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence__codeableConcept
	detail BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Evidence__reference

	FOREIGN KEY (detectedIssueId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE detectedIssue_Mitigation(

	id TEXT PRIMARY KEY,
	detectedIssueId TEXT, -- Foreign Key to detectedIssue table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Mitigation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: detectedIssue_Mitigation__extension
	"action" TEXT, -- Foreign Key to codeableConcept table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table

	FOREIGN KEY (detectedIssueId)
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("action")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device(

	resourceType TEXT, -- resourceType: device
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: device__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: device__identifier
	"definition" TEXT, -- Foreign Key to reference table
	udiCarrier BOOLEAN, -- true if 1+ rows in Device_UdiCarrier correspond to this entry
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	statusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: device__codeableConcept
	distinctIdentifier TEXT,
	_distinctIdentifier TEXT, -- Foreign Key to element table
	manufacturer TEXT,
	_manufacturer TEXT, -- Foreign Key to element table
	manufactureDate DATETIME,
	_manufactureDate TEXT, -- Foreign Key to element table
	expirationDate DATETIME,
	_expirationDate TEXT, -- Foreign Key to element table
	lotNumber TEXT,
	_lotNumber TEXT, -- Foreign Key to element table
	serialNumber TEXT,
	_serialNumber TEXT, -- Foreign Key to element table
	deviceName BOOLEAN, -- true if 1+ rows in Device_DeviceName correspond to this entry
	modelNumber TEXT,
	_modelNumber TEXT, -- Foreign Key to element table
	partNumber TEXT,
	_partNumber TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	specialization BOOLEAN, -- true if 1+ rows in Device_Specialization correspond to this entry
	"version" BOOLEAN, -- true if 1+ rows in Device_Version correspond to this entry
	property BOOLEAN, -- true if 1+ rows in Device_Property correspond to this entry
	patient TEXT, -- Foreign Key to reference table
	"owner" TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: device__contactPoint
	"location" TEXT, -- Foreign Key to reference table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: device__annotation
	safety BOOLEAN, -- true if 1+ item is referenced from bridge table: device__codeableConcept
	parent TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("definition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_distinctIdentifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_manufacturer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_manufactureDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expirationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lotNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_serialNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_modelNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_partNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_UdiCarrier(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_UdiCarrier__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_UdiCarrier__extension
	deviceIdentifier TEXT,
	_deviceIdentifier TEXT, -- Foreign Key to element table
	issuer TEXT,
	_issuer TEXT, -- Foreign Key to element table
	jurisdiction TEXT,
	_jurisdiction TEXT, -- Foreign Key to element table
	carrierAIDC TEXT,
	_carrierAIDC TEXT, -- Foreign Key to element table
	carrierHRF TEXT,
	_carrierHRF TEXT, -- Foreign Key to element table
	entryType TEXT CHECK( entryType IN ('barcode','rfid','manual','card','self-reported','unknown') ),
	_entryType TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deviceIdentifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issuer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_jurisdiction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_carrierAIDC)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_carrierHRF)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_entryType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_DeviceName(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_DeviceName__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_DeviceName__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('udi-label-name','user-friendly-name','patient-reported-name','manufacturer-name','model-name','other') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_Specialization(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Specialization__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Specialization__extension
	systemType TEXT, -- Foreign Key to codeableConcept table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (systemType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_Version(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Version__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Version__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	component TEXT, -- Foreign Key to identifier table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (component)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE device_Property(

	id TEXT PRIMARY KEY,
	deviceId TEXT, -- Foreign Key to device table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property__quantity
	valueCode BOOLEAN, -- true if 1+ item is referenced from bridge table: device_Property__codeableConcept

	FOREIGN KEY (deviceId)
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition(

	resourceType TEXT, -- resourceType: deviceDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__identifier
	udiDeviceIdentifier BOOLEAN, -- true if 1+ rows in DeviceDefinition_UdiDeviceIdentifier correspond to this entry
	manufacturerString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_manufacturerString TEXT, -- Foreign Key to element table
	manufacturerReference TEXT, -- Foreign Key to reference table
	deviceName BOOLEAN, -- true if 1+ rows in DeviceDefinition_DeviceName correspond to this entry
	modelNumber TEXT,
	_modelNumber TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	specialization BOOLEAN, -- true if 1+ rows in DeviceDefinition_Specialization correspond to this entry
	"version" BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__string
	_version BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__element
	safety BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__codeableConcept
	shelfLifeStorage BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__productShelfLife
	physicalCharacteristics TEXT, -- Foreign Key to prodCharacteristic table
	languageCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__codeableConcept
	capability BOOLEAN, -- true if 1+ rows in DeviceDefinition_Capability correspond to this entry
	property BOOLEAN, -- true if 1+ rows in DeviceDefinition_Property correspond to this entry
	"owner" TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__contactPoint
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	onlineInformation TEXT,
	_onlineInformation TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition__annotation
	quantity TEXT, -- Foreign Key to quantity table
	parentDevice TEXT, -- Foreign Key to reference table
	material BOOLEAN, -- true if 1+ rows in DeviceDefinition_Material correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_manufacturerString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturerReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_modelNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalCharacteristics)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onlineInformation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parentDevice)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_UdiDeviceIdentifier(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_UdiDeviceIdentifier__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_UdiDeviceIdentifier__extension
	deviceIdentifier TEXT,
	_deviceIdentifier TEXT, -- Foreign Key to element table
	issuer TEXT,
	_issuer TEXT, -- Foreign Key to element table
	jurisdiction TEXT,
	_jurisdiction TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deviceIdentifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issuer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_jurisdiction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_DeviceName(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_DeviceName__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_DeviceName__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('udi-label-name','user-friendly-name','patient-reported-name','manufacturer-name','model-name','other') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Specialization(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Specialization__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Specialization__extension
	systemType TEXT,
	_systemType TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_systemType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Capability(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Capability__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Capability__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"description" BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Capability__codeableConcept

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Property(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property__quantity
	valueCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Property__codeableConcept

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceDefinition_Material(

	id TEXT PRIMARY KEY,
	deviceDefinitionId TEXT, -- Foreign Key to deviceDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Material__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceDefinition_Material__extension
	substance TEXT, -- Foreign Key to codeableConcept table
	alternate BOOLEAN,
	_alternate TEXT, -- Foreign Key to element table
	allergenicIndicator BOOLEAN,
	_allergenicIndicator TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceDefinitionId)
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_alternate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allergenicIndicator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceMetric(

	resourceType TEXT, -- resourceType: deviceMetric
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric__identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	"source" TEXT, -- Foreign Key to reference table
	parent TEXT, -- Foreign Key to reference table
	operationalStatus TEXT CHECK( operationalStatus IN ('on','off','standby','entered-in-error') ),
	_operationalStatus TEXT, -- Foreign Key to element table
	color TEXT CHECK( color IN ('black','red','green','yellow','blue','magenta','cyan','white') ),
	_color TEXT, -- Foreign Key to element table
	category TEXT CHECK( category IN ('measurement','setting','calculation','unspecified') ),
	_category TEXT, -- Foreign Key to element table
	measurementPeriod TEXT, -- Foreign Key to timing table
	calibration BOOLEAN, -- true if 1+ rows in DeviceMetric_Calibration correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_operationalStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_color)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_category)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measurementPeriod)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceMetric_Calibration(

	id TEXT PRIMARY KEY,
	deviceMetricId TEXT, -- Foreign Key to deviceMetric table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_Calibration__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceMetric_Calibration__extension
	"type" TEXT CHECK( "type" IN ('unspecified','offset','gain','two-point') ),
	_type TEXT, -- Foreign Key to element table
	"state" TEXT CHECK( "state" IN ('not-calibrated','calibration-required','calibrated','unspecified') ),
	_state TEXT, -- Foreign Key to element table
	"time" DATETIME,
	_time TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceMetricId)
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_state)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_time)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceRequest(

	resourceType TEXT, -- resourceType: deviceRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__reference
	priorRequest BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	codeReference TEXT, -- Foreign Key to reference table
	codeCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"parameter" BOOLEAN, -- true if 1+ rows in DeviceRequest_Parameter correspond to this entry
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performerType TEXT, -- Foreign Key to codeableConcept table
	performer TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__reference
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__annotation
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (codeReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (codeCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceRequest_Parameter(

	id TEXT PRIMARY KEY,
	deviceRequestId TEXT, -- Foreign Key to deviceRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceRequest_Parameter__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table

	FOREIGN KEY (deviceRequestId)
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE deviceUseStatement(

	resourceType TEXT, -- resourceType: deviceUseStatement
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__reference
	"status" TEXT CHECK( "status" IN ('active','completed','entered-in-error','intended','stopped','on-hold') ),
	_status TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__reference
	timingTiming TEXT, -- Foreign Key to timing table
	timingPeriod TEXT, -- Foreign Key to period table
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	recordedOn DATETIME,
	_recordedOn TEXT, -- Foreign Key to element table
	"source" TEXT, -- Foreign Key to reference table
	device TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__reference
	bodySite TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: deviceUseStatement__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recordedOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE diagnosticReport(

	resourceType TEXT, -- resourceType: diagnosticReport
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__reference
	"status" TEXT CHECK( "status" IN ('registered','partial','preliminary','final','amended','corrected','appended','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__reference
	resultsInterpreter BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__reference
	specimen BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__reference
	"result" BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__reference
	imagingStudy BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__reference
	media BOOLEAN, -- true if 1+ rows in DiagnosticReport_Media correspond to this entry
	conclusion TEXT,
	_conclusion TEXT, -- Foreign Key to element table
	conclusionCode BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__codeableConcept
	presentedForm BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport__attachment

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conclusion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE diagnosticReport_Media(

	id TEXT PRIMARY KEY,
	diagnosticReportId TEXT, -- Foreign Key to diagnosticReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_Media__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: diagnosticReport_Media__extension
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	link TEXT, -- Foreign Key to reference table

	FOREIGN KEY (diagnosticReportId)
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (link)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentManifest(

	resourceType TEXT, -- resourceType: documentManifest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest__extension
	masterIdentifier TEXT, -- Foreign Key to identifier table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest__identifier
	"status" TEXT CHECK( "status" IN ('current','superseded','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest__reference
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest__reference
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	content BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest__reference
	related BOOLEAN, -- true if 1+ rows in DocumentManifest_Related correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (masterIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentManifest_Related(

	id TEXT PRIMARY KEY,
	documentManifestId TEXT, -- Foreign Key to documentManifest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_Related__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentManifest_Related__extension
	identifier TEXT, -- Foreign Key to identifier table
	ref TEXT, -- Foreign Key to reference table

	FOREIGN KEY (documentManifestId)
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ref)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference(

	resourceType TEXT, -- resourceType: documentReference
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference__extension
	masterIdentifier TEXT, -- Foreign Key to identifier table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference__identifier
	"status" TEXT CHECK( "status" IN ('current','superseded','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	docStatus TEXT,
	_docStatus TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference__codeableConcept
	"subject" TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference__reference
	authenticator TEXT, -- Foreign Key to reference table
	custodian TEXT, -- Foreign Key to reference table
	relatesTo BOOLEAN, -- true if 1+ rows in DocumentReference_RelatesTo correspond to this entry
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	securityLabel BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference__codeableConcept
	content BOOLEAN, -- true if 1+ rows in DocumentReference_Content correspond to this entry
	context TEXT, -- Foreign Key to documentReference_Context table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (masterIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_docStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authenticator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (custodian)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference_RelatesTo(

	id TEXT PRIMARY KEY,
	documentReferenceId TEXT, -- Foreign Key to documentReference table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_RelatesTo__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_RelatesTo__extension
	"code" TEXT CHECK( "code" IN ('replaces','transforms','signs','appends') ),
	_code TEXT, -- Foreign Key to element table
	"target" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (documentReferenceId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference_Content(

	id TEXT PRIMARY KEY,
	documentReferenceId TEXT, -- Foreign Key to documentReference table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Content__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Content__extension
	attachment TEXT, -- Foreign Key to attachment table
	format TEXT, -- Foreign Key to coding table

	FOREIGN KEY (documentReferenceId)
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (format)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE documentReference_Context(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context__extension
	encounter BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context__reference
	"event" BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context__codeableConcept
	"period" TEXT, -- Foreign Key to period table
	facilityType TEXT, -- Foreign Key to codeableConcept table
	practiceSetting TEXT, -- Foreign Key to codeableConcept table
	sourcePatientInfo TEXT, -- Foreign Key to reference table
	related BOOLEAN, -- true if 1+ item is referenced from bridge table: documentReference_Context__reference

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facilityType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (practiceSetting)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourcePatientInfo)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis(

	resourceType TEXT, -- resourceType: effectEvidenceSynthesis
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis__relatedArtifact
	synthesisType TEXT, -- Foreign Key to codeableConcept table
	studyType TEXT, -- Foreign Key to codeableConcept table
	"population" TEXT, -- Foreign Key to reference table
	exposure TEXT, -- Foreign Key to reference table
	exposureAlternative TEXT, -- Foreign Key to reference table
	outcome TEXT, -- Foreign Key to reference table
	sampleSize TEXT, -- Foreign Key to effectEvidenceSynthesis_SampleSize table
	resultsByExposure BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_ResultsByExposure correspond to this entry
	effectEstimate BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_EffectEstimate correspond to this entry
	certainty BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_Certainty correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (synthesisType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("population")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposure)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureAlternative)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sampleSize)
		REFERENCES effectEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_SampleSize(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_SampleSize__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_SampleSize__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	numberOfStudies INTEGER,
	_numberOfStudies TEXT, -- Foreign Key to element table
	numberOfParticipants INTEGER,
	_numberOfParticipants TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfStudies)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfParticipants)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_ResultsByExposure(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesisId TEXT, -- Foreign Key to effectEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_ResultsByExposure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_ResultsByExposure__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	exposureState TEXT CHECK( exposureState IN ('exposure','exposure-alternative') ),
	_exposureState TEXT, -- Foreign Key to element table
	variantState TEXT, -- Foreign Key to codeableConcept table
	riskEvidenceSynthesis TEXT, -- Foreign Key to reference table

	FOREIGN KEY (effectEvidenceSynthesisId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exposureState)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (riskEvidenceSynthesis)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_EffectEstimate(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesisId TEXT, -- Foreign Key to effectEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_EffectEstimate__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_EffectEstimate__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	variantState TEXT, -- Foreign Key to codeableConcept table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	unitOfMeasure TEXT, -- Foreign Key to codeableConcept table
	precisionEstimate BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_PrecisionEstimate correspond to this entry

	FOREIGN KEY (effectEvidenceSynthesisId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfMeasure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_PrecisionEstimate(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_EffectEstimateId TEXT, -- Foreign Key to effectEvidenceSynthesis_EffectEstimate table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_PrecisionEstimate__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_PrecisionEstimate__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"level" REAL,
	_level TEXT, -- Foreign Key to element table
	"from" REAL,
	_from TEXT, -- Foreign Key to element table
	"to" REAL,
	_to TEXT, -- Foreign Key to element table

	FOREIGN KEY (effectEvidenceSynthesis_EffectEstimateId)
		REFERENCES effectEvidenceSynthesis_EffectEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_level)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_from)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_to)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_Certainty(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesisId TEXT, -- Foreign Key to effectEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty__extension
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_Certainty__annotation
	certaintySubcomponent BOOLEAN, -- true if 1+ rows in EffectEvidenceSynthesis_CertaintySubcomponent correspond to this entry

	FOREIGN KEY (effectEvidenceSynthesisId)
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE effectEvidenceSynthesis_CertaintySubcomponent(

	id TEXT PRIMARY KEY,
	effectEvidenceSynthesis_CertaintyId TEXT, -- Foreign Key to effectEvidenceSynthesis_Certainty table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: effectEvidenceSynthesis_CertaintySubcomponent__annotation

	FOREIGN KEY (effectEvidenceSynthesis_CertaintyId)
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter(

	resourceType TEXT, -- resourceType: encounter
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__identifier
	"status" TEXT CHECK( "status" IN ('planned','arrived','triaged','in-progress','onleave','finished','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	statusHistory BOOLEAN, -- true if 1+ rows in Encounter_StatusHistory correspond to this entry
	class TEXT, -- Foreign Key to coding table
	classHistory BOOLEAN, -- true if 1+ rows in Encounter_ClassHistory correspond to this entry
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__codeableConcept
	serviceType TEXT, -- Foreign Key to codeableConcept table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	episodeOfCare BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__reference
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__reference
	participant BOOLEAN, -- true if 1+ rows in Encounter_Participant correspond to this entry
	appointment BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__reference
	"period" TEXT, -- Foreign Key to period table
	"length" TEXT, -- Foreign Key to duration table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__reference
	diagnosis BOOLEAN, -- true if 1+ rows in Encounter_Diagnosis correspond to this entry
	account BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter__reference
	hospitalization TEXT, -- Foreign Key to encounter_Hospitalization table
	"location" BOOLEAN, -- true if 1+ rows in Encounter_Location correspond to this entry
	serviceProvider TEXT, -- Foreign Key to reference table
	partOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (serviceType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("length")
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (hospitalization)
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (serviceProvider)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_StatusHistory(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_StatusHistory__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_StatusHistory__extension
	"status" TEXT CHECK( "status" IN ('planned','arrived','triaged','in-progress','onleave','finished','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_ClassHistory(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_ClassHistory__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_ClassHistory__extension
	class TEXT, -- Foreign Key to coding table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Participant(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Participant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Participant__extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Participant__codeableConcept
	"period" TEXT, -- Foreign Key to period table
	individual TEXT, -- Foreign Key to reference table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (individual)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Diagnosis(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Diagnosis__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Diagnosis__extension
	"condition" TEXT, -- Foreign Key to reference table
	"use" TEXT, -- Foreign Key to codeableConcept table
	"rank" INTEGER,
	_rank TEXT, -- Foreign Key to element table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("use")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rank)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Hospitalization(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization__extension
	preAdmissionIdentifier TEXT, -- Foreign Key to identifier table
	origin TEXT, -- Foreign Key to reference table
	admitSource TEXT, -- Foreign Key to codeableConcept table
	reAdmission TEXT, -- Foreign Key to codeableConcept table
	dietPreference BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization__codeableConcept
	specialCourtesy BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization__codeableConcept
	specialArrangement BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Hospitalization__codeableConcept
	destination TEXT, -- Foreign Key to reference table
	dischargeDisposition TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (preAdmissionIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (origin)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (admitSource)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reAdmission)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (destination)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dischargeDisposition)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE encounter_Location(

	id TEXT PRIMARY KEY,
	encounterId TEXT, -- Foreign Key to encounter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Location__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: encounter_Location__extension
	"location" TEXT, -- Foreign Key to reference table
	"status" TEXT CHECK( "status" IN ('planned','active','reserved','completed') ),
	_status TEXT, -- Foreign Key to element table
	physicalType TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (encounterId)
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "endpoint"(

	resourceType TEXT, -- resourceType: endpoint
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__identifier
	"status" TEXT CHECK( "status" IN ('active','suspended','error','off','entered-in-error','test') ),
	_status TEXT, -- Foreign Key to element table
	connectionType TEXT, -- Foreign Key to coding table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	managingOrganization TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__contactPoint
	"period" TEXT, -- Foreign Key to period table
	payloadType BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__codeableConcept
	payloadMimeType BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__code
	_payloadMimeType BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__element
	"address" TEXT,
	_address TEXT, -- Foreign Key to element table
	header BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__string
	_header BOOLEAN, -- true if 1+ item is referenced from bridge table: endpoint__element

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (connectionType)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_address)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE enrollmentRequest(

	resourceType TEXT, -- resourceType: enrollmentRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentRequest__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	insurer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	candidate TEXT, -- Foreign Key to reference table
	coverage TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (candidate)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE enrollmentResponse(

	resourceType TEXT, -- resourceType: enrollmentResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: enrollmentResponse__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	request TEXT, -- Foreign Key to reference table
	outcome TEXT CHECK( outcome IN ('queued','complete','error','partial') ),
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	organization TEXT, -- Foreign Key to reference table
	requestProvider TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestProvider)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE episodeOfCare(

	resourceType TEXT, -- resourceType: episodeOfCare
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__identifier
	"status" TEXT CHECK( "status" IN ('planned','waitlist','active','onhold','finished','cancelled','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	statusHistory BOOLEAN, -- true if 1+ rows in EpisodeOfCare_StatusHistory correspond to this entry
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__codeableConcept
	diagnosis BOOLEAN, -- true if 1+ rows in EpisodeOfCare_Diagnosis correspond to this entry
	patient TEXT, -- Foreign Key to reference table
	managingOrganization TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	referralRequest BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__reference
	careManager TEXT, -- Foreign Key to reference table
	team BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__reference
	account BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (careManager)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE episodeOfCare_StatusHistory(

	id TEXT PRIMARY KEY,
	episodeOfCareId TEXT, -- Foreign Key to episodeOfCare table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_StatusHistory__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_StatusHistory__extension
	"status" TEXT CHECK( "status" IN ('planned','waitlist','active','onhold','finished','cancelled','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (episodeOfCareId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE episodeOfCare_Diagnosis(

	id TEXT PRIMARY KEY,
	episodeOfCareId TEXT, -- Foreign Key to episodeOfCare table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_Diagnosis__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: episodeOfCare_Diagnosis__extension
	"condition" TEXT, -- Foreign Key to reference table
	"role" TEXT, -- Foreign Key to codeableConcept table
	"rank" INTEGER,
	_rank TEXT, -- Foreign Key to element table

	FOREIGN KEY (episodeOfCareId)
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rank)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE eventDefinition(

	resourceType TEXT, -- resourceType: eventDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__relatedArtifact
	"trigger" BOOLEAN, -- true if 1+ item is referenced from bridge table: eventDefinition__triggerDefinition

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE evidence(

	resourceType TEXT, -- resourceType: evidence
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__relatedArtifact
	exposureBackground TEXT, -- Foreign Key to reference table
	exposureVariant BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__reference
	outcome BOOLEAN, -- true if 1+ item is referenced from bridge table: evidence__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureBackground)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE evidenceVariable(

	resourceType TEXT, -- resourceType: evidenceVariable
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable__relatedArtifact
	"type" TEXT CHECK( "type" IN ('dichotomous','continuous','descriptive') ),
	_type TEXT, -- Foreign Key to element table
	characteristic BOOLEAN, -- true if 1+ rows in EvidenceVariable_Characteristic correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE evidenceVariable_Characteristic(

	id TEXT PRIMARY KEY,
	evidenceVariableId TEXT, -- Foreign Key to evidenceVariable table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_Characteristic__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_Characteristic__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	definitionReference TEXT, -- Foreign Key to reference table
	definitionCanonical TEXT, -- pattern: ^\S*$
	_definitionCanonical TEXT, -- Foreign Key to element table
	definitionCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	definitionExpression TEXT, -- Foreign Key to expression table
	definitionDataRequirement TEXT, -- Foreign Key to dataRequirement table
	definitionTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	usageContext BOOLEAN, -- true if 1+ item is referenced from bridge table: evidenceVariable_Characteristic__usageContext
	exclude BOOLEAN,
	_exclude TEXT, -- Foreign Key to element table
	participantEffectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_participantEffectiveDateTime TEXT, -- Foreign Key to element table
	participantEffectivePeriod TEXT, -- Foreign Key to period table
	participantEffectiveDuration TEXT, -- Foreign Key to duration table
	participantEffectiveTiming TEXT, -- Foreign Key to timing table
	timeFromStart TEXT, -- Foreign Key to duration table
	groupMeasure TEXT CHECK( groupMeasure IN ('mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median') ),
	_groupMeasure TEXT, -- Foreign Key to element table

	FOREIGN KEY (evidenceVariableId)
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exclude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timeFromStart)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupMeasure)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario(

	resourceType TEXT, -- resourceType: exampleScenario
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__contactDetail
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	actor BOOLEAN, -- true if 1+ rows in ExampleScenario_Actor correspond to this entry
	"instance" BOOLEAN, -- true if 1+ rows in ExampleScenario_Instance correspond to this entry
	process BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__exampleScenario_Process
	workflow BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario__canonical

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Actor(

	id TEXT PRIMARY KEY,
	exampleScenarioId TEXT, -- Foreign Key to exampleScenario table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Actor__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Actor__extension
	actorId TEXT,
	_actorId TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('person','entity') ),
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (exampleScenarioId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actorId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Instance(

	id TEXT PRIMARY KEY,
	exampleScenarioId TEXT, -- Foreign Key to exampleScenario table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Instance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Instance__extension
	resourceId TEXT,
	_resourceId TEXT, -- Foreign Key to element table
	resourceType TEXT,
	_resourceType TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"version" BOOLEAN, -- true if 1+ rows in ExampleScenario_Version correspond to this entry
	containedInstance BOOLEAN, -- true if 1+ rows in ExampleScenario_ContainedInstance correspond to this entry

	FOREIGN KEY (exampleScenarioId)
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resourceType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Version(

	id TEXT PRIMARY KEY,
	exampleScenario_InstanceId TEXT, -- Foreign Key to exampleScenario_Instance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Version__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Version__extension
	versionId TEXT,
	_versionId TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (exampleScenario_InstanceId)
		REFERENCES exampleScenario_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_ContainedInstance(

	id TEXT PRIMARY KEY,
	exampleScenario_InstanceId TEXT, -- Foreign Key to exampleScenario_Instance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_ContainedInstance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_ContainedInstance__extension
	resourceId TEXT,
	_resourceId TEXT, -- Foreign Key to element table
	versionId TEXT,
	_versionId TEXT, -- Foreign Key to element table

	FOREIGN KEY (exampleScenario_InstanceId)
		REFERENCES exampleScenario_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_versionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Process(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Process__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Process__extension
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	preConditions TEXT,
	_preConditions TEXT, -- Foreign Key to element table
	postConditions TEXT,
	_postConditions TEXT, -- Foreign Key to element table
	step BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Process__exampleScenario_Step

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preConditions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_postConditions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Step(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Step__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Step__extension
	process BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Step__exampleScenario_Process
	pause BOOLEAN,
	_pause TEXT, -- Foreign Key to element table
	operation TEXT, -- Foreign Key to exampleScenario_Operation table
	alternative BOOLEAN, -- true if 1+ rows in ExampleScenario_Alternative correspond to this entry

	FOREIGN KEY (_pause)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES exampleScenario_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Operation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Operation__extension
	number TEXT,
	_number TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	initiator TEXT,
	_initiator TEXT, -- Foreign Key to element table
	receiver TEXT,
	_receiver TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	initiatorActive BOOLEAN,
	_initiatorActive TEXT, -- Foreign Key to element table
	receiverActive BOOLEAN,
	_receiverActive TEXT, -- Foreign Key to element table
	request TEXT, -- Foreign Key to exampleScenario_ContainedInstance table
	response TEXT, -- Foreign Key to exampleScenario_ContainedInstance table

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_initiator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_receiver)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_initiatorActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_receiverActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES exampleScenario_ContainedInstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES exampleScenario_ContainedInstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE exampleScenario_Alternative(

	id TEXT PRIMARY KEY,
	exampleScenario_StepId TEXT, -- Foreign Key to exampleScenario_Step table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Alternative__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Alternative__extension
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	step BOOLEAN, -- true if 1+ item is referenced from bridge table: exampleScenario_Alternative__exampleScenario_Step

	FOREIGN KEY (exampleScenario_StepId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit(

	resourceType TEXT, -- resourceType: explanationOfBenefit
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__identifier
	"status" TEXT CHECK( "status" IN ('active','cancelled','draft','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subType TEXT, -- Foreign Key to codeableConcept table
	"use" TEXT,
	_use TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	billablePeriod TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	enterer TEXT, -- Foreign Key to reference table
	insurer TEXT, -- Foreign Key to reference table
	"provider" TEXT, -- Foreign Key to reference table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	fundsReserveRequested TEXT, -- Foreign Key to codeableConcept table
	fundsReserve TEXT, -- Foreign Key to codeableConcept table
	related BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Related correspond to this entry
	prescription TEXT, -- Foreign Key to reference table
	originalPrescription TEXT, -- Foreign Key to reference table
	payee TEXT, -- Foreign Key to explanationOfBenefit_Payee table
	referral TEXT, -- Foreign Key to reference table
	facility TEXT, -- Foreign Key to reference table
	claim TEXT, -- Foreign Key to reference table
	claimResponse TEXT, -- Foreign Key to reference table
	outcome TEXT,
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__string
	_preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__element
	preAuthRefPeriod BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__period
	careTeam BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_CareTeam correspond to this entry
	supportingInfo BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_SupportingInfo correspond to this entry
	diagnosis BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Diagnosis correspond to this entry
	"procedure" BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Procedure correspond to this entry
	precedence INTEGER,
	_precedence TEXT, -- Foreign Key to element table
	insurance BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Insurance correspond to this entry
	accident TEXT, -- Foreign Key to explanationOfBenefit_Accident table
	item BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Item correspond to this entry
	addItem BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_AddItem correspond to this entry
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit__explanationOfBenefit_Adjudication
	total BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Total correspond to this entry
	payment TEXT, -- Foreign Key to explanationOfBenefit_Payment table
	formCode TEXT, -- Foreign Key to codeableConcept table
	form TEXT, -- Foreign Key to attachment table
	processNote BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_ProcessNote correspond to this entry
	benefitPeriod TEXT, -- Foreign Key to period table
	benefitBalance BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_BenefitBalance correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (billablePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (insurer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserveRequested)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundsReserve)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (prescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (originalPrescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES explanationOfBenefit_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referral)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (facility)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claim)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claimResponse)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precedence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (accident)
		REFERENCES explanationOfBenefit_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payment)
		REFERENCES explanationOfBenefit_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (formCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (benefitPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Related(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Related__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Related__extension
	claim TEXT, -- Foreign Key to reference table
	relationship TEXT, -- Foreign Key to codeableConcept table
	reference TEXT, -- Foreign Key to identifier table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (claim)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Payee(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payee__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payee__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	party TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (party)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_CareTeam(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_CareTeam__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_CareTeam__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"provider" TEXT, -- Foreign Key to reference table
	responsible BOOLEAN,
	_responsible TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table
	qualification TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responsible)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (qualification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_SupportingInfo(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SupportingInfo__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SupportingInfo__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	timingDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_timingDate TEXT, -- Foreign Key to element table
	timingPeriod TEXT, -- Foreign Key to period table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueReference TEXT, -- Foreign Key to reference table
	reason TEXT, -- Foreign Key to coding table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Diagnosis(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Diagnosis__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Diagnosis__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	diagnosisCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	diagnosisReference TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Diagnosis__codeableConcept
	onAdmission TEXT, -- Foreign Key to codeableConcept table
	packageCode TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diagnosisReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onAdmission)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Procedure(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure__codeableConcept
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	procedureCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	procedureReference TEXT, -- Foreign Key to reference table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Procedure__reference

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Insurance(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance__extension
	focal BOOLEAN,
	_focal TEXT, -- Foreign Key to element table
	coverage TEXT, -- Foreign Key to reference table
	preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance__string
	_preAuthRef BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Insurance__element

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_focal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (coverage)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Accident(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Accident__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Accident__extension
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Item(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__positiveInt
	_careTeamSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__element
	diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__positiveInt
	_diagnosisSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__element
	procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__positiveInt
	_procedureSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__element
	informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__positiveInt
	_informationSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__element
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__reference
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__codeableConcept
	encounter BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__reference
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Item__explanationOfBenefit_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Detail correspond to this entry

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Adjudication(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Adjudication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Adjudication__extension
	category TEXT, -- Foreign Key to codeableConcept table
	reason TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Detail(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_ItemId TEXT, -- Foreign Key to explanationOfBenefit_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__reference
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail__explanationOfBenefit_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_SubDetail correspond to this entry

	FOREIGN KEY (explanationOfBenefit_ItemId)
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_SubDetail(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_DetailId TEXT, -- Foreign Key to explanationOfBenefit_Detail table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	revenue TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	udi BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__reference
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail__explanationOfBenefit_Adjudication

	FOREIGN KEY (explanationOfBenefit_DetailId)
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (revenue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_AddItem(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__extension
	itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__positiveInt
	_itemSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__element
	detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__positiveInt
	_detailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__element
	subDetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__positiveInt
	_subDetailSequence BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__element
	"provider" BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__reference
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__codeableConcept
	programCode BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__codeableConcept
	servicedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_servicedDate TEXT, -- Foreign Key to element table
	servicedPeriod TEXT, -- Foreign Key to period table
	locationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	locationAddress TEXT, -- Foreign Key to address table
	locationReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	bodySite TEXT, -- Foreign Key to codeableConcept table
	subSite BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__codeableConcept
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_AddItem__explanationOfBenefit_Adjudication
	detail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Detail1 correspond to this entry

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_servicedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (servicedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (locationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Detail1(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_AddItemId TEXT, -- Foreign Key to explanationOfBenefit_AddItem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1__extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Detail1__explanationOfBenefit_Adjudication
	subDetail BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_SubDetail1 correspond to this entry

	FOREIGN KEY (explanationOfBenefit_AddItemId)
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_SubDetail1(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_Detail1Id TEXT, -- Foreign Key to explanationOfBenefit_Detail1 table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1__extension
	productOrService TEXT, -- Foreign Key to codeableConcept table
	modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1__codeableConcept
	quantity TEXT, -- Foreign Key to quantity table
	unitPrice TEXT, -- Foreign Key to money table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	net TEXT, -- Foreign Key to money table
	noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1__positiveInt
	_noteNumber BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1__element
	adjudication BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_SubDetail1__explanationOfBenefit_Adjudication

	FOREIGN KEY (explanationOfBenefit_Detail1Id)
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (productOrService)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitPrice)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (net)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Total(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Total__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Total__extension
	category TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Payment(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payment__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Payment__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	adjustment TEXT, -- Foreign Key to money table
	adjustmentReason TEXT, -- Foreign Key to codeableConcept table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table
	identifier TEXT, -- Foreign Key to identifier table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustment)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (adjustmentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_ProcessNote(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_ProcessNote__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_ProcessNote__extension
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('display','print','printoper') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"language" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_BenefitBalance(

	id TEXT PRIMARY KEY,
	explanationOfBenefitId TEXT, -- Foreign Key to explanationOfBenefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_BenefitBalance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_BenefitBalance__extension
	category TEXT, -- Foreign Key to codeableConcept table
	excluded BOOLEAN,
	_excluded TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	network TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	term TEXT, -- Foreign Key to codeableConcept table
	financial BOOLEAN, -- true if 1+ rows in ExplanationOfBenefit_Financial correspond to this entry

	FOREIGN KEY (explanationOfBenefitId)
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_excluded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (network)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (term)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE explanationOfBenefit_Financial(

	id TEXT PRIMARY KEY,
	explanationOfBenefit_BenefitBalanceId TEXT, -- Foreign Key to explanationOfBenefit_BenefitBalance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Financial__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: explanationOfBenefit_Financial__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	allowedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_allowedUnsignedInt TEXT, -- Foreign Key to element table
	allowedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_allowedString TEXT, -- Foreign Key to element table
	allowedMoney TEXT, -- Foreign Key to money table
	usedUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_usedUnsignedInt TEXT, -- Foreign Key to element table
	usedMoney TEXT, -- Foreign Key to money table

	FOREIGN KEY (explanationOfBenefit_BenefitBalanceId)
		REFERENCES explanationOfBenefit_BenefitBalance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (allowedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usedUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (usedMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE familyMemberHistory(

	resourceType TEXT, -- resourceType: familyMemberHistory
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__element
	"status" TEXT CHECK( "status" IN ('partial','completed','entered-in-error','health-unknown') ),
	_status TEXT, -- Foreign Key to element table
	dataAbsentReason TEXT, -- Foreign Key to codeableConcept table
	patient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	relationship TEXT, -- Foreign Key to codeableConcept table
	sex TEXT, -- Foreign Key to codeableConcept table
	bornPeriod TEXT, -- Foreign Key to period table
	bornDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_bornDate TEXT, -- Foreign Key to element table
	bornString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_bornString TEXT, -- Foreign Key to element table
	ageAge TEXT, -- Foreign Key to age table
	ageRange TEXT, -- Foreign Key to range table
	ageString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_ageString TEXT, -- Foreign Key to element table
	estimatedAge BOOLEAN,
	_estimatedAge TEXT, -- Foreign Key to element table
	deceasedBoolean BOOLEAN, -- pattern: ^true|false$
	_deceasedBoolean TEXT, -- Foreign Key to element table
	deceasedAge TEXT, -- Foreign Key to age table
	deceasedRange TEXT, -- Foreign Key to range table
	deceasedDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_deceasedDate TEXT, -- Foreign Key to element table
	deceasedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_deceasedString TEXT, -- Foreign Key to element table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory__annotation
	"condition" BOOLEAN, -- true if 1+ rows in FamilyMemberHistory_Condition correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataAbsentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sex)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bornPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_bornDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_bornString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ageAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ageRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_ageString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_estimatedAge)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deceasedAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deceasedRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE familyMemberHistory_Condition(

	id TEXT PRIMARY KEY,
	familyMemberHistoryId TEXT, -- Foreign Key to familyMemberHistory table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_Condition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_Condition__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	outcome TEXT, -- Foreign Key to codeableConcept table
	contributedToDeath BOOLEAN,
	_contributedToDeath TEXT, -- Foreign Key to element table
	onsetAge TEXT, -- Foreign Key to age table
	onsetRange TEXT, -- Foreign Key to range table
	onsetPeriod TEXT, -- Foreign Key to period table
	onsetString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_onsetString TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: familyMemberHistory_Condition__annotation

	FOREIGN KEY (familyMemberHistoryId)
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contributedToDeath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onsetPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_onsetString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE flag(

	resourceType TEXT, -- resourceType: flag
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: flag__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: flag__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: flag__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: flag__identifier
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: flag__codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	encounter TEXT, -- Foreign Key to reference table
	author TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE goal(

	resourceType TEXT, -- resourceType: goal
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__identifier
	lifecycleStatus TEXT CHECK( lifecycleStatus IN ('proposed','planned','accepted','active','on-hold','completed','cancelled','entered-in-error','rejected') ),
	_lifecycleStatus TEXT, -- Foreign Key to element table
	achievementStatus TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__codeableConcept
	"priority" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	startDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_startDate TEXT, -- Foreign Key to element table
	startCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"target" BOOLEAN, -- true if 1+ rows in Goal_Target correspond to this entry
	statusDate DATE,
	_statusDate TEXT, -- Foreign Key to element table
	statusReason TEXT,
	_statusReason TEXT, -- Foreign Key to element table
	expressedBy TEXT, -- Foreign Key to reference table
	addresses BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__annotation
	outcomeCode BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__codeableConcept
	outcomeReference BOOLEAN, -- true if 1+ item is referenced from bridge table: goal__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lifecycleStatus)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (achievementStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("description")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_startDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (startCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expressedBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE goal_Target(

	id TEXT PRIMARY KEY,
	goalId TEXT, -- Foreign Key to goal table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_Target__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: goal_Target__extension
	measure TEXT, -- Foreign Key to codeableConcept table
	detailQuantity TEXT, -- Foreign Key to quantity table
	detailRange TEXT, -- Foreign Key to range table
	detailCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	detailString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_detailString TEXT, -- Foreign Key to element table
	detailBoolean BOOLEAN, -- pattern: ^true|false$
	_detailBoolean TEXT, -- Foreign Key to element table
	detailInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_detailInteger TEXT, -- Foreign Key to element table
	detailRatio TEXT, -- Foreign Key to ratio table
	dueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_dueDate TEXT, -- Foreign Key to element table
	dueDuration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (goalId)
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detailInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition(

	resourceType TEXT, -- resourceType: graphDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"start" TEXT,
	_start TEXT, -- Foreign Key to element table
	"profile" TEXT,
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition__graphDefinition_Link

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition_Link(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Link__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Link__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	sliceName TEXT,
	_sliceName TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"target" BOOLEAN, -- true if 1+ rows in GraphDefinition_Target correspond to this entry

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sliceName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition_Target(

	id TEXT PRIMARY KEY,
	graphDefinition_LinkId TEXT, -- Foreign Key to graphDefinition_Link table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Target__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Target__extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	params TEXT,
	_params TEXT, -- Foreign Key to element table
	"profile" TEXT,
	compartment BOOLEAN, -- true if 1+ rows in GraphDefinition_Compartment correspond to this entry
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Target__graphDefinition_Link

	FOREIGN KEY (graphDefinition_LinkId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_params)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE graphDefinition_Compartment(

	id TEXT PRIMARY KEY,
	graphDefinition_TargetId TEXT, -- Foreign Key to graphDefinition_Target table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Compartment__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: graphDefinition_Compartment__extension
	"use" TEXT CHECK( "use" IN ('condition','requirement') ),
	_use TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"rule" TEXT CHECK( "rule" IN ('identical','matching','different','custom') ),
	_rule TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (graphDefinition_TargetId)
		REFERENCES graphDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rule)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "group"(

	resourceType TEXT, -- resourceType: group
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: group__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: group__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: group__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: group__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('person','animal','practitioner','device','medication','substance') ),
	_type TEXT, -- Foreign Key to element table
	actual BOOLEAN,
	_actual TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	quantity INTEGER,
	_quantity TEXT, -- Foreign Key to element table
	managingEntity TEXT, -- Foreign Key to reference table
	characteristic BOOLEAN, -- true if 1+ rows in Group_Characteristic correspond to this entry
	"member" BOOLEAN, -- true if 1+ rows in Group_Member correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actual)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_quantity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingEntity)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE group_Characteristic(

	id TEXT PRIMARY KEY,
	groupId TEXT, -- Foreign Key to "group" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Characteristic__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Characteristic__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueReference TEXT, -- Foreign Key to reference table
	exclude BOOLEAN,
	_exclude TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (groupId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exclude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE group_Member(

	id TEXT PRIMARY KEY,
	groupId TEXT, -- Foreign Key to "group" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Member__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: group_Member__extension
	entity TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	inactive BOOLEAN,
	_inactive TEXT, -- Foreign Key to element table

	FOREIGN KEY (groupId)
		REFERENCES "group" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (entity)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inactive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE guidanceResponse(

	resourceType TEXT, -- resourceType: guidanceResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__extension
	requestIdentifier TEXT, -- Foreign Key to identifier table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__identifier
	moduleUri TEXT, -- pattern: ^\S*$
	_moduleUri TEXT, -- Foreign Key to element table
	moduleCanonical TEXT, -- pattern: ^\S*$
	_moduleCanonical TEXT, -- Foreign Key to element table
	moduleCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT CHECK( "status" IN ('success','data-requested','data-required','in-progress','failure','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime DATETIME,
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	performer TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__annotation
	evaluationMessage BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__reference
	outputParameters TEXT, -- Foreign Key to reference table
	"result" TEXT, -- Foreign Key to reference table
	dataRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: guidanceResponse__dataRequirement

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_moduleUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_moduleCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (moduleCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outputParameters)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("result")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService(

	resourceType TEXT, -- resourceType: healthcareService
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	providedBy TEXT, -- Foreign Key to reference table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__reference
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	extraDetails TEXT,
	_extraDetails TEXT, -- Foreign Key to element table
	photo TEXT, -- Foreign Key to attachment table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__contactPoint
	coverageArea BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__reference
	serviceProvisionCode BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	eligibility BOOLEAN, -- true if 1+ rows in HealthcareService_Eligibility correspond to this entry
	program BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	characteristic BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	communication BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	referralMethod BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__codeableConcept
	appointmentRequired BOOLEAN,
	_appointmentRequired TEXT, -- Foreign Key to element table
	availableTime BOOLEAN, -- true if 1+ rows in HealthcareService_AvailableTime correspond to this entry
	notAvailable BOOLEAN, -- true if 1+ rows in HealthcareService_NotAvailable correspond to this entry
	availabilityExceptions TEXT,
	_availabilityExceptions TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (providedBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_extraDetails)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (photo)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_appointmentRequired)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availabilityExceptions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService_Eligibility(

	id TEXT PRIMARY KEY,
	healthcareServiceId TEXT, -- Foreign Key to healthcareService table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_Eligibility__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_Eligibility__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (healthcareServiceId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService_AvailableTime(

	id TEXT PRIMARY KEY,
	healthcareServiceId TEXT, -- Foreign Key to healthcareService table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_AvailableTime__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_AvailableTime__extension
	daysOfWeek BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: mon/tue/wed/thu/fri/sat/sun,
	_daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_AvailableTime__element
	allDay BOOLEAN,
	_allDay TEXT, -- Foreign Key to element table
	availableStartTime TIME,
	_availableStartTime TEXT, -- Foreign Key to element table
	availableEndTime TIME,
	_availableEndTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (healthcareServiceId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allDay)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableStartTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableEndTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE healthcareService_NotAvailable(

	id TEXT PRIMARY KEY,
	healthcareServiceId TEXT, -- Foreign Key to healthcareService table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_NotAvailable__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: healthcareService_NotAvailable__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	during TEXT, -- Foreign Key to period table

	FOREIGN KEY (healthcareServiceId)
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (during)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy(

	resourceType TEXT, -- resourceType: imagingStudy
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__identifier
	"status" TEXT CHECK( "status" IN ('registered','available','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	modality BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__coding
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"started" DATETIME,
	_started TEXT, -- Foreign Key to element table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__reference
	referrer TEXT, -- Foreign Key to reference table
	interpreter BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__reference
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__reference
	numberOfSeries INTEGER,
	_numberOfSeries TEXT, -- Foreign Key to element table
	numberOfInstances INTEGER,
	_numberOfInstances TEXT, -- Foreign Key to element table
	procedureReference TEXT, -- Foreign Key to reference table
	procedureCode BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__codeableConcept
	"location" TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy__annotation
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	series BOOLEAN, -- true if 1+ rows in ImagingStudy_Series correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_started)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referrer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfSeries)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfInstances)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (procedureReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy_Series(

	id TEXT PRIMARY KEY,
	imagingStudyId TEXT, -- Foreign Key to imagingStudy table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series__extension
	uid TEXT, -- Foreign Key to id table
	_uid TEXT, -- Foreign Key to element table
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	modality TEXT, -- Foreign Key to coding table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	numberOfInstances INTEGER,
	_numberOfInstances TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series__reference
	bodySite TEXT, -- Foreign Key to coding table
	laterality TEXT, -- Foreign Key to coding table
	specimen BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Series__reference
	"started" DATETIME,
	_started TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ rows in ImagingStudy_Performer correspond to this entry
	"instance" BOOLEAN, -- true if 1+ rows in ImagingStudy_Instance correspond to this entry

	FOREIGN KEY (imagingStudyId)
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (uid)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modality)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfInstances)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (laterality)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_started)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy_Performer(

	id TEXT PRIMARY KEY,
	imagingStudy_SeriesId TEXT, -- Foreign Key to imagingStudy_Series table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Performer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Performer__extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (imagingStudy_SeriesId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE imagingStudy_Instance(

	id TEXT PRIMARY KEY,
	imagingStudy_SeriesId TEXT, -- Foreign Key to imagingStudy_Series table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Instance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: imagingStudy_Instance__extension
	uid TEXT, -- Foreign Key to id table
	_uid TEXT, -- Foreign Key to element table
	sopClass TEXT, -- Foreign Key to coding table
	number INTEGER,
	_number TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table

	FOREIGN KEY (imagingStudy_SeriesId)
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (uid)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sopClass)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_number)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization(

	resourceType TEXT, -- resourceType: immunization
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	vaccineCode TEXT, -- Foreign Key to codeableConcept table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrenceString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_occurrenceString TEXT, -- Foreign Key to element table
	recorded DATETIME,
	_recorded TEXT, -- Foreign Key to element table
	primarySource BOOLEAN,
	_primarySource TEXT, -- Foreign Key to element table
	reportOrigin TEXT, -- Foreign Key to codeableConcept table
	"location" TEXT, -- Foreign Key to reference table
	manufacturer TEXT, -- Foreign Key to reference table
	lotNumber TEXT,
	_lotNumber TEXT, -- Foreign Key to element table
	expirationDate DATE,
	_expirationDate TEXT, -- Foreign Key to element table
	"site" TEXT, -- Foreign Key to codeableConcept table
	"route" TEXT, -- Foreign Key to codeableConcept table
	doseQuantity TEXT, -- Foreign Key to quantity table
	performer BOOLEAN, -- true if 1+ rows in Immunization_Performer correspond to this entry
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__annotation
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__reference
	isSubpotent BOOLEAN,
	_isSubpotent TEXT, -- Foreign Key to element table
	subpotentReason BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__codeableConcept
	education BOOLEAN, -- true if 1+ rows in Immunization_Education correspond to this entry
	programEligibility BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization__codeableConcept
	fundingSource TEXT, -- Foreign Key to codeableConcept table
	reaction BOOLEAN, -- true if 1+ rows in Immunization_Reaction correspond to this entry
	protocolApplied BOOLEAN, -- true if 1+ rows in Immunization_ProtocolApplied correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (vaccineCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recorded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_primarySource)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reportOrigin)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lotNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expirationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("site")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("route")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isSubpotent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fundingSource)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_Performer(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Performer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Performer__extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_Education(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Education__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Education__extension
	documentType TEXT,
	_documentType TEXT, -- Foreign Key to element table
	reference TEXT,
	_reference TEXT, -- Foreign Key to element table
	publicationDate DATETIME,
	_publicationDate TEXT, -- Foreign Key to element table
	presentationDate DATETIME,
	_presentationDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publicationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_presentationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_Reaction(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Reaction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_Reaction__extension
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	detail TEXT, -- Foreign Key to reference table
	reported BOOLEAN,
	_reported TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detail)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reported)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunization_ProtocolApplied(

	id TEXT PRIMARY KEY,
	immunizationId TEXT, -- Foreign Key to immunization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_ProtocolApplied__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_ProtocolApplied__extension
	series TEXT,
	_series TEXT, -- Foreign Key to element table
	authority TEXT, -- Foreign Key to reference table
	targetDisease BOOLEAN, -- true if 1+ item is referenced from bridge table: immunization_ProtocolApplied__codeableConcept
	doseNumberPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_doseNumberPositiveInt TEXT, -- Foreign Key to element table
	doseNumberString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_doseNumberString TEXT, -- Foreign Key to element table
	seriesDosesPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_seriesDosesPositiveInt TEXT, -- Foreign Key to element table
	seriesDosesString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_seriesDosesString TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationId)
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_series)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationEvaluation(

	resourceType TEXT, -- resourceType: immunizationEvaluation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	authority TEXT, -- Foreign Key to reference table
	targetDisease TEXT, -- Foreign Key to codeableConcept table
	immunizationEvent TEXT, -- Foreign Key to reference table
	doseStatus TEXT, -- Foreign Key to codeableConcept table
	doseStatusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationEvaluation__codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	series TEXT,
	_series TEXT, -- Foreign Key to element table
	doseNumberPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_doseNumberPositiveInt TEXT, -- Foreign Key to element table
	doseNumberString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_doseNumberString TEXT, -- Foreign Key to element table
	seriesDosesPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_seriesDosesPositiveInt TEXT, -- Foreign Key to element table
	seriesDosesString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_seriesDosesString TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetDisease)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (immunizationEvent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_series)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationRecommendation(

	resourceType TEXT, -- resourceType: immunizationRecommendation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation__identifier
	patient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	authority TEXT, -- Foreign Key to reference table
	recommendation BOOLEAN, -- true if 1+ rows in ImmunizationRecommendation_Recommendation correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationRecommendation_Recommendation(

	id TEXT PRIMARY KEY,
	immunizationRecommendationId TEXT, -- Foreign Key to immunizationRecommendation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation__extension
	vaccineCode BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation__codeableConcept
	targetDisease TEXT, -- Foreign Key to codeableConcept table
	contraindicatedVaccineCode BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation__codeableConcept
	forecastStatus TEXT, -- Foreign Key to codeableConcept table
	forecastReason BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation__codeableConcept
	dateCriterion BOOLEAN, -- true if 1+ rows in ImmunizationRecommendation_DateCriterion correspond to this entry
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	series TEXT,
	_series TEXT, -- Foreign Key to element table
	doseNumberPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_doseNumberPositiveInt TEXT, -- Foreign Key to element table
	doseNumberString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_doseNumberString TEXT, -- Foreign Key to element table
	seriesDosesPositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_seriesDosesPositiveInt TEXT, -- Foreign Key to element table
	seriesDosesString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_seriesDosesString TEXT, -- Foreign Key to element table
	supportingImmunization BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation__reference
	supportingPatientInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_Recommendation__reference

	FOREIGN KEY (immunizationRecommendationId)
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetDisease)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (forecastStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_series)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doseNumberString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesPositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_seriesDosesString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE immunizationRecommendation_DateCriterion(

	id TEXT PRIMARY KEY,
	immunizationRecommendation_RecommendationId TEXT, -- Foreign Key to immunizationRecommendation_Recommendation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_DateCriterion__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: immunizationRecommendation_DateCriterion__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"value" DATETIME,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (immunizationRecommendation_RecommendationId)
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide(

	resourceType TEXT, -- resourceType: implementationGuide
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	packageId TEXT, -- Foreign Key to id table
	_packageId TEXT, -- Foreign Key to element table
	license TEXT CHECK( license IN ('not-open-source','0BSD','AAL','Abstyles','Adobe-2006','Adobe-Glyph','ADSL','AFL-1.1','AFL-1.2','AFL-2.0','AFL-2.1','AFL-3.0','Afmparse','AGPL-1.0-only','AGPL-1.0-or-later','AGPL-3.0-only','AGPL-3.0-or-later','Aladdin','AMDPLPA','AML','AMPAS','ANTLR-PD','Apache-1.0','Apache-1.1','Apache-2.0','APAFML','APL-1.0','APSL-1.0','APSL-1.1','APSL-1.2','APSL-2.0','Artistic-1.0-cl8','Artistic-1.0-Perl','Artistic-1.0','Artistic-2.0','Bahyph','Barr','Beerware','BitTorrent-1.0','BitTorrent-1.1','Borceux','BSD-1-Clause','BSD-2-Clause-FreeBSD','BSD-2-Clause-NetBSD','BSD-2-Clause-Patent','BSD-2-Clause','BSD-3-Clause-Attribution','BSD-3-Clause-Clear','BSD-3-Clause-LBNL','BSD-3-Clause-No-Nuclear-License-2014','BSD-3-Clause-No-Nuclear-License','BSD-3-Clause-No-Nuclear-Warranty','BSD-3-Clause','BSD-4-Clause-UC','BSD-4-Clause','BSD-Protection','BSD-Source-Code','BSL-1.0','bzip2-1.0.5','bzip2-1.0.6','Caldera','CATOSL-1.1','CC-BY-1.0','CC-BY-2.0','CC-BY-2.5','CC-BY-3.0','CC-BY-4.0','CC-BY-NC-1.0','CC-BY-NC-2.0','CC-BY-NC-2.5','CC-BY-NC-3.0','CC-BY-NC-4.0','CC-BY-NC-ND-1.0','CC-BY-NC-ND-2.0','CC-BY-NC-ND-2.5','CC-BY-NC-ND-3.0','CC-BY-NC-ND-4.0','CC-BY-NC-SA-1.0','CC-BY-NC-SA-2.0','CC-BY-NC-SA-2.5','CC-BY-NC-SA-3.0','CC-BY-NC-SA-4.0','CC-BY-ND-1.0','CC-BY-ND-2.0','CC-BY-ND-2.5','CC-BY-ND-3.0','CC-BY-ND-4.0','CC-BY-SA-1.0','CC-BY-SA-2.0','CC-BY-SA-2.5','CC-BY-SA-3.0','CC-BY-SA-4.0','CC0-1.0','CDDL-1.0','CDDL-1.1','CDLA-Permissive-1.0','CDLA-Sharing-1.0','CECILL-1.0','CECILL-1.1','CECILL-2.0','CECILL-2.1','CECILL-B','CECILL-C','ClArtistic','CNRI-Jython','CNRI-Python-GPL-Compatible','CNRI-Python','Condor-1.1','CPAL-1.0','CPL-1.0','CPOL-1.02','Crossword','CrystalStacker','CUA-OPL-1.0','Cube','curl','D-FSL-1.0','diffmark','DOC','Dotseqn','DSDP','dvipdfm','ECL-1.0','ECL-2.0','EFL-1.0','EFL-2.0','eGenix','Entessa','EPL-1.0','EPL-2.0','ErlPL-1.1','EUDatagrid','EUPL-1.0','EUPL-1.1','EUPL-1.2','Eurosym','Fair','Frameworx-1.0','FreeImage','FSFAP','FSFUL','FSFULLR','FTL','GFDL-1.1-only','GFDL-1.1-or-later','GFDL-1.2-only','GFDL-1.2-or-later','GFDL-1.3-only','GFDL-1.3-or-later','Giftware','GL2PS','Glide','Glulxe','gnuplot','GPL-1.0-only','GPL-1.0-or-later','GPL-2.0-only','GPL-2.0-or-later','GPL-3.0-only','GPL-3.0-or-later','gSOAP-1.3b','HaskellReport','HPND','IBM-pibs','ICU','IJG','ImageMagick','iMatix','Imlib2','Info-ZIP','Intel-ACPI','Intel','Interbase-1.0','IPA','IPL-1.0','ISC','JasPer-2.0','JSON','LAL-1.2','LAL-1.3','Latex2e','Leptonica','LGPL-2.0-only','LGPL-2.0-or-later','LGPL-2.1-only','LGPL-2.1-or-later','LGPL-3.0-only','LGPL-3.0-or-later','LGPLLR','Libpng','libtiff','LiLiQ-P-1.1','LiLiQ-R-1.1','LiLiQ-Rplus-1.1','Linux-OpenIB','LPL-1.0','LPL-1.02','LPPL-1.0','LPPL-1.1','LPPL-1.2','LPPL-1.3a','LPPL-1.3c','MakeIndex','MirOS','MIT-0','MIT-advertising','MIT-CMU','MIT-enna','MIT-feh','MIT','MITNFA','Motosoto','mpich2','MPL-1.0','MPL-1.1','MPL-2.0-no-copyleft-exception','MPL-2.0','MS-PL','MS-RL','MTLL','Multics','Mup','NASA-1.3','Naumen','NBPL-1.0','NCSA','Net-SNMP','NetCDF','Newsletr','NGPL','NLOD-1.0','NLPL','Nokia','NOSL','Noweb','NPL-1.0','NPL-1.1','NPOSL-3.0','NRL','NTP','OCCT-PL','OCLC-2.0','ODbL-1.0','OFL-1.0','OFL-1.1','OGTSL','OLDAP-1.1','OLDAP-1.2','OLDAP-1.3','OLDAP-1.4','OLDAP-2.0.1','OLDAP-2.0','OLDAP-2.1','OLDAP-2.2.1','OLDAP-2.2.2','OLDAP-2.2','OLDAP-2.3','OLDAP-2.4','OLDAP-2.5','OLDAP-2.6','OLDAP-2.7','OLDAP-2.8','OML','OpenSSL','OPL-1.0','OSET-PL-2.1','OSL-1.0','OSL-1.1','OSL-2.0','OSL-2.1','OSL-3.0','PDDL-1.0','PHP-3.0','PHP-3.01','Plexus','PostgreSQL','psfrag','psutils','Python-2.0','Qhull','QPL-1.0','Rdisc','RHeCos-1.1','RPL-1.1','RPL-1.5','RPSL-1.0','RSA-MD','RSCPL','Ruby','SAX-PD','Saxpath','SCEA','Sendmail','SGI-B-1.0','SGI-B-1.1','SGI-B-2.0','SimPL-2.0','SISSL-1.2','SISSL','Sleepycat','SMLNJ','SMPPL','SNIA','Spencer-86','Spencer-94','Spencer-99','SPL-1.0','SugarCRM-1.1.3','SWL','TCL','TCP-wrappers','TMate','TORQUE-1.1','TOSL','Unicode-DFS-2015','Unicode-DFS-2016','Unicode-TOU','Unlicense','UPL-1.0','Vim','VOSTROM','VSL-1.0','W3C-19980720','W3C-20150513','W3C','Watcom-1.0','Wsuipa','WTFPL','X11','Xerox','XFree86-1.1','xinetd','Xnet','xpp','XSkat','YPL-1.0','YPL-1.1','Zed','Zend-2.0','Zimbra-1.3','Zimbra-1.4','zlib-acknowledgement','Zlib','ZPL-1.1','ZPL-2.0','ZPL-2.1') ),
	_license TEXT, -- Foreign Key to element table
	fhirVersion BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: 0.01/0.05/0.06/0.11/0.0.80/0.0.81/0.0.82/0.4.0/0.5.0/1.0.0/1.0.1/1.0.2/1.1.0/1.4.0/1.6.0/1.8.0/3.0.0/3.0.1/3.3.0/3.5.0/4.0.0/4.0.1,
	_fhirVersion BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide__element
	dependsOn BOOLEAN, -- true if 1+ rows in ImplementationGuide_DependsOn correspond to this entry
	"global" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Global correspond to this entry
	"definition" TEXT, -- Foreign Key to implementationGuide_Definition table
	manifest TEXT, -- Foreign Key to implementationGuide_Manifest table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_packageId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_license)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("definition")
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manifest)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_DependsOn(

	id TEXT PRIMARY KEY,
	implementationGuideId TEXT, -- Foreign Key to implementationGuide table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_DependsOn__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_DependsOn__extension
	uri TEXT,
	packageId TEXT, -- Foreign Key to id table
	_packageId TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuideId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packageId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_packageId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Global(

	id TEXT PRIMARY KEY,
	implementationGuideId TEXT, -- Foreign Key to implementationGuide table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Global__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Global__extension
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	"profile" TEXT,

	FOREIGN KEY (implementationGuideId)
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Definition(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Definition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Definition__extension
	grouping BOOLEAN, -- true if 1+ rows in ImplementationGuide_Grouping correspond to this entry
	"resource" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Resource correspond to this entry
	page TEXT, -- Foreign Key to implementationGuide_Page table
	"parameter" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Parameter correspond to this entry
	template BOOLEAN, -- true if 1+ rows in ImplementationGuide_Template correspond to this entry

	FOREIGN KEY (page)
		REFERENCES implementationGuide_Page (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Grouping(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Grouping__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Grouping__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Resource(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource__extension
	reference TEXT, -- Foreign Key to reference table
	fhirVersion BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: 0.01/0.05/0.06/0.11/0.0.80/0.0.81/0.0.82/0.4.0/0.5.0/1.0.0/1.0.1/1.0.2/1.1.0/1.4.0/1.6.0/1.8.0/3.0.0/3.0.1/3.3.0/3.5.0/4.0.0/4.0.1,
	_fhirVersion BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource__element
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	exampleBoolean BOOLEAN, -- pattern: ^true|false$
	_exampleBoolean TEXT, -- Foreign Key to element table
	exampleCanonical TEXT, -- pattern: ^\S*$
	_exampleCanonical TEXT, -- Foreign Key to element table
	groupingId TEXT, -- Foreign Key to id table
	_groupingId TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupingId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupingId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Page(

	id TEXT PRIMARY KEY,
	implementationGuide_PageId TEXT, -- Foreign Key to implementationGuide_Page table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page__extension
	nameUrl TEXT, -- pattern: ^\S*$
	_nameUrl TEXT, -- Foreign Key to element table
	nameReference TEXT, -- Foreign Key to reference table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	generation TEXT CHECK( generation IN ('html','markdown','xml','generated') ),
	_generation TEXT, -- Foreign Key to element table
	page BOOLEAN, -- true if 1+ rows in ImplementationGuide_Page correspond to this entry

	FOREIGN KEY (implementationGuide_PageId)
		REFERENCES implementationGuide_Page (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_nameUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nameReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_generation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Parameter(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Parameter__extension
	"code" TEXT CHECK( "code" IN ('apply','path-resource','path-pages','path-tx-cache','expansion-parameter','rule-broken-links','generate-xml','generate-json','generate-turtle','html-template') ),
	_code TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Template(

	id TEXT PRIMARY KEY,
	implementationGuide_DefinitionId TEXT, -- Foreign Key to implementationGuide_Definition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Template__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Template__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	"scope" TEXT,
	_scope TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_DefinitionId)
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_scope)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Manifest(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__extension
	rendering TEXT,
	_rendering TEXT, -- Foreign Key to element table
	"resource" BOOLEAN, -- true if 1+ rows in ImplementationGuide_Resource1 correspond to this entry
	page BOOLEAN, -- true if 1+ rows in ImplementationGuide_Page1 correspond to this entry
	"image" BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__string
	_image BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__element
	other BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__string
	_other BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Manifest__element

	FOREIGN KEY (_rendering)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Resource1(

	id TEXT PRIMARY KEY,
	implementationGuide_ManifestId TEXT, -- Foreign Key to implementationGuide_Manifest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Resource1__extension
	reference TEXT, -- Foreign Key to reference table
	exampleBoolean BOOLEAN, -- pattern: ^true|false$
	_exampleBoolean TEXT, -- Foreign Key to element table
	exampleCanonical TEXT, -- pattern: ^\S*$
	_exampleCanonical TEXT, -- Foreign Key to element table
	relativePath TEXT,
	_relativePath TEXT, -- Foreign Key to element table

	FOREIGN KEY (implementationGuide_ManifestId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exampleCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relativePath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE implementationGuide_Page1(

	id TEXT PRIMARY KEY,
	implementationGuide_ManifestId TEXT, -- Foreign Key to implementationGuide_Manifest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	anchor BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1__string
	_anchor BOOLEAN, -- true if 1+ item is referenced from bridge table: implementationGuide_Page1__element

	FOREIGN KEY (implementationGuide_ManifestId)
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan(

	resourceType TEXT, -- resourceType: insurancePlan
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__identifier
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__codeableConcept
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__element
	"period" TEXT, -- Foreign Key to period table
	ownedBy TEXT, -- Foreign Key to reference table
	administeredBy TEXT, -- Foreign Key to reference table
	coverageArea BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__reference
	contact BOOLEAN, -- true if 1+ rows in InsurancePlan_Contact correspond to this entry
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__reference
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan__reference
	coverage BOOLEAN, -- true if 1+ rows in InsurancePlan_Coverage correspond to this entry
	"plan" BOOLEAN, -- true if 1+ rows in InsurancePlan_Plan correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ownedBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (administeredBy)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Contact(

	id TEXT PRIMARY KEY,
	insurancePlanId TEXT, -- Foreign Key to insurancePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Contact__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Contact__extension
	purpose TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT, -- Foreign Key to humanName table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Contact__contactPoint
	"address" TEXT, -- Foreign Key to address table

	FOREIGN KEY (insurancePlanId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (purpose)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Coverage(

	id TEXT PRIMARY KEY,
	insurancePlanId TEXT, -- Foreign Key to insurancePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Coverage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Coverage__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Coverage__reference
	benefit BOOLEAN, -- true if 1+ rows in InsurancePlan_Benefit correspond to this entry

	FOREIGN KEY (insurancePlanId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Benefit(

	id TEXT PRIMARY KEY,
	insurancePlan_CoverageId TEXT, -- Foreign Key to insurancePlan_Coverage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	requirement TEXT,
	_requirement TEXT, -- Foreign Key to element table
	"limit" BOOLEAN, -- true if 1+ rows in InsurancePlan_Limit correspond to this entry

	FOREIGN KEY (insurancePlan_CoverageId)
		REFERENCES insurancePlan_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Limit(

	id TEXT PRIMARY KEY,
	insurancePlan_BenefitId TEXT, -- Foreign Key to insurancePlan_Benefit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Limit__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Limit__extension
	"value" TEXT, -- Foreign Key to quantity table
	"code" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (insurancePlan_BenefitId)
		REFERENCES insurancePlan_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Plan(

	id TEXT PRIMARY KEY,
	insurancePlanId TEXT, -- Foreign Key to insurancePlan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan__identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	coverageArea BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan__reference
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Plan__reference
	generalCost BOOLEAN, -- true if 1+ rows in InsurancePlan_GeneralCost correspond to this entry
	specificCost BOOLEAN, -- true if 1+ rows in InsurancePlan_SpecificCost correspond to this entry

	FOREIGN KEY (insurancePlanId)
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_GeneralCost(

	id TEXT PRIMARY KEY,
	insurancePlan_PlanId TEXT, -- Foreign Key to insurancePlan_Plan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_GeneralCost__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_GeneralCost__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	groupSize INTEGER,
	_groupSize TEXT, -- Foreign Key to element table
	cost TEXT, -- Foreign Key to money table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (insurancePlan_PlanId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupSize)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cost)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_SpecificCost(

	id TEXT PRIMARY KEY,
	insurancePlan_PlanId TEXT, -- Foreign Key to insurancePlan_Plan table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_SpecificCost__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_SpecificCost__extension
	category TEXT, -- Foreign Key to codeableConcept table
	benefit BOOLEAN, -- true if 1+ rows in InsurancePlan_Benefit1 correspond to this entry

	FOREIGN KEY (insurancePlan_PlanId)
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Benefit1(

	id TEXT PRIMARY KEY,
	insurancePlan_SpecificCostId TEXT, -- Foreign Key to insurancePlan_SpecificCost table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Benefit1__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	cost BOOLEAN, -- true if 1+ rows in InsurancePlan_Cost correspond to this entry

	FOREIGN KEY (insurancePlan_SpecificCostId)
		REFERENCES insurancePlan_SpecificCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE insurancePlan_Cost(

	id TEXT PRIMARY KEY,
	insurancePlan_Benefit1Id TEXT, -- Foreign Key to insurancePlan_Benefit1 table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Cost__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Cost__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	applicability TEXT, -- Foreign Key to codeableConcept table
	qualifiers BOOLEAN, -- true if 1+ item is referenced from bridge table: insurancePlan_Cost__codeableConcept
	"value" TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (insurancePlan_Benefit1Id)
		REFERENCES insurancePlan_Benefit1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (applicability)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice(

	resourceType TEXT, -- resourceType: invoice
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice__identifier
	"status" TEXT CHECK( "status" IN ('draft','issued','balanced','cancelled','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	cancelledReason TEXT,
	_cancelledReason TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	recipient TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	participant BOOLEAN, -- true if 1+ rows in Invoice_Participant correspond to this entry
	issuer TEXT, -- Foreign Key to reference table
	account TEXT, -- Foreign Key to reference table
	lineItem BOOLEAN, -- true if 1+ rows in Invoice_LineItem correspond to this entry
	totalPriceComponent BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice__invoice_PriceComponent
	totalNet TEXT, -- Foreign Key to money table
	totalGross TEXT, -- Foreign Key to money table
	paymentTerms TEXT,
	_paymentTerms TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cancelledReason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recipient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (issuer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (account)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (totalNet)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (totalGross)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentTerms)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice_Participant(

	id TEXT PRIMARY KEY,
	invoiceId TEXT, -- Foreign Key to invoice table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_Participant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_Participant__extension
	"role" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (invoiceId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice_LineItem(

	id TEXT PRIMARY KEY,
	invoiceId TEXT, -- Foreign Key to invoice table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_LineItem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_LineItem__extension
	"sequence" INTEGER,
	_sequence TEXT, -- Foreign Key to element table
	chargeItemReference TEXT, -- Foreign Key to reference table
	chargeItemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	priceComponent BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_LineItem__invoice_PriceComponent

	FOREIGN KEY (invoiceId)
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (chargeItemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (chargeItemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE invoice_PriceComponent(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_PriceComponent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: invoice_PriceComponent__extension
	"type" TEXT CHECK( "type" IN ('base','surcharge','deduction','discount','tax','informational') ),
	_type TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	factor REAL,
	_factor TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_factor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE library(

	resourceType TEXT, -- resourceType: library
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: library__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: library__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: library__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: library__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: library__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: library__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: library__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: library__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: library__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: library__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: library__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: library__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: library__relatedArtifact
	"parameter" BOOLEAN, -- true if 1+ rows in ParameterDefinition correspond to this entry
	dataRequirement BOOLEAN, -- true if 1+ item is referenced from bridge table: library__dataRequirement
	content BOOLEAN, -- true if 1+ item is referenced from bridge table: library__attachment

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE linkage(

	resourceType TEXT, -- resourceType: linkage
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage__extension
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	item BOOLEAN, -- true if 1+ rows in Linkage_Item correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE linkage_Item(

	id TEXT PRIMARY KEY,
	linkageId TEXT, -- Foreign Key to linkage table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: linkage_Item__extension
	"type" TEXT CHECK( "type" IN ('source','alternate','historical') ),
	_type TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (linkageId)
		REFERENCES linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE list(

	resourceType TEXT, -- resourceType: list
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: list__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: list__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: list__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: list__identifier
	"status" TEXT CHECK( "status" IN ('current','retired','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	mode TEXT CHECK( mode IN ('working','snapshot','changes') ),
	_mode TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	"source" TEXT, -- Foreign Key to reference table
	orderedBy TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: list__annotation
	entry BOOLEAN, -- true if 1+ rows in List_Entry correspond to this entry
	emptyReason TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orderedBy)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (emptyReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE list_Entry(

	id TEXT PRIMARY KEY,
	listId TEXT, -- Foreign Key to list table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: list_Entry__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: list_Entry__extension
	flag TEXT, -- Foreign Key to codeableConcept table
	deleted BOOLEAN,
	_deleted TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	item TEXT, -- Foreign Key to reference table

	FOREIGN KEY (listId)
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (flag)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deleted)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (item)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "location"(

	resourceType TEXT, -- resourceType: location
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: location__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: location__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: location__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: location__identifier
	"status" TEXT CHECK( "status" IN ('active','suspended','inactive') ),
	_status TEXT, -- Foreign Key to element table
	operationalStatus TEXT, -- Foreign Key to coding table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: location__string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: location__element
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	mode TEXT CHECK( mode IN ('instance','kind') ),
	_mode TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: location__codeableConcept
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: location__contactPoint
	"address" TEXT, -- Foreign Key to address table
	physicalType TEXT, -- Foreign Key to codeableConcept table
	"position" TEXT, -- Foreign Key to location_Position table
	managingOrganization TEXT, -- Foreign Key to reference table
	partOf TEXT, -- Foreign Key to reference table
	hoursOfOperation BOOLEAN, -- true if 1+ rows in Location_HoursOfOperation correspond to this entry
	availabilityExceptions TEXT,
	_availabilityExceptions TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: location__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operationalStatus)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("position")
		REFERENCES location_Position (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availabilityExceptions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE location_Position(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_Position__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_Position__extension
	longitude REAL,
	_longitude TEXT, -- Foreign Key to element table
	latitude REAL,
	_latitude TEXT, -- Foreign Key to element table
	altitude REAL,
	_altitude TEXT, -- Foreign Key to element table

	FOREIGN KEY (_longitude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_latitude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_altitude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE location_HoursOfOperation(

	id TEXT PRIMARY KEY,
	locationId TEXT, -- Foreign Key to "location" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation__extension
	daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation__code
	_daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: location_HoursOfOperation__element
	allDay BOOLEAN,
	_allDay TEXT, -- Foreign Key to element table
	openingTime TIME,
	_openingTime TEXT, -- Foreign Key to element table
	closingTime TIME,
	_closingTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (locationId)
		REFERENCES "location" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allDay)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_openingTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_closingTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure(

	resourceType TEXT, -- resourceType: measure
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__canonical
	disclaimer TEXT,
	_disclaimer TEXT, -- Foreign Key to element table
	scoring TEXT, -- Foreign Key to codeableConcept table
	compositeScoring TEXT, -- Foreign Key to codeableConcept table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__codeableConcept
	riskAdjustment TEXT,
	_riskAdjustment TEXT, -- Foreign Key to element table
	rateAggregation TEXT,
	_rateAggregation TEXT, -- Foreign Key to element table
	rationale TEXT,
	_rationale TEXT, -- Foreign Key to element table
	clinicalRecommendationStatement TEXT,
	_clinicalRecommendationStatement TEXT, -- Foreign Key to element table
	improvementNotation TEXT, -- Foreign Key to codeableConcept table
	"definition" BOOLEAN, -- true if 1+ rows in markdown correspond to this entry
	_definition BOOLEAN, -- true if 1+ item is referenced from bridge table: measure__element
	guidance TEXT,
	_guidance TEXT, -- Foreign Key to element table
	"group" BOOLEAN, -- true if 1+ rows in Measure_Group correspond to this entry
	supplementalData BOOLEAN, -- true if 1+ rows in Measure_SupplementalData correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disclaimer)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (scoring)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (compositeScoring)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_riskAdjustment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rateAggregation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rationale)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_clinicalRecommendationStatement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (improvementNotation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_guidance)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Group(

	id TEXT PRIMARY KEY,
	measureId TEXT, -- Foreign Key to measure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Group__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Group__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"population" BOOLEAN, -- true if 1+ rows in Measure_Population correspond to this entry
	stratifier BOOLEAN, -- true if 1+ rows in Measure_Stratifier correspond to this entry

	FOREIGN KEY (measureId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Population(

	id TEXT PRIMARY KEY,
	measure_GroupId TEXT, -- Foreign Key to measure_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Population__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Population__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table

	FOREIGN KEY (measure_GroupId)
		REFERENCES measure_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Stratifier(

	id TEXT PRIMARY KEY,
	measure_GroupId TEXT, -- Foreign Key to measure_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Stratifier__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Stratifier__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table
	component BOOLEAN, -- true if 1+ rows in Measure_Component correspond to this entry

	FOREIGN KEY (measure_GroupId)
		REFERENCES measure_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_Component(

	id TEXT PRIMARY KEY,
	measure_StratifierId TEXT, -- Foreign Key to measure_Stratifier table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Component__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_Component__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table

	FOREIGN KEY (measure_StratifierId)
		REFERENCES measure_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measure_SupplementalData(

	id TEXT PRIMARY KEY,
	measureId TEXT, -- Foreign Key to measure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_SupplementalData__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_SupplementalData__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"usage" BOOLEAN, -- true if 1+ item is referenced from bridge table: measure_SupplementalData__codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	criteria TEXT, -- Foreign Key to expression table

	FOREIGN KEY (measureId)
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criteria)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport(

	resourceType TEXT, -- resourceType: measureReport
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport__identifier
	"status" TEXT CHECK( "status" IN ('complete','pending','error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('individual','subject-list','summary','data-collection') ),
	_type TEXT, -- Foreign Key to element table
	measure TEXT,
	"subject" TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	reporter TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table
	improvementNotation TEXT, -- Foreign Key to codeableConcept table
	"group" BOOLEAN, -- true if 1+ rows in MeasureReport_Group correspond to this entry
	evaluatedResource BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reporter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (improvementNotation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Group(

	id TEXT PRIMARY KEY,
	measureReportId TEXT, -- Foreign Key to measureReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Group__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Group__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"population" BOOLEAN, -- true if 1+ rows in MeasureReport_Population correspond to this entry
	measureScore TEXT, -- Foreign Key to quantity table
	stratifier BOOLEAN, -- true if 1+ rows in MeasureReport_Stratifier correspond to this entry

	FOREIGN KEY (measureReportId)
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measureScore)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Population(

	id TEXT PRIMARY KEY,
	measureReport_GroupId TEXT, -- Foreign Key to measureReport_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	subjectResults TEXT, -- Foreign Key to reference table

	FOREIGN KEY (measureReport_GroupId)
		REFERENCES measureReport_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectResults)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Stratifier(

	id TEXT PRIMARY KEY,
	measureReport_GroupId TEXT, -- Foreign Key to measureReport_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratifier__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratifier__extension
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratifier__codeableConcept
	stratum BOOLEAN, -- true if 1+ rows in MeasureReport_Stratum correspond to this entry

	FOREIGN KEY (measureReport_GroupId)
		REFERENCES measureReport_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Stratum(

	id TEXT PRIMARY KEY,
	measureReport_StratifierId TEXT, -- Foreign Key to measureReport_Stratifier table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratum__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Stratum__extension
	"value" TEXT, -- Foreign Key to codeableConcept table
	component BOOLEAN, -- true if 1+ rows in MeasureReport_Component correspond to this entry
	"population" BOOLEAN, -- true if 1+ rows in MeasureReport_Population1 correspond to this entry
	measureScore TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (measureReport_StratifierId)
		REFERENCES measureReport_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measureScore)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Component(

	id TEXT PRIMARY KEY,
	measureReport_StratumId TEXT, -- Foreign Key to measureReport_Stratum table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Component__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Component__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"value" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (measureReport_StratumId)
		REFERENCES measureReport_Stratum (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE measureReport_Population1(

	id TEXT PRIMARY KEY,
	measureReport_StratumId TEXT, -- Foreign Key to measureReport_Stratum table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: measureReport_Population1__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"count" INTEGER,
	_count TEXT, -- Foreign Key to element table
	subjectResults TEXT, -- Foreign Key to reference table

	FOREIGN KEY (measureReport_StratumId)
		REFERENCES measureReport_Stratum (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_count)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectResults)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE media(

	resourceType TEXT, -- resourceType: media
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: media__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: media__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: media__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: media__identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: media__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: media__reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	modality TEXT, -- Foreign Key to codeableConcept table
	"view" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	createdDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_createdDateTime TEXT, -- Foreign Key to element table
	createdPeriod TEXT, -- Foreign Key to period table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	operator TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: media__codeableConcept
	bodySite TEXT, -- Foreign Key to codeableConcept table
	deviceName TEXT,
	_deviceName TEXT, -- Foreign Key to element table
	device TEXT, -- Foreign Key to reference table
	height INTEGER,
	_height TEXT, -- Foreign Key to element table
	width INTEGER,
	_width TEXT, -- Foreign Key to element table
	frames INTEGER,
	_frames TEXT, -- Foreign Key to element table
	duration REAL,
	_duration TEXT, -- Foreign Key to element table
	content TEXT, -- Foreign Key to attachment table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: media__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modality)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("view")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_createdDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (createdPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deviceName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_height)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_width)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_frames)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_duration)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (content)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medication(

	resourceType TEXT, -- resourceType: medication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medication__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medication__identifier
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	manufacturer TEXT, -- Foreign Key to reference table
	form TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to ratio table
	ingredient BOOLEAN, -- true if 1+ rows in Medication_Ingredient correspond to this entry
	batch TEXT, -- Foreign Key to medication_Batch table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (form)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (batch)
		REFERENCES medication_Batch (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medication_Ingredient(

	id TEXT PRIMARY KEY,
	medicationId TEXT, -- Foreign Key to medication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Ingredient__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Ingredient__extension
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	isActive BOOLEAN,
	_isActive TEXT, -- Foreign Key to element table
	strength TEXT, -- Foreign Key to ratio table

	FOREIGN KEY (medicationId)
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strength)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medication_Batch(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Batch__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medication_Batch__extension
	lotNumber TEXT,
	_lotNumber TEXT, -- Foreign Key to element table
	expirationDate DATETIME,
	_expirationDate TEXT, -- Foreign Key to element table

	FOREIGN KEY (_lotNumber)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expirationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationAdministration(

	resourceType TEXT, -- resourceType: medicationAdministration
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__identifier
	instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__uri
	_instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__element
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__codeableConcept
	category TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__reference
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	performer BOOLEAN, -- true if 1+ rows in MedicationAdministration_Performer correspond to this entry
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__reference
	request TEXT, -- Foreign Key to reference table
	device BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__annotation
	dosage TEXT, -- Foreign Key to medicationAdministration_Dosage table
	eventHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dosage)
		REFERENCES medicationAdministration_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationAdministration_Performer(

	id TEXT PRIMARY KEY,
	medicationAdministrationId TEXT, -- Foreign Key to medicationAdministration table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Performer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Performer__extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicationAdministrationId)
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationAdministration_Dosage(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Dosage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationAdministration_Dosage__extension
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"site" TEXT, -- Foreign Key to codeableConcept table
	"route" TEXT, -- Foreign Key to codeableConcept table
	"method" TEXT, -- Foreign Key to codeableConcept table
	dose TEXT, -- Foreign Key to quantity table
	rateRatio TEXT, -- Foreign Key to ratio table
	rateQuantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("site")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("route")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dose)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationDispense(

	resourceType TEXT, -- resourceType: medicationDispense
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__identifier
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReasonCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	statusReasonReference TEXT, -- Foreign Key to reference table
	category TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__reference
	performer BOOLEAN, -- true if 1+ rows in MedicationDispense_Performer correspond to this entry
	"location" TEXT, -- Foreign Key to reference table
	authorizingPrescription BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__reference
	"type" TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	daysSupply TEXT, -- Foreign Key to quantity table
	whenPrepared DATETIME,
	_whenPrepared TEXT, -- Foreign Key to element table
	whenHandedOver DATETIME,
	_whenHandedOver TEXT, -- Foreign Key to element table
	destination TEXT, -- Foreign Key to reference table
	receiver BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__annotation
	dosageInstruction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__dosage
	substitution TEXT, -- Foreign Key to medicationDispense_Substitution table
	detectedIssue BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__reference
	eventHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReasonCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReasonReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (daysSupply)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_whenPrepared)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_whenHandedOver)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (destination)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substitution)
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationDispense_Performer(

	id TEXT PRIMARY KEY,
	medicationDispenseId TEXT, -- Foreign Key to medicationDispense table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Performer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Performer__extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicationDispenseId)
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationDispense_Substitution(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution__extension
	wasSubstituted BOOLEAN,
	_wasSubstituted TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution__codeableConcept
	responsibleParty BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationDispense_Substitution__reference

	FOREIGN KEY (_wasSubstituted)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge(

	resourceType TEXT, -- resourceType: medicationKnowledge
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	manufacturer TEXT, -- Foreign Key to reference table
	doseForm TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to quantity table
	"synonym" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__string
	_synonym BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__element
	relatedMedicationKnowledge BOOLEAN, -- true if 1+ rows in MedicationKnowledge_RelatedMedicationKnowledge correspond to this entry
	associatedMedication BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__reference
	productType BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__codeableConcept
	monograph BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Monograph correspond to this entry
	ingredient BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Ingredient correspond to this entry
	preparationInstruction TEXT,
	_preparationInstruction TEXT, -- Foreign Key to element table
	intendedRoute BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__codeableConcept
	cost BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Cost correspond to this entry
	monitoringProgram BOOLEAN, -- true if 1+ rows in MedicationKnowledge_MonitoringProgram correspond to this entry
	administrationGuidelines BOOLEAN, -- true if 1+ rows in MedicationKnowledge_AdministrationGuidelines correspond to this entry
	medicineClassification BOOLEAN, -- true if 1+ rows in MedicationKnowledge_MedicineClassification correspond to this entry
	packaging TEXT, -- Foreign Key to medicationKnowledge_Packaging table
	drugCharacteristic BOOLEAN, -- true if 1+ rows in MedicationKnowledge_DrugCharacteristic correspond to this entry
	contraindication BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge__reference
	regulatory BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Regulatory correspond to this entry
	kinetics BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Kinetics correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (doseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preparationInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (packaging)
		REFERENCES medicationKnowledge_Packaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_RelatedMedicationKnowledge(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_RelatedMedicationKnowledge__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_RelatedMedicationKnowledge__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	reference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_RelatedMedicationKnowledge__reference

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Monograph(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Monograph__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Monograph__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"source" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Ingredient(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Ingredient__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Ingredient__extension
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	isActive BOOLEAN,
	_isActive TEXT, -- Foreign Key to element table
	strength TEXT, -- Foreign Key to ratio table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isActive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strength)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Cost(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Cost__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Cost__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	cost TEXT, -- Foreign Key to money table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cost)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_MonitoringProgram(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MonitoringProgram__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MonitoringProgram__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_AdministrationGuidelines(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_AdministrationGuidelines__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_AdministrationGuidelines__extension
	dosage BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Dosage correspond to this entry
	indicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	indicationReference TEXT, -- Foreign Key to reference table
	patientCharacteristics BOOLEAN, -- true if 1+ rows in MedicationKnowledge_PatientCharacteristics correspond to this entry

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Dosage(

	id TEXT PRIMARY KEY,
	medicationKnowledge_AdministrationGuidelinesId TEXT, -- Foreign Key to medicationKnowledge_AdministrationGuidelines table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Dosage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Dosage__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	dosage BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Dosage__dosage

	FOREIGN KEY (medicationKnowledge_AdministrationGuidelinesId)
		REFERENCES medicationKnowledge_AdministrationGuidelines (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_PatientCharacteristics(

	id TEXT PRIMARY KEY,
	medicationKnowledge_AdministrationGuidelinesId TEXT, -- Foreign Key to medicationKnowledge_AdministrationGuidelines table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics__extension
	characteristicCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	characteristicQuantity TEXT, -- Foreign Key to quantity table
	"value" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics__string
	_value BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_PatientCharacteristics__element

	FOREIGN KEY (medicationKnowledge_AdministrationGuidelinesId)
		REFERENCES medicationKnowledge_AdministrationGuidelines (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (characteristicCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (characteristicQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_MedicineClassification(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MedicineClassification__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MedicineClassification__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	classification BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MedicineClassification__codeableConcept

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Packaging(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Packaging__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Packaging__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_DrugCharacteristic(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_DrugCharacteristic__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_DrugCharacteristic__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Regulatory(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Regulatory__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Regulatory__extension
	regulatoryAuthority TEXT, -- Foreign Key to reference table
	substitution BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Substitution correspond to this entry
	schedule BOOLEAN, -- true if 1+ rows in MedicationKnowledge_Schedule correspond to this entry
	maxDispense TEXT, -- Foreign Key to medicationKnowledge_MaxDispense table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (regulatoryAuthority)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDispense)
		REFERENCES medicationKnowledge_MaxDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Substitution(

	id TEXT PRIMARY KEY,
	medicationKnowledge_RegulatoryId TEXT, -- Foreign Key to medicationKnowledge_Regulatory table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Substitution__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Substitution__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	allowed BOOLEAN,
	_allowed TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicationKnowledge_RegulatoryId)
		REFERENCES medicationKnowledge_Regulatory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allowed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Schedule(

	id TEXT PRIMARY KEY,
	medicationKnowledge_RegulatoryId TEXT, -- Foreign Key to medicationKnowledge_Regulatory table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Schedule__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Schedule__extension
	schedule TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicationKnowledge_RegulatoryId)
		REFERENCES medicationKnowledge_Regulatory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (schedule)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_MaxDispense(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MaxDispense__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_MaxDispense__extension
	quantity TEXT, -- Foreign Key to quantity table
	"period" TEXT, -- Foreign Key to duration table

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationKnowledge_Kinetics(

	id TEXT PRIMARY KEY,
	medicationKnowledgeId TEXT, -- Foreign Key to medicationKnowledge table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics__extension
	areaUnderCurve BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics__quantity
	lethalDose50 BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationKnowledge_Kinetics__quantity
	halfLifePeriod TEXT, -- Foreign Key to duration table

	FOREIGN KEY (medicationKnowledgeId)
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (halfLifePeriod)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest(

	resourceType TEXT, -- resourceType: medicationRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	reportedBoolean BOOLEAN, -- pattern: ^true|false$
	_reportedBoolean TEXT, -- Foreign Key to element table
	reportedReference TEXT, -- Foreign Key to reference table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	supportingInformation BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__reference
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performer TEXT, -- Foreign Key to reference table
	performerType TEXT, -- Foreign Key to codeableConcept table
	recorder TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__reference
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__canonical
	_instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__element
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	courseOfTherapyType TEXT, -- Foreign Key to codeableConcept table
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__annotation
	dosageInstruction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__dosage
	dispenseRequest TEXT, -- Foreign Key to medicationRequest_DispenseRequest table
	substitution TEXT, -- Foreign Key to medicationRequest_Substitution table
	priorPrescription TEXT, -- Foreign Key to reference table
	detectedIssue BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__reference
	eventHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reportedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reportedReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (courseOfTherapyType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dispenseRequest)
		REFERENCES medicationRequest_DispenseRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substitution)
		REFERENCES medicationRequest_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (priorPrescription)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest_DispenseRequest(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_DispenseRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_DispenseRequest__extension
	initialFill TEXT, -- Foreign Key to medicationRequest_InitialFill table
	dispenseInterval TEXT, -- Foreign Key to duration table
	validityPeriod TEXT, -- Foreign Key to period table
	numberOfRepeatsAllowed INTEGER,
	_numberOfRepeatsAllowed TEXT, -- Foreign Key to element table
	quantity TEXT, -- Foreign Key to quantity table
	expectedSupplyDuration TEXT, -- Foreign Key to duration table
	performer TEXT, -- Foreign Key to reference table

	FOREIGN KEY (initialFill)
		REFERENCES medicationRequest_InitialFill (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dispenseInterval)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfRepeatsAllowed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expectedSupplyDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest_InitialFill(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_InitialFill__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_InitialFill__extension
	quantity TEXT, -- Foreign Key to quantity table
	duration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationRequest_Substitution(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_Substitution__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationRequest_Substitution__extension
	allowedBoolean BOOLEAN, -- pattern: ^true|false$
	_allowedBoolean TEXT, -- Foreign Key to element table
	allowedCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	reason TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (_allowedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (allowedCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicationStatement(

	resourceType TEXT, -- resourceType: medicationStatement
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__codeableConcept
	category TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table
	"subject" TEXT, -- Foreign Key to reference table
	context TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	dateAsserted DATETIME,
	_dateAsserted TEXT, -- Foreign Key to element table
	informationSource TEXT, -- Foreign Key to reference table
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__reference
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__annotation
	dosage BOOLEAN, -- true if 1+ item is referenced from bridge table: medicationStatement__dosage

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateAsserted)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (informationSource)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct(

	resourceType TEXT, -- resourceType: medicinalProduct
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	"domain" TEXT, -- Foreign Key to coding table
	combinedPharmaceuticalDoseForm TEXT, -- Foreign Key to codeableConcept table
	legalStatusOfSupply TEXT, -- Foreign Key to codeableConcept table
	additionalMonitoringIndicator TEXT, -- Foreign Key to codeableConcept table
	specialMeasures BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__string
	_specialMeasures BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__element
	paediatricUseIndicator TEXT, -- Foreign Key to codeableConcept table
	productClassification BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__codeableConcept
	marketingStatus BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__marketingStatus
	pharmaceuticalProduct BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__reference
	packagedMedicinalProduct BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__reference
	attachedDocument BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__reference
	masterFile BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__reference
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__reference
	clinicalTrial BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__reference
	"name" BOOLEAN, -- true if 1+ rows in MedicinalProduct_Name correspond to this entry
	crossReference BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct__identifier
	manufacturingBusinessOperation BOOLEAN, -- true if 1+ rows in MedicinalProduct_ManufacturingBusinessOperation correspond to this entry
	specialDesignation BOOLEAN, -- true if 1+ rows in MedicinalProduct_SpecialDesignation correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("domain")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (combinedPharmaceuticalDoseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalStatusOfSupply)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additionalMonitoringIndicator)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paediatricUseIndicator)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_Name(

	id TEXT PRIMARY KEY,
	medicinalProductId TEXT, -- Foreign Key to medicinalProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_Name__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_Name__extension
	productName TEXT,
	_productName TEXT, -- Foreign Key to element table
	namePart BOOLEAN, -- true if 1+ rows in MedicinalProduct_NamePart correspond to this entry
	countryLanguage BOOLEAN, -- true if 1+ rows in MedicinalProduct_CountryLanguage correspond to this entry

	FOREIGN KEY (medicinalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_NamePart(

	id TEXT PRIMARY KEY,
	medicinalProduct_NameId TEXT, -- Foreign Key to medicinalProduct_Name table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_NamePart__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_NamePart__extension
	part TEXT,
	_part TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to coding table

	FOREIGN KEY (medicinalProduct_NameId)
		REFERENCES medicinalProduct_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_part)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_CountryLanguage(

	id TEXT PRIMARY KEY,
	medicinalProduct_NameId TEXT, -- Foreign Key to medicinalProduct_Name table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_CountryLanguage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_CountryLanguage__extension
	country TEXT, -- Foreign Key to codeableConcept table
	jurisdiction TEXT, -- Foreign Key to codeableConcept table
	"language" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProduct_NameId)
		REFERENCES medicinalProduct_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (country)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (jurisdiction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_ManufacturingBusinessOperation(

	id TEXT PRIMARY KEY,
	medicinalProductId TEXT, -- Foreign Key to medicinalProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_ManufacturingBusinessOperation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_ManufacturingBusinessOperation__extension
	operationType TEXT, -- Foreign Key to codeableConcept table
	authorisationReferenceNumber TEXT, -- Foreign Key to identifier table
	effectiveDate DATETIME,
	_effectiveDate TEXT, -- Foreign Key to element table
	confidentialityIndicator TEXT, -- Foreign Key to codeableConcept table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_ManufacturingBusinessOperation__reference
	regulator TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicinalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operationType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authorisationReferenceNumber)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (confidentialityIndicator)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (regulator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProduct_SpecialDesignation(

	id TEXT PRIMARY KEY,
	medicinalProductId TEXT, -- Foreign Key to medicinalProduct table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_SpecialDesignation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_SpecialDesignation__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProduct_SpecialDesignation__identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	intendedUse TEXT, -- Foreign Key to codeableConcept table
	indicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	indicationReference TEXT, -- Foreign Key to reference table
	"status" TEXT, -- Foreign Key to codeableConcept table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	species TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProductId)
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intendedUse)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (indicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (species)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductAuthorization(

	resourceType TEXT, -- resourceType: medicinalProductAuthorization
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization__identifier
	"subject" TEXT, -- Foreign Key to reference table
	country BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization__codeableConcept
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization__codeableConcept
	"status" TEXT, -- Foreign Key to codeableConcept table
	statusDate DATETIME,
	_statusDate TEXT, -- Foreign Key to element table
	restoreDate DATETIME,
	_restoreDate TEXT, -- Foreign Key to element table
	validityPeriod TEXT, -- Foreign Key to period table
	dataExclusivityPeriod TEXT, -- Foreign Key to period table
	dateOfFirstAuthorization DATETIME,
	_dateOfFirstAuthorization TEXT, -- Foreign Key to element table
	internationalBirthDate DATETIME,
	_internationalBirthDate TEXT, -- Foreign Key to element table
	legalBasis TEXT, -- Foreign Key to codeableConcept table
	jurisdictionalAuthorization BOOLEAN, -- true if 1+ rows in MedicinalProductAuthorization_JurisdictionalAuthorization correspond to this entry
	holder TEXT, -- Foreign Key to reference table
	regulator TEXT, -- Foreign Key to reference table
	"procedure" TEXT, -- Foreign Key to medicinalProductAuthorization_Procedure table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_restoreDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataExclusivityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateOfFirstAuthorization)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_internationalBirthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalBasis)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (holder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (regulator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("procedure")
		REFERENCES medicinalProductAuthorization_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductAuthorization_JurisdictionalAuthorization(

	id TEXT PRIMARY KEY,
	medicinalProductAuthorizationId TEXT, -- Foreign Key to medicinalProductAuthorization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization__identifier
	country TEXT, -- Foreign Key to codeableConcept table
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_JurisdictionalAuthorization__codeableConcept
	legalStatusOfSupply TEXT, -- Foreign Key to codeableConcept table
	validityPeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (medicinalProductAuthorizationId)
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (country)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalStatusOfSupply)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validityPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductAuthorization_Procedure(

	id TEXT PRIMARY KEY,
	medicinalProductAuthorization_ProcedureId TEXT, -- Foreign Key to medicinalProductAuthorization_Procedure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_Procedure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductAuthorization_Procedure__extension
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	datePeriod TEXT, -- Foreign Key to period table
	dateDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_dateDateTime TEXT, -- Foreign Key to element table
	application BOOLEAN, -- true if 1+ rows in MedicinalProductAuthorization_Procedure correspond to this entry

	FOREIGN KEY (medicinalProductAuthorization_ProcedureId)
		REFERENCES medicinalProductAuthorization_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (datePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductContraindication(

	resourceType TEXT, -- resourceType: medicinalProductContraindication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication__extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication__reference
	disease TEXT, -- Foreign Key to codeableConcept table
	diseaseStatus TEXT, -- Foreign Key to codeableConcept table
	comorbidity BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication__codeableConcept
	therapeuticIndication BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication__reference
	otherTherapy BOOLEAN, -- true if 1+ rows in MedicinalProductContraindication_OtherTherapy correspond to this entry
	"population" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication__population

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (disease)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diseaseStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductContraindication_OtherTherapy(

	id TEXT PRIMARY KEY,
	medicinalProductContraindicationId TEXT, -- Foreign Key to medicinalProductContraindication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_OtherTherapy__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductContraindication_OtherTherapy__extension
	therapyRelationshipType TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicinalProductContraindicationId)
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (therapyRelationshipType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIndication(

	resourceType TEXT, -- resourceType: medicinalProductIndication
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication__extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication__reference
	diseaseSymptomProcedure TEXT, -- Foreign Key to codeableConcept table
	diseaseStatus TEXT, -- Foreign Key to codeableConcept table
	comorbidity BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication__codeableConcept
	intendedEffect TEXT, -- Foreign Key to codeableConcept table
	duration TEXT, -- Foreign Key to quantity table
	otherTherapy BOOLEAN, -- true if 1+ rows in MedicinalProductIndication_OtherTherapy correspond to this entry
	undesirableEffect BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication__reference
	"population" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication__population

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diseaseSymptomProcedure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (diseaseStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intendedEffect)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIndication_OtherTherapy(

	id TEXT PRIMARY KEY,
	medicinalProductIndicationId TEXT, -- Foreign Key to medicinalProductIndication table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_OtherTherapy__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIndication_OtherTherapy__extension
	therapyRelationshipType TEXT, -- Foreign Key to codeableConcept table
	medicationCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	medicationReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (medicinalProductIndicationId)
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (therapyRelationshipType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (medicationReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient(

	resourceType TEXT, -- resourceType: medicinalProductIngredient
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient__extension
	identifier TEXT, -- Foreign Key to identifier table
	"role" TEXT, -- Foreign Key to codeableConcept table
	allergenicIndicator BOOLEAN,
	_allergenicIndicator TEXT, -- Foreign Key to element table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient__reference
	specifiedSubstance BOOLEAN, -- true if 1+ rows in MedicinalProductIngredient_SpecifiedSubstance correspond to this entry
	substance TEXT, -- Foreign Key to medicinalProductIngredient_Substance table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allergenicIndicator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES medicinalProductIngredient_Substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_SpecifiedSubstance(

	id TEXT PRIMARY KEY,
	medicinalProductIngredientId TEXT, -- Foreign Key to medicinalProductIngredient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_SpecifiedSubstance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_SpecifiedSubstance__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"group" TEXT, -- Foreign Key to codeableConcept table
	confidentiality TEXT, -- Foreign Key to codeableConcept table
	strength BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_SpecifiedSubstance__medicinalProductIngredient_Strength

	FOREIGN KEY (medicinalProductIngredientId)
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("group")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (confidentiality)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_Strength(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Strength__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Strength__extension
	presentation TEXT, -- Foreign Key to ratio table
	presentationLowLimit TEXT, -- Foreign Key to ratio table
	concentration TEXT, -- Foreign Key to ratio table
	concentrationLowLimit TEXT, -- Foreign Key to ratio table
	measurementPoint TEXT,
	_measurementPoint TEXT, -- Foreign Key to element table
	country BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Strength__codeableConcept
	referenceStrength BOOLEAN, -- true if 1+ rows in MedicinalProductIngredient_ReferenceStrength correspond to this entry

	FOREIGN KEY (presentation)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (presentationLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (concentration)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (concentrationLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_measurementPoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_ReferenceStrength(

	id TEXT PRIMARY KEY,
	medicinalProductIngredient_StrengthId TEXT, -- Foreign Key to medicinalProductIngredient_Strength table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_ReferenceStrength__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_ReferenceStrength__extension
	substance TEXT, -- Foreign Key to codeableConcept table
	strength TEXT, -- Foreign Key to ratio table
	strengthLowLimit TEXT, -- Foreign Key to ratio table
	measurementPoint TEXT,
	_measurementPoint TEXT, -- Foreign Key to element table
	country BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_ReferenceStrength__codeableConcept

	FOREIGN KEY (medicinalProductIngredient_StrengthId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substance)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strength)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (strengthLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_measurementPoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductIngredient_Substance(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Substance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Substance__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	strength BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductIngredient_Substance__medicinalProductIngredient_Strength

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductInteraction(

	resourceType TEXT, -- resourceType: medicinalProductInteraction
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction__extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction__reference
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	interactant BOOLEAN, -- true if 1+ rows in MedicinalProductInteraction_Interactant correspond to this entry
	"type" TEXT, -- Foreign Key to codeableConcept table
	effect TEXT, -- Foreign Key to codeableConcept table
	incidence TEXT, -- Foreign Key to codeableConcept table
	management TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effect)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (incidence)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (management)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductInteraction_Interactant(

	id TEXT PRIMARY KEY,
	medicinalProductInteractionId TEXT, -- Foreign Key to medicinalProductInteraction table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_Interactant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductInteraction_Interactant__extension
	itemReference TEXT, -- Foreign Key to reference table
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProductInteractionId)
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductManufactured(

	resourceType TEXT, -- resourceType: medicinalProductManufactured
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured__extension
	manufacturedDoseForm TEXT, -- Foreign Key to codeableConcept table
	unitOfPresentation TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured__reference
	ingredient BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured__reference
	physicalCharacteristics TEXT, -- Foreign Key to prodCharacteristic table
	otherCharacteristics BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductManufactured__codeableConcept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manufacturedDoseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfPresentation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalCharacteristics)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPackaged(

	resourceType TEXT, -- resourceType: medicinalProductPackaged
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__identifier
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__reference
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	legalStatusOfSupply TEXT, -- Foreign Key to codeableConcept table
	marketingStatus BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__marketingStatus
	marketingAuthorization TEXT, -- Foreign Key to reference table
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__reference
	batchIdentifier BOOLEAN, -- true if 1+ rows in MedicinalProductPackaged_BatchIdentifier correspond to this entry
	packageItem BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged__medicinalProductPackaged_PackageItem

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (legalStatusOfSupply)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (marketingAuthorization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPackaged_BatchIdentifier(

	id TEXT PRIMARY KEY,
	medicinalProductPackagedId TEXT, -- Foreign Key to medicinalProductPackaged table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_BatchIdentifier__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_BatchIdentifier__extension
	outerPackaging TEXT, -- Foreign Key to identifier table
	immediatePackaging TEXT, -- Foreign Key to identifier table

	FOREIGN KEY (medicinalProductPackagedId)
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outerPackaging)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (immediatePackaging)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPackaged_PackageItem(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__identifier
	"type" TEXT, -- Foreign Key to codeableConcept table
	quantity TEXT, -- Foreign Key to quantity table
	material BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__codeableConcept
	alternateMaterial BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__codeableConcept
	device BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__reference
	manufacturedItem BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__reference
	packageItem BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__medicinalProductPackaged_PackageItem
	physicalCharacteristics TEXT, -- Foreign Key to prodCharacteristic table
	otherCharacteristics BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__codeableConcept
	shelfLifeStorage BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__productShelfLife
	manufacturer BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPackaged_PackageItem__reference

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (physicalCharacteristics)
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical(

	resourceType TEXT, -- resourceType: medicinalProductPharmaceutical
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical__identifier
	administrableDoseForm TEXT, -- Foreign Key to codeableConcept table
	unitOfPresentation TEXT, -- Foreign Key to codeableConcept table
	ingredient BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical__reference
	device BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical__reference
	"characteristics" BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_Characteristics correspond to this entry
	routeOfAdministration BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_RouteOfAdministration correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (administrableDoseForm)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfPresentation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_Characteristics(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceuticalId TEXT, -- Foreign Key to medicinalProductPharmaceutical table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_Characteristics__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_Characteristics__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (medicinalProductPharmaceuticalId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_RouteOfAdministration(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceuticalId TEXT, -- Foreign Key to medicinalProductPharmaceutical table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_RouteOfAdministration__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_RouteOfAdministration__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	firstDose TEXT, -- Foreign Key to quantity table
	maxSingleDose TEXT, -- Foreign Key to quantity table
	maxDosePerDay TEXT, -- Foreign Key to quantity table
	maxDosePerTreatmentPeriod TEXT, -- Foreign Key to ratio table
	maxTreatmentPeriod TEXT, -- Foreign Key to duration table
	targetSpecies BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_TargetSpecies correspond to this entry

	FOREIGN KEY (medicinalProductPharmaceuticalId)
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (firstDose)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxSingleDose)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerDay)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDosePerTreatmentPeriod)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxTreatmentPeriod)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_TargetSpecies(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_RouteOfAdministrationId TEXT, -- Foreign Key to medicinalProductPharmaceutical_RouteOfAdministration table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_TargetSpecies__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_TargetSpecies__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	withdrawalPeriod BOOLEAN, -- true if 1+ rows in MedicinalProductPharmaceutical_WithdrawalPeriod correspond to this entry

	FOREIGN KEY (medicinalProductPharmaceutical_RouteOfAdministrationId)
		REFERENCES medicinalProductPharmaceutical_RouteOfAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductPharmaceutical_WithdrawalPeriod(

	id TEXT PRIMARY KEY,
	medicinalProductPharmaceutical_TargetSpeciesId TEXT, -- Foreign Key to medicinalProductPharmaceutical_TargetSpecies table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_WithdrawalPeriod__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductPharmaceutical_WithdrawalPeriod__extension
	tissue TEXT, -- Foreign Key to codeableConcept table
	"value" TEXT, -- Foreign Key to quantity table
	supportingInformation TEXT,
	_supportingInformation TEXT, -- Foreign Key to element table

	FOREIGN KEY (medicinalProductPharmaceutical_TargetSpeciesId)
		REFERENCES medicinalProductPharmaceutical_TargetSpecies (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (tissue)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("value")
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_supportingInformation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE medicinalProductUndesirableEffect(

	resourceType TEXT, -- resourceType: medicinalProductUndesirableEffect
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect__extension
	"subject" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect__reference
	symptomConditionEffect TEXT, -- Foreign Key to codeableConcept table
	classification TEXT, -- Foreign Key to codeableConcept table
	frequencyOfOccurrence TEXT, -- Foreign Key to codeableConcept table
	"population" BOOLEAN, -- true if 1+ item is referenced from bridge table: medicinalProductUndesirableEffect__population

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (symptomConditionEffect)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (classification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (frequencyOfOccurrence)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageDefinition(

	resourceType TEXT, -- resourceType: messageDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__canonical
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	base TEXT,
	parent BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__canonical
	eventCoding TEXT, -- Foreign Key to coding table
	eventUri TEXT, -- pattern: ^\S*$
	_eventUri TEXT, -- Foreign Key to element table
	category TEXT CHECK( category IN ('consequence','currency','notification') ),
	_category TEXT, -- Foreign Key to element table
	focus BOOLEAN, -- true if 1+ rows in MessageDefinition_Focus correspond to this entry
	responseRequired TEXT CHECK( responseRequired IN ('always','on-error','never','on-success') ),
	_responseRequired TEXT, -- Foreign Key to element table
	allowedResponse BOOLEAN, -- true if 1+ rows in MessageDefinition_AllowedResponse correspond to this entry
	graph BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition__canonical

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (eventCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_eventUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_category)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responseRequired)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageDefinition_Focus(

	id TEXT PRIMARY KEY,
	messageDefinitionId TEXT, -- Foreign Key to messageDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_Focus__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_Focus__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	"profile" TEXT,
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table

	FOREIGN KEY (messageDefinitionId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageDefinition_AllowedResponse(

	id TEXT PRIMARY KEY,
	messageDefinitionId TEXT, -- Foreign Key to messageDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_AllowedResponse__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageDefinition_AllowedResponse__extension
	"message" TEXT,
	situation TEXT,
	_situation TEXT, -- Foreign Key to element table

	FOREIGN KEY (messageDefinitionId)
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_situation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader(

	resourceType TEXT, -- resourceType: messageHeader
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader__extension
	eventCoding TEXT, -- Foreign Key to coding table
	eventUri TEXT, -- pattern: ^\S*$
	_eventUri TEXT, -- Foreign Key to element table
	destination BOOLEAN, -- true if 1+ rows in MessageHeader_Destination correspond to this entry
	sender TEXT, -- Foreign Key to reference table
	enterer TEXT, -- Foreign Key to reference table
	author TEXT, -- Foreign Key to reference table
	"source" TEXT, -- Foreign Key to messageHeader_Source table
	responsible TEXT, -- Foreign Key to reference table
	reason TEXT, -- Foreign Key to codeableConcept table
	response TEXT, -- Foreign Key to messageHeader_Response table
	focus BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader__reference
	"definition" TEXT,

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (eventCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_eventUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sender)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enterer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES messageHeader_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responsible)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES messageHeader_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader_Destination(

	id TEXT PRIMARY KEY,
	messageHeaderId TEXT, -- Foreign Key to messageHeader table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Destination__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Destination__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"target" TEXT, -- Foreign Key to reference table
	"endpoint" TEXT,
	_endpoint TEXT, -- Foreign Key to element table
	receiver TEXT, -- Foreign Key to reference table

	FOREIGN KEY (messageHeaderId)
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_endpoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (receiver)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader_Source(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Source__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Source__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	software TEXT,
	_software TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	contact TEXT, -- Foreign Key to contactPoint table
	"endpoint" TEXT,
	_endpoint TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_software)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (contact)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_endpoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE messageHeader_Response(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Response__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: messageHeader_Response__extension
	identifier TEXT, -- Foreign Key to id table
	_identifier TEXT, -- Foreign Key to element table
	"code" TEXT CHECK( "code" IN ('ok','transient-error','fatal-error') ),
	_code TEXT, -- Foreign Key to element table
	details TEXT, -- Foreign Key to reference table

	FOREIGN KEY (identifier)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (details)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence(

	resourceType TEXT, -- resourceType: molecularSequence
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence__identifier
	"type" TEXT CHECK( "type" IN ('aa','dna','rna') ),
	_type TEXT, -- Foreign Key to element table
	coordinateSystem INTEGER,
	_coordinateSystem TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	specimen TEXT, -- Foreign Key to reference table
	device TEXT, -- Foreign Key to reference table
	performer TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	referenceSeq TEXT, -- Foreign Key to molecularSequence_ReferenceSeq table
	variant BOOLEAN, -- true if 1+ rows in MolecularSequence_Variant correspond to this entry
	observedSeq TEXT,
	_observedSeq TEXT, -- Foreign Key to element table
	quality BOOLEAN, -- true if 1+ rows in MolecularSequence_Quality correspond to this entry
	readCoverage INTEGER,
	_readCoverage TEXT, -- Foreign Key to element table
	repository BOOLEAN, -- true if 1+ rows in MolecularSequence_Repository correspond to this entry
	pointer BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence__reference
	structureVariant BOOLEAN, -- true if 1+ rows in MolecularSequence_StructureVariant correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_coordinateSystem)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (specimen)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceSeq)
		REFERENCES molecularSequence_ReferenceSeq (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_observedSeq)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readCoverage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_ReferenceSeq(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_ReferenceSeq__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_ReferenceSeq__extension
	chromosome TEXT, -- Foreign Key to codeableConcept table
	genomeBuild TEXT,
	_genomeBuild TEXT, -- Foreign Key to element table
	orientation TEXT CHECK( orientation IN ('sense','antisense') ),
	_orientation TEXT, -- Foreign Key to element table
	referenceSeqId TEXT, -- Foreign Key to codeableConcept table
	referenceSeqPointer TEXT, -- Foreign Key to reference table
	referenceSeqString TEXT,
	_referenceSeqString TEXT, -- Foreign Key to element table
	strand TEXT CHECK( strand IN ('watson','crick') ),
	_strand TEXT, -- Foreign Key to element table
	windowStart INTEGER,
	_windowStart TEXT, -- Foreign Key to element table
	windowEnd INTEGER,
	_windowEnd TEXT, -- Foreign Key to element table

	FOREIGN KEY (chromosome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_genomeBuild)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_orientation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceSeqId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceSeqPointer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_referenceSeqString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_strand)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_windowStart)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_windowEnd)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Variant(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Variant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Variant__extension
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table
	observedAllele TEXT,
	_observedAllele TEXT, -- Foreign Key to element table
	referenceAllele TEXT,
	_referenceAllele TEXT, -- Foreign Key to element table
	cigar TEXT,
	_cigar TEXT, -- Foreign Key to element table
	variantPointer TEXT, -- Foreign Key to reference table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_observedAllele)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_referenceAllele)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cigar)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantPointer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Quality(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Quality__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Quality__extension
	"type" TEXT CHECK( "type" IN ('indel','snp','unknown') ),
	_type TEXT, -- Foreign Key to element table
	standardSequence TEXT, -- Foreign Key to codeableConcept table
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table
	score TEXT, -- Foreign Key to quantity table
	"method" TEXT, -- Foreign Key to codeableConcept table
	truthTP REAL,
	_truthTP TEXT, -- Foreign Key to element table
	queryTP REAL,
	_queryTP TEXT, -- Foreign Key to element table
	truthFN REAL,
	_truthFN TEXT, -- Foreign Key to element table
	queryFP REAL,
	_queryFP TEXT, -- Foreign Key to element table
	gtFP REAL,
	_gtFP TEXT, -- Foreign Key to element table
	precision REAL,
	_precision TEXT, -- Foreign Key to element table
	recall REAL,
	_recall TEXT, -- Foreign Key to element table
	fScore REAL,
	_fScore TEXT, -- Foreign Key to element table
	roc TEXT, -- Foreign Key to molecularSequence_Roc table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (standardSequence)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (score)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_truthTP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_queryTP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_truthFN)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_queryFP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gtFP)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precision)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recall)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fScore)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (roc)
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Roc(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__extension
	score BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__integer
	_score BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__element
	numTP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__integer
	_numTP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__element
	numFP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__integer
	_numFP BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__element
	numFN BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__integer
	_numFN BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__element
	precision BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__decimal
	_precision BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__element
	sensitivity BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__decimal
	_sensitivity BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__element
	fMeasure BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__decimal
	_fMeasure BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Roc__element

);

CREATE TABLE molecularSequence_Repository(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Repository__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Repository__extension
	"type" TEXT CHECK( "type" IN ('directlink','openapi','login','oauth','other') ),
	_type TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	datasetId TEXT,
	_datasetId TEXT, -- Foreign Key to element table
	variantsetId TEXT,
	_variantsetId TEXT, -- Foreign Key to element table
	readsetId TEXT,
	_readsetId TEXT, -- Foreign Key to element table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_datasetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variantsetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readsetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_StructureVariant(

	id TEXT PRIMARY KEY,
	molecularSequenceId TEXT, -- Foreign Key to molecularSequence table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_StructureVariant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_StructureVariant__extension
	variantType TEXT, -- Foreign Key to codeableConcept table
	exact BOOLEAN,
	_exact TEXT, -- Foreign Key to element table
	"length" INTEGER,
	_length TEXT, -- Foreign Key to element table
	"outer" TEXT, -- Foreign Key to molecularSequence_Outer table
	"inner" TEXT, -- Foreign Key to molecularSequence_Inner table

	FOREIGN KEY (molecularSequenceId)
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variantType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exact)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_length)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("outer")
		REFERENCES molecularSequence_Outer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("inner")
		REFERENCES molecularSequence_Inner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Outer(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Outer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Outer__extension
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE molecularSequence_Inner(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Inner__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: molecularSequence_Inner__extension
	"start" INTEGER,
	_start TEXT, -- Foreign Key to element table
	"end" INTEGER,
	_end TEXT, -- Foreign Key to element table

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE namingSystem(

	resourceType TEXT, -- resourceType: namingSystem
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	kind TEXT CHECK( kind IN ('codesystem','identifier','root') ),
	_kind TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem__contactDetail
	responsible TEXT,
	_responsible TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem__codeableConcept
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	uniqueId BOOLEAN, -- true if 1+ rows in NamingSystem_UniqueId correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responsible)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE namingSystem_UniqueId(

	id TEXT PRIMARY KEY,
	namingSystemId TEXT, -- Foreign Key to namingSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_UniqueId__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: namingSystem_UniqueId__extension
	"type" TEXT CHECK( "type" IN ('oid','uuid','uri','other') ),
	_type TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (namingSystemId)
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder(

	resourceType TEXT, -- resourceType: nutritionOrder
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__element
	instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__uri
	_instantiates BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__element
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	"dateTime" DATETIME,
	_dateTime TEXT, -- Foreign Key to element table
	orderer TEXT, -- Foreign Key to reference table
	allergyIntolerance BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__reference
	foodPreferenceModifier BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__codeableConcept
	excludeFoodModifier BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__codeableConcept
	oralDiet TEXT, -- Foreign Key to nutritionOrder_OralDiet table
	supplement BOOLEAN, -- true if 1+ rows in NutritionOrder_Supplement correspond to this entry
	enteralFormula TEXT, -- Foreign Key to nutritionOrder_EnteralFormula table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orderer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (oralDiet)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (enteralFormula)
		REFERENCES nutritionOrder_EnteralFormula (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_OralDiet(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet__extension
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet__codeableConcept
	schedule BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet__timing
	nutrient BOOLEAN, -- true if 1+ rows in NutritionOrder_Nutrient correspond to this entry
	texture BOOLEAN, -- true if 1+ rows in NutritionOrder_Texture correspond to this entry
	fluidConsistencyType BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_OralDiet__codeableConcept
	instruction TEXT,
	_instruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (_instruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Nutrient(

	id TEXT PRIMARY KEY,
	nutritionOrder_OralDietId TEXT, -- Foreign Key to nutritionOrder_OralDiet table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Nutrient__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Nutrient__extension
	modifier TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (nutritionOrder_OralDietId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modifier)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Texture(

	id TEXT PRIMARY KEY,
	nutritionOrder_OralDietId TEXT, -- Foreign Key to nutritionOrder_OralDiet table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Texture__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Texture__extension
	modifier TEXT, -- Foreign Key to codeableConcept table
	foodType TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (nutritionOrder_OralDietId)
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (modifier)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (foodType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Supplement(

	id TEXT PRIMARY KEY,
	nutritionOrderId TEXT, -- Foreign Key to nutritionOrder table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Supplement__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Supplement__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	productName TEXT,
	_productName TEXT, -- Foreign Key to element table
	schedule BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Supplement__timing
	quantity TEXT, -- Foreign Key to quantity table
	instruction TEXT,
	_instruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (nutritionOrderId)
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_productName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_EnteralFormula(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_EnteralFormula__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_EnteralFormula__extension
	baseFormulaType TEXT, -- Foreign Key to codeableConcept table
	baseFormulaProductName TEXT,
	_baseFormulaProductName TEXT, -- Foreign Key to element table
	additiveType TEXT, -- Foreign Key to codeableConcept table
	additiveProductName TEXT,
	_additiveProductName TEXT, -- Foreign Key to element table
	caloricDensity TEXT, -- Foreign Key to quantity table
	routeofAdministration TEXT, -- Foreign Key to codeableConcept table
	administration BOOLEAN, -- true if 1+ rows in NutritionOrder_Administration correspond to this entry
	maxVolumeToDeliver TEXT, -- Foreign Key to quantity table
	administrationInstruction TEXT,
	_administrationInstruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (baseFormulaType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_baseFormulaProductName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_additiveProductName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (caloricDensity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (routeofAdministration)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxVolumeToDeliver)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_administrationInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE nutritionOrder_Administration(

	id TEXT PRIMARY KEY,
	nutritionOrder_EnteralFormulaId TEXT, -- Foreign Key to nutritionOrder_EnteralFormula table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Administration__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: nutritionOrder_Administration__extension
	schedule TEXT, -- Foreign Key to timing table
	quantity TEXT, -- Foreign Key to quantity table
	rateQuantity TEXT, -- Foreign Key to quantity table
	rateRatio TEXT, -- Foreign Key to ratio table

	FOREIGN KEY (nutritionOrder_EnteralFormulaId)
		REFERENCES nutritionOrder_EnteralFormula (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (schedule)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (rateRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observation(

	resourceType TEXT, -- resourceType: observation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__reference
	"status" TEXT CHECK( "status" IN ('registered','preliminary','final','amended','corrected','cancelled','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	focus BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__reference
	encounter TEXT, -- Foreign Key to reference table
	effectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_effectiveDateTime TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	effectiveTiming TEXT, -- Foreign Key to timing table
	effectiveInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_effectiveInstant TEXT, -- Foreign Key to element table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__reference
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valuePeriod TEXT, -- Foreign Key to period table
	dataAbsentReason TEXT, -- Foreign Key to codeableConcept table
	interpretation BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__annotation
	bodySite TEXT, -- Foreign Key to codeableConcept table
	"method" TEXT, -- Foreign Key to codeableConcept table
	specimen TEXT, -- Foreign Key to reference table
	device TEXT, -- Foreign Key to reference table
	referenceRange BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__observation_ReferenceRange
	hasMember BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__reference
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: observation__reference
	component BOOLEAN, -- true if 1+ rows in Observation_Component correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_effectiveInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataAbsentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (specimen)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (device)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observation_ReferenceRange(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_ReferenceRange__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_ReferenceRange__extension
	low TEXT, -- Foreign Key to quantity table
	high TEXT, -- Foreign Key to quantity table
	"type" TEXT, -- Foreign Key to codeableConcept table
	appliesTo BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_ReferenceRange__codeableConcept
	age TEXT, -- Foreign Key to range table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (low)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (high)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (age)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observation_Component(

	id TEXT PRIMARY KEY,
	observationId TEXT, -- Foreign Key to observation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valuePeriod TEXT, -- Foreign Key to period table
	dataAbsentReason TEXT, -- Foreign Key to codeableConcept table
	interpretation BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component__codeableConcept
	referenceRange BOOLEAN, -- true if 1+ item is referenced from bridge table: observation_Component__observation_ReferenceRange

	FOREIGN KEY (observationId)
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (dataAbsentReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observationDefinition(

	resourceType TEXT, -- resourceType: observationDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition__extension
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition__codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition__identifier
	permittedDataType BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: Quantity/CodeableConcept/string/boolean/integer/Range/Ratio/SampledData/time/dateTime/Period,
	_permittedDataType BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition__element
	multipleResultsAllowed BOOLEAN,
	_multipleResultsAllowed TEXT, -- Foreign Key to element table
	"method" TEXT, -- Foreign Key to codeableConcept table
	preferredReportName TEXT,
	_preferredReportName TEXT, -- Foreign Key to element table
	quantitativeDetails TEXT, -- Foreign Key to observationDefinition_QuantitativeDetails table
	qualifiedInterval BOOLEAN, -- true if 1+ rows in ObservationDefinition_QualifiedInterval correspond to this entry
	validCodedValueSet TEXT, -- Foreign Key to reference table
	normalCodedValueSet TEXT, -- Foreign Key to reference table
	abnormalCodedValueSet TEXT, -- Foreign Key to reference table
	criticalCodedValueSet TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleResultsAllowed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferredReportName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantitativeDetails)
		REFERENCES observationDefinition_QuantitativeDetails (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (normalCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (abnormalCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (criticalCodedValueSet)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observationDefinition_QuantitativeDetails(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QuantitativeDetails__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QuantitativeDetails__extension
	customaryUnit TEXT, -- Foreign Key to codeableConcept table
	unit TEXT, -- Foreign Key to codeableConcept table
	conversionFactor REAL,
	_conversionFactor TEXT, -- Foreign Key to element table
	decimalPrecision INTEGER,
	_decimalPrecision TEXT, -- Foreign Key to element table

	FOREIGN KEY (customaryUnit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unit)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_conversionFactor)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_decimalPrecision)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE observationDefinition_QualifiedInterval(

	id TEXT PRIMARY KEY,
	observationDefinitionId TEXT, -- Foreign Key to observationDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QualifiedInterval__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QualifiedInterval__extension
	category TEXT CHECK( category IN ('reference','critical','absolute') ),
	_category TEXT, -- Foreign Key to element table
	"range" TEXT, -- Foreign Key to range table
	context TEXT, -- Foreign Key to codeableConcept table
	appliesTo BOOLEAN, -- true if 1+ item is referenced from bridge table: observationDefinition_QualifiedInterval__codeableConcept
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	age TEXT, -- Foreign Key to range table
	gestationalAge TEXT, -- Foreign Key to range table
	"condition" TEXT,
	_condition TEXT, -- Foreign Key to element table

	FOREIGN KEY (observationDefinitionId)
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_category)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("range")
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (age)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (gestationalAge)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_condition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition(

	resourceType TEXT, -- resourceType: operationDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	kind TEXT CHECK( kind IN ('operation','query') ),
	_kind TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	affectsState BOOLEAN,
	_affectsState TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	base TEXT,
	"resource" BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__code
	_resource BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__element
	"system" BOOLEAN,
	_system TEXT, -- Foreign Key to element table
	"type" BOOLEAN,
	_type TEXT, -- Foreign Key to element table
	"instance" BOOLEAN,
	_instance TEXT, -- Foreign Key to element table
	inputProfile TEXT,
	outputProfile TEXT,
	"parameter" BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition__operationDefinition_Parameter
	overload BOOLEAN, -- true if 1+ rows in OperationDefinition_Overload correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_affectsState)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instance)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_Parameter(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"use" TEXT CHECK( "use" IN ('in','out') ),
	_use TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	targetProfile BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter__canonical
	searchType TEXT CHECK( searchType IN ('number','date','string','token','reference','composite','quantity','uri','special') ),
	_searchType TEXT, -- Foreign Key to element table
	"binding" TEXT, -- Foreign Key to operationDefinition_Binding table
	referencedFrom BOOLEAN, -- true if 1+ rows in OperationDefinition_ReferencedFrom correspond to this entry
	part BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Parameter__operationDefinition_Parameter

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_use)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_searchType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("binding")
		REFERENCES operationDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_Binding(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Binding__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Binding__extension
	strength TEXT CHECK( strength IN ('required','extensible','preferred','example') ),
	_strength TEXT, -- Foreign Key to element table
	valueSet TEXT,

	FOREIGN KEY (_strength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_ReferencedFrom(

	id TEXT PRIMARY KEY,
	operationDefinition_ParameterId TEXT, -- Foreign Key to operationDefinition_Parameter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_ReferencedFrom__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_ReferencedFrom__extension
	"source" TEXT,
	_source TEXT, -- Foreign Key to element table
	sourceId TEXT,
	_sourceId TEXT, -- Foreign Key to element table

	FOREIGN KEY (operationDefinition_ParameterId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_source)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationDefinition_Overload(

	id TEXT PRIMARY KEY,
	operationDefinitionId TEXT, -- Foreign Key to operationDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload__extension
	parameterName BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload__string
	_parameterName BOOLEAN, -- true if 1+ item is referenced from bridge table: operationDefinition_Overload__element
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (operationDefinitionId)
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationOutcome(

	resourceType TEXT, -- resourceType: operationOutcome
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome__extension
	issue BOOLEAN, -- true if 1+ rows in OperationOutcome_Issue correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE operationOutcome_Issue(

	id TEXT PRIMARY KEY,
	operationOutcomeId TEXT, -- Foreign Key to operationOutcome table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__extension
	severity TEXT CHECK( severity IN ('fatal','error','warning','information') ),
	_severity TEXT, -- Foreign Key to element table
	"code" TEXT CHECK( "code" IN ('invalid','structure','required','value','invariant','security','login','unknown','expired','forbidden','suppressed','processing','not-supported','duplicate','multiple-matches','not-found','deleted','too-long','code-invalid','extension','too-costly','business-rule','conflict','transient','lock-error','no-store','exception','timeout','incomplete','throttled','informational') ),
	_code TEXT, -- Foreign Key to element table
	details TEXT, -- Foreign Key to codeableConcept table
	diagnostics TEXT,
	_diagnostics TEXT, -- Foreign Key to element table
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__string
	_location BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__element
	expression BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__string
	_expression BOOLEAN, -- true if 1+ item is referenced from bridge table: operationOutcome_Issue__element

	FOREIGN KEY (operationOutcomeId)
		REFERENCES operationOutcome (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_severity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (details)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_diagnostics)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE organization(

	resourceType TEXT, -- resourceType: organization
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__codeableConcept
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	alias BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__string
	_alias BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__element
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__contactPoint
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__address
	partOf TEXT, -- Foreign Key to reference table
	contact BOOLEAN, -- true if 1+ rows in Organization_Contact correspond to this entry
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: organization__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE organization_Contact(

	id TEXT PRIMARY KEY,
	organizationId TEXT, -- Foreign Key to organization table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_Contact__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_Contact__extension
	purpose TEXT, -- Foreign Key to codeableConcept table
	"name" TEXT, -- Foreign Key to humanName table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: organization_Contact__contactPoint
	"address" TEXT, -- Foreign Key to address table

	FOREIGN KEY (organizationId)
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (purpose)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE organizationAffiliation(

	resourceType TEXT, -- resourceType: organizationAffiliation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	organization TEXT, -- Foreign Key to reference table
	participatingOrganization TEXT, -- Foreign Key to reference table
	network BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__reference
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__reference
	healthcareService BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__reference
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__contactPoint
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: organizationAffiliation__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participatingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE parameters(

	resourceType TEXT, -- resourceType: parameters
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters__parameters_Parameter

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE parameters_Parameter(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters_Parameter__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table
	"resource" TEXT, -- Foreign Key to resourceList table
	part BOOLEAN, -- true if 1+ item is referenced from bridge table: parameters_Parameter__parameters_Parameter

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient(

	resourceType TEXT, -- resourceType: patient
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__contactPoint
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	deceasedBoolean BOOLEAN, -- pattern: ^true|false$
	_deceasedBoolean TEXT, -- Foreign Key to element table
	deceasedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_deceasedDateTime TEXT, -- Foreign Key to element table
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__address
	maritalStatus TEXT, -- Foreign Key to codeableConcept table
	multipleBirthBoolean BOOLEAN, -- pattern: ^true|false$
	_multipleBirthBoolean TEXT, -- Foreign Key to element table
	multipleBirthInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_multipleBirthInteger TEXT, -- Foreign Key to element table
	photo BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__attachment
	contact BOOLEAN, -- true if 1+ rows in Patient_Contact correspond to this entry
	communication BOOLEAN, -- true if 1+ rows in Patient_Communication correspond to this entry
	generalPractitioner BOOLEAN, -- true if 1+ item is referenced from bridge table: patient__reference
	managingOrganization TEXT, -- Foreign Key to reference table
	link BOOLEAN, -- true if 1+ rows in Patient_Link correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_deceasedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maritalStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleBirthBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleBirthInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient_Contact(

	id TEXT PRIMARY KEY,
	patientId TEXT, -- Foreign Key to patient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact__extension
	relationship BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact__codeableConcept
	"name" TEXT, -- Foreign Key to humanName table
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Contact__contactPoint
	"address" TEXT, -- Foreign Key to address table
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	organization TEXT, -- Foreign Key to reference table
	"period" TEXT, -- Foreign Key to period table

	FOREIGN KEY (patientId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("address")
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient_Communication(

	id TEXT PRIMARY KEY,
	patientId TEXT, -- Foreign Key to patient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Communication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Communication__extension
	"language" TEXT, -- Foreign Key to codeableConcept table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table

	FOREIGN KEY (patientId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE patient_Link(

	id TEXT PRIMARY KEY,
	patientId TEXT, -- Foreign Key to patient table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Link__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: patient_Link__extension
	other TEXT, -- Foreign Key to reference table
	"type" TEXT CHECK( "type" IN ('replaced-by','replaces','refer','seealso') ),
	_type TEXT, -- Foreign Key to element table

	FOREIGN KEY (patientId)
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (other)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentNotice(

	resourceType TEXT, -- resourceType: paymentNotice
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentNotice__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	request TEXT, -- Foreign Key to reference table
	response TEXT, -- Foreign Key to reference table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	"provider" TEXT, -- Foreign Key to reference table
	payment TEXT, -- Foreign Key to reference table
	paymentDate DATE,
	_paymentDate TEXT, -- Foreign Key to element table
	payee TEXT, -- Foreign Key to reference table
	recipient TEXT, -- Foreign Key to reference table
	amount TEXT, -- Foreign Key to money table
	paymentStatus TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("provider")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payment)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recipient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentReconciliation(

	resourceType TEXT, -- resourceType: paymentReconciliation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	paymentIssuer TEXT, -- Foreign Key to reference table
	request TEXT, -- Foreign Key to reference table
	requestor TEXT, -- Foreign Key to reference table
	outcome TEXT CHECK( outcome IN ('queued','complete','error','partial') ),
	_outcome TEXT, -- Foreign Key to element table
	disposition TEXT,
	_disposition TEXT, -- Foreign Key to element table
	paymentDate DATE,
	_paymentDate TEXT, -- Foreign Key to element table
	paymentAmount TEXT, -- Foreign Key to money table
	paymentIdentifier TEXT, -- Foreign Key to identifier table
	detail BOOLEAN, -- true if 1+ rows in PaymentReconciliation_Detail correspond to this entry
	formCode TEXT, -- Foreign Key to codeableConcept table
	processNote BOOLEAN, -- true if 1+ rows in PaymentReconciliation_ProcessNote correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentIssuer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_outcome)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_disposition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paymentDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentAmount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (paymentIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (formCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentReconciliation_Detail(

	id TEXT PRIMARY KEY,
	paymentReconciliationId TEXT, -- Foreign Key to paymentReconciliation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_Detail__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_Detail__extension
	identifier TEXT, -- Foreign Key to identifier table
	predecessor TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	request TEXT, -- Foreign Key to reference table
	submitter TEXT, -- Foreign Key to reference table
	response TEXT, -- Foreign Key to reference table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	responsible TEXT, -- Foreign Key to reference table
	payee TEXT, -- Foreign Key to reference table
	amount TEXT, -- Foreign Key to money table

	FOREIGN KEY (paymentReconciliationId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (predecessor)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (request)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (submitter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (response)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responsible)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (payee)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE paymentReconciliation_ProcessNote(

	id TEXT PRIMARY KEY,
	paymentReconciliationId TEXT, -- Foreign Key to paymentReconciliation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_ProcessNote__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: paymentReconciliation_ProcessNote__extension
	"type" TEXT CHECK( "type" IN ('display','print','printoper') ),
	_type TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table

	FOREIGN KEY (paymentReconciliationId)
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE person(

	resourceType TEXT, -- resourceType: person
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: person__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: person__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: person__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: person__identifier
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: person__humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: person__contactPoint
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: person__address
	photo TEXT, -- Foreign Key to attachment table
	managingOrganization TEXT, -- Foreign Key to reference table
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	link BOOLEAN, -- true if 1+ rows in Person_Link correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (photo)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (managingOrganization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE person_Link(

	id TEXT PRIMARY KEY,
	personId TEXT, -- Foreign Key to person table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: person_Link__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: person_Link__extension
	"target" TEXT, -- Foreign Key to reference table
	assurance TEXT CHECK( assurance IN ('level1','level2','level3','level4') ),
	_assurance TEXT, -- Foreign Key to element table

	FOREIGN KEY (personId)
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_assurance)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition(

	resourceType TEXT, -- resourceType: planDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__canonical
	goal BOOLEAN, -- true if 1+ rows in PlanDefinition_Goal correspond to this entry
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition__planDefinition_Action

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Goal(

	id TEXT PRIMARY KEY,
	planDefinitionId TEXT, -- Foreign Key to planDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal__extension
	category TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT, -- Foreign Key to codeableConcept table
	"priority" TEXT, -- Foreign Key to codeableConcept table
	"start" TEXT, -- Foreign Key to codeableConcept table
	addresses BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal__codeableConcept
	documentation BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Goal__relatedArtifact
	"target" BOOLEAN, -- true if 1+ rows in PlanDefinition_Target correspond to this entry

	FOREIGN KEY (planDefinitionId)
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("description")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("priority")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("start")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Target(

	id TEXT PRIMARY KEY,
	planDefinition_GoalId TEXT, -- Foreign Key to planDefinition_Goal table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Target__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Target__extension
	measure TEXT, -- Foreign Key to codeableConcept table
	detailQuantity TEXT, -- Foreign Key to quantity table
	detailRange TEXT, -- Foreign Key to range table
	detailCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	due TEXT, -- Foreign Key to duration table

	FOREIGN KEY (planDefinition_GoalId)
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (measure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (detailCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (due)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Action(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__extension
	prefix TEXT,
	_prefix TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	textEquivalent TEXT,
	_textEquivalent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__codeableConcept
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__codeableConcept
	documentation BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__relatedArtifact
	goalId BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__id
	_goalId BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__element
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"trigger" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__triggerDefinition
	"condition" BOOLEAN, -- true if 1+ rows in PlanDefinition_Condition correspond to this entry
	"input" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__dataRequirement
	"output" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__dataRequirement
	relatedAction BOOLEAN, -- true if 1+ rows in PlanDefinition_RelatedAction correspond to this entry
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	timingAge TEXT, -- Foreign Key to age table
	timingPeriod TEXT, -- Foreign Key to period table
	timingDuration TEXT, -- Foreign Key to duration table
	timingRange TEXT, -- Foreign Key to range table
	timingTiming TEXT, -- Foreign Key to timing table
	participant BOOLEAN, -- true if 1+ rows in PlanDefinition_Participant correspond to this entry
	"type" TEXT, -- Foreign Key to codeableConcept table
	groupingBehavior TEXT CHECK( groupingBehavior IN ('visual-group','logical-group','sentence-group') ),
	_groupingBehavior TEXT, -- Foreign Key to element table
	selectionBehavior TEXT CHECK( selectionBehavior IN ('any','all','all-or-none','exactly-one','at-most-one','one-or-more') ),
	_selectionBehavior TEXT, -- Foreign Key to element table
	requiredBehavior TEXT CHECK( requiredBehavior IN ('must','could','must-unless-documented') ),
	_requiredBehavior TEXT, -- Foreign Key to element table
	precheckBehavior TEXT CHECK( precheckBehavior IN ('yes','no') ),
	_precheckBehavior TEXT, -- Foreign Key to element table
	cardinalityBehavior TEXT CHECK( cardinalityBehavior IN ('single','multiple') ),
	_cardinalityBehavior TEXT, -- Foreign Key to element table
	definitionCanonical TEXT, -- pattern: ^\S*$
	_definitionCanonical TEXT, -- Foreign Key to element table
	definitionUri TEXT, -- pattern: ^\S*$
	_definitionUri TEXT, -- Foreign Key to element table
	transform TEXT,
	dynamicValue BOOLEAN, -- true if 1+ rows in PlanDefinition_DynamicValue correspond to this entry
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Action__planDefinition_Action

	FOREIGN KEY (_prefix)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_textEquivalent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupingBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_selectionBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requiredBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precheckBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cardinalityBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Condition(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Condition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Condition__extension
	kind TEXT CHECK( kind IN ('applicability','start','stop') ),
	_kind TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_RelatedAction(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_RelatedAction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_RelatedAction__extension
	actionId TEXT, -- Foreign Key to id table
	_actionId TEXT, -- Foreign Key to element table
	relationship TEXT CHECK( relationship IN ('before-start','before','before-end','concurrent-with-start','concurrent','concurrent-with-end','after-start','after','after-end') ),
	_relationship TEXT, -- Foreign Key to element table
	offsetDuration TEXT, -- Foreign Key to duration table
	offsetRange TEXT, -- Foreign Key to range table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actionId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relationship)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_Participant(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Participant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_Participant__extension
	"type" TEXT CHECK( "type" IN ('patient','practitioner','related-person','device') ),
	_type TEXT, -- Foreign Key to element table
	"role" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE planDefinition_DynamicValue(

	id TEXT PRIMARY KEY,
	planDefinition_ActionId TEXT, -- Foreign Key to planDefinition_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_DynamicValue__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: planDefinition_DynamicValue__extension
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitioner(

	resourceType TEXT, -- resourceType: practitioner
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__contactPoint
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__address
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	photo BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__attachment
	qualification BOOLEAN, -- true if 1+ rows in Practitioner_Qualification correspond to this entry
	communication BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner__codeableConcept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitioner_Qualification(

	id TEXT PRIMARY KEY,
	practitionerId TEXT, -- Foreign Key to practitioner table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_Qualification__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_Qualification__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: practitioner_Qualification__identifier
	"code" TEXT, -- Foreign Key to codeableConcept table
	"period" TEXT, -- Foreign Key to period table
	issuer TEXT, -- Foreign Key to reference table

	FOREIGN KEY (practitionerId)
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (issuer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitionerRole(

	resourceType TEXT, -- resourceType: practitionerRole
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	practitioner TEXT, -- Foreign Key to reference table
	organization TEXT, -- Foreign Key to reference table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__reference
	healthcareService BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__reference
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__contactPoint
	availableTime BOOLEAN, -- true if 1+ rows in PractitionerRole_AvailableTime correspond to this entry
	notAvailable BOOLEAN, -- true if 1+ rows in PractitionerRole_NotAvailable correspond to this entry
	availabilityExceptions TEXT,
	_availabilityExceptions TEXT, -- Foreign Key to element table
	"endpoint" BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (practitioner)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availabilityExceptions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitionerRole_AvailableTime(

	id TEXT PRIMARY KEY,
	practitionerRoleId TEXT, -- Foreign Key to practitionerRole table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime__extension
	daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime__code
	_daysOfWeek BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_AvailableTime__element
	allDay BOOLEAN,
	_allDay TEXT, -- Foreign Key to element table
	availableStartTime TIME,
	_availableStartTime TEXT, -- Foreign Key to element table
	availableEndTime TIME,
	_availableEndTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (practitionerRoleId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_allDay)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableStartTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_availableEndTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE practitionerRole_NotAvailable(

	id TEXT PRIMARY KEY,
	practitionerRoleId TEXT, -- Foreign Key to practitionerRole table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_NotAvailable__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: practitionerRole_NotAvailable__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	during TEXT, -- Foreign Key to period table

	FOREIGN KEY (practitionerRoleId)
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (during)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE "procedure"(

	resourceType TEXT, -- resourceType: procedure
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__reference
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	performedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_performedDateTime TEXT, -- Foreign Key to element table
	performedPeriod TEXT, -- Foreign Key to period table
	performedString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_performedString TEXT, -- Foreign Key to element table
	performedAge TEXT, -- Foreign Key to age table
	performedRange TEXT, -- Foreign Key to range table
	recorder TEXT, -- Foreign Key to reference table
	asserter TEXT, -- Foreign Key to reference table
	performer BOOLEAN, -- true if 1+ rows in Procedure_Performer correspond to this entry
	"location" TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__reference
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__codeableConcept
	outcome TEXT, -- Foreign Key to codeableConcept table
	report BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__reference
	complication BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__codeableConcept
	complicationDetail BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__reference
	followUp BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__annotation
	focalDevice BOOLEAN, -- true if 1+ rows in Procedure_FocalDevice correspond to this entry
	usedReference BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__reference
	usedCode BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure__codeableConcept

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_performedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_performedString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performedAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performedRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (recorder)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asserter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE procedure_Performer(

	id TEXT PRIMARY KEY,
	procedureId TEXT, -- Foreign Key to "procedure" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_Performer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_Performer__extension
	"function" TEXT, -- Foreign Key to codeableConcept table
	actor TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY (procedureId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("function")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE procedure_FocalDevice(

	id TEXT PRIMARY KEY,
	procedureId TEXT, -- Foreign Key to "procedure" table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_FocalDevice__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: procedure_FocalDevice__extension
	"action" TEXT, -- Foreign Key to codeableConcept table
	manipulated TEXT, -- Foreign Key to reference table

	FOREIGN KEY (procedureId)
		REFERENCES "procedure" (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("action")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (manipulated)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE provenance(

	resourceType TEXT, -- resourceType: provenance
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__extension
	"target" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__reference
	occurredPeriod TEXT, -- Foreign Key to period table
	occurredDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurredDateTime TEXT, -- Foreign Key to element table
	recorded DATETIME,
	_recorded TEXT, -- Foreign Key to element table
	"policy" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__uri
	_policy BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__element
	"location" TEXT, -- Foreign Key to reference table
	reason BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__codeableConcept
	activity TEXT, -- Foreign Key to codeableConcept table
	agent BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__provenance_Agent
	entity BOOLEAN, -- true if 1+ rows in Provenance_Entity correspond to this entry
	"signature" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance__signature

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurredPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurredDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_recorded)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (activity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE provenance_Agent(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Agent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Agent__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"role" BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Agent__codeableConcept
	who TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE provenance_Entity(

	id TEXT PRIMARY KEY,
	provenanceId TEXT, -- Foreign Key to provenance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Entity__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Entity__extension
	"role" TEXT CHECK( "role" IN ('derivation','revision','quotation','source','removal') ),
	_role TEXT, -- Foreign Key to element table
	what TEXT, -- Foreign Key to reference table
	agent BOOLEAN, -- true if 1+ item is referenced from bridge table: provenance_Entity__provenance_Agent

	FOREIGN KEY (provenanceId)
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_role)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (what)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire(

	resourceType TEXT, -- resourceType: questionnaire
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	derivedFrom BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__canonical
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectType BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__code
	_subjectType BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__element
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__coding
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire__questionnaire_Item

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_Item(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item__extension
	linkId TEXT,
	_linkId TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item__coding
	prefix TEXT,
	_prefix TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	"type" TEXT CHECK( "type" IN ('group','display','boolean','decimal','integer','date','dateTime','time','string','text','url','choice','open-choice','attachment','reference','quantity') ),
	_type TEXT, -- Foreign Key to element table
	enableWhen BOOLEAN, -- true if 1+ rows in Questionnaire_EnableWhen correspond to this entry
	enableBehavior TEXT CHECK( enableBehavior IN ('all','any') ),
	_enableBehavior TEXT, -- Foreign Key to element table
	"required" BOOLEAN,
	_required TEXT, -- Foreign Key to element table
	repeats BOOLEAN,
	_repeats TEXT, -- Foreign Key to element table
	readOnly BOOLEAN,
	_readOnly TEXT, -- Foreign Key to element table
	"maxLength" INTEGER,
	_maxLength TEXT, -- Foreign Key to element table
	answerValueSet TEXT,
	answerOption BOOLEAN, -- true if 1+ rows in Questionnaire_AnswerOption correspond to this entry
	initial BOOLEAN, -- true if 1+ rows in Questionnaire_Initial correspond to this entry
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Item__questionnaire_Item

	FOREIGN KEY (_linkId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_prefix)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_enableBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_required)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_repeats)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_readOnly)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maxLength)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_EnableWhen(

	id TEXT PRIMARY KEY,
	questionnaire_ItemId TEXT, -- Foreign Key to questionnaire_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_EnableWhen__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_EnableWhen__extension
	question TEXT,
	_question TEXT, -- Foreign Key to element table
	operator TEXT CHECK( operator IN ('exists','=','!=','>','<','>=','<=') ),
	_operator TEXT, -- Foreign Key to element table
	answerBoolean BOOLEAN, -- pattern: ^true|false$
	_answerBoolean TEXT, -- Foreign Key to element table
	answerDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_answerDecimal TEXT, -- Foreign Key to element table
	answerInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_answerInteger TEXT, -- Foreign Key to element table
	answerDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_answerDate TEXT, -- Foreign Key to element table
	answerDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_answerDateTime TEXT, -- Foreign Key to element table
	answerTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_answerTime TEXT, -- Foreign Key to element table
	answerString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_answerString TEXT, -- Foreign Key to element table
	answerCoding TEXT, -- Foreign Key to coding table
	answerQuantity TEXT, -- Foreign Key to quantity table
	answerReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_question)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_operator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_answerString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (answerCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (answerQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (answerReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_AnswerOption(

	id TEXT PRIMARY KEY,
	questionnaire_ItemId TEXT, -- Foreign Key to questionnaire_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_AnswerOption__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_AnswerOption__extension
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueCoding TEXT, -- Foreign Key to coding table
	valueReference TEXT, -- Foreign Key to reference table
	initialSelected BOOLEAN,
	_initialSelected TEXT, -- Foreign Key to element table

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_initialSelected)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaire_Initial(

	id TEXT PRIMARY KEY,
	questionnaire_ItemId TEXT, -- Foreign Key to questionnaire_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Initial__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaire_Initial__extension
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCoding TEXT, -- Foreign Key to coding table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaireResponse(

	resourceType TEXT, -- resourceType: questionnaireResponse
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse__extension
	identifier TEXT, -- Foreign Key to identifier table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse__reference
	questionnaire TEXT,
	"status" TEXT CHECK( "status" IN ('in-progress','completed','amended','entered-in-error','stopped') ),
	_status TEXT, -- Foreign Key to element table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	authored DATETIME,
	_authored TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	"source" TEXT, -- Foreign Key to reference table
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse__questionnaireResponse_Item

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authored)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("source")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaireResponse_Item(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Item__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Item__extension
	linkId TEXT,
	_linkId TEXT, -- Foreign Key to element table
	"definition" TEXT,
	_definition TEXT, -- Foreign Key to element table
	"text" TEXT,
	_text TEXT, -- Foreign Key to element table
	answer BOOLEAN, -- true if 1+ rows in QuestionnaireResponse_Answer correspond to this entry
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Item__questionnaireResponse_Item

	FOREIGN KEY (_linkId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_text)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE questionnaireResponse_Answer(

	id TEXT PRIMARY KEY,
	questionnaireResponse_ItemId TEXT, -- Foreign Key to questionnaireResponse_Item table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Answer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Answer__extension
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCoding TEXT, -- Foreign Key to coding table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueReference TEXT, -- Foreign Key to reference table
	item BOOLEAN, -- true if 1+ item is referenced from bridge table: questionnaireResponse_Answer__questionnaireResponse_Item

	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE relatedPerson(

	resourceType TEXT, -- resourceType: relatedPerson
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	relationship BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__codeableConcept
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__humanName
	telecom BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__contactPoint
	gender TEXT CHECK( gender IN ('male','female','other','unknown') ),
	_gender TEXT, -- Foreign Key to element table
	birthDate DATE,
	_birthDate TEXT, -- Foreign Key to element table
	"address" BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__address
	photo BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson__attachment
	"period" TEXT, -- Foreign Key to period table
	communication BOOLEAN, -- true if 1+ rows in RelatedPerson_Communication correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_gender)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_birthDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE relatedPerson_Communication(

	id TEXT PRIMARY KEY,
	relatedPersonId TEXT, -- Foreign Key to relatedPerson table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_Communication__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: relatedPerson_Communication__extension
	"language" TEXT, -- Foreign Key to codeableConcept table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table

	FOREIGN KEY (relatedPersonId)
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("language")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup(

	resourceType TEXT, -- resourceType: requestGroup
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__canonical
	_instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__element
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	author TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__annotation
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup__requestGroup_Action

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (author)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup_Action(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action__extension
	prefix TEXT,
	_prefix TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	textEquivalent TEXT,
	_textEquivalent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action__codeableConcept
	documentation BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action__relatedArtifact
	"condition" BOOLEAN, -- true if 1+ rows in RequestGroup_Condition correspond to this entry
	relatedAction BOOLEAN, -- true if 1+ rows in RequestGroup_RelatedAction correspond to this entry
	timingDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timingDateTime TEXT, -- Foreign Key to element table
	timingAge TEXT, -- Foreign Key to age table
	timingPeriod TEXT, -- Foreign Key to period table
	timingDuration TEXT, -- Foreign Key to duration table
	timingRange TEXT, -- Foreign Key to range table
	timingTiming TEXT, -- Foreign Key to timing table
	participant BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action__reference
	"type" TEXT, -- Foreign Key to codeableConcept table
	groupingBehavior TEXT,
	_groupingBehavior TEXT, -- Foreign Key to element table
	selectionBehavior TEXT,
	_selectionBehavior TEXT, -- Foreign Key to element table
	requiredBehavior TEXT,
	_requiredBehavior TEXT, -- Foreign Key to element table
	precheckBehavior TEXT,
	_precheckBehavior TEXT, -- Foreign Key to element table
	cardinalityBehavior TEXT,
	_cardinalityBehavior TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to reference table
	"action" BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Action__requestGroup_Action

	FOREIGN KEY (_prefix)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_textEquivalent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timingDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timingTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_groupingBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_selectionBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requiredBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_precheckBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cardinalityBehavior)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup_Condition(

	id TEXT PRIMARY KEY,
	requestGroup_ActionId TEXT, -- Foreign Key to requestGroup_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Condition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_Condition__extension
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	expression TEXT, -- Foreign Key to expression table

	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE requestGroup_RelatedAction(

	id TEXT PRIMARY KEY,
	requestGroup_ActionId TEXT, -- Foreign Key to requestGroup_Action table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_RelatedAction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: requestGroup_RelatedAction__extension
	actionId TEXT, -- Foreign Key to id table
	_actionId TEXT, -- Foreign Key to element table
	relationship TEXT,
	_relationship TEXT, -- Foreign Key to element table
	offsetDuration TEXT, -- Foreign Key to duration table
	offsetRange TEXT, -- Foreign Key to range table

	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (actionId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actionId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relationship)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (offsetRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchDefinition(

	resourceType TEXT, -- resourceType: researchDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__string
	_comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__element
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: researchDefinition__canonical
	"population" TEXT, -- Foreign Key to reference table
	exposure TEXT, -- Foreign Key to reference table
	exposureAlternative TEXT, -- Foreign Key to reference table
	outcome TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("population")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposure)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposureAlternative)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchElementDefinition(

	resourceType TEXT, -- resourceType: researchElementDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	shortTitle TEXT,
	_shortTitle TEXT, -- Foreign Key to element table
	subtitle TEXT,
	_subtitle TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	subjectCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	subjectReference TEXT, -- Foreign Key to reference table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__string
	_comment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__element
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"usage" TEXT,
	_usage TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__relatedArtifact
	library BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition__canonical
	"type" TEXT CHECK( "type" IN ('population','exposure','outcome') ),
	_type TEXT, -- Foreign Key to element table
	variableType TEXT CHECK( variableType IN ('dichotomous','continuous','descriptive') ),
	_variableType TEXT, -- Foreign Key to element table
	characteristic BOOLEAN, -- true if 1+ rows in ResearchElementDefinition_Characteristic correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_shortTitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subtitle)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (subjectReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_usage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variableType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchElementDefinition_Characteristic(

	id TEXT PRIMARY KEY,
	researchElementDefinitionId TEXT, -- Foreign Key to researchElementDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_Characteristic__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_Characteristic__extension
	definitionCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	definitionCanonical TEXT, -- pattern: ^\S*$
	_definitionCanonical TEXT, -- Foreign Key to element table
	definitionExpression TEXT, -- Foreign Key to expression table
	definitionDataRequirement TEXT, -- Foreign Key to dataRequirement table
	usageContext BOOLEAN, -- true if 1+ item is referenced from bridge table: researchElementDefinition_Characteristic__usageContext
	exclude BOOLEAN,
	_exclude TEXT, -- Foreign Key to element table
	unitOfMeasure TEXT, -- Foreign Key to codeableConcept table
	studyEffectiveDescription TEXT,
	_studyEffectiveDescription TEXT, -- Foreign Key to element table
	studyEffectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_studyEffectiveDateTime TEXT, -- Foreign Key to element table
	studyEffectivePeriod TEXT, -- Foreign Key to period table
	studyEffectiveDuration TEXT, -- Foreign Key to duration table
	studyEffectiveTiming TEXT, -- Foreign Key to timing table
	studyEffectiveTimeFromStart TEXT, -- Foreign Key to duration table
	studyEffectiveGroupMeasure TEXT CHECK( studyEffectiveGroupMeasure IN ('mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median') ),
	_studyEffectiveGroupMeasure TEXT, -- Foreign Key to element table
	participantEffectiveDescription TEXT,
	_participantEffectiveDescription TEXT, -- Foreign Key to element table
	participantEffectiveDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_participantEffectiveDateTime TEXT, -- Foreign Key to element table
	participantEffectivePeriod TEXT, -- Foreign Key to period table
	participantEffectiveDuration TEXT, -- Foreign Key to duration table
	participantEffectiveTiming TEXT, -- Foreign Key to timing table
	participantEffectiveTimeFromStart TEXT, -- Foreign Key to duration table
	participantEffectiveGroupMeasure TEXT CHECK( participantEffectiveGroupMeasure IN ('mean','median','mean-of-mean','mean-of-median','median-of-mean','median-of-median') ),
	_participantEffectiveGroupMeasure TEXT, -- Foreign Key to element table

	FOREIGN KEY (researchElementDefinitionId)
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_definitionCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definitionDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_exclude)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfMeasure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_studyEffectiveDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_studyEffectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectiveDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyEffectiveTimeFromStart)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_studyEffectiveGroupMeasure)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (participantEffectiveTimeFromStart)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_participantEffectiveGroupMeasure)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchStudy(

	resourceType TEXT, -- resourceType: researchStudy
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__identifier
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	protocol BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__reference
	"status" TEXT CHECK( "status" IN ('active','administratively-completed','approved','closed-to-accrual','closed-to-accrual-and-intervention','completed','disapproved','in-review','temporarily-closed-to-accrual','temporarily-closed-to-accrual-and-intervention','withdrawn') ),
	_status TEXT, -- Foreign Key to element table
	primaryPurposeType TEXT, -- Foreign Key to codeableConcept table
	phase TEXT, -- Foreign Key to codeableConcept table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__codeableConcept
	focus BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__codeableConcept
	"condition" BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__codeableConcept
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__relatedArtifact
	keyword BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__codeableConcept
	"location" BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__codeableConcept
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	enrollment BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__reference
	"period" TEXT, -- Foreign Key to period table
	sponsor TEXT, -- Foreign Key to reference table
	principalInvestigator TEXT, -- Foreign Key to reference table
	"site" BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__reference
	reasonStopped TEXT, -- Foreign Key to codeableConcept table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy__annotation
	arm BOOLEAN, -- true if 1+ rows in ResearchStudy_Arm correspond to this entry
	objective BOOLEAN, -- true if 1+ rows in ResearchStudy_Objective correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (primaryPurposeType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (phase)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sponsor)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (principalInvestigator)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reasonStopped)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchStudy_Arm(

	id TEXT PRIMARY KEY,
	researchStudyId TEXT, -- Foreign Key to researchStudy table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Arm__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Arm__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (researchStudyId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchStudy_Objective(

	id TEXT PRIMARY KEY,
	researchStudyId TEXT, -- Foreign Key to researchStudy table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Objective__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchStudy_Objective__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (researchStudyId)
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE researchSubject(

	resourceType TEXT, -- resourceType: researchSubject
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: researchSubject__identifier
	"status" TEXT CHECK( "status" IN ('candidate','eligible','follow-up','ineligible','not-registered','off-study','on-study','on-study-intervention','on-study-observation','pending-on-study','potential-candidate','screening','withdrawn') ),
	_status TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	study TEXT, -- Foreign Key to reference table
	individual TEXT, -- Foreign Key to reference table
	assignedArm TEXT,
	_assignedArm TEXT, -- Foreign Key to element table
	actualArm TEXT,
	_actualArm TEXT, -- Foreign Key to element table
	consent TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (study)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (individual)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_assignedArm)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_actualArm)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (consent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskAssessment(

	resourceType TEXT, -- resourceType: riskAssessment
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__identifier
	basedOn TEXT, -- Foreign Key to reference table
	parent TEXT, -- Foreign Key to reference table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	"method" TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	"condition" TEXT, -- Foreign Key to reference table
	performer TEXT, -- Foreign Key to reference table
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__reference
	basis BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__reference
	prediction BOOLEAN, -- true if 1+ rows in RiskAssessment_Prediction correspond to this entry
	mitigation TEXT,
	_mitigation TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (basedOn)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (parent)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("condition")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mitigation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskAssessment_Prediction(

	id TEXT PRIMARY KEY,
	riskAssessmentId TEXT, -- Foreign Key to riskAssessment table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_Prediction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskAssessment_Prediction__extension
	outcome TEXT, -- Foreign Key to codeableConcept table
	probabilityDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_probabilityDecimal TEXT, -- Foreign Key to element table
	probabilityRange TEXT, -- Foreign Key to range table
	qualitativeRisk TEXT, -- Foreign Key to codeableConcept table
	relativeRisk REAL,
	_relativeRisk TEXT, -- Foreign Key to element table
	whenPeriod TEXT, -- Foreign Key to period table
	whenRange TEXT, -- Foreign Key to range table
	rationale TEXT,
	_rationale TEXT, -- Foreign Key to element table

	FOREIGN KEY (riskAssessmentId)
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_probabilityDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (probabilityRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (qualitativeRisk)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_relativeRisk)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (whenPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (whenRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_rationale)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis(

	resourceType TEXT, -- resourceType: riskEvidenceSynthesis
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__annotation
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__codeableConcept
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	approvalDate DATE,
	_approvalDate TEXT, -- Foreign Key to element table
	lastReviewDate DATE,
	_lastReviewDate TEXT, -- Foreign Key to element table
	effectivePeriod TEXT, -- Foreign Key to period table
	topic BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__codeableConcept
	author BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__contactDetail
	editor BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__contactDetail
	reviewer BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__contactDetail
	endorser BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__contactDetail
	relatedArtifact BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis__relatedArtifact
	synthesisType TEXT, -- Foreign Key to codeableConcept table
	studyType TEXT, -- Foreign Key to codeableConcept table
	"population" TEXT, -- Foreign Key to reference table
	exposure TEXT, -- Foreign Key to reference table
	outcome TEXT, -- Foreign Key to reference table
	sampleSize TEXT, -- Foreign Key to riskEvidenceSynthesis_SampleSize table
	riskEstimate TEXT, -- Foreign Key to riskEvidenceSynthesis_RiskEstimate table
	certainty BOOLEAN, -- true if 1+ rows in RiskEvidenceSynthesis_Certainty correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_approvalDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastReviewDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (effectivePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (synthesisType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (studyType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("population")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (exposure)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (outcome)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sampleSize)
		REFERENCES riskEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (riskEstimate)
		REFERENCES riskEvidenceSynthesis_RiskEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_SampleSize(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_SampleSize__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_SampleSize__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	numberOfStudies INTEGER,
	_numberOfStudies TEXT, -- Foreign Key to element table
	numberOfParticipants INTEGER,
	_numberOfParticipants TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfStudies)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfParticipants)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_RiskEstimate(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_RiskEstimate__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_RiskEstimate__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"value" REAL,
	_value TEXT, -- Foreign Key to element table
	unitOfMeasure TEXT, -- Foreign Key to codeableConcept table
	denominatorCount INTEGER,
	_denominatorCount TEXT, -- Foreign Key to element table
	numeratorCount INTEGER,
	_numeratorCount TEXT, -- Foreign Key to element table
	precisionEstimate BOOLEAN, -- true if 1+ rows in RiskEvidenceSynthesis_PrecisionEstimate correspond to this entry

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (unitOfMeasure)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_denominatorCount)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numeratorCount)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_PrecisionEstimate(

	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_RiskEstimateId TEXT, -- Foreign Key to riskEvidenceSynthesis_RiskEstimate table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_PrecisionEstimate__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_PrecisionEstimate__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	"level" REAL,
	_level TEXT, -- Foreign Key to element table
	"from" REAL,
	_from TEXT, -- Foreign Key to element table
	"to" REAL,
	_to TEXT, -- Foreign Key to element table

	FOREIGN KEY (riskEvidenceSynthesis_RiskEstimateId)
		REFERENCES riskEvidenceSynthesis_RiskEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_level)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_from)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_to)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_Certainty(

	id TEXT PRIMARY KEY,
	riskEvidenceSynthesisId TEXT, -- Foreign Key to riskEvidenceSynthesis table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty__extension
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_Certainty__annotation
	certaintySubcomponent BOOLEAN, -- true if 1+ rows in RiskEvidenceSynthesis_CertaintySubcomponent correspond to this entry

	FOREIGN KEY (riskEvidenceSynthesisId)
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE riskEvidenceSynthesis_CertaintySubcomponent(

	id TEXT PRIMARY KEY,
	riskEvidenceSynthesis_CertaintyId TEXT, -- Foreign Key to riskEvidenceSynthesis_Certainty table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	rating BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: riskEvidenceSynthesis_CertaintySubcomponent__annotation

	FOREIGN KEY (riskEvidenceSynthesis_CertaintyId)
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE schedule(

	resourceType TEXT, -- resourceType: schedule
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__identifier
	active BOOLEAN,
	_active TEXT, -- Foreign Key to element table
	serviceCategory BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__codeableConcept
	serviceType BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__codeableConcept
	actor BOOLEAN, -- true if 1+ item is referenced from bridge table: schedule__reference
	planningHorizon TEXT, -- Foreign Key to period table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_active)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (planningHorizon)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE searchParameter(

	resourceType TEXT, -- resourceType: searchParameter
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	derivedFrom TEXT,
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	base BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__code
	_base BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__element
	"type" TEXT CHECK( "type" IN ('number','date','string','token','reference','composite','quantity','uri','special') ),
	_type TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	xpath TEXT,
	_xpath TEXT, -- Foreign Key to element table
	xpathUsage TEXT CHECK( xpathUsage IN ('normal','phonetic','nearby','distance','other') ),
	_xpathUsage TEXT, -- Foreign Key to element table
	"target" BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__code
	_target BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__element
	multipleOr BOOLEAN,
	_multipleOr TEXT, -- Foreign Key to element table
	multipleAnd BOOLEAN,
	_multipleAnd TEXT, -- Foreign Key to element table
	comparator BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: eq/ne/gt/lt/ge/le/sa/eb/ap,
	_comparator BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__element
	modifier BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: missing/exact/contains/not/text/in/not-in/below/above/type/identifier/ofType,
	_modifier BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__element
	"chain" BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__string
	_chain BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter__element
	component BOOLEAN, -- true if 1+ rows in SearchParameter_Component correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_xpath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_xpathUsage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleOr)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_multipleAnd)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE searchParameter_Component(

	id TEXT PRIMARY KEY,
	searchParameterId TEXT, -- Foreign Key to searchParameter table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_Component__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: searchParameter_Component__extension
	"definition" TEXT,
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table

	FOREIGN KEY (searchParameterId)
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE serviceRequest(

	resourceType TEXT, -- resourceType: serviceRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__identifier
	instantiatesCanonical BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__canonical
	instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__uri
	_instantiatesUri BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__element
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	replaces BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	requisition TEXT, -- Foreign Key to identifier table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	intent TEXT,
	_intent TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__codeableConcept
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	doNotPerform BOOLEAN,
	_doNotPerform TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	orderDetail BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__codeableConcept
	quantityQuantity TEXT, -- Foreign Key to quantity table
	quantityRatio TEXT, -- Foreign Key to ratio table
	quantityRange TEXT, -- Foreign Key to range table
	"subject" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	asNeededBoolean BOOLEAN, -- pattern: ^true|false$
	_asNeededBoolean TEXT, -- Foreign Key to element table
	asNeededCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performerType TEXT, -- Foreign Key to codeableConcept table
	performer BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	locationCode BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__codeableConcept
	locationReference BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	supportingInfo BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	specimen BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference
	bodySite BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__annotation
	patientInstruction TEXT,
	_patientInstruction TEXT, -- Foreign Key to element table
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: serviceRequest__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requisition)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_doNotPerform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantityQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantityRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantityRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_asNeededBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (asNeededCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (performerType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_patientInstruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE slot(

	resourceType TEXT, -- resourceType: slot
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: slot__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: slot__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: slot__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: slot__identifier
	serviceCategory BOOLEAN, -- true if 1+ item is referenced from bridge table: slot__codeableConcept
	serviceType BOOLEAN, -- true if 1+ item is referenced from bridge table: slot__codeableConcept
	specialty BOOLEAN, -- true if 1+ item is referenced from bridge table: slot__codeableConcept
	appointmentType TEXT, -- Foreign Key to codeableConcept table
	schedule TEXT, -- Foreign Key to reference table
	"status" TEXT CHECK( "status" IN ('busy','free','busy-unavailable','busy-tentative','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"start" DATETIME,
	_start TEXT, -- Foreign Key to element table
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	overbooked BOOLEAN,
	_overbooked TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (appointmentType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (schedule)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_start)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_overbooked)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen(

	resourceType TEXT, -- resourceType: specimen
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__identifier
	accessionIdentifier TEXT, -- Foreign Key to identifier table
	"status" TEXT CHECK( "status" IN ('available','unavailable','unsatisfactory','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"subject" TEXT, -- Foreign Key to reference table
	receivedTime DATETIME,
	_receivedTime TEXT, -- Foreign Key to element table
	parent BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__reference
	request BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__reference
	"collection" TEXT, -- Foreign Key to specimen_Collection table
	processing BOOLEAN, -- true if 1+ rows in Specimen_Processing correspond to this entry
	container BOOLEAN, -- true if 1+ rows in Specimen_Container correspond to this entry
	"condition" BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__codeableConcept
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen__annotation

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (accessionIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("subject")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_receivedTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("collection")
		REFERENCES specimen_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen_Collection(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Collection__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Collection__extension
	collector TEXT, -- Foreign Key to reference table
	collectedDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_collectedDateTime TEXT, -- Foreign Key to element table
	collectedPeriod TEXT, -- Foreign Key to period table
	duration TEXT, -- Foreign Key to duration table
	quantity TEXT, -- Foreign Key to quantity table
	"method" TEXT, -- Foreign Key to codeableConcept table
	bodySite TEXT, -- Foreign Key to codeableConcept table
	fastingStatusCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	fastingStatusDuration TEXT, -- Foreign Key to duration table

	FOREIGN KEY (collector)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_collectedDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (collectedPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (bodySite)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fastingStatusCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fastingStatusDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen_Processing(

	id TEXT PRIMARY KEY,
	specimenId TEXT, -- Foreign Key to specimen table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Processing__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Processing__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"procedure" TEXT, -- Foreign Key to codeableConcept table
	additive BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Processing__reference
	timeDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_timeDateTime TEXT, -- Foreign Key to element table
	timePeriod TEXT, -- Foreign Key to period table

	FOREIGN KEY (specimenId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("procedure")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (timePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimen_Container(

	id TEXT PRIMARY KEY,
	specimenId TEXT, -- Foreign Key to specimen table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Container__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Container__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: specimen_Container__identifier
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	capacity TEXT, -- Foreign Key to quantity table
	specimenQuantity TEXT, -- Foreign Key to quantity table
	additiveCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	additiveReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (specimenId)
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (capacity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (specimenQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition(

	resourceType TEXT, -- resourceType: specimenDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition__extension
	identifier TEXT, -- Foreign Key to identifier table
	typeCollected TEXT, -- Foreign Key to codeableConcept table
	patientPreparation BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition__codeableConcept
	timeAspect TEXT,
	_timeAspect TEXT, -- Foreign Key to element table
	"collection" BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition__codeableConcept
	typeTested BOOLEAN, -- true if 1+ rows in SpecimenDefinition_TypeTested correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (typeCollected)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timeAspect)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_TypeTested(

	id TEXT PRIMARY KEY,
	specimenDefinitionId TEXT, -- Foreign Key to specimenDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_TypeTested__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_TypeTested__extension
	isDerived BOOLEAN,
	_isDerived TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	preference TEXT CHECK( preference IN ('preferred','alternate') ),
	_preference TEXT, -- Foreign Key to element table
	container TEXT, -- Foreign Key to specimenDefinition_Container table
	requirement TEXT,
	_requirement TEXT, -- Foreign Key to element table
	retentionTime TEXT, -- Foreign Key to duration table
	rejectionCriterion BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_TypeTested__codeableConcept
	handling BOOLEAN, -- true if 1+ rows in SpecimenDefinition_Handling correspond to this entry

	FOREIGN KEY (specimenDefinitionId)
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDerived)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preference)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (container)
		REFERENCES specimenDefinition_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requirement)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (retentionTime)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_Container(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Container__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Container__extension
	material TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT, -- Foreign Key to codeableConcept table
	cap TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	capacity TEXT, -- Foreign Key to quantity table
	minimumVolumeQuantity TEXT, -- Foreign Key to quantity table
	minimumVolumeString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_minimumVolumeString TEXT, -- Foreign Key to element table
	additive BOOLEAN, -- true if 1+ rows in SpecimenDefinition_Additive correspond to this entry
	preparation TEXT,
	_preparation TEXT, -- Foreign Key to element table

	FOREIGN KEY (material)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cap)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (capacity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (minimumVolumeQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minimumVolumeString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preparation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_Additive(

	id TEXT PRIMARY KEY,
	specimenDefinition_ContainerId TEXT, -- Foreign Key to specimenDefinition_Container table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Additive__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Additive__extension
	additiveCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	additiveReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (specimenDefinition_ContainerId)
		REFERENCES specimenDefinition_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (additiveReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE specimenDefinition_Handling(

	id TEXT PRIMARY KEY,
	specimenDefinition_TypeTestedId TEXT, -- Foreign Key to specimenDefinition_TypeTested table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Handling__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: specimenDefinition_Handling__extension
	temperatureQualifier TEXT, -- Foreign Key to codeableConcept table
	temperatureRange TEXT, -- Foreign Key to range table
	maxDuration TEXT, -- Foreign Key to duration table
	instruction TEXT,
	_instruction TEXT, -- Foreign Key to element table

	FOREIGN KEY (specimenDefinition_TypeTestedId)
		REFERENCES specimenDefinition_TypeTested (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (temperatureQualifier)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (temperatureRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (maxDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instruction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition(

	resourceType TEXT, -- resourceType: structureDefinition
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	keyword BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__coding
	fhirVersion TEXT CHECK( fhirVersion IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),
	_fhirVersion TEXT, -- Foreign Key to element table
	mapping BOOLEAN, -- true if 1+ rows in StructureDefinition_Mapping correspond to this entry
	kind TEXT CHECK( kind IN ('primitive-type','complex-type','resource','logical') ),
	_kind TEXT, -- Foreign Key to element table
	abstract BOOLEAN,
	_abstract TEXT, -- Foreign Key to element table
	context BOOLEAN, -- true if 1+ rows in StructureDefinition_Context correspond to this entry
	contextInvariant BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__string
	_contextInvariant BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition__element
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	baseDefinition TEXT,
	derivation TEXT CHECK( derivation IN ('specialization','constraint') ),
	_derivation TEXT, -- Foreign Key to element table
	"snapshot" TEXT, -- Foreign Key to structureDefinition_Snapshot table
	"differential" TEXT, -- Foreign Key to structureDefinition_Differential table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fhirVersion)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abstract)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_derivation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("snapshot")
		REFERENCES structureDefinition_Snapshot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("differential")
		REFERENCES structureDefinition_Differential (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition_Mapping(

	id TEXT PRIMARY KEY,
	structureDefinitionId TEXT, -- Foreign Key to structureDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Mapping__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Mapping__extension
	"identity" TEXT, -- Foreign Key to id table
	_identity TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureDefinitionId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("identity")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition_Context(

	id TEXT PRIMARY KEY,
	structureDefinitionId TEXT, -- Foreign Key to structureDefinition table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Context__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Context__extension
	"type" TEXT CHECK( "type" IN ('fhirpath','element','extension') ),
	_type TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureDefinitionId)
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureDefinition_Snapshot(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Snapshot__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Snapshot__extension
	element BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Snapshot__elementDefinition

);

CREATE TABLE structureDefinition_Differential(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Differential__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Differential__extension
	element BOOLEAN, -- true if 1+ item is referenced from bridge table: structureDefinition_Differential__elementDefinition

);

CREATE TABLE structureMap(

	resourceType TEXT, -- resourceType: structureMap
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	"structure" BOOLEAN, -- true if 1+ rows in StructureMap_Structure correspond to this entry
	import BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap__canonical
	"group" BOOLEAN, -- true if 1+ rows in StructureMap_Group correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Structure(

	id TEXT PRIMARY KEY,
	structureMapId TEXT, -- Foreign Key to structureMap table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Structure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Structure__extension
	"url" TEXT,
	mode TEXT CHECK( mode IN ('source','queried','target','produced') ),
	_mode TEXT, -- Foreign Key to element table
	alias TEXT,
	_alias TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMapId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_alias)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Group(

	id TEXT PRIMARY KEY,
	structureMapId TEXT, -- Foreign Key to structureMap table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Group__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Group__extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	extends TEXT, -- Foreign Key to id table
	_extends TEXT, -- Foreign Key to element table
	typeMode TEXT CHECK( typeMode IN ('none','types','type-and-types') ),
	_typeMode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table
	"input" BOOLEAN, -- true if 1+ rows in StructureMap_Input correspond to this entry
	"rule" BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Group__structureMap_Rule

	FOREIGN KEY (structureMapId)
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (extends)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_extends)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_typeMode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Input(

	id TEXT PRIMARY KEY,
	structureMap_GroupId TEXT, -- Foreign Key to structureMap_Group table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Input__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Input__extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	mode TEXT CHECK( mode IN ('source','target') ),
	_mode TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMap_GroupId)
		REFERENCES structureMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_mode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Rule(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Rule__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Rule__extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	"source" BOOLEAN, -- true if 1+ rows in StructureMap_Source correspond to this entry
	"target" BOOLEAN, -- true if 1+ rows in StructureMap_Target correspond to this entry
	"rule" BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Rule__structureMap_Rule
	"dependent" BOOLEAN, -- true if 1+ rows in StructureMap_Dependent correspond to this entry
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Source(

	id TEXT PRIMARY KEY,
	structureMap_RuleId TEXT, -- Foreign Key to structureMap_Rule table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Source__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Source__extension
	context TEXT, -- Foreign Key to id table
	_context TEXT, -- Foreign Key to element table
	"min" INTEGER,
	_min TEXT, -- Foreign Key to element table
	"max" TEXT,
	_max TEXT, -- Foreign Key to element table
	"type" TEXT,
	_type TEXT, -- Foreign Key to element table
	defaultValueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_defaultValueBase64Binary TEXT, -- Foreign Key to element table
	defaultValueBoolean BOOLEAN, -- pattern: ^true|false$
	_defaultValueBoolean TEXT, -- Foreign Key to element table
	defaultValueCanonical TEXT, -- pattern: ^\S*$
	_defaultValueCanonical TEXT, -- Foreign Key to element table
	defaultValueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_defaultValueCode TEXT, -- Foreign Key to element table
	defaultValueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_defaultValueDate TEXT, -- Foreign Key to element table
	defaultValueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_defaultValueDateTime TEXT, -- Foreign Key to element table
	defaultValueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_defaultValueDecimal TEXT, -- Foreign Key to element table
	defaultValueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_defaultValueId TEXT, -- Foreign Key to element table
	defaultValueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_defaultValueInstant TEXT, -- Foreign Key to element table
	defaultValueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_defaultValueInteger TEXT, -- Foreign Key to element table
	defaultValueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueMarkdown TEXT, -- Foreign Key to element table
	defaultValueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_defaultValueOid TEXT, -- Foreign Key to element table
	defaultValuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_defaultValuePositiveInt TEXT, -- Foreign Key to element table
	defaultValueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_defaultValueString TEXT, -- Foreign Key to element table
	defaultValueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_defaultValueTime TEXT, -- Foreign Key to element table
	defaultValueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_defaultValueUnsignedInt TEXT, -- Foreign Key to element table
	defaultValueUri TEXT, -- pattern: ^\S*$
	_defaultValueUri TEXT, -- Foreign Key to element table
	defaultValueUrl TEXT, -- pattern: ^\S*$
	_defaultValueUrl TEXT, -- Foreign Key to element table
	defaultValueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_defaultValueUuid TEXT, -- Foreign Key to element table
	defaultValueAddress TEXT, -- Foreign Key to address table
	defaultValueAge TEXT, -- Foreign Key to age table
	defaultValueAnnotation TEXT, -- Foreign Key to annotation table
	defaultValueAttachment TEXT, -- Foreign Key to attachment table
	defaultValueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	defaultValueCoding TEXT, -- Foreign Key to coding table
	defaultValueContactPoint TEXT, -- Foreign Key to contactPoint table
	defaultValueCount TEXT, -- Foreign Key to count table
	defaultValueDistance TEXT, -- Foreign Key to distance table
	defaultValueDuration TEXT, -- Foreign Key to duration table
	defaultValueHumanName TEXT, -- Foreign Key to humanName table
	defaultValueIdentifier TEXT, -- Foreign Key to identifier table
	defaultValueMoney TEXT, -- Foreign Key to money table
	defaultValuePeriod TEXT, -- Foreign Key to period table
	defaultValueQuantity TEXT, -- Foreign Key to quantity table
	defaultValueRange TEXT, -- Foreign Key to range table
	defaultValueRatio TEXT, -- Foreign Key to ratio table
	defaultValueReference TEXT, -- Foreign Key to reference table
	defaultValueSampledData TEXT, -- Foreign Key to sampledData table
	defaultValueSignature TEXT, -- Foreign Key to signature table
	defaultValueTiming TEXT, -- Foreign Key to timing table
	defaultValueContactDetail TEXT, -- Foreign Key to contactDetail table
	defaultValueContributor TEXT, -- Foreign Key to contributor table
	defaultValueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	defaultValueExpression TEXT, -- Foreign Key to expression table
	defaultValueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	defaultValueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	defaultValueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	defaultValueUsageContext TEXT, -- Foreign Key to usageContext table
	defaultValueDosage TEXT, -- Foreign Key to dosage table
	defaultValueMeta TEXT, -- Foreign Key to meta table
	element TEXT,
	_element TEXT, -- Foreign Key to element table
	listMode TEXT CHECK( listMode IN ('first','not_first','last','not_last','only_one') ),
	_listMode TEXT, -- Foreign Key to element table
	variable TEXT, -- Foreign Key to id table
	_variable TEXT, -- Foreign Key to element table
	"condition" TEXT,
	_condition TEXT, -- Foreign Key to element table
	"check" TEXT,
	_check TEXT, -- Foreign Key to element table
	logMessage TEXT,
	_logMessage TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_context)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_min)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_max)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (defaultValueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_element)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_listMode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variable)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_condition)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_check)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_logMessage)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Target(

	id TEXT PRIMARY KEY,
	structureMap_RuleId TEXT, -- Foreign Key to structureMap_Rule table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Target__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Target__extension
	context TEXT, -- Foreign Key to id table
	_context TEXT, -- Foreign Key to element table
	contextType TEXT CHECK( contextType IN ('type','variable') ),
	_contextType TEXT, -- Foreign Key to element table
	element TEXT,
	_element TEXT, -- Foreign Key to element table
	variable TEXT, -- Foreign Key to id table
	_variable TEXT, -- Foreign Key to element table
	listMode BOOLEAN, --**LIST** True if 1+ references from enum table: Foreign key to enum table, allowed enum values: first/share/last/collate,
	_listMode BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Target__element
	listRuleId TEXT, -- Foreign Key to id table
	_listRuleId TEXT, -- Foreign Key to element table
	transform TEXT CHECK( transform IN ('create','copy','truncate','escape','cast','append','translate','reference','dateOp','uuid','pointer','evaluate','cc','c','qty','id','cp') ),
	_transform TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ rows in StructureMap_Parameter correspond to this entry

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (context)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_context)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contextType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_element)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (variable)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_variable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (listRuleId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_listRuleId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_transform)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Parameter(

	id TEXT PRIMARY KEY,
	structureMap_TargetId TEXT, -- Foreign Key to structureMap_Target table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Parameter__extension
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table

	FOREIGN KEY (structureMap_TargetId)
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE structureMap_Dependent(

	id TEXT PRIMARY KEY,
	structureMap_RuleId TEXT, -- Foreign Key to structureMap_Rule table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent__extension
	"name" TEXT, -- Foreign Key to id table
	_name TEXT, -- Foreign Key to element table
	variable BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent__string
	_variable BOOLEAN, -- true if 1+ item is referenced from bridge table: structureMap_Dependent__element

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE subscription(

	resourceType TEXT, -- resourceType: subscription
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription__extension
	"status" TEXT CHECK( "status" IN ('requested','active','error','off') ),
	_status TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription__contactPoint
	"end" DATETIME,
	_end TEXT, -- Foreign Key to element table
	reason TEXT,
	_reason TEXT, -- Foreign Key to element table
	criteria TEXT,
	_criteria TEXT, -- Foreign Key to element table
	error TEXT,
	_error TEXT, -- Foreign Key to element table
	channel TEXT, -- Foreign Key to subscription_Channel table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_end)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_reason)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_criteria)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_error)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (channel)
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE subscription_Channel(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel__extension
	"type" TEXT CHECK( "type" IN ('rest-hook','websocket','email','sms','message') ),
	_type TEXT, -- Foreign Key to element table
	"endpoint" TEXT,
	_endpoint TEXT, -- Foreign Key to element table
	payload TEXT,
	_payload TEXT, -- Foreign Key to element table
	header BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel__string
	_header BOOLEAN, -- true if 1+ item is referenced from bridge table: subscription_Channel__element

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_endpoint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_payload)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substance(

	resourceType TEXT, -- resourceType: substance
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substance__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: substance__identifier
	"status" TEXT CHECK( "status" IN ('active','inactive','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	category BOOLEAN, -- true if 1+ item is referenced from bridge table: substance__codeableConcept
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"instance" BOOLEAN, -- true if 1+ rows in Substance_Instance correspond to this entry
	ingredient BOOLEAN, -- true if 1+ rows in Substance_Ingredient correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substance_Instance(

	id TEXT PRIMARY KEY,
	substanceId TEXT, -- Foreign Key to substance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Instance__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Instance__extension
	identifier TEXT, -- Foreign Key to identifier table
	expiry DATETIME,
	_expiry TEXT, -- Foreign Key to element table
	quantity TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (substanceId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expiry)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substance_Ingredient(

	id TEXT PRIMARY KEY,
	substanceId TEXT, -- Foreign Key to substance table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Ingredient__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substance_Ingredient__extension
	quantity TEXT, -- Foreign Key to ratio table
	substanceCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	substanceReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (substanceId)
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid(

	resourceType TEXT, -- resourceType: substanceNucleicAcid
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid__extension
	sequenceType TEXT, -- Foreign Key to codeableConcept table
	numberOfSubunits INTEGER,
	_numberOfSubunits TEXT, -- Foreign Key to element table
	areaOfHybridisation TEXT,
	_areaOfHybridisation TEXT, -- Foreign Key to element table
	oligoNucleotideType TEXT, -- Foreign Key to codeableConcept table
	subunit BOOLEAN, -- true if 1+ rows in SubstanceNucleicAcid_Subunit correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfSubunits)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_areaOfHybridisation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (oligoNucleotideType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid_Subunit(

	id TEXT PRIMARY KEY,
	substanceNucleicAcidId TEXT, -- Foreign Key to substanceNucleicAcid table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Subunit__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Subunit__extension
	subunit INTEGER,
	_subunit TEXT, -- Foreign Key to element table
	"sequence" TEXT,
	_sequence TEXT, -- Foreign Key to element table
	"length" INTEGER,
	_length TEXT, -- Foreign Key to element table
	sequenceAttachment TEXT, -- Foreign Key to attachment table
	fivePrime TEXT, -- Foreign Key to codeableConcept table
	threePrime TEXT, -- Foreign Key to codeableConcept table
	linkage BOOLEAN, -- true if 1+ rows in SubstanceNucleicAcid_Linkage correspond to this entry
	sugar BOOLEAN, -- true if 1+ rows in SubstanceNucleicAcid_Sugar correspond to this entry

	FOREIGN KEY (substanceNucleicAcidId)
		REFERENCES substanceNucleicAcid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subunit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_length)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (fivePrime)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (threePrime)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid_Linkage(

	id TEXT PRIMARY KEY,
	substanceNucleicAcid_SubunitId TEXT, -- Foreign Key to substanceNucleicAcid_Subunit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Linkage__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Linkage__extension
	connectivity TEXT,
	_connectivity TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	residueSite TEXT,
	_residueSite TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceNucleicAcid_SubunitId)
		REFERENCES substanceNucleicAcid_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_connectivity)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_residueSite)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceNucleicAcid_Sugar(

	id TEXT PRIMARY KEY,
	substanceNucleicAcid_SubunitId TEXT, -- Foreign Key to substanceNucleicAcid_Subunit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Sugar__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceNucleicAcid_Sugar__extension
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	residueSite TEXT,
	_residueSite TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceNucleicAcid_SubunitId)
		REFERENCES substanceNucleicAcid_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_residueSite)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer(

	resourceType TEXT, -- resourceType: substancePolymer
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer__extension
	class TEXT, -- Foreign Key to codeableConcept table
	"geometry" TEXT, -- Foreign Key to codeableConcept table
	copolymerConnectivity BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer__codeableConcept
	modification BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer__string
	_modification BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer__element
	monomerSet BOOLEAN, -- true if 1+ rows in SubstancePolymer_MonomerSet correspond to this entry
	"repeat" BOOLEAN, -- true if 1+ rows in SubstancePolymer_Repeat correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("geometry")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_MonomerSet(

	id TEXT PRIMARY KEY,
	substancePolymerId TEXT, -- Foreign Key to substancePolymer table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_MonomerSet__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_MonomerSet__extension
	ratioType TEXT, -- Foreign Key to codeableConcept table
	startingMaterial BOOLEAN, -- true if 1+ rows in SubstancePolymer_StartingMaterial correspond to this entry

	FOREIGN KEY (substancePolymerId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (ratioType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_StartingMaterial(

	id TEXT PRIMARY KEY,
	substancePolymer_MonomerSetId TEXT, -- Foreign Key to substancePolymer_MonomerSet table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StartingMaterial__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StartingMaterial__extension
	material TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT, -- Foreign Key to codeableConcept table
	isDefining BOOLEAN,
	_isDefining TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to substanceAmount table

	FOREIGN KEY (substancePolymer_MonomerSetId)
		REFERENCES substancePolymer_MonomerSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (material)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDefining)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_Repeat(

	id TEXT PRIMARY KEY,
	substancePolymerId TEXT, -- Foreign Key to substancePolymer table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_Repeat__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_Repeat__extension
	numberOfUnits INTEGER,
	_numberOfUnits TEXT, -- Foreign Key to element table
	averageMolecularFormula TEXT,
	_averageMolecularFormula TEXT, -- Foreign Key to element table
	repeatUnitAmountType TEXT, -- Foreign Key to codeableConcept table
	repeatUnit BOOLEAN, -- true if 1+ rows in SubstancePolymer_RepeatUnit correspond to this entry

	FOREIGN KEY (substancePolymerId)
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfUnits)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_averageMolecularFormula)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (repeatUnitAmountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_RepeatUnit(

	id TEXT PRIMARY KEY,
	substancePolymer_RepeatId TEXT, -- Foreign Key to substancePolymer_Repeat table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_RepeatUnit__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_RepeatUnit__extension
	orientationOfPolymerisation TEXT, -- Foreign Key to codeableConcept table
	repeatUnit TEXT,
	_repeatUnit TEXT, -- Foreign Key to element table
	amount TEXT, -- Foreign Key to substanceAmount table
	degreeOfPolymerisation BOOLEAN, -- true if 1+ rows in SubstancePolymer_DegreeOfPolymerisation correspond to this entry
	structuralRepresentation BOOLEAN, -- true if 1+ rows in SubstancePolymer_StructuralRepresentation correspond to this entry

	FOREIGN KEY (substancePolymer_RepeatId)
		REFERENCES substancePolymer_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (orientationOfPolymerisation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_repeatUnit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_DegreeOfPolymerisation(

	id TEXT PRIMARY KEY,
	substancePolymer_RepeatUnitId TEXT, -- Foreign Key to substancePolymer_RepeatUnit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_DegreeOfPolymerisation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_DegreeOfPolymerisation__extension
	degree TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to substanceAmount table

	FOREIGN KEY (substancePolymer_RepeatUnitId)
		REFERENCES substancePolymer_RepeatUnit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (degree)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substancePolymer_StructuralRepresentation(

	id TEXT PRIMARY KEY,
	substancePolymer_RepeatUnitId TEXT, -- Foreign Key to substancePolymer_RepeatUnit table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StructuralRepresentation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substancePolymer_StructuralRepresentation__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	representation TEXT,
	_representation TEXT, -- Foreign Key to element table
	attachment TEXT, -- Foreign Key to attachment table

	FOREIGN KEY (substancePolymer_RepeatUnitId)
		REFERENCES substancePolymer_RepeatUnit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_representation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceProtein(

	resourceType TEXT, -- resourceType: substanceProtein
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein__extension
	sequenceType TEXT, -- Foreign Key to codeableConcept table
	numberOfSubunits INTEGER,
	_numberOfSubunits TEXT, -- Foreign Key to element table
	disulfideLinkage BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein__string
	_disulfideLinkage BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein__element
	subunit BOOLEAN, -- true if 1+ rows in SubstanceProtein_Subunit correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_numberOfSubunits)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceProtein_Subunit(

	id TEXT PRIMARY KEY,
	substanceProteinId TEXT, -- Foreign Key to substanceProtein table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_Subunit__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceProtein_Subunit__extension
	subunit INTEGER,
	_subunit TEXT, -- Foreign Key to element table
	"sequence" TEXT,
	_sequence TEXT, -- Foreign Key to element table
	"length" INTEGER,
	_length TEXT, -- Foreign Key to element table
	sequenceAttachment TEXT, -- Foreign Key to attachment table
	nTerminalModificationId TEXT, -- Foreign Key to identifier table
	nTerminalModification TEXT,
	_nTerminalModification TEXT, -- Foreign Key to element table
	cTerminalModificationId TEXT, -- Foreign Key to identifier table
	cTerminalModification TEXT,
	_cTerminalModification TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceProteinId)
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subunit)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sequence)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_length)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sequenceAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nTerminalModificationId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_nTerminalModification)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (cTerminalModificationId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cTerminalModification)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation(

	resourceType TEXT, -- resourceType: substanceReferenceInformation
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation__extension
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	gene BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_Gene correspond to this entry
	geneElement BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_GeneElement correspond to this entry
	classification BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_Classification correspond to this entry
	"target" BOOLEAN, -- true if 1+ rows in SubstanceReferenceInformation_Target correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_Gene(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Gene__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Gene__extension
	geneSequenceOrigin TEXT, -- Foreign Key to codeableConcept table
	gene TEXT, -- Foreign Key to codeableConcept table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Gene__reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (geneSequenceOrigin)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (gene)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_GeneElement(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_GeneElement__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_GeneElement__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	element TEXT, -- Foreign Key to identifier table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_GeneElement__reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (element)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_Classification(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification__extension
	"domain" TEXT, -- Foreign Key to codeableConcept table
	classification TEXT, -- Foreign Key to codeableConcept table
	subtype BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification__codeableConcept
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Classification__reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("domain")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (classification)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceReferenceInformation_Target(

	id TEXT PRIMARY KEY,
	substanceReferenceInformationId TEXT, -- Foreign Key to substanceReferenceInformation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Target__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Target__extension
	"target" TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	interaction TEXT, -- Foreign Key to codeableConcept table
	organism TEXT, -- Foreign Key to codeableConcept table
	organismType TEXT, -- Foreign Key to codeableConcept table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountRange TEXT, -- Foreign Key to range table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table
	amountType TEXT, -- Foreign Key to codeableConcept table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceReferenceInformation_Target__reference

	FOREIGN KEY (substanceReferenceInformationId)
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("target")
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (interaction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organism)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organismType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial(

	resourceType TEXT, -- resourceType: substanceSourceMaterial
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__extension
	sourceMaterialClass TEXT, -- Foreign Key to codeableConcept table
	sourceMaterialType TEXT, -- Foreign Key to codeableConcept table
	sourceMaterialState TEXT, -- Foreign Key to codeableConcept table
	organismId TEXT, -- Foreign Key to identifier table
	organismName TEXT,
	_organismName TEXT, -- Foreign Key to element table
	parentSubstanceId BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__identifier
	parentSubstanceName BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__string
	_parentSubstanceName BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__element
	countryOfOrigin BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__codeableConcept
	geographicalLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__string
	_geographicalLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial__element
	developmentStage TEXT, -- Foreign Key to codeableConcept table
	fractionDescription BOOLEAN, -- true if 1+ rows in SubstanceSourceMaterial_FractionDescription correspond to this entry
	organism TEXT, -- Foreign Key to substanceSourceMaterial_Organism table
	partDescription BOOLEAN, -- true if 1+ rows in SubstanceSourceMaterial_PartDescription correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterialClass)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterialType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterialState)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organismId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_organismName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (developmentStage)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organism)
		REFERENCES substanceSourceMaterial_Organism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_FractionDescription(

	id TEXT PRIMARY KEY,
	substanceSourceMaterialId TEXT, -- Foreign Key to substanceSourceMaterial table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_FractionDescription__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_FractionDescription__extension
	fraction TEXT,
	_fraction TEXT, -- Foreign Key to element table
	materialType TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (substanceSourceMaterialId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_fraction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (materialType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_Organism(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Organism__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Organism__extension
	family TEXT, -- Foreign Key to codeableConcept table
	genus TEXT, -- Foreign Key to codeableConcept table
	species TEXT, -- Foreign Key to codeableConcept table
	intraspecificType TEXT, -- Foreign Key to codeableConcept table
	intraspecificDescription TEXT,
	_intraspecificDescription TEXT, -- Foreign Key to element table
	author BOOLEAN, -- true if 1+ rows in SubstanceSourceMaterial_Author correspond to this entry
	hybrid TEXT, -- Foreign Key to substanceSourceMaterial_Hybrid table
	organismGeneral TEXT, -- Foreign Key to substanceSourceMaterial_OrganismGeneral table

	FOREIGN KEY (family)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (genus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (species)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (intraspecificType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intraspecificDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (hybrid)
		REFERENCES substanceSourceMaterial_Hybrid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organismGeneral)
		REFERENCES substanceSourceMaterial_OrganismGeneral (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_Author(

	id TEXT PRIMARY KEY,
	substanceSourceMaterial_OrganismId TEXT, -- Foreign Key to substanceSourceMaterial_Organism table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Author__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Author__extension
	authorType TEXT, -- Foreign Key to codeableConcept table
	authorDescription TEXT,
	_authorDescription TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSourceMaterial_OrganismId)
		REFERENCES substanceSourceMaterial_Organism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authorType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authorDescription)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_Hybrid(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Hybrid__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_Hybrid__extension
	maternalOrganismId TEXT,
	_maternalOrganismId TEXT, -- Foreign Key to element table
	maternalOrganismName TEXT,
	_maternalOrganismName TEXT, -- Foreign Key to element table
	paternalOrganismId TEXT,
	_paternalOrganismId TEXT, -- Foreign Key to element table
	paternalOrganismName TEXT,
	_paternalOrganismName TEXT, -- Foreign Key to element table
	hybridType TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (_maternalOrganismId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_maternalOrganismName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paternalOrganismId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paternalOrganismName)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (hybridType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_OrganismGeneral(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_OrganismGeneral__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_OrganismGeneral__extension
	kingdom TEXT, -- Foreign Key to codeableConcept table
	phylum TEXT, -- Foreign Key to codeableConcept table
	class TEXT, -- Foreign Key to codeableConcept table
	"order" TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (kingdom)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (phylum)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (class)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("order")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSourceMaterial_PartDescription(

	id TEXT PRIMARY KEY,
	substanceSourceMaterialId TEXT, -- Foreign Key to substanceSourceMaterial table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_PartDescription__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSourceMaterial_PartDescription__extension
	part TEXT, -- Foreign Key to codeableConcept table
	partLocation TEXT, -- Foreign Key to codeableConcept table

	FOREIGN KEY (substanceSourceMaterialId)
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (part)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (partLocation)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification(

	resourceType TEXT, -- resourceType: substanceSpecification
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification__extension
	identifier TEXT, -- Foreign Key to identifier table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	"domain" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification__reference
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	moiety BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Moiety correspond to this entry
	property BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Property correspond to this entry
	referenceInformation TEXT, -- Foreign Key to reference table
	"structure" TEXT, -- Foreign Key to substanceSpecification_Structure table
	"code" BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Code correspond to this entry
	"name" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification__substanceSpecification_Name
	molecularWeight BOOLEAN, -- true if 1+ rows in SubstanceSpecification_MolecularWeight correspond to this entry
	relationship BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Relationship correspond to this entry
	nucleicAcid TEXT, -- Foreign Key to reference table
	polymer TEXT, -- Foreign Key to reference table
	protein TEXT, -- Foreign Key to reference table
	sourceMaterial TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("domain")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (referenceInformation)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("structure")
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (nucleicAcid)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (polymer)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (protein)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceMaterial)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Moiety(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Moiety__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Moiety__extension
	"role" TEXT, -- Foreign Key to codeableConcept table
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	stereochemistry TEXT, -- Foreign Key to codeableConcept table
	opticalActivity TEXT, -- Foreign Key to codeableConcept table
	molecularFormula TEXT,
	_molecularFormula TEXT, -- Foreign Key to element table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("role")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (stereochemistry)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (opticalActivity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_molecularFormula)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Property(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Property__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Property__extension
	category TEXT, -- Foreign Key to codeableConcept table
	"code" TEXT, -- Foreign Key to codeableConcept table
	parameters TEXT,
	_parameters TEXT, -- Foreign Key to element table
	definingSubstanceReference TEXT, -- Foreign Key to reference table
	definingSubstanceCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_parameters)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definingSubstanceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (definingSubstanceCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Structure(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Structure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Structure__extension
	stereochemistry TEXT, -- Foreign Key to codeableConcept table
	opticalActivity TEXT, -- Foreign Key to codeableConcept table
	molecularFormula TEXT,
	_molecularFormula TEXT, -- Foreign Key to element table
	molecularFormulaByMoiety TEXT,
	_molecularFormulaByMoiety TEXT, -- Foreign Key to element table
	isotope BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Isotope correspond to this entry
	molecularWeight TEXT, -- Foreign Key to substanceSpecification_MolecularWeight table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Structure__reference
	representation BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Representation correspond to this entry

	FOREIGN KEY (stereochemistry)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (opticalActivity)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_molecularFormula)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_molecularFormulaByMoiety)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (molecularWeight)
		REFERENCES substanceSpecification_MolecularWeight (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Isotope(

	id TEXT PRIMARY KEY,
	substanceSpecification_StructureId TEXT, -- Foreign Key to substanceSpecification_Structure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Isotope__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Isotope__extension
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT, -- Foreign Key to codeableConcept table
	substitution TEXT, -- Foreign Key to codeableConcept table
	halfLife TEXT, -- Foreign Key to quantity table
	molecularWeight TEXT, -- Foreign Key to substanceSpecification_MolecularWeight table

	FOREIGN KEY (substanceSpecification_StructureId)
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("name")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substitution)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (halfLife)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (molecularWeight)
		REFERENCES substanceSpecification_MolecularWeight (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_MolecularWeight(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_MolecularWeight__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_MolecularWeight__extension
	"method" TEXT, -- Foreign Key to codeableConcept table
	"type" TEXT, -- Foreign Key to codeableConcept table
	amount TEXT, -- Foreign Key to quantity table

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("method")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amount)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Representation(

	id TEXT PRIMARY KEY,
	substanceSpecification_StructureId TEXT, -- Foreign Key to substanceSpecification_Structure table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Representation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Representation__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	representation TEXT,
	_representation TEXT, -- Foreign Key to element table
	attachment TEXT, -- Foreign Key to attachment table

	FOREIGN KEY (substanceSpecification_StructureId)
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_representation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Code(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Code__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Code__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	statusDate DATETIME,
	_statusDate TEXT, -- Foreign Key to element table
	comment TEXT,
	_comment TEXT, -- Foreign Key to element table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Code__reference

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_comment)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Name(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"type" TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	preferred BOOLEAN,
	_preferred TEXT, -- Foreign Key to element table
	"language" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__codeableConcept
	"domain" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__codeableConcept
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__codeableConcept
	"synonym" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__substanceSpecification_Name
	"translation" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__substanceSpecification_Name
	official BOOLEAN, -- true if 1+ rows in SubstanceSpecification_Official correspond to this entry
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Name__reference

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_preferred)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Official(

	id TEXT PRIMARY KEY,
	substanceSpecification_NameId TEXT, -- Foreign Key to substanceSpecification_Name table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Official__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Official__extension
	authority TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT, -- Foreign Key to codeableConcept table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table

	FOREIGN KEY (substanceSpecification_NameId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (authority)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("status")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE substanceSpecification_Relationship(

	id TEXT PRIMARY KEY,
	substanceSpecificationId TEXT, -- Foreign Key to substanceSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Relationship__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Relationship__extension
	substanceReference TEXT, -- Foreign Key to reference table
	substanceCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	relationship TEXT, -- Foreign Key to codeableConcept table
	isDefining BOOLEAN,
	_isDefining TEXT, -- Foreign Key to element table
	amountQuantity TEXT, -- Foreign Key to quantity table
	amountRange TEXT, -- Foreign Key to range table
	amountRatio TEXT, -- Foreign Key to ratio table
	amountString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_amountString TEXT, -- Foreign Key to element table
	amountRatioLowLimit TEXT, -- Foreign Key to ratio table
	amountType TEXT, -- Foreign Key to codeableConcept table
	"source" BOOLEAN, -- true if 1+ item is referenced from bridge table: substanceSpecification_Relationship__reference

	FOREIGN KEY (substanceSpecificationId)
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (substanceCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (relationship)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDefining)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amountString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountRatioLowLimit)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (amountType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyDelivery(

	resourceType TEXT, -- resourceType: supplyDelivery
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery__identifier
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery__reference
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery__reference
	"status" TEXT CHECK( "status" IN ('in-progress','completed','abandoned','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	"type" TEXT, -- Foreign Key to codeableConcept table
	suppliedItem TEXT, -- Foreign Key to supplyDelivery_SuppliedItem table
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	supplier TEXT, -- Foreign Key to reference table
	destination TEXT, -- Foreign Key to reference table
	receiver BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery__reference

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (suppliedItem)
		REFERENCES supplyDelivery_SuppliedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (supplier)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (destination)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyDelivery_SuppliedItem(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_SuppliedItem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyDelivery_SuppliedItem__extension
	quantity TEXT, -- Foreign Key to quantity table
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyRequest(

	resourceType TEXT, -- resourceType: supplyRequest
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest__identifier
	"status" TEXT CHECK( "status" IN ('draft','active','suspended','cancelled','completed','entered-in-error','unknown') ),
	_status TEXT, -- Foreign Key to element table
	category TEXT, -- Foreign Key to codeableConcept table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	itemCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	itemReference TEXT, -- Foreign Key to reference table
	quantity TEXT, -- Foreign Key to quantity table
	"parameter" BOOLEAN, -- true if 1+ rows in SupplyRequest_Parameter correspond to this entry
	occurrenceDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_occurrenceDateTime TEXT, -- Foreign Key to element table
	occurrencePeriod TEXT, -- Foreign Key to period table
	occurrenceTiming TEXT, -- Foreign Key to timing table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	supplier BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest__reference
	reasonCode BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest__codeableConcept
	reasonReference BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest__reference
	deliverFrom TEXT, -- Foreign Key to reference table
	deliverTo TEXT, -- Foreign Key to reference table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (category)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (itemReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (quantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_occurrenceDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrencePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (occurrenceTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deliverFrom)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (deliverTo)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE supplyRequest_Parameter(

	id TEXT PRIMARY KEY,
	supplyRequestId TEXT, -- Foreign Key to supplyRequest table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: supplyRequest_Parameter__extension
	"code" TEXT, -- Foreign Key to codeableConcept table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table

	FOREIGN KEY (supplyRequestId)
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task(

	resourceType TEXT, -- resourceType: task
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: task__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: task__identifier
	instantiatesCanonical TEXT,
	instantiatesUri TEXT,
	_instantiatesUri TEXT, -- Foreign Key to element table
	basedOn BOOLEAN, -- true if 1+ item is referenced from bridge table: task__reference
	groupIdentifier TEXT, -- Foreign Key to identifier table
	partOf BOOLEAN, -- true if 1+ item is referenced from bridge table: task__reference
	"status" TEXT CHECK( "status" IN ('draft','requested','received','accepted','rejected','ready','cancelled','in-progress','on-hold','failed','completed','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	statusReason TEXT, -- Foreign Key to codeableConcept table
	businessStatus TEXT, -- Foreign Key to codeableConcept table
	intent TEXT CHECK( intent IN ('unknown','proposal','plan','order','original-order','reflex-order','filler-order','instance-order','option') ),
	_intent TEXT, -- Foreign Key to element table
	"priority" TEXT,
	_priority TEXT, -- Foreign Key to element table
	"code" TEXT, -- Foreign Key to codeableConcept table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	focus TEXT, -- Foreign Key to reference table
	"for" TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	executionPeriod TEXT, -- Foreign Key to period table
	authoredOn DATETIME,
	_authoredOn TEXT, -- Foreign Key to element table
	lastModified DATETIME,
	_lastModified TEXT, -- Foreign Key to element table
	requester TEXT, -- Foreign Key to reference table
	performerType BOOLEAN, -- true if 1+ item is referenced from bridge table: task__codeableConcept
	"owner" TEXT, -- Foreign Key to reference table
	"location" TEXT, -- Foreign Key to reference table
	reasonCode TEXT, -- Foreign Key to codeableConcept table
	reasonReference TEXT, -- Foreign Key to reference table
	insurance BOOLEAN, -- true if 1+ item is referenced from bridge table: task__reference
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: task__annotation
	relevantHistory BOOLEAN, -- true if 1+ item is referenced from bridge table: task__reference
	restriction TEXT, -- Foreign Key to task_Restriction table
	"input" BOOLEAN, -- true if 1+ rows in Task_Input correspond to this entry
	"output" BOOLEAN, -- true if 1+ rows in Task_Output correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_instantiatesUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (groupIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (statusReason)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (businessStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_intent)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_priority)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("code")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (focus)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("for")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (executionPeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_authoredOn)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastModified)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requester)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("owner")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("location")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reasonCode)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (reasonReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (restriction)
		REFERENCES task_Restriction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task_Restriction(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Restriction__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Restriction__extension
	repetitions INTEGER,
	_repetitions TEXT, -- Foreign Key to element table
	"period" TEXT, -- Foreign Key to period table
	recipient BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Restriction__reference

	FOREIGN KEY (_repetitions)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("period")
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task_Input(

	id TEXT PRIMARY KEY,
	taskId TEXT, -- Foreign Key to task table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Input__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Input__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (taskId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE task_Output(

	id TEXT PRIMARY KEY,
	taskId TEXT, -- Foreign Key to task table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Output__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: task_Output__extension
	"type" TEXT, -- Foreign Key to codeableConcept table
	valueBase64Binary TEXT, -- pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
	_valueBase64Binary TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueCanonical TEXT, -- pattern: ^\S*$
	_valueCanonical TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDate TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
	_valueDate TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueId TEXT, -- pattern: ^[A-Za-z0-9\-\.]{1,64}$
	_valueId TEXT, -- Foreign Key to element table
	valueInstant TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
	_valueInstant TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueMarkdown TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueMarkdown TEXT, -- Foreign Key to element table
	valueOid TEXT, -- pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
	_valueOid TEXT, -- Foreign Key to element table
	valuePositiveInt REAL, -- pattern: ^[1-9][0-9]*$
	_valuePositiveInt TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueTime TEXT, -- pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
	_valueTime TEXT, -- Foreign Key to element table
	valueUnsignedInt REAL, -- pattern: ^[0]|([1-9][0-9]*)$
	_valueUnsignedInt TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueUrl TEXT, -- pattern: ^\S*$
	_valueUrl TEXT, -- Foreign Key to element table
	valueUuid TEXT, -- pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
	_valueUuid TEXT, -- Foreign Key to element table
	valueAddress TEXT, -- Foreign Key to address table
	valueAge TEXT, -- Foreign Key to age table
	valueAnnotation TEXT, -- Foreign Key to annotation table
	valueAttachment TEXT, -- Foreign Key to attachment table
	valueCodeableConcept TEXT, -- Foreign Key to codeableConcept table
	valueCoding TEXT, -- Foreign Key to coding table
	valueContactPoint TEXT, -- Foreign Key to contactPoint table
	valueCount TEXT, -- Foreign Key to count table
	valueDistance TEXT, -- Foreign Key to distance table
	valueDuration TEXT, -- Foreign Key to duration table
	valueHumanName TEXT, -- Foreign Key to humanName table
	valueIdentifier TEXT, -- Foreign Key to identifier table
	valueMoney TEXT, -- Foreign Key to money table
	valuePeriod TEXT, -- Foreign Key to period table
	valueQuantity TEXT, -- Foreign Key to quantity table
	valueRange TEXT, -- Foreign Key to range table
	valueRatio TEXT, -- Foreign Key to ratio table
	valueReference TEXT, -- Foreign Key to reference table
	valueSampledData TEXT, -- Foreign Key to sampledData table
	valueSignature TEXT, -- Foreign Key to signature table
	valueTiming TEXT, -- Foreign Key to timing table
	valueContactDetail TEXT, -- Foreign Key to contactDetail table
	valueContributor TEXT, -- Foreign Key to contributor table
	valueDataRequirement TEXT, -- Foreign Key to dataRequirement table
	valueExpression TEXT, -- Foreign Key to expression table
	valueParameterDefinition TEXT, -- Foreign Key to parameterDefinition table
	valueRelatedArtifact TEXT, -- Foreign Key to relatedArtifact table
	valueTriggerDefinition TEXT, -- Foreign Key to triggerDefinition table
	valueUsageContext TEXT, -- Foreign Key to usageContext table
	valueDosage TEXT, -- Foreign Key to dosage table
	valueMeta TEXT, -- Foreign Key to meta table

	FOREIGN KEY (taskId)
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("type")
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBase64Binary)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCanonical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInstant)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueMarkdown)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueOid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valuePositiveInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUnsignedInt)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUuid)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAddress)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAge)
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAnnotation)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueAttachment)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCodeableConcept)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCoding)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactPoint)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueCount)
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDistance)
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDuration)
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueHumanName)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueIdentifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMoney)
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valuePeriod)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueQuantity)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRange)
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRatio)
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueReference)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSampledData)
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTiming)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContactDetail)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueContributor)
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDataRequirement)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueExpression)
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueParameterDefinition)
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueRelatedArtifact)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueTriggerDefinition)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueUsageContext)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueDosage)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (valueMeta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities(

	resourceType TEXT, -- resourceType: terminologyCapabilities
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	kind TEXT,
	_kind TEXT, -- Foreign Key to element table
	software TEXT, -- Foreign Key to terminologyCapabilities_Software table
	"implementation" TEXT, -- Foreign Key to terminologyCapabilities_Implementation table
	lockedDate BOOLEAN,
	_lockedDate TEXT, -- Foreign Key to element table
	codeSystem BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_CodeSystem correspond to this entry
	expansion TEXT, -- Foreign Key to terminologyCapabilities_Expansion table
	codeSearch TEXT CHECK( codeSearch IN ('explicit','all') ),
	_codeSearch TEXT, -- Foreign Key to element table
	validateCode TEXT, -- Foreign Key to terminologyCapabilities_ValidateCode table
	"translation" TEXT, -- Foreign Key to terminologyCapabilities_Translation table
	closure TEXT, -- Foreign Key to terminologyCapabilities_Closure table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_kind)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (software)
		REFERENCES terminologyCapabilities_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("implementation")
		REFERENCES terminologyCapabilities_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lockedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expansion)
		REFERENCES terminologyCapabilities_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_codeSearch)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validateCode)
		REFERENCES terminologyCapabilities_ValidateCode (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("translation")
		REFERENCES terminologyCapabilities_Translation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (closure)
		REFERENCES terminologyCapabilities_Closure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Software(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Software__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Software__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Implementation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Implementation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Implementation__extension
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_CodeSystem(

	id TEXT PRIMARY KEY,
	terminologyCapabilitiesId TEXT, -- Foreign Key to terminologyCapabilities table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_CodeSystem__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_CodeSystem__extension
	uri TEXT,
	"version" BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_Version correspond to this entry
	subsumption BOOLEAN,
	_subsumption TEXT, -- Foreign Key to element table

	FOREIGN KEY (terminologyCapabilitiesId)
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_subsumption)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Version(

	id TEXT PRIMARY KEY,
	terminologyCapabilities_CodeSystemId TEXT, -- Foreign Key to terminologyCapabilities_CodeSystem table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	isDefault BOOLEAN,
	_isDefault TEXT, -- Foreign Key to element table
	compositional BOOLEAN,
	_compositional TEXT, -- Foreign Key to element table
	"language" BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__code
	_language BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__element
	"filter" BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_Filter correspond to this entry
	property BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__code
	_property BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Version__element

	FOREIGN KEY (terminologyCapabilities_CodeSystemId)
		REFERENCES terminologyCapabilities_CodeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_isDefault)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compositional)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Filter(

	id TEXT PRIMARY KEY,
	terminologyCapabilities_VersionId TEXT, -- Foreign Key to terminologyCapabilities_Version table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	op BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter__code
	_op BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Filter__element

	FOREIGN KEY (terminologyCapabilities_VersionId)
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Expansion(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Expansion__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Expansion__extension
	hierarchical BOOLEAN,
	_hierarchical TEXT, -- Foreign Key to element table
	paging BOOLEAN,
	_paging TEXT, -- Foreign Key to element table
	incomplete BOOLEAN,
	_incomplete TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ rows in TerminologyCapabilities_Parameter correspond to this entry
	textFilter TEXT,
	_textFilter TEXT, -- Foreign Key to element table

	FOREIGN KEY (_hierarchical)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_paging)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_incomplete)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_textFilter)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Parameter(

	id TEXT PRIMARY KEY,
	terminologyCapabilities_ExpansionId TEXT, -- Foreign Key to terminologyCapabilities_Expansion table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Parameter__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	documentation TEXT,
	_documentation TEXT, -- Foreign Key to element table

	FOREIGN KEY (terminologyCapabilities_ExpansionId)
		REFERENCES terminologyCapabilities_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_documentation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_ValidateCode(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_ValidateCode__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_ValidateCode__extension
	translations BOOLEAN,
	_translations TEXT, -- Foreign Key to element table

	FOREIGN KEY (_translations)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Translation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Translation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Translation__extension
	needsMap BOOLEAN,
	_needsMap TEXT, -- Foreign Key to element table

	FOREIGN KEY (_needsMap)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE terminologyCapabilities_Closure(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Closure__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: terminologyCapabilities_Closure__extension
	"translation" BOOLEAN,
	_translation TEXT, -- Foreign Key to element table

	FOREIGN KEY (_translation)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport(

	resourceType TEXT, -- resourceType: testReport
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport__extension
	identifier TEXT, -- Foreign Key to identifier table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('completed','in-progress','waiting','stopped','entered-in-error') ),
	_status TEXT, -- Foreign Key to element table
	testScript TEXT, -- Foreign Key to reference table
	"result" TEXT CHECK( "result" IN ('pass','fail','pending') ),
	_result TEXT, -- Foreign Key to element table
	score REAL,
	_score TEXT, -- Foreign Key to element table
	tester TEXT,
	_tester TEXT, -- Foreign Key to element table
	issued DATETIME,
	_issued TEXT, -- Foreign Key to element table
	participant BOOLEAN, -- true if 1+ rows in TestReport_Participant correspond to this entry
	setup TEXT, -- Foreign Key to testReport_Setup table
	test BOOLEAN, -- true if 1+ rows in TestReport_Test correspond to this entry
	teardown TEXT, -- Foreign Key to testReport_Teardown table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (testScript)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_result)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_score)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_tester)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_issued)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (setup)
		REFERENCES testReport_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (teardown)
		REFERENCES testReport_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Participant(

	id TEXT PRIMARY KEY,
	testReportId TEXT, -- Foreign Key to testReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Participant__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Participant__extension
	"type" TEXT CHECK( "type" IN ('test-engine','client','server') ),
	_type TEXT, -- Foreign Key to element table
	uri TEXT,
	_uri TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table

	FOREIGN KEY (testReportId)
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_type)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_uri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Setup(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Setup__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Setup__extension
	"action" BOOLEAN, -- true if 1+ rows in TestReport_Action correspond to this entry

);

CREATE TABLE testReport_Action(

	id TEXT PRIMARY KEY,
	testReport_SetupId TEXT, -- Foreign Key to testReport_Setup table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action__extension
	operation TEXT, -- Foreign Key to testReport_Operation table
	assert TEXT, -- Foreign Key to testReport_Assert table

	FOREIGN KEY (testReport_SetupId)
		REFERENCES testReport_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testReport_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Operation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Operation__extension
	"result" TEXT CHECK( "result" IN ('pass','skip','fail','warning','error') ),
	_result TEXT, -- Foreign Key to element table
	"message" TEXT,
	_message TEXT, -- Foreign Key to element table
	detail TEXT,
	_detail TEXT, -- Foreign Key to element table

	FOREIGN KEY (_result)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_message)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detail)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Assert(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Assert__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Assert__extension
	"result" TEXT CHECK( "result" IN ('pass','skip','fail','warning','error') ),
	_result TEXT, -- Foreign Key to element table
	"message" TEXT,
	_message TEXT, -- Foreign Key to element table
	detail TEXT,
	_detail TEXT, -- Foreign Key to element table

	FOREIGN KEY (_result)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_message)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_detail)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Test(

	id TEXT PRIMARY KEY,
	testReportId TEXT, -- Foreign Key to testReport table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Test__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Test__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"action" BOOLEAN, -- true if 1+ rows in TestReport_Action1 correspond to this entry

	FOREIGN KEY (testReportId)
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Action1(

	id TEXT PRIMARY KEY,
	testReport_TestId TEXT, -- Foreign Key to testReport_Test table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action1__extension
	operation TEXT, -- Foreign Key to testReport_Operation table
	assert TEXT, -- Foreign Key to testReport_Assert table

	FOREIGN KEY (testReport_TestId)
		REFERENCES testReport_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testReport_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testReport_Teardown(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Teardown__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Teardown__extension
	"action" BOOLEAN, -- true if 1+ rows in TestReport_Action2 correspond to this entry

);

CREATE TABLE testReport_Action2(

	id TEXT PRIMARY KEY,
	testReport_TeardownId TEXT, -- Foreign Key to testReport_Teardown table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action2__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testReport_Action2__extension
	operation TEXT, -- Foreign Key to testReport_Operation table

	FOREIGN KEY (testReport_TeardownId)
		REFERENCES testReport_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript(

	resourceType TEXT, -- resourceType: testScript
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier TEXT, -- Foreign Key to identifier table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript__codeableConcept
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	origin BOOLEAN, -- true if 1+ rows in TestScript_Origin correspond to this entry
	destination BOOLEAN, -- true if 1+ rows in TestScript_Destination correspond to this entry
	metadata TEXT, -- Foreign Key to testScript_Metadata table
	fixture BOOLEAN, -- true if 1+ rows in TestScript_Fixture correspond to this entry
	"profile" BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript__reference
	variable BOOLEAN, -- true if 1+ rows in TestScript_Variable correspond to this entry
	setup TEXT, -- Foreign Key to testScript_Setup table
	test BOOLEAN, -- true if 1+ rows in TestScript_Test correspond to this entry
	teardown TEXT, -- Foreign Key to testScript_Teardown table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (identifier)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (metadata)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (setup)
		REFERENCES testScript_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (teardown)
		REFERENCES testScript_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Origin(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Origin__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Origin__extension
	"index" INTEGER,
	_index TEXT, -- Foreign Key to element table
	"profile" TEXT, -- Foreign Key to coding table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_index)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("profile")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Destination(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Destination__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Destination__extension
	"index" INTEGER,
	_index TEXT, -- Foreign Key to element table
	"profile" TEXT, -- Foreign Key to coding table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_index)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("profile")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Metadata(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Metadata__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Metadata__extension
	link BOOLEAN, -- true if 1+ rows in TestScript_Link correspond to this entry
	capability BOOLEAN, -- true if 1+ rows in TestScript_Capability correspond to this entry

);

CREATE TABLE testScript_Link(

	id TEXT PRIMARY KEY,
	testScript_MetadataId TEXT, -- Foreign Key to testScript_Metadata table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Link__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Link__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table

	FOREIGN KEY (testScript_MetadataId)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Capability(

	id TEXT PRIMARY KEY,
	testScript_MetadataId TEXT, -- Foreign Key to testScript_Metadata table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__extension
	"required" BOOLEAN,
	_required TEXT, -- Foreign Key to element table
	validated BOOLEAN,
	_validated TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	origin BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__integer
	_origin BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__element
	destination INTEGER,
	_destination TEXT, -- Foreign Key to element table
	link BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__uri
	_link BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Capability__element
	capabilities TEXT,

	FOREIGN KEY (testScript_MetadataId)
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_required)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validated)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_destination)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Fixture(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Fixture__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Fixture__extension
	autocreate BOOLEAN,
	_autocreate TEXT, -- Foreign Key to element table
	autodelete BOOLEAN,
	_autodelete TEXT, -- Foreign Key to element table
	"resource" TEXT, -- Foreign Key to reference table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_autocreate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_autodelete)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("resource")
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Variable(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Variable__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Variable__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	defaultValue TEXT,
	_defaultValue TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	headerField TEXT,
	_headerField TEXT, -- Foreign Key to element table
	hint TEXT,
	_hint TEXT, -- Foreign Key to element table
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	sourceId TEXT, -- Foreign Key to id table
	_sourceId TEXT, -- Foreign Key to element table

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_defaultValue)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_headerField)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_hint)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Setup(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Setup__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Setup__extension
	"action" BOOLEAN, -- true if 1+ rows in TestScript_Action correspond to this entry

);

CREATE TABLE testScript_Action(

	id TEXT PRIMARY KEY,
	testScript_SetupId TEXT, -- Foreign Key to testScript_Setup table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action__extension
	operation TEXT, -- Foreign Key to testScript_Operation table
	assert TEXT, -- Foreign Key to testScript_Assert table

	FOREIGN KEY (testScript_SetupId)
		REFERENCES testScript_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testScript_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Operation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Operation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Operation__extension
	"type" TEXT, -- Foreign Key to coding table
	"resource" TEXT,
	_resource TEXT, -- Foreign Key to element table
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	accept TEXT,
	_accept TEXT, -- Foreign Key to element table
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	destination INTEGER,
	_destination TEXT, -- Foreign Key to element table
	encodeRequestUrl BOOLEAN,
	_encodeRequestUrl TEXT, -- Foreign Key to element table
	"method" TEXT CHECK( "method" IN ('delete','get','options','patch','post','put','head') ),
	_method TEXT, -- Foreign Key to element table
	origin INTEGER,
	_origin TEXT, -- Foreign Key to element table
	params TEXT,
	_params TEXT, -- Foreign Key to element table
	requestHeader BOOLEAN, -- true if 1+ rows in TestScript_RequestHeader correspond to this entry
	requestId TEXT, -- Foreign Key to id table
	_requestId TEXT, -- Foreign Key to element table
	responseId TEXT, -- Foreign Key to id table
	_responseId TEXT, -- Foreign Key to element table
	sourceId TEXT, -- Foreign Key to id table
	_sourceId TEXT, -- Foreign Key to element table
	targetId TEXT, -- Foreign Key to id table
	_targetId TEXT, -- Foreign Key to element table
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table

	FOREIGN KEY ("type")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resource)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_accept)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_destination)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_encodeRequestUrl)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_method)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_origin)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_params)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (requestId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (responseId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responseId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (targetId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_targetId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_RequestHeader(

	id TEXT PRIMARY KEY,
	testScript_OperationId TEXT, -- Foreign Key to testScript_Operation table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_RequestHeader__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_RequestHeader__extension
	field TEXT,
	_field TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (testScript_OperationId)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_field)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Assert(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Assert__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Assert__extension
	label TEXT,
	_label TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	direction TEXT CHECK( direction IN ('response','request') ),
	_direction TEXT, -- Foreign Key to element table
	compareToSourceId TEXT,
	_compareToSourceId TEXT, -- Foreign Key to element table
	compareToSourceExpression TEXT,
	_compareToSourceExpression TEXT, -- Foreign Key to element table
	compareToSourcePath TEXT,
	_compareToSourcePath TEXT, -- Foreign Key to element table
	contentType TEXT,
	_contentType TEXT, -- Foreign Key to element table
	expression TEXT,
	_expression TEXT, -- Foreign Key to element table
	headerField TEXT,
	_headerField TEXT, -- Foreign Key to element table
	minimumId TEXT,
	_minimumId TEXT, -- Foreign Key to element table
	navigationLinks BOOLEAN,
	_navigationLinks TEXT, -- Foreign Key to element table
	operator TEXT CHECK( operator IN ('equals','notEquals','in','notIn','greaterThan','lessThan','empty','notEmpty','contains','notContains','eval') ),
	_operator TEXT, -- Foreign Key to element table
	"path" TEXT,
	_path TEXT, -- Foreign Key to element table
	requestMethod TEXT CHECK( requestMethod IN ('delete','get','options','patch','post','put','head') ),
	_requestMethod TEXT, -- Foreign Key to element table
	requestURL TEXT,
	_requestURL TEXT, -- Foreign Key to element table
	"resource" TEXT,
	_resource TEXT, -- Foreign Key to element table
	response TEXT CHECK( response IN ('okay','created','noContent','notModified','bad','forbidden','notFound','methodNotAllowed','conflict','gone','preconditionFailed','unprocessable') ),
	_response TEXT, -- Foreign Key to element table
	responseCode TEXT,
	_responseCode TEXT, -- Foreign Key to element table
	sourceId TEXT, -- Foreign Key to id table
	_sourceId TEXT, -- Foreign Key to element table
	validateProfileId TEXT, -- Foreign Key to id table
	_validateProfileId TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table
	warningOnly BOOLEAN,
	_warningOnly TEXT, -- Foreign Key to element table

	FOREIGN KEY (_label)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_direction)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compareToSourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compareToSourceExpression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_compareToSourcePath)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_contentType)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_expression)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_headerField)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_minimumId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_navigationLinks)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_operator)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_path)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestMethod)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_requestURL)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_resource)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_response)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_responseCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validateProfileId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validateProfileId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_warningOnly)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Test(

	id TEXT PRIMARY KEY,
	testScriptId TEXT, -- Foreign Key to testScript table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Test__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Test__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	"action" BOOLEAN, -- true if 1+ rows in TestScript_Action1 correspond to this entry

	FOREIGN KEY (testScriptId)
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Action1(

	id TEXT PRIMARY KEY,
	testScript_TestId TEXT, -- Foreign Key to testScript_Test table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action1__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action1__extension
	operation TEXT, -- Foreign Key to testScript_Operation table
	assert TEXT, -- Foreign Key to testScript_Assert table

	FOREIGN KEY (testScript_TestId)
		REFERENCES testScript_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (assert)
		REFERENCES testScript_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE testScript_Teardown(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Teardown__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Teardown__extension
	"action" BOOLEAN, -- true if 1+ rows in TestScript_Action2 correspond to this entry

);

CREATE TABLE testScript_Action2(

	id TEXT PRIMARY KEY,
	testScript_TeardownId TEXT, -- Foreign Key to testScript_Teardown table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action2__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: testScript_Action2__extension
	operation TEXT, -- Foreign Key to testScript_Operation table

	FOREIGN KEY (testScript_TeardownId)
		REFERENCES testScript_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (operation)
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet(

	resourceType TEXT, -- resourceType: valueSet
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet__extension
	"url" TEXT,
	_url TEXT, -- Foreign Key to element table
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet__identifier
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	title TEXT,
	_title TEXT, -- Foreign Key to element table
	"status" TEXT CHECK( "status" IN ('draft','active','retired','unknown') ),
	_status TEXT, -- Foreign Key to element table
	experimental BOOLEAN,
	_experimental TEXT, -- Foreign Key to element table
	"date" DATETIME,
	_date TEXT, -- Foreign Key to element table
	publisher TEXT,
	_publisher TEXT, -- Foreign Key to element table
	contact BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet__contactDetail
	"description" TEXT,
	_description TEXT, -- Foreign Key to element table
	useContext BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet__usageContext
	jurisdiction BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet__codeableConcept
	immutable BOOLEAN,
	_immutable TEXT, -- Foreign Key to element table
	purpose TEXT,
	_purpose TEXT, -- Foreign Key to element table
	copyright TEXT,
	_copyright TEXT, -- Foreign Key to element table
	compose TEXT, -- Foreign Key to valueSet_Compose table
	expansion TEXT, -- Foreign Key to valueSet_Expansion table

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_url)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_title)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_experimental)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_publisher)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_description)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_immutable)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_purpose)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_copyright)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (compose)
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (expansion)
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Compose(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose__extension
	lockedDate DATE,
	_lockedDate TEXT, -- Foreign Key to element table
	inactive BOOLEAN,
	_inactive TEXT, -- Foreign Key to element table
	"include" BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose__valueSet_Include
	exclude BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Compose__valueSet_Include

	FOREIGN KEY (_lockedDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inactive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Include(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Include__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Include__extension
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	concept BOOLEAN, -- true if 1+ rows in ValueSet_Concept correspond to this entry
	"filter" BOOLEAN, -- true if 1+ rows in ValueSet_Filter correspond to this entry
	valueSet BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Include__canonical

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Concept(

	id TEXT PRIMARY KEY,
	valueSet_IncludeId TEXT, -- Foreign Key to valueSet_Include table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Concept__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Concept__extension
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	designation BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Concept__valueSet_Designation

	FOREIGN KEY (valueSet_IncludeId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Designation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Designation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Designation__extension
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"use" TEXT, -- Foreign Key to coding table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("use")
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Filter(

	id TEXT PRIMARY KEY,
	valueSet_IncludeId TEXT, -- Foreign Key to valueSet_Include table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Filter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Filter__extension
	property TEXT,
	_property TEXT, -- Foreign Key to element table
	op TEXT CHECK( op IN ('=','is-a','descendent-of','is-not-a','regex','in','not-in','generalizes','exists') ),
	_op TEXT, -- Foreign Key to element table
	"value" TEXT,
	_value TEXT, -- Foreign Key to element table

	FOREIGN KEY (valueSet_IncludeId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_property)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_op)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_value)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Expansion(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Expansion__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Expansion__extension
	identifier TEXT,
	_identifier TEXT, -- Foreign Key to element table
	"timestamp" DATETIME,
	_timestamp TEXT, -- Foreign Key to element table
	total INTEGER,
	_total TEXT, -- Foreign Key to element table
	offset INTEGER,
	_offset TEXT, -- Foreign Key to element table
	"parameter" BOOLEAN, -- true if 1+ rows in ValueSet_Parameter correspond to this entry
	"contains" BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Expansion__valueSet_Contains

	FOREIGN KEY (_identifier)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_timestamp)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_total)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_offset)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Parameter(

	id TEXT PRIMARY KEY,
	valueSet_ExpansionId TEXT, -- Foreign Key to valueSet_Expansion table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Parameter__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Parameter__extension
	"name" TEXT,
	_name TEXT, -- Foreign Key to element table
	valueString TEXT, -- pattern: ^[ \r\n\t\S]+$
	_valueString TEXT, -- Foreign Key to element table
	valueBoolean BOOLEAN, -- pattern: ^true|false$
	_valueBoolean TEXT, -- Foreign Key to element table
	valueInteger REAL, -- pattern: ^-?([0]|([1-9][0-9]*))$
	_valueInteger TEXT, -- Foreign Key to element table
	valueDecimal REAL, -- pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
	_valueDecimal TEXT, -- Foreign Key to element table
	valueUri TEXT, -- pattern: ^\S*$
	_valueUri TEXT, -- Foreign Key to element table
	valueCode TEXT, -- pattern: ^[^\s]+(\s[^\s]+)*$
	_valueCode TEXT, -- Foreign Key to element table
	valueDateTime TEXT, -- pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
	_valueDateTime TEXT, -- Foreign Key to element table

	FOREIGN KEY (valueSet_ExpansionId)
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_name)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueString)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueBoolean)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueInteger)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDecimal)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueUri)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueCode)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_valueDateTime)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE valueSet_Contains(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains__extension
	"system" TEXT,
	_system TEXT, -- Foreign Key to element table
	abstract BOOLEAN,
	_abstract TEXT, -- Foreign Key to element table
	inactive BOOLEAN,
	_inactive TEXT, -- Foreign Key to element table
	"version" TEXT,
	_version TEXT, -- Foreign Key to element table
	"code" TEXT,
	_code TEXT, -- Foreign Key to element table
	display TEXT,
	_display TEXT, -- Foreign Key to element table
	designation BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains__valueSet_Designation
	"contains" BOOLEAN, -- true if 1+ item is referenced from bridge table: valueSet_Contains__valueSet_Contains

	FOREIGN KEY (_system)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_abstract)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_inactive)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_version)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_code)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_display)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult(

	resourceType TEXT, -- resourceType: verificationResult
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__extension
	"target" BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__reference
	targetLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__string
	_targetLocation BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__element
	need TEXT, -- Foreign Key to codeableConcept table
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	statusDate DATETIME,
	_statusDate TEXT, -- Foreign Key to element table
	validationType TEXT, -- Foreign Key to codeableConcept table
	validationProcess BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult__codeableConcept
	frequency TEXT, -- Foreign Key to timing table
	lastPerformed DATETIME,
	_lastPerformed TEXT, -- Foreign Key to element table
	nextScheduled DATE,
	_nextScheduled TEXT, -- Foreign Key to element table
	failureAction TEXT, -- Foreign Key to codeableConcept table
	primarySource BOOLEAN, -- true if 1+ rows in VerificationResult_PrimarySource correspond to this entry
	attestation TEXT, -- Foreign Key to verificationResult_Attestation table
	validator BOOLEAN, -- true if 1+ rows in VerificationResult_Validator correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (need)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_statusDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validationType)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (frequency)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_lastPerformed)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_nextScheduled)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (failureAction)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attestation)
		REFERENCES verificationResult_Attestation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult_PrimarySource(

	id TEXT PRIMARY KEY,
	verificationResultId TEXT, -- Foreign Key to verificationResult table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource__extension
	who TEXT, -- Foreign Key to reference table
	"type" BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource__codeableConcept
	communicationMethod BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource__codeableConcept
	validationStatus TEXT, -- Foreign Key to codeableConcept table
	validationDate DATETIME,
	_validationDate TEXT, -- Foreign Key to element table
	canPushUpdates TEXT, -- Foreign Key to codeableConcept table
	pushTypeAvailable BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_PrimarySource__codeableConcept

	FOREIGN KEY (verificationResultId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (validationStatus)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_validationDate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (canPushUpdates)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult_Attestation(

	id TEXT PRIMARY KEY,
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Attestation__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Attestation__extension
	who TEXT, -- Foreign Key to reference table
	onBehalfOf TEXT, -- Foreign Key to reference table
	communicationMethod TEXT, -- Foreign Key to codeableConcept table
	"date" DATE,
	_date TEXT, -- Foreign Key to element table
	sourceIdentityCertificate TEXT,
	_sourceIdentityCertificate TEXT, -- Foreign Key to element table
	proxyIdentityCertificate TEXT,
	_proxyIdentityCertificate TEXT, -- Foreign Key to element table
	proxySignature TEXT, -- Foreign Key to signature table
	sourceSignature TEXT, -- Foreign Key to signature table

	FOREIGN KEY (who)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (onBehalfOf)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (communicationMethod)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_date)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sourceIdentityCertificate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_proxyIdentityCertificate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (proxySignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (sourceSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE verificationResult_Validator(

	id TEXT PRIMARY KEY,
	verificationResultId TEXT, -- Foreign Key to verificationResult table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Validator__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: verificationResult_Validator__extension
	organization TEXT, -- Foreign Key to reference table
	identityCertificate TEXT,
	_identityCertificate TEXT, -- Foreign Key to element table
	attestationSignature TEXT, -- Foreign Key to signature table

	FOREIGN KEY (verificationResultId)
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (organization)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_identityCertificate)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (attestationSignature)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE visionPrescription(

	resourceType TEXT, -- resourceType: visionPrescription
	id TEXT PRIMARY KEY,
	meta TEXT, -- Foreign Key to meta table
	implicitRules TEXT,
	_implicitRules TEXT, -- Foreign Key to element table
	"language" TEXT,
	_language TEXT, -- Foreign Key to element table
	"text" TEXT, -- Foreign Key to narrative table
	contained BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription__resourceList
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription__extension
	identifier BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription__identifier
	"status" TEXT,
	_status TEXT, -- Foreign Key to element table
	created DATETIME,
	_created TEXT, -- Foreign Key to element table
	patient TEXT, -- Foreign Key to reference table
	encounter TEXT, -- Foreign Key to reference table
	dateWritten DATETIME,
	_dateWritten TEXT, -- Foreign Key to element table
	prescriber TEXT, -- Foreign Key to reference table
	lensSpecification BOOLEAN, -- true if 1+ rows in VisionPrescription_LensSpecification correspond to this entry

	FOREIGN KEY (meta)
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_implicitRules)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_language)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY ("text")
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_status)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_created)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (patient)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (encounter)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_dateWritten)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (prescriber)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE visionPrescription_LensSpecification(

	id TEXT PRIMARY KEY,
	visionPrescriptionId TEXT, -- Foreign Key to visionPrescription table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_LensSpecification__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_LensSpecification__extension
	product TEXT, -- Foreign Key to codeableConcept table
	eye TEXT CHECK( eye IN ('right','left') ),
	_eye TEXT, -- Foreign Key to element table
	sphere REAL,
	_sphere TEXT, -- Foreign Key to element table
	cylinder REAL,
	_cylinder TEXT, -- Foreign Key to element table
	axis INTEGER,
	_axis TEXT, -- Foreign Key to element table
	prism BOOLEAN, -- true if 1+ rows in VisionPrescription_Prism correspond to this entry
	"add" REAL,
	_add TEXT, -- Foreign Key to element table
	power REAL,
	_power TEXT, -- Foreign Key to element table
	backCurve REAL,
	_backCurve TEXT, -- Foreign Key to element table
	diameter REAL,
	_diameter TEXT, -- Foreign Key to element table
	duration TEXT, -- Foreign Key to quantity table
	color TEXT,
	_color TEXT, -- Foreign Key to element table
	brand TEXT,
	_brand TEXT, -- Foreign Key to element table
	note BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_LensSpecification__annotation

	FOREIGN KEY (visionPrescriptionId)
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (product)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_eye)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_sphere)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_cylinder)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_axis)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_add)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_power)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_backCurve)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_diameter)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (duration)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_color)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_brand)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);

CREATE TABLE visionPrescription_Prism(

	id TEXT PRIMARY KEY,
	visionPrescription_LensSpecificationId TEXT, -- Foreign Key to visionPrescription_LensSpecification table
	extension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_Prism__extension
	modifierExtension BOOLEAN, -- true if 1+ item is referenced from bridge table: visionPrescription_Prism__extension
	amount REAL,
	_amount TEXT, -- Foreign Key to element table
	base TEXT CHECK( base IN ('up','down','in','out') ),
	_base TEXT, -- Foreign Key to element table

	FOREIGN KEY (visionPrescription_LensSpecificationId)
		REFERENCES visionPrescription_LensSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_amount)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,

	FOREIGN KEY (_base)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION

);


CREATE TABLE extension__element(
	extensionId TEXT,
	elementId TEXT,
	PRIMARY KEY (extensionId, elementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementId),
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__extension(
	extensionId TEXT,
	extensionId TEXT,
	PRIMARY KEY (extensionId, extensionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (extensionId),
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__narrative(
	extensionId TEXT,
	narrativeId TEXT,
	PRIMARY KEY (extensionId, narrativeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (narrativeId),
		REFERENCES narrative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__annotation(
	extensionId TEXT,
	annotationId TEXT,
	PRIMARY KEY (extensionId, annotationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (annotationId),
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__attachment(
	extensionId TEXT,
	attachmentId TEXT,
	PRIMARY KEY (extensionId, attachmentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (attachmentId),
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__identifier(
	extensionId TEXT,
	identifierId TEXT,
	PRIMARY KEY (extensionId, identifierId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (identifierId),
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__codeableConcept(
	extensionId TEXT,
	codeableConceptId TEXT,
	PRIMARY KEY (extensionId, codeableConceptId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId),
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coding(
	extensionId TEXT,
	codingId TEXT,
	PRIMARY KEY (extensionId, codingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codingId),
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__quantity(
	extensionId TEXT,
	quantityId TEXT,
	PRIMARY KEY (extensionId, quantityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (quantityId),
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__duration(
	extensionId TEXT,
	durationId TEXT,
	PRIMARY KEY (extensionId, durationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (durationId),
		REFERENCES duration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__distance(
	extensionId TEXT,
	distanceId TEXT,
	PRIMARY KEY (extensionId, distanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (distanceId),
		REFERENCES distance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__count(
	extensionId TEXT,
	countId TEXT,
	PRIMARY KEY (extensionId, countId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (countId),
		REFERENCES count (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__money(
	extensionId TEXT,
	moneyId TEXT,
	PRIMARY KEY (extensionId, moneyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (moneyId),
		REFERENCES money (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__age(
	extensionId TEXT,
	ageId TEXT,
	PRIMARY KEY (extensionId, ageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (ageId),
		REFERENCES age (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__range(
	extensionId TEXT,
	rangeId TEXT,
	PRIMARY KEY (extensionId, rangeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (rangeId),
		REFERENCES range (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__period(
	extensionId TEXT,
	periodId TEXT,
	PRIMARY KEY (extensionId, periodId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (periodId),
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__ratio(
	extensionId TEXT,
	ratioId TEXT,
	PRIMARY KEY (extensionId, ratioId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (ratioId),
		REFERENCES ratio (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__reference(
	extensionId TEXT,
	referenceId TEXT,
	PRIMARY KEY (extensionId, referenceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (referenceId),
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__sampledData(
	extensionId TEXT,
	sampledDataId TEXT,
	PRIMARY KEY (extensionId, sampledDataId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (sampledDataId),
		REFERENCES sampledData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__signature(
	extensionId TEXT,
	signatureId TEXT,
	PRIMARY KEY (extensionId, signatureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (signatureId),
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__humanName(
	extensionId TEXT,
	humanNameId TEXT,
	PRIMARY KEY (extensionId, humanNameId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (humanNameId),
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__address(
	extensionId TEXT,
	addressId TEXT,
	PRIMARY KEY (extensionId, addressId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId),
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contactPoint(
	extensionId TEXT,
	contactPointId TEXT,
	PRIMARY KEY (extensionId, contactPointId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactPointId),
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__timing(
	extensionId TEXT,
	timingId TEXT,
	PRIMARY KEY (extensionId, timingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (timingId),
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__timing_Repeat(
	extensionId TEXT,
	timing_RepeatId TEXT,
	PRIMARY KEY (extensionId, timing_RepeatId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (timing_RepeatId),
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__meta(
	extensionId TEXT,
	metaId TEXT,
	PRIMARY KEY (extensionId, metaId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (metaId),
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contactDetail(
	extensionId TEXT,
	contactDetailId TEXT,
	PRIMARY KEY (extensionId, contactDetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId),
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contributor(
	extensionId TEXT,
	contributorId TEXT,
	PRIMARY KEY (extensionId, contributorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contributorId),
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__dataRequirement(
	extensionId TEXT,
	dataRequirementId TEXT,
	PRIMARY KEY (extensionId, dataRequirementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId),
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__dataRequirement_CodeFilter(
	extensionId TEXT,
	dataRequirement_CodeFilterId TEXT,
	PRIMARY KEY (extensionId, dataRequirement_CodeFilterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirement_CodeFilterId),
		REFERENCES dataRequirement_CodeFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__dataRequirement_DateFilter(
	extensionId TEXT,
	dataRequirement_DateFilterId TEXT,
	PRIMARY KEY (extensionId, dataRequirement_DateFilterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirement_DateFilterId),
		REFERENCES dataRequirement_DateFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__dataRequirement_Sort(
	extensionId TEXT,
	dataRequirement_SortId TEXT,
	PRIMARY KEY (extensionId, dataRequirement_SortId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirement_SortId),
		REFERENCES dataRequirement_Sort (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__parameterDefinition(
	extensionId TEXT,
	parameterDefinitionId TEXT,
	PRIMARY KEY (extensionId, parameterDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (parameterDefinitionId),
		REFERENCES parameterDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__relatedArtifact(
	extensionId TEXT,
	relatedArtifactId TEXT,
	PRIMARY KEY (extensionId, relatedArtifactId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedArtifactId),
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__triggerDefinition(
	extensionId TEXT,
	triggerDefinitionId TEXT,
	PRIMARY KEY (extensionId, triggerDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (triggerDefinitionId),
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__usageContext(
	extensionId TEXT,
	usageContextId TEXT,
	PRIMARY KEY (extensionId, usageContextId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (usageContextId),
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__dosage(
	extensionId TEXT,
	dosageId TEXT,
	PRIMARY KEY (extensionId, dosageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosageId),
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__dosage_DoseAndRate(
	extensionId TEXT,
	dosage_DoseAndRateId TEXT,
	PRIMARY KEY (extensionId, dosage_DoseAndRateId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosage_DoseAndRateId),
		REFERENCES dosage_DoseAndRate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__population(
	extensionId TEXT,
	populationId TEXT,
	PRIMARY KEY (extensionId, populationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (populationId),
		REFERENCES population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__productShelfLife(
	extensionId TEXT,
	productShelfLifeId TEXT,
	PRIMARY KEY (extensionId, productShelfLifeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (productShelfLifeId),
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__prodCharacteristic(
	extensionId TEXT,
	prodCharacteristicId TEXT,
	PRIMARY KEY (extensionId, prodCharacteristicId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (prodCharacteristicId),
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__marketingStatus(
	extensionId TEXT,
	marketingStatusId TEXT,
	PRIMARY KEY (extensionId, marketingStatusId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (marketingStatusId),
		REFERENCES marketingStatus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceAmount(
	extensionId TEXT,
	substanceAmountId TEXT,
	PRIMARY KEY (extensionId, substanceAmountId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceAmountId),
		REFERENCES substanceAmount (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceAmount_ReferenceRange(
	extensionId TEXT,
	substanceAmount_ReferenceRangeId TEXT,
	PRIMARY KEY (extensionId, substanceAmount_ReferenceRangeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceAmount_ReferenceRangeId),
		REFERENCES substanceAmount_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__expression(
	extensionId TEXT,
	expressionId TEXT,
	PRIMARY KEY (extensionId, expressionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (expressionId),
		REFERENCES expression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition(
	extensionId TEXT,
	elementDefinitionId TEXT,
	PRIMARY KEY (extensionId, elementDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinitionId),
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Slicing(
	extensionId TEXT,
	elementDefinition_SlicingId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_SlicingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_SlicingId),
		REFERENCES elementDefinition_Slicing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Discriminator(
	extensionId TEXT,
	elementDefinition_DiscriminatorId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_DiscriminatorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_DiscriminatorId),
		REFERENCES elementDefinition_Discriminator (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Base(
	extensionId TEXT,
	elementDefinition_BaseId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_BaseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_BaseId),
		REFERENCES elementDefinition_Base (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Type(
	extensionId TEXT,
	elementDefinition_TypeId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_TypeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_TypeId),
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Example(
	extensionId TEXT,
	elementDefinition_ExampleId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_ExampleId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_ExampleId),
		REFERENCES elementDefinition_Example (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Constraint(
	extensionId TEXT,
	elementDefinition_ConstraintId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_ConstraintId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_ConstraintId),
		REFERENCES elementDefinition_Constraint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Binding(
	extensionId TEXT,
	elementDefinition_BindingId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_BindingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_BindingId),
		REFERENCES elementDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__elementDefinition_Mapping(
	extensionId TEXT,
	elementDefinition_MappingId TEXT,
	PRIMARY KEY (extensionId, elementDefinition_MappingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_MappingId),
		REFERENCES elementDefinition_Mapping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__account(
	extensionId TEXT,
	accountId TEXT,
	PRIMARY KEY (extensionId, accountId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (accountId),
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__account_Coverage(
	extensionId TEXT,
	account_CoverageId TEXT,
	PRIMARY KEY (extensionId, account_CoverageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (account_CoverageId),
		REFERENCES account_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__account_Guarantor(
	extensionId TEXT,
	account_GuarantorId TEXT,
	PRIMARY KEY (extensionId, account_GuarantorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (account_GuarantorId),
		REFERENCES account_Guarantor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__activityDefinition(
	extensionId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (extensionId, activityDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__activityDefinition_Participant(
	extensionId TEXT,
	activityDefinition_ParticipantId TEXT,
	PRIMARY KEY (extensionId, activityDefinition_ParticipantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinition_ParticipantId),
		REFERENCES activityDefinition_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__activityDefinition_DynamicValue(
	extensionId TEXT,
	activityDefinition_DynamicValueId TEXT,
	PRIMARY KEY (extensionId, activityDefinition_DynamicValueId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinition_DynamicValueId),
		REFERENCES activityDefinition_DynamicValue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__adverseEvent(
	extensionId TEXT,
	adverseEventId TEXT,
	PRIMARY KEY (extensionId, adverseEventId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (adverseEventId),
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__adverseEvent_SuspectEntity(
	extensionId TEXT,
	adverseEvent_SuspectEntityId TEXT,
	PRIMARY KEY (extensionId, adverseEvent_SuspectEntityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (adverseEvent_SuspectEntityId),
		REFERENCES adverseEvent_SuspectEntity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__adverseEvent_Causality(
	extensionId TEXT,
	adverseEvent_CausalityId TEXT,
	PRIMARY KEY (extensionId, adverseEvent_CausalityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (adverseEvent_CausalityId),
		REFERENCES adverseEvent_Causality (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__allergyIntolerance(
	extensionId TEXT,
	allergyIntoleranceId TEXT,
	PRIMARY KEY (extensionId, allergyIntoleranceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntoleranceId),
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__allergyIntolerance_Reaction(
	extensionId TEXT,
	allergyIntolerance_ReactionId TEXT,
	PRIMARY KEY (extensionId, allergyIntolerance_ReactionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntolerance_ReactionId),
		REFERENCES allergyIntolerance_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__appointment(
	extensionId TEXT,
	appointmentId TEXT,
	PRIMARY KEY (extensionId, appointmentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentId),
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__appointment_Participant(
	extensionId TEXT,
	appointment_ParticipantId TEXT,
	PRIMARY KEY (extensionId, appointment_ParticipantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointment_ParticipantId),
		REFERENCES appointment_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__appointmentResponse(
	extensionId TEXT,
	appointmentResponseId TEXT,
	PRIMARY KEY (extensionId, appointmentResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentResponseId),
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__auditEvent(
	extensionId TEXT,
	auditEventId TEXT,
	PRIMARY KEY (extensionId, auditEventId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEventId),
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__auditEvent_Agent(
	extensionId TEXT,
	auditEvent_AgentId TEXT,
	PRIMARY KEY (extensionId, auditEvent_AgentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_AgentId),
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__auditEvent_Network(
	extensionId TEXT,
	auditEvent_NetworkId TEXT,
	PRIMARY KEY (extensionId, auditEvent_NetworkId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_NetworkId),
		REFERENCES auditEvent_Network (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__auditEvent_Source(
	extensionId TEXT,
	auditEvent_SourceId TEXT,
	PRIMARY KEY (extensionId, auditEvent_SourceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_SourceId),
		REFERENCES auditEvent_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__auditEvent_Entity(
	extensionId TEXT,
	auditEvent_EntityId TEXT,
	PRIMARY KEY (extensionId, auditEvent_EntityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_EntityId),
		REFERENCES auditEvent_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__auditEvent_Detail(
	extensionId TEXT,
	auditEvent_DetailId TEXT,
	PRIMARY KEY (extensionId, auditEvent_DetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_DetailId),
		REFERENCES auditEvent_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__basic(
	extensionId TEXT,
	basicId TEXT,
	PRIMARY KEY (extensionId, basicId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (basicId),
		REFERENCES basic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__biologicallyDerivedProduct(
	extensionId TEXT,
	biologicallyDerivedProductId TEXT,
	PRIMARY KEY (extensionId, biologicallyDerivedProductId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProductId),
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__biologicallyDerivedProduct_Collection(
	extensionId TEXT,
	biologicallyDerivedProduct_CollectionId TEXT,
	PRIMARY KEY (extensionId, biologicallyDerivedProduct_CollectionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProduct_CollectionId),
		REFERENCES biologicallyDerivedProduct_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__biologicallyDerivedProduct_Processing(
	extensionId TEXT,
	biologicallyDerivedProduct_ProcessingId TEXT,
	PRIMARY KEY (extensionId, biologicallyDerivedProduct_ProcessingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProduct_ProcessingId),
		REFERENCES biologicallyDerivedProduct_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__biologicallyDerivedProduct_Manipulation(
	extensionId TEXT,
	biologicallyDerivedProduct_ManipulationId TEXT,
	PRIMARY KEY (extensionId, biologicallyDerivedProduct_ManipulationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProduct_ManipulationId),
		REFERENCES biologicallyDerivedProduct_Manipulation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__biologicallyDerivedProduct_Storage(
	extensionId TEXT,
	biologicallyDerivedProduct_StorageId TEXT,
	PRIMARY KEY (extensionId, biologicallyDerivedProduct_StorageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProduct_StorageId),
		REFERENCES biologicallyDerivedProduct_Storage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__bodyStructure(
	extensionId TEXT,
	bodyStructureId TEXT,
	PRIMARY KEY (extensionId, bodyStructureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bodyStructureId),
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__bundle_Link(
	extensionId TEXT,
	bundle_LinkId TEXT,
	PRIMARY KEY (extensionId, bundle_LinkId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_LinkId),
		REFERENCES bundle_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__bundle_Entry(
	extensionId TEXT,
	bundle_EntryId TEXT,
	PRIMARY KEY (extensionId, bundle_EntryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_EntryId),
		REFERENCES bundle_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__bundle_Search(
	extensionId TEXT,
	bundle_SearchId TEXT,
	PRIMARY KEY (extensionId, bundle_SearchId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_SearchId),
		REFERENCES bundle_Search (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__bundle_Request(
	extensionId TEXT,
	bundle_RequestId TEXT,
	PRIMARY KEY (extensionId, bundle_RequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_RequestId),
		REFERENCES bundle_Request (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__bundle_Response(
	extensionId TEXT,
	bundle_ResponseId TEXT,
	PRIMARY KEY (extensionId, bundle_ResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_ResponseId),
		REFERENCES bundle_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement(
	extensionId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (extensionId, capabilityStatementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Software(
	extensionId TEXT,
	capabilityStatement_SoftwareId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_SoftwareId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_SoftwareId),
		REFERENCES capabilityStatement_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Implementation(
	extensionId TEXT,
	capabilityStatement_ImplementationId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_ImplementationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_ImplementationId),
		REFERENCES capabilityStatement_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Rest(
	extensionId TEXT,
	capabilityStatement_RestId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_RestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_RestId),
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Security(
	extensionId TEXT,
	capabilityStatement_SecurityId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_SecurityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_SecurityId),
		REFERENCES capabilityStatement_Security (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Resource(
	extensionId TEXT,
	capabilityStatement_ResourceId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_ResourceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_ResourceId),
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Interaction(
	extensionId TEXT,
	capabilityStatement_InteractionId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_InteractionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_InteractionId),
		REFERENCES capabilityStatement_Interaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_SearchParam(
	extensionId TEXT,
	capabilityStatement_SearchParamId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_SearchParamId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_SearchParamId),
		REFERENCES capabilityStatement_SearchParam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Operation(
	extensionId TEXT,
	capabilityStatement_OperationId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_OperationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_OperationId),
		REFERENCES capabilityStatement_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Interaction1(
	extensionId TEXT,
	capabilityStatement_Interaction1Id TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_Interaction1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_Interaction1Id),
		REFERENCES capabilityStatement_Interaction1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Messaging(
	extensionId TEXT,
	capabilityStatement_MessagingId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_MessagingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_MessagingId),
		REFERENCES capabilityStatement_Messaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Endpoint(
	extensionId TEXT,
	capabilityStatement_EndpointId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_EndpointId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_EndpointId),
		REFERENCES capabilityStatement_Endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_SupportedMessage(
	extensionId TEXT,
	capabilityStatement_SupportedMessageId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_SupportedMessageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_SupportedMessageId),
		REFERENCES capabilityStatement_SupportedMessage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__capabilityStatement_Document(
	extensionId TEXT,
	capabilityStatement_DocumentId TEXT,
	PRIMARY KEY (extensionId, capabilityStatement_DocumentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_DocumentId),
		REFERENCES capabilityStatement_Document (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__carePlan(
	extensionId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (extensionId, carePlanId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__carePlan_Activity(
	extensionId TEXT,
	carePlan_ActivityId TEXT,
	PRIMARY KEY (extensionId, carePlan_ActivityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_ActivityId),
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__carePlan_Detail(
	extensionId TEXT,
	carePlan_DetailId TEXT,
	PRIMARY KEY (extensionId, carePlan_DetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_DetailId),
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__careTeam(
	extensionId TEXT,
	careTeamId TEXT,
	PRIMARY KEY (extensionId, careTeamId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeamId),
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__careTeam_Participant(
	extensionId TEXT,
	careTeam_ParticipantId TEXT,
	PRIMARY KEY (extensionId, careTeam_ParticipantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeam_ParticipantId),
		REFERENCES careTeam_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__catalogEntry(
	extensionId TEXT,
	catalogEntryId TEXT,
	PRIMARY KEY (extensionId, catalogEntryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (catalogEntryId),
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__catalogEntry_RelatedEntry(
	extensionId TEXT,
	catalogEntry_RelatedEntryId TEXT,
	PRIMARY KEY (extensionId, catalogEntry_RelatedEntryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (catalogEntry_RelatedEntryId),
		REFERENCES catalogEntry_RelatedEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__chargeItem(
	extensionId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (extensionId, chargeItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__chargeItem_Performer(
	extensionId TEXT,
	chargeItem_PerformerId TEXT,
	PRIMARY KEY (extensionId, chargeItem_PerformerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItem_PerformerId),
		REFERENCES chargeItem_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__chargeItemDefinition(
	extensionId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (extensionId, chargeItemDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__chargeItemDefinition_Applicability(
	extensionId TEXT,
	chargeItemDefinition_ApplicabilityId TEXT,
	PRIMARY KEY (extensionId, chargeItemDefinition_ApplicabilityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinition_ApplicabilityId),
		REFERENCES chargeItemDefinition_Applicability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__chargeItemDefinition_PropertyGroup(
	extensionId TEXT,
	chargeItemDefinition_PropertyGroupId TEXT,
	PRIMARY KEY (extensionId, chargeItemDefinition_PropertyGroupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinition_PropertyGroupId),
		REFERENCES chargeItemDefinition_PropertyGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__chargeItemDefinition_PriceComponent(
	extensionId TEXT,
	chargeItemDefinition_PriceComponentId TEXT,
	PRIMARY KEY (extensionId, chargeItemDefinition_PriceComponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinition_PriceComponentId),
		REFERENCES chargeItemDefinition_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim(
	extensionId TEXT,
	claimId TEXT,
	PRIMARY KEY (extensionId, claimId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimId),
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Related(
	extensionId TEXT,
	claim_RelatedId TEXT,
	PRIMARY KEY (extensionId, claim_RelatedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_RelatedId),
		REFERENCES claim_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Payee(
	extensionId TEXT,
	claim_PayeeId TEXT,
	PRIMARY KEY (extensionId, claim_PayeeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_PayeeId),
		REFERENCES claim_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_CareTeam(
	extensionId TEXT,
	claim_CareTeamId TEXT,
	PRIMARY KEY (extensionId, claim_CareTeamId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_CareTeamId),
		REFERENCES claim_CareTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_SupportingInfo(
	extensionId TEXT,
	claim_SupportingInfoId TEXT,
	PRIMARY KEY (extensionId, claim_SupportingInfoId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_SupportingInfoId),
		REFERENCES claim_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Diagnosis(
	extensionId TEXT,
	claim_DiagnosisId TEXT,
	PRIMARY KEY (extensionId, claim_DiagnosisId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_DiagnosisId),
		REFERENCES claim_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Procedure(
	extensionId TEXT,
	claim_ProcedureId TEXT,
	PRIMARY KEY (extensionId, claim_ProcedureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ProcedureId),
		REFERENCES claim_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Insurance(
	extensionId TEXT,
	claim_InsuranceId TEXT,
	PRIMARY KEY (extensionId, claim_InsuranceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_InsuranceId),
		REFERENCES claim_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Accident(
	extensionId TEXT,
	claim_AccidentId TEXT,
	PRIMARY KEY (extensionId, claim_AccidentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_AccidentId),
		REFERENCES claim_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Item(
	extensionId TEXT,
	claim_ItemId TEXT,
	PRIMARY KEY (extensionId, claim_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ItemId),
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_Detail(
	extensionId TEXT,
	claim_DetailId TEXT,
	PRIMARY KEY (extensionId, claim_DetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_DetailId),
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claim_SubDetail(
	extensionId TEXT,
	claim_SubDetailId TEXT,
	PRIMARY KEY (extensionId, claim_SubDetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_SubDetailId),
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse(
	extensionId TEXT,
	claimResponseId TEXT,
	PRIMARY KEY (extensionId, claimResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponseId),
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Item(
	extensionId TEXT,
	claimResponse_ItemId TEXT,
	PRIMARY KEY (extensionId, claimResponse_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_ItemId),
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Adjudication(
	extensionId TEXT,
	claimResponse_AdjudicationId TEXT,
	PRIMARY KEY (extensionId, claimResponse_AdjudicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AdjudicationId),
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Detail(
	extensionId TEXT,
	claimResponse_DetailId TEXT,
	PRIMARY KEY (extensionId, claimResponse_DetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_DetailId),
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_SubDetail(
	extensionId TEXT,
	claimResponse_SubDetailId TEXT,
	PRIMARY KEY (extensionId, claimResponse_SubDetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetailId),
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_AddItem(
	extensionId TEXT,
	claimResponse_AddItemId TEXT,
	PRIMARY KEY (extensionId, claimResponse_AddItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AddItemId),
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Detail1(
	extensionId TEXT,
	claimResponse_Detail1Id TEXT,
	PRIMARY KEY (extensionId, claimResponse_Detail1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_Detail1Id),
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_SubDetail1(
	extensionId TEXT,
	claimResponse_SubDetail1Id TEXT,
	PRIMARY KEY (extensionId, claimResponse_SubDetail1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetail1Id),
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Total(
	extensionId TEXT,
	claimResponse_TotalId TEXT,
	PRIMARY KEY (extensionId, claimResponse_TotalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_TotalId),
		REFERENCES claimResponse_Total (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Payment(
	extensionId TEXT,
	claimResponse_PaymentId TEXT,
	PRIMARY KEY (extensionId, claimResponse_PaymentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_PaymentId),
		REFERENCES claimResponse_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_ProcessNote(
	extensionId TEXT,
	claimResponse_ProcessNoteId TEXT,
	PRIMARY KEY (extensionId, claimResponse_ProcessNoteId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_ProcessNoteId),
		REFERENCES claimResponse_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Insurance(
	extensionId TEXT,
	claimResponse_InsuranceId TEXT,
	PRIMARY KEY (extensionId, claimResponse_InsuranceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_InsuranceId),
		REFERENCES claimResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__claimResponse_Error(
	extensionId TEXT,
	claimResponse_ErrorId TEXT,
	PRIMARY KEY (extensionId, claimResponse_ErrorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_ErrorId),
		REFERENCES claimResponse_Error (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__clinicalImpression(
	extensionId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (extensionId, clinicalImpressionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__clinicalImpression_Investigation(
	extensionId TEXT,
	clinicalImpression_InvestigationId TEXT,
	PRIMARY KEY (extensionId, clinicalImpression_InvestigationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpression_InvestigationId),
		REFERENCES clinicalImpression_Investigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__clinicalImpression_Finding(
	extensionId TEXT,
	clinicalImpression_FindingId TEXT,
	PRIMARY KEY (extensionId, clinicalImpression_FindingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpression_FindingId),
		REFERENCES clinicalImpression_Finding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__codeSystem(
	extensionId TEXT,
	codeSystemId TEXT,
	PRIMARY KEY (extensionId, codeSystemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystemId),
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__codeSystem_Filter(
	extensionId TEXT,
	codeSystem_FilterId TEXT,
	PRIMARY KEY (extensionId, codeSystem_FilterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_FilterId),
		REFERENCES codeSystem_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__codeSystem_Property(
	extensionId TEXT,
	codeSystem_PropertyId TEXT,
	PRIMARY KEY (extensionId, codeSystem_PropertyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_PropertyId),
		REFERENCES codeSystem_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__codeSystem_Concept(
	extensionId TEXT,
	codeSystem_ConceptId TEXT,
	PRIMARY KEY (extensionId, codeSystem_ConceptId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_ConceptId),
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__codeSystem_Designation(
	extensionId TEXT,
	codeSystem_DesignationId TEXT,
	PRIMARY KEY (extensionId, codeSystem_DesignationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_DesignationId),
		REFERENCES codeSystem_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__codeSystem_Property1(
	extensionId TEXT,
	codeSystem_Property1Id TEXT,
	PRIMARY KEY (extensionId, codeSystem_Property1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_Property1Id),
		REFERENCES codeSystem_Property1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__communication(
	extensionId TEXT,
	communicationId TEXT,
	PRIMARY KEY (extensionId, communicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__communication_Payload(
	extensionId TEXT,
	communication_PayloadId TEXT,
	PRIMARY KEY (extensionId, communication_PayloadId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communication_PayloadId),
		REFERENCES communication_Payload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__communicationRequest(
	extensionId TEXT,
	communicationRequestId TEXT,
	PRIMARY KEY (extensionId, communicationRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationRequestId),
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__communicationRequest_Payload(
	extensionId TEXT,
	communicationRequest_PayloadId TEXT,
	PRIMARY KEY (extensionId, communicationRequest_PayloadId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationRequest_PayloadId),
		REFERENCES communicationRequest_Payload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__compartmentDefinition(
	extensionId TEXT,
	compartmentDefinitionId TEXT,
	PRIMARY KEY (extensionId, compartmentDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compartmentDefinitionId),
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__compartmentDefinition_Resource(
	extensionId TEXT,
	compartmentDefinition_ResourceId TEXT,
	PRIMARY KEY (extensionId, compartmentDefinition_ResourceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compartmentDefinition_ResourceId),
		REFERENCES compartmentDefinition_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__composition(
	extensionId TEXT,
	compositionId TEXT,
	PRIMARY KEY (extensionId, compositionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compositionId),
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__composition_Attester(
	extensionId TEXT,
	composition_AttesterId TEXT,
	PRIMARY KEY (extensionId, composition_AttesterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_AttesterId),
		REFERENCES composition_Attester (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__composition_RelatesTo(
	extensionId TEXT,
	composition_RelatesToId TEXT,
	PRIMARY KEY (extensionId, composition_RelatesToId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_RelatesToId),
		REFERENCES composition_RelatesTo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__composition_Event(
	extensionId TEXT,
	composition_EventId TEXT,
	PRIMARY KEY (extensionId, composition_EventId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_EventId),
		REFERENCES composition_Event (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__composition_Section(
	extensionId TEXT,
	composition_SectionId TEXT,
	PRIMARY KEY (extensionId, composition_SectionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_SectionId),
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__conceptMap(
	extensionId TEXT,
	conceptMapId TEXT,
	PRIMARY KEY (extensionId, conceptMapId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMapId),
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__conceptMap_Group(
	extensionId TEXT,
	conceptMap_GroupId TEXT,
	PRIMARY KEY (extensionId, conceptMap_GroupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_GroupId),
		REFERENCES conceptMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__conceptMap_Element(
	extensionId TEXT,
	conceptMap_ElementId TEXT,
	PRIMARY KEY (extensionId, conceptMap_ElementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_ElementId),
		REFERENCES conceptMap_Element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__conceptMap_Target(
	extensionId TEXT,
	conceptMap_TargetId TEXT,
	PRIMARY KEY (extensionId, conceptMap_TargetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_TargetId),
		REFERENCES conceptMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__conceptMap_DependsOn(
	extensionId TEXT,
	conceptMap_DependsOnId TEXT,
	PRIMARY KEY (extensionId, conceptMap_DependsOnId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_DependsOnId),
		REFERENCES conceptMap_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__conceptMap_Unmapped(
	extensionId TEXT,
	conceptMap_UnmappedId TEXT,
	PRIMARY KEY (extensionId, conceptMap_UnmappedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_UnmappedId),
		REFERENCES conceptMap_Unmapped (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__condition(
	extensionId TEXT,
	conditionId TEXT,
	PRIMARY KEY (extensionId, conditionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conditionId),
		REFERENCES condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__condition_Stage(
	extensionId TEXT,
	condition_StageId TEXT,
	PRIMARY KEY (extensionId, condition_StageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (condition_StageId),
		REFERENCES condition_Stage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__condition_Evidence(
	extensionId TEXT,
	condition_EvidenceId TEXT,
	PRIMARY KEY (extensionId, condition_EvidenceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (condition_EvidenceId),
		REFERENCES condition_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__consent(
	extensionId TEXT,
	consentId TEXT,
	PRIMARY KEY (extensionId, consentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consentId),
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__consent_Policy(
	extensionId TEXT,
	consent_PolicyId TEXT,
	PRIMARY KEY (extensionId, consent_PolicyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consent_PolicyId),
		REFERENCES consent_Policy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__consent_Verification(
	extensionId TEXT,
	consent_VerificationId TEXT,
	PRIMARY KEY (extensionId, consent_VerificationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consent_VerificationId),
		REFERENCES consent_Verification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__consent_Provision(
	extensionId TEXT,
	consent_ProvisionId TEXT,
	PRIMARY KEY (extensionId, consent_ProvisionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consent_ProvisionId),
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__consent_Actor(
	extensionId TEXT,
	consent_ActorId TEXT,
	PRIMARY KEY (extensionId, consent_ActorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consent_ActorId),
		REFERENCES consent_Actor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__consent_Data(
	extensionId TEXT,
	consent_DataId TEXT,
	PRIMARY KEY (extensionId, consent_DataId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consent_DataId),
		REFERENCES consent_Data (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract(
	extensionId TEXT,
	contractId TEXT,
	PRIMARY KEY (extensionId, contractId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_ContentDefinition(
	extensionId TEXT,
	contract_ContentDefinitionId TEXT,
	PRIMARY KEY (extensionId, contract_ContentDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ContentDefinitionId),
		REFERENCES contract_ContentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Term(
	extensionId TEXT,
	contract_TermId TEXT,
	PRIMARY KEY (extensionId, contract_TermId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_TermId),
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_SecurityLabel(
	extensionId TEXT,
	contract_SecurityLabelId TEXT,
	PRIMARY KEY (extensionId, contract_SecurityLabelId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SecurityLabelId),
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Offer(
	extensionId TEXT,
	contract_OfferId TEXT,
	PRIMARY KEY (extensionId, contract_OfferId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_OfferId),
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Party(
	extensionId TEXT,
	contract_PartyId TEXT,
	PRIMARY KEY (extensionId, contract_PartyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_PartyId),
		REFERENCES contract_Party (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Answer(
	extensionId TEXT,
	contract_AnswerId TEXT,
	PRIMARY KEY (extensionId, contract_AnswerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AnswerId),
		REFERENCES contract_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Asset(
	extensionId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (extensionId, contract_AssetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Context(
	extensionId TEXT,
	contract_ContextId TEXT,
	PRIMARY KEY (extensionId, contract_ContextId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ContextId),
		REFERENCES contract_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_ValuedItem(
	extensionId TEXT,
	contract_ValuedItemId TEXT,
	PRIMARY KEY (extensionId, contract_ValuedItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ValuedItemId),
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Action(
	extensionId TEXT,
	contract_ActionId TEXT,
	PRIMARY KEY (extensionId, contract_ActionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ActionId),
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Subject(
	extensionId TEXT,
	contract_SubjectId TEXT,
	PRIMARY KEY (extensionId, contract_SubjectId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SubjectId),
		REFERENCES contract_Subject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Signer(
	extensionId TEXT,
	contract_SignerId TEXT,
	PRIMARY KEY (extensionId, contract_SignerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SignerId),
		REFERENCES contract_Signer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Friendly(
	extensionId TEXT,
	contract_FriendlyId TEXT,
	PRIMARY KEY (extensionId, contract_FriendlyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_FriendlyId),
		REFERENCES contract_Friendly (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Legal(
	extensionId TEXT,
	contract_LegalId TEXT,
	PRIMARY KEY (extensionId, contract_LegalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_LegalId),
		REFERENCES contract_Legal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__contract_Rule(
	extensionId TEXT,
	contract_RuleId TEXT,
	PRIMARY KEY (extensionId, contract_RuleId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_RuleId),
		REFERENCES contract_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverage(
	extensionId TEXT,
	coverageId TEXT,
	PRIMARY KEY (extensionId, coverageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageId),
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverage_Class(
	extensionId TEXT,
	coverage_ClassId TEXT,
	PRIMARY KEY (extensionId, coverage_ClassId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverage_ClassId),
		REFERENCES coverage_Class (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverage_CostToBeneficiary(
	extensionId TEXT,
	coverage_CostToBeneficiaryId TEXT,
	PRIMARY KEY (extensionId, coverage_CostToBeneficiaryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverage_CostToBeneficiaryId),
		REFERENCES coverage_CostToBeneficiary (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverage_Exception(
	extensionId TEXT,
	coverage_ExceptionId TEXT,
	PRIMARY KEY (extensionId, coverage_ExceptionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverage_ExceptionId),
		REFERENCES coverage_Exception (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityRequest(
	extensionId TEXT,
	coverageEligibilityRequestId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequestId),
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityRequest_SupportingInfo(
	extensionId TEXT,
	coverageEligibilityRequest_SupportingInfoId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityRequest_SupportingInfoId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_SupportingInfoId),
		REFERENCES coverageEligibilityRequest_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityRequest_Insurance(
	extensionId TEXT,
	coverageEligibilityRequest_InsuranceId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityRequest_InsuranceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_InsuranceId),
		REFERENCES coverageEligibilityRequest_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityRequest_Item(
	extensionId TEXT,
	coverageEligibilityRequest_ItemId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityRequest_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_ItemId),
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityRequest_Diagnosis(
	extensionId TEXT,
	coverageEligibilityRequest_DiagnosisId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityRequest_DiagnosisId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_DiagnosisId),
		REFERENCES coverageEligibilityRequest_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityResponse(
	extensionId TEXT,
	coverageEligibilityResponseId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponseId),
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityResponse_Insurance(
	extensionId TEXT,
	coverageEligibilityResponse_InsuranceId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityResponse_InsuranceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponse_InsuranceId),
		REFERENCES coverageEligibilityResponse_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityResponse_Item(
	extensionId TEXT,
	coverageEligibilityResponse_ItemId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityResponse_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponse_ItemId),
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityResponse_Benefit(
	extensionId TEXT,
	coverageEligibilityResponse_BenefitId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityResponse_BenefitId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponse_BenefitId),
		REFERENCES coverageEligibilityResponse_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__coverageEligibilityResponse_Error(
	extensionId TEXT,
	coverageEligibilityResponse_ErrorId TEXT,
	PRIMARY KEY (extensionId, coverageEligibilityResponse_ErrorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponse_ErrorId),
		REFERENCES coverageEligibilityResponse_Error (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__detectedIssue(
	extensionId TEXT,
	detectedIssueId TEXT,
	PRIMARY KEY (extensionId, detectedIssueId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssueId),
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__detectedIssue_Evidence(
	extensionId TEXT,
	detectedIssue_EvidenceId TEXT,
	PRIMARY KEY (extensionId, detectedIssue_EvidenceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssue_EvidenceId),
		REFERENCES detectedIssue_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__detectedIssue_Mitigation(
	extensionId TEXT,
	detectedIssue_MitigationId TEXT,
	PRIMARY KEY (extensionId, detectedIssue_MitigationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssue_MitigationId),
		REFERENCES detectedIssue_Mitigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__device(
	extensionId TEXT,
	deviceId TEXT,
	PRIMARY KEY (extensionId, deviceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceId),
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__device_UdiCarrier(
	extensionId TEXT,
	device_UdiCarrierId TEXT,
	PRIMARY KEY (extensionId, device_UdiCarrierId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (device_UdiCarrierId),
		REFERENCES device_UdiCarrier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__device_DeviceName(
	extensionId TEXT,
	device_DeviceNameId TEXT,
	PRIMARY KEY (extensionId, device_DeviceNameId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (device_DeviceNameId),
		REFERENCES device_DeviceName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__device_Specialization(
	extensionId TEXT,
	device_SpecializationId TEXT,
	PRIMARY KEY (extensionId, device_SpecializationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (device_SpecializationId),
		REFERENCES device_Specialization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__device_Version(
	extensionId TEXT,
	device_VersionId TEXT,
	PRIMARY KEY (extensionId, device_VersionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (device_VersionId),
		REFERENCES device_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__device_Property(
	extensionId TEXT,
	device_PropertyId TEXT,
	PRIMARY KEY (extensionId, device_PropertyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (device_PropertyId),
		REFERENCES device_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceDefinition(
	extensionId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (extensionId, deviceDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceDefinition_UdiDeviceIdentifier(
	extensionId TEXT,
	deviceDefinition_UdiDeviceIdentifierId TEXT,
	PRIMARY KEY (extensionId, deviceDefinition_UdiDeviceIdentifierId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_UdiDeviceIdentifierId),
		REFERENCES deviceDefinition_UdiDeviceIdentifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceDefinition_DeviceName(
	extensionId TEXT,
	deviceDefinition_DeviceNameId TEXT,
	PRIMARY KEY (extensionId, deviceDefinition_DeviceNameId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_DeviceNameId),
		REFERENCES deviceDefinition_DeviceName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceDefinition_Specialization(
	extensionId TEXT,
	deviceDefinition_SpecializationId TEXT,
	PRIMARY KEY (extensionId, deviceDefinition_SpecializationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_SpecializationId),
		REFERENCES deviceDefinition_Specialization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceDefinition_Capability(
	extensionId TEXT,
	deviceDefinition_CapabilityId TEXT,
	PRIMARY KEY (extensionId, deviceDefinition_CapabilityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_CapabilityId),
		REFERENCES deviceDefinition_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceDefinition_Property(
	extensionId TEXT,
	deviceDefinition_PropertyId TEXT,
	PRIMARY KEY (extensionId, deviceDefinition_PropertyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_PropertyId),
		REFERENCES deviceDefinition_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceDefinition_Material(
	extensionId TEXT,
	deviceDefinition_MaterialId TEXT,
	PRIMARY KEY (extensionId, deviceDefinition_MaterialId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_MaterialId),
		REFERENCES deviceDefinition_Material (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceMetric(
	extensionId TEXT,
	deviceMetricId TEXT,
	PRIMARY KEY (extensionId, deviceMetricId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceMetricId),
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceMetric_Calibration(
	extensionId TEXT,
	deviceMetric_CalibrationId TEXT,
	PRIMARY KEY (extensionId, deviceMetric_CalibrationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceMetric_CalibrationId),
		REFERENCES deviceMetric_Calibration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceRequest(
	extensionId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (extensionId, deviceRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceRequest_Parameter(
	extensionId TEXT,
	deviceRequest_ParameterId TEXT,
	PRIMARY KEY (extensionId, deviceRequest_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequest_ParameterId),
		REFERENCES deviceRequest_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__deviceUseStatement(
	extensionId TEXT,
	deviceUseStatementId TEXT,
	PRIMARY KEY (extensionId, deviceUseStatementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceUseStatementId),
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__diagnosticReport(
	extensionId TEXT,
	diagnosticReportId TEXT,
	PRIMARY KEY (extensionId, diagnosticReportId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (diagnosticReportId),
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__diagnosticReport_Media(
	extensionId TEXT,
	diagnosticReport_MediaId TEXT,
	PRIMARY KEY (extensionId, diagnosticReport_MediaId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (diagnosticReport_MediaId),
		REFERENCES diagnosticReport_Media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__documentManifest(
	extensionId TEXT,
	documentManifestId TEXT,
	PRIMARY KEY (extensionId, documentManifestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentManifestId),
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__documentManifest_Related(
	extensionId TEXT,
	documentManifest_RelatedId TEXT,
	PRIMARY KEY (extensionId, documentManifest_RelatedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentManifest_RelatedId),
		REFERENCES documentManifest_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__documentReference(
	extensionId TEXT,
	documentReferenceId TEXT,
	PRIMARY KEY (extensionId, documentReferenceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReferenceId),
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__documentReference_RelatesTo(
	extensionId TEXT,
	documentReference_RelatesToId TEXT,
	PRIMARY KEY (extensionId, documentReference_RelatesToId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReference_RelatesToId),
		REFERENCES documentReference_RelatesTo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__documentReference_Content(
	extensionId TEXT,
	documentReference_ContentId TEXT,
	PRIMARY KEY (extensionId, documentReference_ContentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReference_ContentId),
		REFERENCES documentReference_Content (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__documentReference_Context(
	extensionId TEXT,
	documentReference_ContextId TEXT,
	PRIMARY KEY (extensionId, documentReference_ContextId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReference_ContextId),
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__effectEvidenceSynthesis(
	extensionId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (extensionId, effectEvidenceSynthesisId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__effectEvidenceSynthesis_SampleSize(
	extensionId TEXT,
	effectEvidenceSynthesis_SampleSizeId TEXT,
	PRIMARY KEY (extensionId, effectEvidenceSynthesis_SampleSizeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_SampleSizeId),
		REFERENCES effectEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__effectEvidenceSynthesis_ResultsByExposure(
	extensionId TEXT,
	effectEvidenceSynthesis_ResultsByExposureId TEXT,
	PRIMARY KEY (extensionId, effectEvidenceSynthesis_ResultsByExposureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_ResultsByExposureId),
		REFERENCES effectEvidenceSynthesis_ResultsByExposure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__effectEvidenceSynthesis_EffectEstimate(
	extensionId TEXT,
	effectEvidenceSynthesis_EffectEstimateId TEXT,
	PRIMARY KEY (extensionId, effectEvidenceSynthesis_EffectEstimateId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_EffectEstimateId),
		REFERENCES effectEvidenceSynthesis_EffectEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__effectEvidenceSynthesis_PrecisionEstimate(
	extensionId TEXT,
	effectEvidenceSynthesis_PrecisionEstimateId TEXT,
	PRIMARY KEY (extensionId, effectEvidenceSynthesis_PrecisionEstimateId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_PrecisionEstimateId),
		REFERENCES effectEvidenceSynthesis_PrecisionEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__effectEvidenceSynthesis_Certainty(
	extensionId TEXT,
	effectEvidenceSynthesis_CertaintyId TEXT,
	PRIMARY KEY (extensionId, effectEvidenceSynthesis_CertaintyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_CertaintyId),
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__effectEvidenceSynthesis_CertaintySubcomponent(
	extensionId TEXT,
	effectEvidenceSynthesis_CertaintySubcomponentId TEXT,
	PRIMARY KEY (extensionId, effectEvidenceSynthesis_CertaintySubcomponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_CertaintySubcomponentId),
		REFERENCES effectEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__encounter(
	extensionId TEXT,
	encounterId TEXT,
	PRIMARY KEY (extensionId, encounterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounterId),
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__encounter_StatusHistory(
	extensionId TEXT,
	encounter_StatusHistoryId TEXT,
	PRIMARY KEY (extensionId, encounter_StatusHistoryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_StatusHistoryId),
		REFERENCES encounter_StatusHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__encounter_ClassHistory(
	extensionId TEXT,
	encounter_ClassHistoryId TEXT,
	PRIMARY KEY (extensionId, encounter_ClassHistoryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_ClassHistoryId),
		REFERENCES encounter_ClassHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__encounter_Participant(
	extensionId TEXT,
	encounter_ParticipantId TEXT,
	PRIMARY KEY (extensionId, encounter_ParticipantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_ParticipantId),
		REFERENCES encounter_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__encounter_Diagnosis(
	extensionId TEXT,
	encounter_DiagnosisId TEXT,
	PRIMARY KEY (extensionId, encounter_DiagnosisId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_DiagnosisId),
		REFERENCES encounter_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__encounter_Hospitalization(
	extensionId TEXT,
	encounter_HospitalizationId TEXT,
	PRIMARY KEY (extensionId, encounter_HospitalizationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_HospitalizationId),
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__encounter_Location(
	extensionId TEXT,
	encounter_LocationId TEXT,
	PRIMARY KEY (extensionId, encounter_LocationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_LocationId),
		REFERENCES encounter_Location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__endpoint(
	extensionId TEXT,
	endpointId TEXT,
	PRIMARY KEY (extensionId, endpointId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__enrollmentRequest(
	extensionId TEXT,
	enrollmentRequestId TEXT,
	PRIMARY KEY (extensionId, enrollmentRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (enrollmentRequestId),
		REFERENCES enrollmentRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__enrollmentResponse(
	extensionId TEXT,
	enrollmentResponseId TEXT,
	PRIMARY KEY (extensionId, enrollmentResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (enrollmentResponseId),
		REFERENCES enrollmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__episodeOfCare(
	extensionId TEXT,
	episodeOfCareId TEXT,
	PRIMARY KEY (extensionId, episodeOfCareId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (episodeOfCareId),
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__episodeOfCare_StatusHistory(
	extensionId TEXT,
	episodeOfCare_StatusHistoryId TEXT,
	PRIMARY KEY (extensionId, episodeOfCare_StatusHistoryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (episodeOfCare_StatusHistoryId),
		REFERENCES episodeOfCare_StatusHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__episodeOfCare_Diagnosis(
	extensionId TEXT,
	episodeOfCare_DiagnosisId TEXT,
	PRIMARY KEY (extensionId, episodeOfCare_DiagnosisId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (episodeOfCare_DiagnosisId),
		REFERENCES episodeOfCare_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__eventDefinition(
	extensionId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (extensionId, eventDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__evidence(
	extensionId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (extensionId, evidenceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__evidenceVariable(
	extensionId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (extensionId, evidenceVariableId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__evidenceVariable_Characteristic(
	extensionId TEXT,
	evidenceVariable_CharacteristicId TEXT,
	PRIMARY KEY (extensionId, evidenceVariable_CharacteristicId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariable_CharacteristicId),
		REFERENCES evidenceVariable_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario(
	extensionId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (extensionId, exampleScenarioId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_Actor(
	extensionId TEXT,
	exampleScenario_ActorId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_ActorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_ActorId),
		REFERENCES exampleScenario_Actor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_Instance(
	extensionId TEXT,
	exampleScenario_InstanceId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_InstanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_InstanceId),
		REFERENCES exampleScenario_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_Version(
	extensionId TEXT,
	exampleScenario_VersionId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_VersionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_VersionId),
		REFERENCES exampleScenario_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_ContainedInstance(
	extensionId TEXT,
	exampleScenario_ContainedInstanceId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_ContainedInstanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_ContainedInstanceId),
		REFERENCES exampleScenario_ContainedInstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_Process(
	extensionId TEXT,
	exampleScenario_ProcessId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_ProcessId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_ProcessId),
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_Step(
	extensionId TEXT,
	exampleScenario_StepId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_StepId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_StepId),
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_Operation(
	extensionId TEXT,
	exampleScenario_OperationId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_OperationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_OperationId),
		REFERENCES exampleScenario_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__exampleScenario_Alternative(
	extensionId TEXT,
	exampleScenario_AlternativeId TEXT,
	PRIMARY KEY (extensionId, exampleScenario_AlternativeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_AlternativeId),
		REFERENCES exampleScenario_Alternative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit(
	extensionId TEXT,
	explanationOfBenefitId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefitId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefitId),
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Related(
	extensionId TEXT,
	explanationOfBenefit_RelatedId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_RelatedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_RelatedId),
		REFERENCES explanationOfBenefit_Related (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Payee(
	extensionId TEXT,
	explanationOfBenefit_PayeeId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_PayeeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_PayeeId),
		REFERENCES explanationOfBenefit_Payee (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_CareTeam(
	extensionId TEXT,
	explanationOfBenefit_CareTeamId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_CareTeamId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_CareTeamId),
		REFERENCES explanationOfBenefit_CareTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_SupportingInfo(
	extensionId TEXT,
	explanationOfBenefit_SupportingInfoId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_SupportingInfoId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SupportingInfoId),
		REFERENCES explanationOfBenefit_SupportingInfo (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Diagnosis(
	extensionId TEXT,
	explanationOfBenefit_DiagnosisId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_DiagnosisId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DiagnosisId),
		REFERENCES explanationOfBenefit_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Procedure(
	extensionId TEXT,
	explanationOfBenefit_ProcedureId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_ProcedureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ProcedureId),
		REFERENCES explanationOfBenefit_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Insurance(
	extensionId TEXT,
	explanationOfBenefit_InsuranceId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_InsuranceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_InsuranceId),
		REFERENCES explanationOfBenefit_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Accident(
	extensionId TEXT,
	explanationOfBenefit_AccidentId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_AccidentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AccidentId),
		REFERENCES explanationOfBenefit_Accident (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Item(
	extensionId TEXT,
	explanationOfBenefit_ItemId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ItemId),
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Adjudication(
	extensionId TEXT,
	explanationOfBenefit_AdjudicationId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_AdjudicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AdjudicationId),
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Detail(
	extensionId TEXT,
	explanationOfBenefit_DetailId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_DetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DetailId),
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_SubDetail(
	extensionId TEXT,
	explanationOfBenefit_SubDetailId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_SubDetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetailId),
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_AddItem(
	extensionId TEXT,
	explanationOfBenefit_AddItemId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_AddItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AddItemId),
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Detail1(
	extensionId TEXT,
	explanationOfBenefit_Detail1Id TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_Detail1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_Detail1Id),
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_SubDetail1(
	extensionId TEXT,
	explanationOfBenefit_SubDetail1Id TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_SubDetail1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetail1Id),
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Total(
	extensionId TEXT,
	explanationOfBenefit_TotalId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_TotalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_TotalId),
		REFERENCES explanationOfBenefit_Total (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Payment(
	extensionId TEXT,
	explanationOfBenefit_PaymentId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_PaymentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_PaymentId),
		REFERENCES explanationOfBenefit_Payment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_ProcessNote(
	extensionId TEXT,
	explanationOfBenefit_ProcessNoteId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_ProcessNoteId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ProcessNoteId),
		REFERENCES explanationOfBenefit_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_BenefitBalance(
	extensionId TEXT,
	explanationOfBenefit_BenefitBalanceId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_BenefitBalanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_BenefitBalanceId),
		REFERENCES explanationOfBenefit_BenefitBalance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__explanationOfBenefit_Financial(
	extensionId TEXT,
	explanationOfBenefit_FinancialId TEXT,
	PRIMARY KEY (extensionId, explanationOfBenefit_FinancialId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_FinancialId),
		REFERENCES explanationOfBenefit_Financial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__familyMemberHistory(
	extensionId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (extensionId, familyMemberHistoryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__familyMemberHistory_Condition(
	extensionId TEXT,
	familyMemberHistory_ConditionId TEXT,
	PRIMARY KEY (extensionId, familyMemberHistory_ConditionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistory_ConditionId),
		REFERENCES familyMemberHistory_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__flag(
	extensionId TEXT,
	flagId TEXT,
	PRIMARY KEY (extensionId, flagId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (flagId),
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__goal(
	extensionId TEXT,
	goalId TEXT,
	PRIMARY KEY (extensionId, goalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (goalId),
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__goal_Target(
	extensionId TEXT,
	goal_TargetId TEXT,
	PRIMARY KEY (extensionId, goal_TargetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (goal_TargetId),
		REFERENCES goal_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__graphDefinition(
	extensionId TEXT,
	graphDefinitionId TEXT,
	PRIMARY KEY (extensionId, graphDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinitionId),
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__graphDefinition_Link(
	extensionId TEXT,
	graphDefinition_LinkId TEXT,
	PRIMARY KEY (extensionId, graphDefinition_LinkId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinition_LinkId),
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__graphDefinition_Target(
	extensionId TEXT,
	graphDefinition_TargetId TEXT,
	PRIMARY KEY (extensionId, graphDefinition_TargetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinition_TargetId),
		REFERENCES graphDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__graphDefinition_Compartment(
	extensionId TEXT,
	graphDefinition_CompartmentId TEXT,
	PRIMARY KEY (extensionId, graphDefinition_CompartmentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinition_CompartmentId),
		REFERENCES graphDefinition_Compartment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__group(
	extensionId TEXT,
	groupId TEXT,
	PRIMARY KEY (extensionId, groupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (groupId),
		REFERENCES group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__group_Characteristic(
	extensionId TEXT,
	group_CharacteristicId TEXT,
	PRIMARY KEY (extensionId, group_CharacteristicId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (group_CharacteristicId),
		REFERENCES group_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__group_Member(
	extensionId TEXT,
	group_MemberId TEXT,
	PRIMARY KEY (extensionId, group_MemberId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (group_MemberId),
		REFERENCES group_Member (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__guidanceResponse(
	extensionId TEXT,
	guidanceResponseId TEXT,
	PRIMARY KEY (extensionId, guidanceResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (guidanceResponseId),
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__healthcareService(
	extensionId TEXT,
	healthcareServiceId TEXT,
	PRIMARY KEY (extensionId, healthcareServiceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareServiceId),
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__healthcareService_Eligibility(
	extensionId TEXT,
	healthcareService_EligibilityId TEXT,
	PRIMARY KEY (extensionId, healthcareService_EligibilityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareService_EligibilityId),
		REFERENCES healthcareService_Eligibility (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__healthcareService_AvailableTime(
	extensionId TEXT,
	healthcareService_AvailableTimeId TEXT,
	PRIMARY KEY (extensionId, healthcareService_AvailableTimeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareService_AvailableTimeId),
		REFERENCES healthcareService_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__healthcareService_NotAvailable(
	extensionId TEXT,
	healthcareService_NotAvailableId TEXT,
	PRIMARY KEY (extensionId, healthcareService_NotAvailableId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareService_NotAvailableId),
		REFERENCES healthcareService_NotAvailable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__imagingStudy(
	extensionId TEXT,
	imagingStudyId TEXT,
	PRIMARY KEY (extensionId, imagingStudyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudyId),
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__imagingStudy_Series(
	extensionId TEXT,
	imagingStudy_SeriesId TEXT,
	PRIMARY KEY (extensionId, imagingStudy_SeriesId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudy_SeriesId),
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__imagingStudy_Performer(
	extensionId TEXT,
	imagingStudy_PerformerId TEXT,
	PRIMARY KEY (extensionId, imagingStudy_PerformerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudy_PerformerId),
		REFERENCES imagingStudy_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__imagingStudy_Instance(
	extensionId TEXT,
	imagingStudy_InstanceId TEXT,
	PRIMARY KEY (extensionId, imagingStudy_InstanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudy_InstanceId),
		REFERENCES imagingStudy_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunization(
	extensionId TEXT,
	immunizationId TEXT,
	PRIMARY KEY (extensionId, immunizationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationId),
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunization_Performer(
	extensionId TEXT,
	immunization_PerformerId TEXT,
	PRIMARY KEY (extensionId, immunization_PerformerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunization_PerformerId),
		REFERENCES immunization_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunization_Education(
	extensionId TEXT,
	immunization_EducationId TEXT,
	PRIMARY KEY (extensionId, immunization_EducationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunization_EducationId),
		REFERENCES immunization_Education (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunization_Reaction(
	extensionId TEXT,
	immunization_ReactionId TEXT,
	PRIMARY KEY (extensionId, immunization_ReactionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunization_ReactionId),
		REFERENCES immunization_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunization_ProtocolApplied(
	extensionId TEXT,
	immunization_ProtocolAppliedId TEXT,
	PRIMARY KEY (extensionId, immunization_ProtocolAppliedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunization_ProtocolAppliedId),
		REFERENCES immunization_ProtocolApplied (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunizationEvaluation(
	extensionId TEXT,
	immunizationEvaluationId TEXT,
	PRIMARY KEY (extensionId, immunizationEvaluationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationEvaluationId),
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunizationRecommendation(
	extensionId TEXT,
	immunizationRecommendationId TEXT,
	PRIMARY KEY (extensionId, immunizationRecommendationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationRecommendationId),
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunizationRecommendation_Recommendation(
	extensionId TEXT,
	immunizationRecommendation_RecommendationId TEXT,
	PRIMARY KEY (extensionId, immunizationRecommendation_RecommendationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationRecommendation_RecommendationId),
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__immunizationRecommendation_DateCriterion(
	extensionId TEXT,
	immunizationRecommendation_DateCriterionId TEXT,
	PRIMARY KEY (extensionId, immunizationRecommendation_DateCriterionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationRecommendation_DateCriterionId),
		REFERENCES immunizationRecommendation_DateCriterion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide(
	extensionId TEXT,
	implementationGuideId TEXT,
	PRIMARY KEY (extensionId, implementationGuideId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuideId),
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_DependsOn(
	extensionId TEXT,
	implementationGuide_DependsOnId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_DependsOnId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_DependsOnId),
		REFERENCES implementationGuide_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Global(
	extensionId TEXT,
	implementationGuide_GlobalId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_GlobalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_GlobalId),
		REFERENCES implementationGuide_Global (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Definition(
	extensionId TEXT,
	implementationGuide_DefinitionId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_DefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_DefinitionId),
		REFERENCES implementationGuide_Definition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Grouping(
	extensionId TEXT,
	implementationGuide_GroupingId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_GroupingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_GroupingId),
		REFERENCES implementationGuide_Grouping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Resource(
	extensionId TEXT,
	implementationGuide_ResourceId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_ResourceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_ResourceId),
		REFERENCES implementationGuide_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Page(
	extensionId TEXT,
	implementationGuide_PageId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_PageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_PageId),
		REFERENCES implementationGuide_Page (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Parameter(
	extensionId TEXT,
	implementationGuide_ParameterId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_ParameterId),
		REFERENCES implementationGuide_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Template(
	extensionId TEXT,
	implementationGuide_TemplateId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_TemplateId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_TemplateId),
		REFERENCES implementationGuide_Template (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Manifest(
	extensionId TEXT,
	implementationGuide_ManifestId TEXT,
	PRIMARY KEY (extensionId, implementationGuide_ManifestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_ManifestId),
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Resource1(
	extensionId TEXT,
	implementationGuide_Resource1Id TEXT,
	PRIMARY KEY (extensionId, implementationGuide_Resource1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_Resource1Id),
		REFERENCES implementationGuide_Resource1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__implementationGuide_Page1(
	extensionId TEXT,
	implementationGuide_Page1Id TEXT,
	PRIMARY KEY (extensionId, implementationGuide_Page1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_Page1Id),
		REFERENCES implementationGuide_Page1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan(
	extensionId TEXT,
	insurancePlanId TEXT,
	PRIMARY KEY (extensionId, insurancePlanId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlanId),
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_Contact(
	extensionId TEXT,
	insurancePlan_ContactId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_ContactId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_ContactId),
		REFERENCES insurancePlan_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_Coverage(
	extensionId TEXT,
	insurancePlan_CoverageId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_CoverageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_CoverageId),
		REFERENCES insurancePlan_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_Benefit(
	extensionId TEXT,
	insurancePlan_BenefitId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_BenefitId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_BenefitId),
		REFERENCES insurancePlan_Benefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_Limit(
	extensionId TEXT,
	insurancePlan_LimitId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_LimitId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_LimitId),
		REFERENCES insurancePlan_Limit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_Plan(
	extensionId TEXT,
	insurancePlan_PlanId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_PlanId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_PlanId),
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_GeneralCost(
	extensionId TEXT,
	insurancePlan_GeneralCostId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_GeneralCostId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_GeneralCostId),
		REFERENCES insurancePlan_GeneralCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_SpecificCost(
	extensionId TEXT,
	insurancePlan_SpecificCostId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_SpecificCostId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_SpecificCostId),
		REFERENCES insurancePlan_SpecificCost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_Benefit1(
	extensionId TEXT,
	insurancePlan_Benefit1Id TEXT,
	PRIMARY KEY (extensionId, insurancePlan_Benefit1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_Benefit1Id),
		REFERENCES insurancePlan_Benefit1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__insurancePlan_Cost(
	extensionId TEXT,
	insurancePlan_CostId TEXT,
	PRIMARY KEY (extensionId, insurancePlan_CostId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_CostId),
		REFERENCES insurancePlan_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__invoice(
	extensionId TEXT,
	invoiceId TEXT,
	PRIMARY KEY (extensionId, invoiceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoiceId),
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__invoice_Participant(
	extensionId TEXT,
	invoice_ParticipantId TEXT,
	PRIMARY KEY (extensionId, invoice_ParticipantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoice_ParticipantId),
		REFERENCES invoice_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__invoice_LineItem(
	extensionId TEXT,
	invoice_LineItemId TEXT,
	PRIMARY KEY (extensionId, invoice_LineItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoice_LineItemId),
		REFERENCES invoice_LineItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__invoice_PriceComponent(
	extensionId TEXT,
	invoice_PriceComponentId TEXT,
	PRIMARY KEY (extensionId, invoice_PriceComponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoice_PriceComponentId),
		REFERENCES invoice_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__library(
	extensionId TEXT,
	libraryId TEXT,
	PRIMARY KEY (extensionId, libraryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__linkage(
	extensionId TEXT,
	linkageId TEXT,
	PRIMARY KEY (extensionId, linkageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (linkageId),
		REFERENCES linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__linkage_Item(
	extensionId TEXT,
	linkage_ItemId TEXT,
	PRIMARY KEY (extensionId, linkage_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (linkage_ItemId),
		REFERENCES linkage_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__list(
	extensionId TEXT,
	listId TEXT,
	PRIMARY KEY (extensionId, listId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (listId),
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__list_Entry(
	extensionId TEXT,
	list_EntryId TEXT,
	PRIMARY KEY (extensionId, list_EntryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (list_EntryId),
		REFERENCES list_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__location(
	extensionId TEXT,
	locationId TEXT,
	PRIMARY KEY (extensionId, locationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__location_Position(
	extensionId TEXT,
	location_PositionId TEXT,
	PRIMARY KEY (extensionId, location_PositionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (location_PositionId),
		REFERENCES location_Position (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__location_HoursOfOperation(
	extensionId TEXT,
	location_HoursOfOperationId TEXT,
	PRIMARY KEY (extensionId, location_HoursOfOperationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (location_HoursOfOperationId),
		REFERENCES location_HoursOfOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measure(
	extensionId TEXT,
	measureId TEXT,
	PRIMARY KEY (extensionId, measureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measure_Group(
	extensionId TEXT,
	measure_GroupId TEXT,
	PRIMARY KEY (extensionId, measure_GroupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measure_GroupId),
		REFERENCES measure_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measure_Population(
	extensionId TEXT,
	measure_PopulationId TEXT,
	PRIMARY KEY (extensionId, measure_PopulationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measure_PopulationId),
		REFERENCES measure_Population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measure_Stratifier(
	extensionId TEXT,
	measure_StratifierId TEXT,
	PRIMARY KEY (extensionId, measure_StratifierId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measure_StratifierId),
		REFERENCES measure_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measure_Component(
	extensionId TEXT,
	measure_ComponentId TEXT,
	PRIMARY KEY (extensionId, measure_ComponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measure_ComponentId),
		REFERENCES measure_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measure_SupplementalData(
	extensionId TEXT,
	measure_SupplementalDataId TEXT,
	PRIMARY KEY (extensionId, measure_SupplementalDataId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measure_SupplementalDataId),
		REFERENCES measure_SupplementalData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measureReport(
	extensionId TEXT,
	measureReportId TEXT,
	PRIMARY KEY (extensionId, measureReportId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReportId),
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measureReport_Group(
	extensionId TEXT,
	measureReport_GroupId TEXT,
	PRIMARY KEY (extensionId, measureReport_GroupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReport_GroupId),
		REFERENCES measureReport_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measureReport_Population(
	extensionId TEXT,
	measureReport_PopulationId TEXT,
	PRIMARY KEY (extensionId, measureReport_PopulationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReport_PopulationId),
		REFERENCES measureReport_Population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measureReport_Stratifier(
	extensionId TEXT,
	measureReport_StratifierId TEXT,
	PRIMARY KEY (extensionId, measureReport_StratifierId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReport_StratifierId),
		REFERENCES measureReport_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measureReport_Stratum(
	extensionId TEXT,
	measureReport_StratumId TEXT,
	PRIMARY KEY (extensionId, measureReport_StratumId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReport_StratumId),
		REFERENCES measureReport_Stratum (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measureReport_Component(
	extensionId TEXT,
	measureReport_ComponentId TEXT,
	PRIMARY KEY (extensionId, measureReport_ComponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReport_ComponentId),
		REFERENCES measureReport_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__measureReport_Population1(
	extensionId TEXT,
	measureReport_Population1Id TEXT,
	PRIMARY KEY (extensionId, measureReport_Population1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReport_Population1Id),
		REFERENCES measureReport_Population1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__media(
	extensionId TEXT,
	mediaId TEXT,
	PRIMARY KEY (extensionId, mediaId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (mediaId),
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medication(
	extensionId TEXT,
	medicationId TEXT,
	PRIMARY KEY (extensionId, medicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationId),
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medication_Ingredient(
	extensionId TEXT,
	medication_IngredientId TEXT,
	PRIMARY KEY (extensionId, medication_IngredientId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medication_IngredientId),
		REFERENCES medication_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medication_Batch(
	extensionId TEXT,
	medication_BatchId TEXT,
	PRIMARY KEY (extensionId, medication_BatchId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medication_BatchId),
		REFERENCES medication_Batch (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationAdministration(
	extensionId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (extensionId, medicationAdministrationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationAdministration_Performer(
	extensionId TEXT,
	medicationAdministration_PerformerId TEXT,
	PRIMARY KEY (extensionId, medicationAdministration_PerformerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministration_PerformerId),
		REFERENCES medicationAdministration_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationAdministration_Dosage(
	extensionId TEXT,
	medicationAdministration_DosageId TEXT,
	PRIMARY KEY (extensionId, medicationAdministration_DosageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministration_DosageId),
		REFERENCES medicationAdministration_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationDispense(
	extensionId TEXT,
	medicationDispenseId TEXT,
	PRIMARY KEY (extensionId, medicationDispenseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispenseId),
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationDispense_Performer(
	extensionId TEXT,
	medicationDispense_PerformerId TEXT,
	PRIMARY KEY (extensionId, medicationDispense_PerformerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispense_PerformerId),
		REFERENCES medicationDispense_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationDispense_Substitution(
	extensionId TEXT,
	medicationDispense_SubstitutionId TEXT,
	PRIMARY KEY (extensionId, medicationDispense_SubstitutionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispense_SubstitutionId),
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge(
	extensionId TEXT,
	medicationKnowledgeId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledgeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledgeId),
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_RelatedMedicationKnowledge(
	extensionId TEXT,
	medicationKnowledge_RelatedMedicationKnowledgeId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_RelatedMedicationKnowledgeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_RelatedMedicationKnowledgeId),
		REFERENCES medicationKnowledge_RelatedMedicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Monograph(
	extensionId TEXT,
	medicationKnowledge_MonographId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_MonographId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_MonographId),
		REFERENCES medicationKnowledge_Monograph (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Ingredient(
	extensionId TEXT,
	medicationKnowledge_IngredientId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_IngredientId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_IngredientId),
		REFERENCES medicationKnowledge_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Cost(
	extensionId TEXT,
	medicationKnowledge_CostId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_CostId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_CostId),
		REFERENCES medicationKnowledge_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_MonitoringProgram(
	extensionId TEXT,
	medicationKnowledge_MonitoringProgramId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_MonitoringProgramId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_MonitoringProgramId),
		REFERENCES medicationKnowledge_MonitoringProgram (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_AdministrationGuidelines(
	extensionId TEXT,
	medicationKnowledge_AdministrationGuidelinesId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_AdministrationGuidelinesId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_AdministrationGuidelinesId),
		REFERENCES medicationKnowledge_AdministrationGuidelines (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Dosage(
	extensionId TEXT,
	medicationKnowledge_DosageId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_DosageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_DosageId),
		REFERENCES medicationKnowledge_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_PatientCharacteristics(
	extensionId TEXT,
	medicationKnowledge_PatientCharacteristicsId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_PatientCharacteristicsId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_PatientCharacteristicsId),
		REFERENCES medicationKnowledge_PatientCharacteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_MedicineClassification(
	extensionId TEXT,
	medicationKnowledge_MedicineClassificationId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_MedicineClassificationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_MedicineClassificationId),
		REFERENCES medicationKnowledge_MedicineClassification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Packaging(
	extensionId TEXT,
	medicationKnowledge_PackagingId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_PackagingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_PackagingId),
		REFERENCES medicationKnowledge_Packaging (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_DrugCharacteristic(
	extensionId TEXT,
	medicationKnowledge_DrugCharacteristicId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_DrugCharacteristicId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_DrugCharacteristicId),
		REFERENCES medicationKnowledge_DrugCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Regulatory(
	extensionId TEXT,
	medicationKnowledge_RegulatoryId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_RegulatoryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_RegulatoryId),
		REFERENCES medicationKnowledge_Regulatory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Substitution(
	extensionId TEXT,
	medicationKnowledge_SubstitutionId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_SubstitutionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_SubstitutionId),
		REFERENCES medicationKnowledge_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Schedule(
	extensionId TEXT,
	medicationKnowledge_ScheduleId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_ScheduleId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_ScheduleId),
		REFERENCES medicationKnowledge_Schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_MaxDispense(
	extensionId TEXT,
	medicationKnowledge_MaxDispenseId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_MaxDispenseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_MaxDispenseId),
		REFERENCES medicationKnowledge_MaxDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationKnowledge_Kinetics(
	extensionId TEXT,
	medicationKnowledge_KineticsId TEXT,
	PRIMARY KEY (extensionId, medicationKnowledge_KineticsId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_KineticsId),
		REFERENCES medicationKnowledge_Kinetics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationRequest(
	extensionId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (extensionId, medicationRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationRequest_DispenseRequest(
	extensionId TEXT,
	medicationRequest_DispenseRequestId TEXT,
	PRIMARY KEY (extensionId, medicationRequest_DispenseRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequest_DispenseRequestId),
		REFERENCES medicationRequest_DispenseRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationRequest_InitialFill(
	extensionId TEXT,
	medicationRequest_InitialFillId TEXT,
	PRIMARY KEY (extensionId, medicationRequest_InitialFillId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequest_InitialFillId),
		REFERENCES medicationRequest_InitialFill (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationRequest_Substitution(
	extensionId TEXT,
	medicationRequest_SubstitutionId TEXT,
	PRIMARY KEY (extensionId, medicationRequest_SubstitutionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequest_SubstitutionId),
		REFERENCES medicationRequest_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicationStatement(
	extensionId TEXT,
	medicationStatementId TEXT,
	PRIMARY KEY (extensionId, medicationStatementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationStatementId),
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProduct(
	extensionId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (extensionId, medicinalProductId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProduct_Name(
	extensionId TEXT,
	medicinalProduct_NameId TEXT,
	PRIMARY KEY (extensionId, medicinalProduct_NameId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProduct_NameId),
		REFERENCES medicinalProduct_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProduct_NamePart(
	extensionId TEXT,
	medicinalProduct_NamePartId TEXT,
	PRIMARY KEY (extensionId, medicinalProduct_NamePartId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProduct_NamePartId),
		REFERENCES medicinalProduct_NamePart (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProduct_CountryLanguage(
	extensionId TEXT,
	medicinalProduct_CountryLanguageId TEXT,
	PRIMARY KEY (extensionId, medicinalProduct_CountryLanguageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProduct_CountryLanguageId),
		REFERENCES medicinalProduct_CountryLanguage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProduct_ManufacturingBusinessOperation(
	extensionId TEXT,
	medicinalProduct_ManufacturingBusinessOperationId TEXT,
	PRIMARY KEY (extensionId, medicinalProduct_ManufacturingBusinessOperationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProduct_ManufacturingBusinessOperationId),
		REFERENCES medicinalProduct_ManufacturingBusinessOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProduct_SpecialDesignation(
	extensionId TEXT,
	medicinalProduct_SpecialDesignationId TEXT,
	PRIMARY KEY (extensionId, medicinalProduct_SpecialDesignationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProduct_SpecialDesignationId),
		REFERENCES medicinalProduct_SpecialDesignation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductAuthorization(
	extensionId TEXT,
	medicinalProductAuthorizationId TEXT,
	PRIMARY KEY (extensionId, medicinalProductAuthorizationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorizationId),
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductAuthorization_JurisdictionalAuthorization(
	extensionId TEXT,
	medicinalProductAuthorization_JurisdictionalAuthorizationId TEXT,
	PRIMARY KEY (extensionId, medicinalProductAuthorization_JurisdictionalAuthorizationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorization_JurisdictionalAuthorizationId),
		REFERENCES medicinalProductAuthorization_JurisdictionalAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductAuthorization_Procedure(
	extensionId TEXT,
	medicinalProductAuthorization_ProcedureId TEXT,
	PRIMARY KEY (extensionId, medicinalProductAuthorization_ProcedureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorization_ProcedureId),
		REFERENCES medicinalProductAuthorization_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductContraindication(
	extensionId TEXT,
	medicinalProductContraindicationId TEXT,
	PRIMARY KEY (extensionId, medicinalProductContraindicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductContraindicationId),
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductContraindication_OtherTherapy(
	extensionId TEXT,
	medicinalProductContraindication_OtherTherapyId TEXT,
	PRIMARY KEY (extensionId, medicinalProductContraindication_OtherTherapyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductContraindication_OtherTherapyId),
		REFERENCES medicinalProductContraindication_OtherTherapy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductIndication(
	extensionId TEXT,
	medicinalProductIndicationId TEXT,
	PRIMARY KEY (extensionId, medicinalProductIndicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIndicationId),
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductIndication_OtherTherapy(
	extensionId TEXT,
	medicinalProductIndication_OtherTherapyId TEXT,
	PRIMARY KEY (extensionId, medicinalProductIndication_OtherTherapyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIndication_OtherTherapyId),
		REFERENCES medicinalProductIndication_OtherTherapy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductIngredient(
	extensionId TEXT,
	medicinalProductIngredientId TEXT,
	PRIMARY KEY (extensionId, medicinalProductIngredientId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredientId),
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductIngredient_SpecifiedSubstance(
	extensionId TEXT,
	medicinalProductIngredient_SpecifiedSubstanceId TEXT,
	PRIMARY KEY (extensionId, medicinalProductIngredient_SpecifiedSubstanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_SpecifiedSubstanceId),
		REFERENCES medicinalProductIngredient_SpecifiedSubstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductIngredient_Strength(
	extensionId TEXT,
	medicinalProductIngredient_StrengthId TEXT,
	PRIMARY KEY (extensionId, medicinalProductIngredient_StrengthId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_StrengthId),
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductIngredient_ReferenceStrength(
	extensionId TEXT,
	medicinalProductIngredient_ReferenceStrengthId TEXT,
	PRIMARY KEY (extensionId, medicinalProductIngredient_ReferenceStrengthId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_ReferenceStrengthId),
		REFERENCES medicinalProductIngredient_ReferenceStrength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductIngredient_Substance(
	extensionId TEXT,
	medicinalProductIngredient_SubstanceId TEXT,
	PRIMARY KEY (extensionId, medicinalProductIngredient_SubstanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_SubstanceId),
		REFERENCES medicinalProductIngredient_Substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductInteraction(
	extensionId TEXT,
	medicinalProductInteractionId TEXT,
	PRIMARY KEY (extensionId, medicinalProductInteractionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductInteractionId),
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductInteraction_Interactant(
	extensionId TEXT,
	medicinalProductInteraction_InteractantId TEXT,
	PRIMARY KEY (extensionId, medicinalProductInteraction_InteractantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductInteraction_InteractantId),
		REFERENCES medicinalProductInteraction_Interactant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductManufactured(
	extensionId TEXT,
	medicinalProductManufacturedId TEXT,
	PRIMARY KEY (extensionId, medicinalProductManufacturedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductManufacturedId),
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPackaged(
	extensionId TEXT,
	medicinalProductPackagedId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPackagedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackagedId),
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPackaged_BatchIdentifier(
	extensionId TEXT,
	medicinalProductPackaged_BatchIdentifierId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPackaged_BatchIdentifierId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_BatchIdentifierId),
		REFERENCES medicinalProductPackaged_BatchIdentifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPackaged_PackageItem(
	extensionId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPackaged_PackageItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId),
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPharmaceutical(
	extensionId TEXT,
	medicinalProductPharmaceuticalId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPharmaceuticalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceuticalId),
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPharmaceutical_Characteristics(
	extensionId TEXT,
	medicinalProductPharmaceutical_CharacteristicsId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPharmaceutical_CharacteristicsId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceutical_CharacteristicsId),
		REFERENCES medicinalProductPharmaceutical_Characteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPharmaceutical_RouteOfAdministration(
	extensionId TEXT,
	medicinalProductPharmaceutical_RouteOfAdministrationId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPharmaceutical_RouteOfAdministrationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceutical_RouteOfAdministrationId),
		REFERENCES medicinalProductPharmaceutical_RouteOfAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPharmaceutical_TargetSpecies(
	extensionId TEXT,
	medicinalProductPharmaceutical_TargetSpeciesId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPharmaceutical_TargetSpeciesId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceutical_TargetSpeciesId),
		REFERENCES medicinalProductPharmaceutical_TargetSpecies (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductPharmaceutical_WithdrawalPeriod(
	extensionId TEXT,
	medicinalProductPharmaceutical_WithdrawalPeriodId TEXT,
	PRIMARY KEY (extensionId, medicinalProductPharmaceutical_WithdrawalPeriodId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceutical_WithdrawalPeriodId),
		REFERENCES medicinalProductPharmaceutical_WithdrawalPeriod (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__medicinalProductUndesirableEffect(
	extensionId TEXT,
	medicinalProductUndesirableEffectId TEXT,
	PRIMARY KEY (extensionId, medicinalProductUndesirableEffectId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductUndesirableEffectId),
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__messageDefinition(
	extensionId TEXT,
	messageDefinitionId TEXT,
	PRIMARY KEY (extensionId, messageDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinitionId),
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__messageDefinition_Focus(
	extensionId TEXT,
	messageDefinition_FocusId TEXT,
	PRIMARY KEY (extensionId, messageDefinition_FocusId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinition_FocusId),
		REFERENCES messageDefinition_Focus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__messageDefinition_AllowedResponse(
	extensionId TEXT,
	messageDefinition_AllowedResponseId TEXT,
	PRIMARY KEY (extensionId, messageDefinition_AllowedResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinition_AllowedResponseId),
		REFERENCES messageDefinition_AllowedResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__messageHeader(
	extensionId TEXT,
	messageHeaderId TEXT,
	PRIMARY KEY (extensionId, messageHeaderId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageHeaderId),
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__messageHeader_Destination(
	extensionId TEXT,
	messageHeader_DestinationId TEXT,
	PRIMARY KEY (extensionId, messageHeader_DestinationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageHeader_DestinationId),
		REFERENCES messageHeader_Destination (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__messageHeader_Source(
	extensionId TEXT,
	messageHeader_SourceId TEXT,
	PRIMARY KEY (extensionId, messageHeader_SourceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageHeader_SourceId),
		REFERENCES messageHeader_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__messageHeader_Response(
	extensionId TEXT,
	messageHeader_ResponseId TEXT,
	PRIMARY KEY (extensionId, messageHeader_ResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageHeader_ResponseId),
		REFERENCES messageHeader_Response (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence(
	extensionId TEXT,
	molecularSequenceId TEXT,
	PRIMARY KEY (extensionId, molecularSequenceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequenceId),
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_ReferenceSeq(
	extensionId TEXT,
	molecularSequence_ReferenceSeqId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_ReferenceSeqId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_ReferenceSeqId),
		REFERENCES molecularSequence_ReferenceSeq (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_Variant(
	extensionId TEXT,
	molecularSequence_VariantId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_VariantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_VariantId),
		REFERENCES molecularSequence_Variant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_Quality(
	extensionId TEXT,
	molecularSequence_QualityId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_QualityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_QualityId),
		REFERENCES molecularSequence_Quality (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_Roc(
	extensionId TEXT,
	molecularSequence_RocId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_RocId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_RocId),
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_Repository(
	extensionId TEXT,
	molecularSequence_RepositoryId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_RepositoryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_RepositoryId),
		REFERENCES molecularSequence_Repository (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_StructureVariant(
	extensionId TEXT,
	molecularSequence_StructureVariantId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_StructureVariantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_StructureVariantId),
		REFERENCES molecularSequence_StructureVariant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_Outer(
	extensionId TEXT,
	molecularSequence_OuterId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_OuterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_OuterId),
		REFERENCES molecularSequence_Outer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__molecularSequence_Inner(
	extensionId TEXT,
	molecularSequence_InnerId TEXT,
	PRIMARY KEY (extensionId, molecularSequence_InnerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_InnerId),
		REFERENCES molecularSequence_Inner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__namingSystem(
	extensionId TEXT,
	namingSystemId TEXT,
	PRIMARY KEY (extensionId, namingSystemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (namingSystemId),
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__namingSystem_UniqueId(
	extensionId TEXT,
	namingSystem_UniqueIdId TEXT,
	PRIMARY KEY (extensionId, namingSystem_UniqueIdId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (namingSystem_UniqueIdId),
		REFERENCES namingSystem_UniqueId (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__nutritionOrder(
	extensionId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (extensionId, nutritionOrderId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__nutritionOrder_OralDiet(
	extensionId TEXT,
	nutritionOrder_OralDietId TEXT,
	PRIMARY KEY (extensionId, nutritionOrder_OralDietId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_OralDietId),
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__nutritionOrder_Nutrient(
	extensionId TEXT,
	nutritionOrder_NutrientId TEXT,
	PRIMARY KEY (extensionId, nutritionOrder_NutrientId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_NutrientId),
		REFERENCES nutritionOrder_Nutrient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__nutritionOrder_Texture(
	extensionId TEXT,
	nutritionOrder_TextureId TEXT,
	PRIMARY KEY (extensionId, nutritionOrder_TextureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_TextureId),
		REFERENCES nutritionOrder_Texture (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__nutritionOrder_Supplement(
	extensionId TEXT,
	nutritionOrder_SupplementId TEXT,
	PRIMARY KEY (extensionId, nutritionOrder_SupplementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_SupplementId),
		REFERENCES nutritionOrder_Supplement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__nutritionOrder_EnteralFormula(
	extensionId TEXT,
	nutritionOrder_EnteralFormulaId TEXT,
	PRIMARY KEY (extensionId, nutritionOrder_EnteralFormulaId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_EnteralFormulaId),
		REFERENCES nutritionOrder_EnteralFormula (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__nutritionOrder_Administration(
	extensionId TEXT,
	nutritionOrder_AdministrationId TEXT,
	PRIMARY KEY (extensionId, nutritionOrder_AdministrationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_AdministrationId),
		REFERENCES nutritionOrder_Administration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__observation(
	extensionId TEXT,
	observationId TEXT,
	PRIMARY KEY (extensionId, observationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationId),
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__observation_ReferenceRange(
	extensionId TEXT,
	observation_ReferenceRangeId TEXT,
	PRIMARY KEY (extensionId, observation_ReferenceRangeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observation_ReferenceRangeId),
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__observation_Component(
	extensionId TEXT,
	observation_ComponentId TEXT,
	PRIMARY KEY (extensionId, observation_ComponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observation_ComponentId),
		REFERENCES observation_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__observationDefinition(
	extensionId TEXT,
	observationDefinitionId TEXT,
	PRIMARY KEY (extensionId, observationDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinitionId),
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__observationDefinition_QuantitativeDetails(
	extensionId TEXT,
	observationDefinition_QuantitativeDetailsId TEXT,
	PRIMARY KEY (extensionId, observationDefinition_QuantitativeDetailsId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinition_QuantitativeDetailsId),
		REFERENCES observationDefinition_QuantitativeDetails (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__observationDefinition_QualifiedInterval(
	extensionId TEXT,
	observationDefinition_QualifiedIntervalId TEXT,
	PRIMARY KEY (extensionId, observationDefinition_QualifiedIntervalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinition_QualifiedIntervalId),
		REFERENCES observationDefinition_QualifiedInterval (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__operationDefinition(
	extensionId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (extensionId, operationDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__operationDefinition_Parameter(
	extensionId TEXT,
	operationDefinition_ParameterId TEXT,
	PRIMARY KEY (extensionId, operationDefinition_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_ParameterId),
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__operationDefinition_Binding(
	extensionId TEXT,
	operationDefinition_BindingId TEXT,
	PRIMARY KEY (extensionId, operationDefinition_BindingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_BindingId),
		REFERENCES operationDefinition_Binding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__operationDefinition_ReferencedFrom(
	extensionId TEXT,
	operationDefinition_ReferencedFromId TEXT,
	PRIMARY KEY (extensionId, operationDefinition_ReferencedFromId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_ReferencedFromId),
		REFERENCES operationDefinition_ReferencedFrom (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__operationDefinition_Overload(
	extensionId TEXT,
	operationDefinition_OverloadId TEXT,
	PRIMARY KEY (extensionId, operationDefinition_OverloadId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_OverloadId),
		REFERENCES operationDefinition_Overload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__operationOutcome(
	extensionId TEXT,
	operationOutcomeId TEXT,
	PRIMARY KEY (extensionId, operationOutcomeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationOutcomeId),
		REFERENCES operationOutcome (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__operationOutcome_Issue(
	extensionId TEXT,
	operationOutcome_IssueId TEXT,
	PRIMARY KEY (extensionId, operationOutcome_IssueId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationOutcome_IssueId),
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__organization(
	extensionId TEXT,
	organizationId TEXT,
	PRIMARY KEY (extensionId, organizationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__organization_Contact(
	extensionId TEXT,
	organization_ContactId TEXT,
	PRIMARY KEY (extensionId, organization_ContactId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organization_ContactId),
		REFERENCES organization_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__organizationAffiliation(
	extensionId TEXT,
	organizationAffiliationId TEXT,
	PRIMARY KEY (extensionId, organizationAffiliationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationAffiliationId),
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__parameters_Parameter(
	extensionId TEXT,
	parameters_ParameterId TEXT,
	PRIMARY KEY (extensionId, parameters_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (parameters_ParameterId),
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__patient(
	extensionId TEXT,
	patientId TEXT,
	PRIMARY KEY (extensionId, patientId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__patient_Contact(
	extensionId TEXT,
	patient_ContactId TEXT,
	PRIMARY KEY (extensionId, patient_ContactId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patient_ContactId),
		REFERENCES patient_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__patient_Communication(
	extensionId TEXT,
	patient_CommunicationId TEXT,
	PRIMARY KEY (extensionId, patient_CommunicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patient_CommunicationId),
		REFERENCES patient_Communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__patient_Link(
	extensionId TEXT,
	patient_LinkId TEXT,
	PRIMARY KEY (extensionId, patient_LinkId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patient_LinkId),
		REFERENCES patient_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__paymentNotice(
	extensionId TEXT,
	paymentNoticeId TEXT,
	PRIMARY KEY (extensionId, paymentNoticeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentNoticeId),
		REFERENCES paymentNotice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__paymentReconciliation(
	extensionId TEXT,
	paymentReconciliationId TEXT,
	PRIMARY KEY (extensionId, paymentReconciliationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentReconciliationId),
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__paymentReconciliation_Detail(
	extensionId TEXT,
	paymentReconciliation_DetailId TEXT,
	PRIMARY KEY (extensionId, paymentReconciliation_DetailId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentReconciliation_DetailId),
		REFERENCES paymentReconciliation_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__paymentReconciliation_ProcessNote(
	extensionId TEXT,
	paymentReconciliation_ProcessNoteId TEXT,
	PRIMARY KEY (extensionId, paymentReconciliation_ProcessNoteId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentReconciliation_ProcessNoteId),
		REFERENCES paymentReconciliation_ProcessNote (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__person(
	extensionId TEXT,
	personId TEXT,
	PRIMARY KEY (extensionId, personId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (personId),
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__person_Link(
	extensionId TEXT,
	person_LinkId TEXT,
	PRIMARY KEY (extensionId, person_LinkId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (person_LinkId),
		REFERENCES person_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition(
	extensionId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (extensionId, planDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition_Goal(
	extensionId TEXT,
	planDefinition_GoalId TEXT,
	PRIMARY KEY (extensionId, planDefinition_GoalId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_GoalId),
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition_Target(
	extensionId TEXT,
	planDefinition_TargetId TEXT,
	PRIMARY KEY (extensionId, planDefinition_TargetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_TargetId),
		REFERENCES planDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition_Action(
	extensionId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (extensionId, planDefinition_ActionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition_Condition(
	extensionId TEXT,
	planDefinition_ConditionId TEXT,
	PRIMARY KEY (extensionId, planDefinition_ConditionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ConditionId),
		REFERENCES planDefinition_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition_RelatedAction(
	extensionId TEXT,
	planDefinition_RelatedActionId TEXT,
	PRIMARY KEY (extensionId, planDefinition_RelatedActionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_RelatedActionId),
		REFERENCES planDefinition_RelatedAction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition_Participant(
	extensionId TEXT,
	planDefinition_ParticipantId TEXT,
	PRIMARY KEY (extensionId, planDefinition_ParticipantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ParticipantId),
		REFERENCES planDefinition_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__planDefinition_DynamicValue(
	extensionId TEXT,
	planDefinition_DynamicValueId TEXT,
	PRIMARY KEY (extensionId, planDefinition_DynamicValueId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_DynamicValueId),
		REFERENCES planDefinition_DynamicValue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__practitioner(
	extensionId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (extensionId, practitionerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__practitioner_Qualification(
	extensionId TEXT,
	practitioner_QualificationId TEXT,
	PRIMARY KEY (extensionId, practitioner_QualificationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitioner_QualificationId),
		REFERENCES practitioner_Qualification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__practitionerRole(
	extensionId TEXT,
	practitionerRoleId TEXT,
	PRIMARY KEY (extensionId, practitionerRoleId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRoleId),
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__practitionerRole_AvailableTime(
	extensionId TEXT,
	practitionerRole_AvailableTimeId TEXT,
	PRIMARY KEY (extensionId, practitionerRole_AvailableTimeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRole_AvailableTimeId),
		REFERENCES practitionerRole_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__practitionerRole_NotAvailable(
	extensionId TEXT,
	practitionerRole_NotAvailableId TEXT,
	PRIMARY KEY (extensionId, practitionerRole_NotAvailableId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRole_NotAvailableId),
		REFERENCES practitionerRole_NotAvailable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__procedure(
	extensionId TEXT,
	procedureId TEXT,
	PRIMARY KEY (extensionId, procedureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__procedure_Performer(
	extensionId TEXT,
	procedure_PerformerId TEXT,
	PRIMARY KEY (extensionId, procedure_PerformerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedure_PerformerId),
		REFERENCES procedure_Performer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__procedure_FocalDevice(
	extensionId TEXT,
	procedure_FocalDeviceId TEXT,
	PRIMARY KEY (extensionId, procedure_FocalDeviceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedure_FocalDeviceId),
		REFERENCES procedure_FocalDevice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__provenance(
	extensionId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (extensionId, provenanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__provenance_Agent(
	extensionId TEXT,
	provenance_AgentId TEXT,
	PRIMARY KEY (extensionId, provenance_AgentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenance_AgentId),
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__provenance_Entity(
	extensionId TEXT,
	provenance_EntityId TEXT,
	PRIMARY KEY (extensionId, provenance_EntityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenance_EntityId),
		REFERENCES provenance_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaire(
	extensionId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (extensionId, questionnaireId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaire_Item(
	extensionId TEXT,
	questionnaire_ItemId TEXT,
	PRIMARY KEY (extensionId, questionnaire_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_ItemId),
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaire_EnableWhen(
	extensionId TEXT,
	questionnaire_EnableWhenId TEXT,
	PRIMARY KEY (extensionId, questionnaire_EnableWhenId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_EnableWhenId),
		REFERENCES questionnaire_EnableWhen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaire_AnswerOption(
	extensionId TEXT,
	questionnaire_AnswerOptionId TEXT,
	PRIMARY KEY (extensionId, questionnaire_AnswerOptionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_AnswerOptionId),
		REFERENCES questionnaire_AnswerOption (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaire_Initial(
	extensionId TEXT,
	questionnaire_InitialId TEXT,
	PRIMARY KEY (extensionId, questionnaire_InitialId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_InitialId),
		REFERENCES questionnaire_Initial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaireResponse(
	extensionId TEXT,
	questionnaireResponseId TEXT,
	PRIMARY KEY (extensionId, questionnaireResponseId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponseId),
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaireResponse_Item(
	extensionId TEXT,
	questionnaireResponse_ItemId TEXT,
	PRIMARY KEY (extensionId, questionnaireResponse_ItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponse_ItemId),
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__questionnaireResponse_Answer(
	extensionId TEXT,
	questionnaireResponse_AnswerId TEXT,
	PRIMARY KEY (extensionId, questionnaireResponse_AnswerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponse_AnswerId),
		REFERENCES questionnaireResponse_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__relatedPerson(
	extensionId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (extensionId, relatedPersonId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__relatedPerson_Communication(
	extensionId TEXT,
	relatedPerson_CommunicationId TEXT,
	PRIMARY KEY (extensionId, relatedPerson_CommunicationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPerson_CommunicationId),
		REFERENCES relatedPerson_Communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__requestGroup(
	extensionId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (extensionId, requestGroupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__requestGroup_Action(
	extensionId TEXT,
	requestGroup_ActionId TEXT,
	PRIMARY KEY (extensionId, requestGroup_ActionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ActionId),
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__requestGroup_Condition(
	extensionId TEXT,
	requestGroup_ConditionId TEXT,
	PRIMARY KEY (extensionId, requestGroup_ConditionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ConditionId),
		REFERENCES requestGroup_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__requestGroup_RelatedAction(
	extensionId TEXT,
	requestGroup_RelatedActionId TEXT,
	PRIMARY KEY (extensionId, requestGroup_RelatedActionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_RelatedActionId),
		REFERENCES requestGroup_RelatedAction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__researchDefinition(
	extensionId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (extensionId, researchDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__researchElementDefinition(
	extensionId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (extensionId, researchElementDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__researchElementDefinition_Characteristic(
	extensionId TEXT,
	researchElementDefinition_CharacteristicId TEXT,
	PRIMARY KEY (extensionId, researchElementDefinition_CharacteristicId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinition_CharacteristicId),
		REFERENCES researchElementDefinition_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__researchStudy(
	extensionId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (extensionId, researchStudyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__researchStudy_Arm(
	extensionId TEXT,
	researchStudy_ArmId TEXT,
	PRIMARY KEY (extensionId, researchStudy_ArmId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudy_ArmId),
		REFERENCES researchStudy_Arm (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__researchStudy_Objective(
	extensionId TEXT,
	researchStudy_ObjectiveId TEXT,
	PRIMARY KEY (extensionId, researchStudy_ObjectiveId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudy_ObjectiveId),
		REFERENCES researchStudy_Objective (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__researchSubject(
	extensionId TEXT,
	researchSubjectId TEXT,
	PRIMARY KEY (extensionId, researchSubjectId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchSubjectId),
		REFERENCES researchSubject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskAssessment(
	extensionId TEXT,
	riskAssessmentId TEXT,
	PRIMARY KEY (extensionId, riskAssessmentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskAssessmentId),
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskAssessment_Prediction(
	extensionId TEXT,
	riskAssessment_PredictionId TEXT,
	PRIMARY KEY (extensionId, riskAssessment_PredictionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskAssessment_PredictionId),
		REFERENCES riskAssessment_Prediction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskEvidenceSynthesis(
	extensionId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (extensionId, riskEvidenceSynthesisId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskEvidenceSynthesis_SampleSize(
	extensionId TEXT,
	riskEvidenceSynthesis_SampleSizeId TEXT,
	PRIMARY KEY (extensionId, riskEvidenceSynthesis_SampleSizeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_SampleSizeId),
		REFERENCES riskEvidenceSynthesis_SampleSize (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskEvidenceSynthesis_RiskEstimate(
	extensionId TEXT,
	riskEvidenceSynthesis_RiskEstimateId TEXT,
	PRIMARY KEY (extensionId, riskEvidenceSynthesis_RiskEstimateId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_RiskEstimateId),
		REFERENCES riskEvidenceSynthesis_RiskEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskEvidenceSynthesis_PrecisionEstimate(
	extensionId TEXT,
	riskEvidenceSynthesis_PrecisionEstimateId TEXT,
	PRIMARY KEY (extensionId, riskEvidenceSynthesis_PrecisionEstimateId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_PrecisionEstimateId),
		REFERENCES riskEvidenceSynthesis_PrecisionEstimate (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskEvidenceSynthesis_Certainty(
	extensionId TEXT,
	riskEvidenceSynthesis_CertaintyId TEXT,
	PRIMARY KEY (extensionId, riskEvidenceSynthesis_CertaintyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_CertaintyId),
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__riskEvidenceSynthesis_CertaintySubcomponent(
	extensionId TEXT,
	riskEvidenceSynthesis_CertaintySubcomponentId TEXT,
	PRIMARY KEY (extensionId, riskEvidenceSynthesis_CertaintySubcomponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_CertaintySubcomponentId),
		REFERENCES riskEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__schedule(
	extensionId TEXT,
	scheduleId TEXT,
	PRIMARY KEY (extensionId, scheduleId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (scheduleId),
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__searchParameter(
	extensionId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (extensionId, searchParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__searchParameter_Component(
	extensionId TEXT,
	searchParameter_ComponentId TEXT,
	PRIMARY KEY (extensionId, searchParameter_ComponentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameter_ComponentId),
		REFERENCES searchParameter_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__serviceRequest(
	extensionId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (extensionId, serviceRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__slot(
	extensionId TEXT,
	slotId TEXT,
	PRIMARY KEY (extensionId, slotId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (slotId),
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimen(
	extensionId TEXT,
	specimenId TEXT,
	PRIMARY KEY (extensionId, specimenId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenId),
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimen_Collection(
	extensionId TEXT,
	specimen_CollectionId TEXT,
	PRIMARY KEY (extensionId, specimen_CollectionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimen_CollectionId),
		REFERENCES specimen_Collection (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimen_Processing(
	extensionId TEXT,
	specimen_ProcessingId TEXT,
	PRIMARY KEY (extensionId, specimen_ProcessingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimen_ProcessingId),
		REFERENCES specimen_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimen_Container(
	extensionId TEXT,
	specimen_ContainerId TEXT,
	PRIMARY KEY (extensionId, specimen_ContainerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimen_ContainerId),
		REFERENCES specimen_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimenDefinition(
	extensionId TEXT,
	specimenDefinitionId TEXT,
	PRIMARY KEY (extensionId, specimenDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinitionId),
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimenDefinition_TypeTested(
	extensionId TEXT,
	specimenDefinition_TypeTestedId TEXT,
	PRIMARY KEY (extensionId, specimenDefinition_TypeTestedId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinition_TypeTestedId),
		REFERENCES specimenDefinition_TypeTested (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimenDefinition_Container(
	extensionId TEXT,
	specimenDefinition_ContainerId TEXT,
	PRIMARY KEY (extensionId, specimenDefinition_ContainerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinition_ContainerId),
		REFERENCES specimenDefinition_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimenDefinition_Additive(
	extensionId TEXT,
	specimenDefinition_AdditiveId TEXT,
	PRIMARY KEY (extensionId, specimenDefinition_AdditiveId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinition_AdditiveId),
		REFERENCES specimenDefinition_Additive (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__specimenDefinition_Handling(
	extensionId TEXT,
	specimenDefinition_HandlingId TEXT,
	PRIMARY KEY (extensionId, specimenDefinition_HandlingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinition_HandlingId),
		REFERENCES specimenDefinition_Handling (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureDefinition(
	extensionId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (extensionId, structureDefinitionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureDefinition_Mapping(
	extensionId TEXT,
	structureDefinition_MappingId TEXT,
	PRIMARY KEY (extensionId, structureDefinition_MappingId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinition_MappingId),
		REFERENCES structureDefinition_Mapping (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureDefinition_Context(
	extensionId TEXT,
	structureDefinition_ContextId TEXT,
	PRIMARY KEY (extensionId, structureDefinition_ContextId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinition_ContextId),
		REFERENCES structureDefinition_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureDefinition_Snapshot(
	extensionId TEXT,
	structureDefinition_SnapshotId TEXT,
	PRIMARY KEY (extensionId, structureDefinition_SnapshotId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinition_SnapshotId),
		REFERENCES structureDefinition_Snapshot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureDefinition_Differential(
	extensionId TEXT,
	structureDefinition_DifferentialId TEXT,
	PRIMARY KEY (extensionId, structureDefinition_DifferentialId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinition_DifferentialId),
		REFERENCES structureDefinition_Differential (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap(
	extensionId TEXT,
	structureMapId TEXT,
	PRIMARY KEY (extensionId, structureMapId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMapId),
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Structure(
	extensionId TEXT,
	structureMap_StructureId TEXT,
	PRIMARY KEY (extensionId, structureMap_StructureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_StructureId),
		REFERENCES structureMap_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Group(
	extensionId TEXT,
	structureMap_GroupId TEXT,
	PRIMARY KEY (extensionId, structureMap_GroupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_GroupId),
		REFERENCES structureMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Input(
	extensionId TEXT,
	structureMap_InputId TEXT,
	PRIMARY KEY (extensionId, structureMap_InputId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_InputId),
		REFERENCES structureMap_Input (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Rule(
	extensionId TEXT,
	structureMap_RuleId TEXT,
	PRIMARY KEY (extensionId, structureMap_RuleId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_RuleId),
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Source(
	extensionId TEXT,
	structureMap_SourceId TEXT,
	PRIMARY KEY (extensionId, structureMap_SourceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_SourceId),
		REFERENCES structureMap_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Target(
	extensionId TEXT,
	structureMap_TargetId TEXT,
	PRIMARY KEY (extensionId, structureMap_TargetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_TargetId),
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Parameter(
	extensionId TEXT,
	structureMap_ParameterId TEXT,
	PRIMARY KEY (extensionId, structureMap_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_ParameterId),
		REFERENCES structureMap_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__structureMap_Dependent(
	extensionId TEXT,
	structureMap_DependentId TEXT,
	PRIMARY KEY (extensionId, structureMap_DependentId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_DependentId),
		REFERENCES structureMap_Dependent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__subscription(
	extensionId TEXT,
	subscriptionId TEXT,
	PRIMARY KEY (extensionId, subscriptionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (subscriptionId),
		REFERENCES subscription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__subscription_Channel(
	extensionId TEXT,
	subscription_ChannelId TEXT,
	PRIMARY KEY (extensionId, subscription_ChannelId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (subscription_ChannelId),
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substance(
	extensionId TEXT,
	substanceId TEXT,
	PRIMARY KEY (extensionId, substanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceId),
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substance_Instance(
	extensionId TEXT,
	substance_InstanceId TEXT,
	PRIMARY KEY (extensionId, substance_InstanceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substance_InstanceId),
		REFERENCES substance_Instance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substance_Ingredient(
	extensionId TEXT,
	substance_IngredientId TEXT,
	PRIMARY KEY (extensionId, substance_IngredientId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substance_IngredientId),
		REFERENCES substance_Ingredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceNucleicAcid(
	extensionId TEXT,
	substanceNucleicAcidId TEXT,
	PRIMARY KEY (extensionId, substanceNucleicAcidId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceNucleicAcidId),
		REFERENCES substanceNucleicAcid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceNucleicAcid_Subunit(
	extensionId TEXT,
	substanceNucleicAcid_SubunitId TEXT,
	PRIMARY KEY (extensionId, substanceNucleicAcid_SubunitId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceNucleicAcid_SubunitId),
		REFERENCES substanceNucleicAcid_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceNucleicAcid_Linkage(
	extensionId TEXT,
	substanceNucleicAcid_LinkageId TEXT,
	PRIMARY KEY (extensionId, substanceNucleicAcid_LinkageId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceNucleicAcid_LinkageId),
		REFERENCES substanceNucleicAcid_Linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceNucleicAcid_Sugar(
	extensionId TEXT,
	substanceNucleicAcid_SugarId TEXT,
	PRIMARY KEY (extensionId, substanceNucleicAcid_SugarId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceNucleicAcid_SugarId),
		REFERENCES substanceNucleicAcid_Sugar (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substancePolymer(
	extensionId TEXT,
	substancePolymerId TEXT,
	PRIMARY KEY (extensionId, substancePolymerId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymerId),
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substancePolymer_MonomerSet(
	extensionId TEXT,
	substancePolymer_MonomerSetId TEXT,
	PRIMARY KEY (extensionId, substancePolymer_MonomerSetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymer_MonomerSetId),
		REFERENCES substancePolymer_MonomerSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substancePolymer_StartingMaterial(
	extensionId TEXT,
	substancePolymer_StartingMaterialId TEXT,
	PRIMARY KEY (extensionId, substancePolymer_StartingMaterialId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymer_StartingMaterialId),
		REFERENCES substancePolymer_StartingMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substancePolymer_Repeat(
	extensionId TEXT,
	substancePolymer_RepeatId TEXT,
	PRIMARY KEY (extensionId, substancePolymer_RepeatId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymer_RepeatId),
		REFERENCES substancePolymer_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substancePolymer_RepeatUnit(
	extensionId TEXT,
	substancePolymer_RepeatUnitId TEXT,
	PRIMARY KEY (extensionId, substancePolymer_RepeatUnitId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymer_RepeatUnitId),
		REFERENCES substancePolymer_RepeatUnit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substancePolymer_DegreeOfPolymerisation(
	extensionId TEXT,
	substancePolymer_DegreeOfPolymerisationId TEXT,
	PRIMARY KEY (extensionId, substancePolymer_DegreeOfPolymerisationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymer_DegreeOfPolymerisationId),
		REFERENCES substancePolymer_DegreeOfPolymerisation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substancePolymer_StructuralRepresentation(
	extensionId TEXT,
	substancePolymer_StructuralRepresentationId TEXT,
	PRIMARY KEY (extensionId, substancePolymer_StructuralRepresentationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymer_StructuralRepresentationId),
		REFERENCES substancePolymer_StructuralRepresentation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceProtein(
	extensionId TEXT,
	substanceProteinId TEXT,
	PRIMARY KEY (extensionId, substanceProteinId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceProteinId),
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceProtein_Subunit(
	extensionId TEXT,
	substanceProtein_SubunitId TEXT,
	PRIMARY KEY (extensionId, substanceProtein_SubunitId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceProtein_SubunitId),
		REFERENCES substanceProtein_Subunit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceReferenceInformation(
	extensionId TEXT,
	substanceReferenceInformationId TEXT,
	PRIMARY KEY (extensionId, substanceReferenceInformationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformationId),
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceReferenceInformation_Gene(
	extensionId TEXT,
	substanceReferenceInformation_GeneId TEXT,
	PRIMARY KEY (extensionId, substanceReferenceInformation_GeneId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_GeneId),
		REFERENCES substanceReferenceInformation_Gene (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceReferenceInformation_GeneElement(
	extensionId TEXT,
	substanceReferenceInformation_GeneElementId TEXT,
	PRIMARY KEY (extensionId, substanceReferenceInformation_GeneElementId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_GeneElementId),
		REFERENCES substanceReferenceInformation_GeneElement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceReferenceInformation_Classification(
	extensionId TEXT,
	substanceReferenceInformation_ClassificationId TEXT,
	PRIMARY KEY (extensionId, substanceReferenceInformation_ClassificationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_ClassificationId),
		REFERENCES substanceReferenceInformation_Classification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceReferenceInformation_Target(
	extensionId TEXT,
	substanceReferenceInformation_TargetId TEXT,
	PRIMARY KEY (extensionId, substanceReferenceInformation_TargetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_TargetId),
		REFERENCES substanceReferenceInformation_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSourceMaterial(
	extensionId TEXT,
	substanceSourceMaterialId TEXT,
	PRIMARY KEY (extensionId, substanceSourceMaterialId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterialId),
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSourceMaterial_FractionDescription(
	extensionId TEXT,
	substanceSourceMaterial_FractionDescriptionId TEXT,
	PRIMARY KEY (extensionId, substanceSourceMaterial_FractionDescriptionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterial_FractionDescriptionId),
		REFERENCES substanceSourceMaterial_FractionDescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSourceMaterial_Organism(
	extensionId TEXT,
	substanceSourceMaterial_OrganismId TEXT,
	PRIMARY KEY (extensionId, substanceSourceMaterial_OrganismId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterial_OrganismId),
		REFERENCES substanceSourceMaterial_Organism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSourceMaterial_Author(
	extensionId TEXT,
	substanceSourceMaterial_AuthorId TEXT,
	PRIMARY KEY (extensionId, substanceSourceMaterial_AuthorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterial_AuthorId),
		REFERENCES substanceSourceMaterial_Author (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSourceMaterial_Hybrid(
	extensionId TEXT,
	substanceSourceMaterial_HybridId TEXT,
	PRIMARY KEY (extensionId, substanceSourceMaterial_HybridId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterial_HybridId),
		REFERENCES substanceSourceMaterial_Hybrid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSourceMaterial_OrganismGeneral(
	extensionId TEXT,
	substanceSourceMaterial_OrganismGeneralId TEXT,
	PRIMARY KEY (extensionId, substanceSourceMaterial_OrganismGeneralId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterial_OrganismGeneralId),
		REFERENCES substanceSourceMaterial_OrganismGeneral (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSourceMaterial_PartDescription(
	extensionId TEXT,
	substanceSourceMaterial_PartDescriptionId TEXT,
	PRIMARY KEY (extensionId, substanceSourceMaterial_PartDescriptionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterial_PartDescriptionId),
		REFERENCES substanceSourceMaterial_PartDescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification(
	extensionId TEXT,
	substanceSpecificationId TEXT,
	PRIMARY KEY (extensionId, substanceSpecificationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecificationId),
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Moiety(
	extensionId TEXT,
	substanceSpecification_MoietyId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_MoietyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_MoietyId),
		REFERENCES substanceSpecification_Moiety (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Property(
	extensionId TEXT,
	substanceSpecification_PropertyId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_PropertyId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_PropertyId),
		REFERENCES substanceSpecification_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Structure(
	extensionId TEXT,
	substanceSpecification_StructureId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_StructureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_StructureId),
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Isotope(
	extensionId TEXT,
	substanceSpecification_IsotopeId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_IsotopeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_IsotopeId),
		REFERENCES substanceSpecification_Isotope (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_MolecularWeight(
	extensionId TEXT,
	substanceSpecification_MolecularWeightId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_MolecularWeightId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_MolecularWeightId),
		REFERENCES substanceSpecification_MolecularWeight (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Representation(
	extensionId TEXT,
	substanceSpecification_RepresentationId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_RepresentationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_RepresentationId),
		REFERENCES substanceSpecification_Representation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Code(
	extensionId TEXT,
	substanceSpecification_CodeId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_CodeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_CodeId),
		REFERENCES substanceSpecification_Code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Name(
	extensionId TEXT,
	substanceSpecification_NameId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_NameId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_NameId),
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Official(
	extensionId TEXT,
	substanceSpecification_OfficialId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_OfficialId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_OfficialId),
		REFERENCES substanceSpecification_Official (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__substanceSpecification_Relationship(
	extensionId TEXT,
	substanceSpecification_RelationshipId TEXT,
	PRIMARY KEY (extensionId, substanceSpecification_RelationshipId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_RelationshipId),
		REFERENCES substanceSpecification_Relationship (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__supplyDelivery(
	extensionId TEXT,
	supplyDeliveryId TEXT,
	PRIMARY KEY (extensionId, supplyDeliveryId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyDeliveryId),
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__supplyDelivery_SuppliedItem(
	extensionId TEXT,
	supplyDelivery_SuppliedItemId TEXT,
	PRIMARY KEY (extensionId, supplyDelivery_SuppliedItemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyDelivery_SuppliedItemId),
		REFERENCES supplyDelivery_SuppliedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__supplyRequest(
	extensionId TEXT,
	supplyRequestId TEXT,
	PRIMARY KEY (extensionId, supplyRequestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyRequestId),
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__supplyRequest_Parameter(
	extensionId TEXT,
	supplyRequest_ParameterId TEXT,
	PRIMARY KEY (extensionId, supplyRequest_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyRequest_ParameterId),
		REFERENCES supplyRequest_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__task(
	extensionId TEXT,
	taskId TEXT,
	PRIMARY KEY (extensionId, taskId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (taskId),
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__task_Restriction(
	extensionId TEXT,
	task_RestrictionId TEXT,
	PRIMARY KEY (extensionId, task_RestrictionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (task_RestrictionId),
		REFERENCES task_Restriction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__task_Input(
	extensionId TEXT,
	task_InputId TEXT,
	PRIMARY KEY (extensionId, task_InputId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (task_InputId),
		REFERENCES task_Input (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__task_Output(
	extensionId TEXT,
	task_OutputId TEXT,
	PRIMARY KEY (extensionId, task_OutputId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (task_OutputId),
		REFERENCES task_Output (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities(
	extensionId TEXT,
	terminologyCapabilitiesId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilitiesId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilitiesId),
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Software(
	extensionId TEXT,
	terminologyCapabilities_SoftwareId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_SoftwareId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_SoftwareId),
		REFERENCES terminologyCapabilities_Software (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Implementation(
	extensionId TEXT,
	terminologyCapabilities_ImplementationId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_ImplementationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_ImplementationId),
		REFERENCES terminologyCapabilities_Implementation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_CodeSystem(
	extensionId TEXT,
	terminologyCapabilities_CodeSystemId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_CodeSystemId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_CodeSystemId),
		REFERENCES terminologyCapabilities_CodeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Version(
	extensionId TEXT,
	terminologyCapabilities_VersionId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_VersionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_VersionId),
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Filter(
	extensionId TEXT,
	terminologyCapabilities_FilterId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_FilterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_FilterId),
		REFERENCES terminologyCapabilities_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Expansion(
	extensionId TEXT,
	terminologyCapabilities_ExpansionId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_ExpansionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_ExpansionId),
		REFERENCES terminologyCapabilities_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Parameter(
	extensionId TEXT,
	terminologyCapabilities_ParameterId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_ParameterId),
		REFERENCES terminologyCapabilities_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_ValidateCode(
	extensionId TEXT,
	terminologyCapabilities_ValidateCodeId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_ValidateCodeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_ValidateCodeId),
		REFERENCES terminologyCapabilities_ValidateCode (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Translation(
	extensionId TEXT,
	terminologyCapabilities_TranslationId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_TranslationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_TranslationId),
		REFERENCES terminologyCapabilities_Translation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__terminologyCapabilities_Closure(
	extensionId TEXT,
	terminologyCapabilities_ClosureId TEXT,
	PRIMARY KEY (extensionId, terminologyCapabilities_ClosureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_ClosureId),
		REFERENCES terminologyCapabilities_Closure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport(
	extensionId TEXT,
	testReportId TEXT,
	PRIMARY KEY (extensionId, testReportId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReportId),
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Participant(
	extensionId TEXT,
	testReport_ParticipantId TEXT,
	PRIMARY KEY (extensionId, testReport_ParticipantId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_ParticipantId),
		REFERENCES testReport_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Setup(
	extensionId TEXT,
	testReport_SetupId TEXT,
	PRIMARY KEY (extensionId, testReport_SetupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_SetupId),
		REFERENCES testReport_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Action(
	extensionId TEXT,
	testReport_ActionId TEXT,
	PRIMARY KEY (extensionId, testReport_ActionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_ActionId),
		REFERENCES testReport_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Operation(
	extensionId TEXT,
	testReport_OperationId TEXT,
	PRIMARY KEY (extensionId, testReport_OperationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_OperationId),
		REFERENCES testReport_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Assert(
	extensionId TEXT,
	testReport_AssertId TEXT,
	PRIMARY KEY (extensionId, testReport_AssertId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_AssertId),
		REFERENCES testReport_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Test(
	extensionId TEXT,
	testReport_TestId TEXT,
	PRIMARY KEY (extensionId, testReport_TestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_TestId),
		REFERENCES testReport_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Action1(
	extensionId TEXT,
	testReport_Action1Id TEXT,
	PRIMARY KEY (extensionId, testReport_Action1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_Action1Id),
		REFERENCES testReport_Action1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Teardown(
	extensionId TEXT,
	testReport_TeardownId TEXT,
	PRIMARY KEY (extensionId, testReport_TeardownId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_TeardownId),
		REFERENCES testReport_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testReport_Action2(
	extensionId TEXT,
	testReport_Action2Id TEXT,
	PRIMARY KEY (extensionId, testReport_Action2Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReport_Action2Id),
		REFERENCES testReport_Action2 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript(
	extensionId TEXT,
	testScriptId TEXT,
	PRIMARY KEY (extensionId, testScriptId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScriptId),
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Origin(
	extensionId TEXT,
	testScript_OriginId TEXT,
	PRIMARY KEY (extensionId, testScript_OriginId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_OriginId),
		REFERENCES testScript_Origin (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Destination(
	extensionId TEXT,
	testScript_DestinationId TEXT,
	PRIMARY KEY (extensionId, testScript_DestinationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_DestinationId),
		REFERENCES testScript_Destination (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Metadata(
	extensionId TEXT,
	testScript_MetadataId TEXT,
	PRIMARY KEY (extensionId, testScript_MetadataId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_MetadataId),
		REFERENCES testScript_Metadata (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Link(
	extensionId TEXT,
	testScript_LinkId TEXT,
	PRIMARY KEY (extensionId, testScript_LinkId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_LinkId),
		REFERENCES testScript_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Capability(
	extensionId TEXT,
	testScript_CapabilityId TEXT,
	PRIMARY KEY (extensionId, testScript_CapabilityId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_CapabilityId),
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Fixture(
	extensionId TEXT,
	testScript_FixtureId TEXT,
	PRIMARY KEY (extensionId, testScript_FixtureId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_FixtureId),
		REFERENCES testScript_Fixture (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Variable(
	extensionId TEXT,
	testScript_VariableId TEXT,
	PRIMARY KEY (extensionId, testScript_VariableId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_VariableId),
		REFERENCES testScript_Variable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Setup(
	extensionId TEXT,
	testScript_SetupId TEXT,
	PRIMARY KEY (extensionId, testScript_SetupId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_SetupId),
		REFERENCES testScript_Setup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Action(
	extensionId TEXT,
	testScript_ActionId TEXT,
	PRIMARY KEY (extensionId, testScript_ActionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_ActionId),
		REFERENCES testScript_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Operation(
	extensionId TEXT,
	testScript_OperationId TEXT,
	PRIMARY KEY (extensionId, testScript_OperationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_OperationId),
		REFERENCES testScript_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_RequestHeader(
	extensionId TEXT,
	testScript_RequestHeaderId TEXT,
	PRIMARY KEY (extensionId, testScript_RequestHeaderId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_RequestHeaderId),
		REFERENCES testScript_RequestHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Assert(
	extensionId TEXT,
	testScript_AssertId TEXT,
	PRIMARY KEY (extensionId, testScript_AssertId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_AssertId),
		REFERENCES testScript_Assert (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Test(
	extensionId TEXT,
	testScript_TestId TEXT,
	PRIMARY KEY (extensionId, testScript_TestId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_TestId),
		REFERENCES testScript_Test (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Action1(
	extensionId TEXT,
	testScript_Action1Id TEXT,
	PRIMARY KEY (extensionId, testScript_Action1Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_Action1Id),
		REFERENCES testScript_Action1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Teardown(
	extensionId TEXT,
	testScript_TeardownId TEXT,
	PRIMARY KEY (extensionId, testScript_TeardownId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_TeardownId),
		REFERENCES testScript_Teardown (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__testScript_Action2(
	extensionId TEXT,
	testScript_Action2Id TEXT,
	PRIMARY KEY (extensionId, testScript_Action2Id),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_Action2Id),
		REFERENCES testScript_Action2 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet(
	extensionId TEXT,
	valueSetId TEXT,
	PRIMARY KEY (extensionId, valueSetId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSetId),
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Compose(
	extensionId TEXT,
	valueSet_ComposeId TEXT,
	PRIMARY KEY (extensionId, valueSet_ComposeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ComposeId),
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Include(
	extensionId TEXT,
	valueSet_IncludeId TEXT,
	PRIMARY KEY (extensionId, valueSet_IncludeId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_IncludeId),
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Concept(
	extensionId TEXT,
	valueSet_ConceptId TEXT,
	PRIMARY KEY (extensionId, valueSet_ConceptId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ConceptId),
		REFERENCES valueSet_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Designation(
	extensionId TEXT,
	valueSet_DesignationId TEXT,
	PRIMARY KEY (extensionId, valueSet_DesignationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_DesignationId),
		REFERENCES valueSet_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Filter(
	extensionId TEXT,
	valueSet_FilterId TEXT,
	PRIMARY KEY (extensionId, valueSet_FilterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_FilterId),
		REFERENCES valueSet_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Expansion(
	extensionId TEXT,
	valueSet_ExpansionId TEXT,
	PRIMARY KEY (extensionId, valueSet_ExpansionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ExpansionId),
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Parameter(
	extensionId TEXT,
	valueSet_ParameterId TEXT,
	PRIMARY KEY (extensionId, valueSet_ParameterId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ParameterId),
		REFERENCES valueSet_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__valueSet_Contains(
	extensionId TEXT,
	valueSet_ContainsId TEXT,
	PRIMARY KEY (extensionId, valueSet_ContainsId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ContainsId),
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__verificationResult(
	extensionId TEXT,
	verificationResultId TEXT,
	PRIMARY KEY (extensionId, verificationResultId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResultId),
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__verificationResult_PrimarySource(
	extensionId TEXT,
	verificationResult_PrimarySourceId TEXT,
	PRIMARY KEY (extensionId, verificationResult_PrimarySourceId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResult_PrimarySourceId),
		REFERENCES verificationResult_PrimarySource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__verificationResult_Attestation(
	extensionId TEXT,
	verificationResult_AttestationId TEXT,
	PRIMARY KEY (extensionId, verificationResult_AttestationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResult_AttestationId),
		REFERENCES verificationResult_Attestation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__verificationResult_Validator(
	extensionId TEXT,
	verificationResult_ValidatorId TEXT,
	PRIMARY KEY (extensionId, verificationResult_ValidatorId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResult_ValidatorId),
		REFERENCES verificationResult_Validator (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__visionPrescription(
	extensionId TEXT,
	visionPrescriptionId TEXT,
	PRIMARY KEY (extensionId, visionPrescriptionId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (visionPrescriptionId),
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__visionPrescription_LensSpecification(
	extensionId TEXT,
	visionPrescription_LensSpecificationId TEXT,
	PRIMARY KEY (extensionId, visionPrescription_LensSpecificationId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (visionPrescription_LensSpecificationId),
		REFERENCES visionPrescription_LensSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE extension__visionPrescription_Prism(
	extensionId TEXT,
	visionPrescription_PrismId TEXT,
	PRIMARY KEY (extensionId, visionPrescription_PrismId),

	FOREIGN KEY (extensionId)
		REFERENCES extension (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (visionPrescription_PrismId),
		REFERENCES visionPrescription_Prism (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__codeableConcept(
	codingId TEXT,
	codeableConceptId TEXT,
	PRIMARY KEY (codingId, codeableConceptId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeableConceptId),
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__signature(
	codingId TEXT,
	signatureId TEXT,
	PRIMARY KEY (codingId, signatureId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (signatureId),
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__meta(
	codingId TEXT,
	metaId TEXT,
	PRIMARY KEY (codingId, metaId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (metaId),
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__dataRequirement_CodeFilter(
	codingId TEXT,
	dataRequirement_CodeFilterId TEXT,
	PRIMARY KEY (codingId, dataRequirement_CodeFilterId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirement_CodeFilterId),
		REFERENCES dataRequirement_CodeFilter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__elementDefinition(
	codingId TEXT,
	elementDefinitionId TEXT,
	PRIMARY KEY (codingId, elementDefinitionId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinitionId),
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__auditEvent(
	codingId TEXT,
	auditEventId TEXT,
	PRIMARY KEY (codingId, auditEventId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEventId),
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__auditEvent_Source(
	codingId TEXT,
	auditEvent_SourceId TEXT,
	PRIMARY KEY (codingId, auditEvent_SourceId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_SourceId),
		REFERENCES auditEvent_Source (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__auditEvent_Entity(
	codingId TEXT,
	auditEvent_EntityId TEXT,
	PRIMARY KEY (codingId, auditEvent_EntityId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_EntityId),
		REFERENCES auditEvent_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__consent_Provision(
	codingId TEXT,
	consent_ProvisionId TEXT,
	PRIMARY KEY (codingId, consent_ProvisionId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consent_ProvisionId),
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__contract_SecurityLabel(
	codingId TEXT,
	contract_SecurityLabelId TEXT,
	PRIMARY KEY (codingId, contract_SecurityLabelId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SecurityLabelId),
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__imagingStudy(
	codingId TEXT,
	imagingStudyId TEXT,
	PRIMARY KEY (codingId, imagingStudyId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudyId),
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__questionnaire(
	codingId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (codingId, questionnaireId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__questionnaire_Item(
	codingId TEXT,
	questionnaire_ItemId TEXT,
	PRIMARY KEY (codingId, questionnaire_ItemId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_ItemId),
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coding__structureDefinition(
	codingId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (codingId, structureDefinitionId),

	FOREIGN KEY (codingId)
		REFERENCES coding (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__humanName(
	stringId TEXT,
	humanNameId TEXT,
	PRIMARY KEY (stringId, humanNameId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (humanNameId),
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__address(
	stringId TEXT,
	addressId TEXT,
	PRIMARY KEY (stringId, addressId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId),
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__dataRequirement(
	stringId TEXT,
	dataRequirementId TEXT,
	PRIMARY KEY (stringId, dataRequirementId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId),
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__prodCharacteristic(
	stringId TEXT,
	prodCharacteristicId TEXT,
	PRIMARY KEY (stringId, prodCharacteristicId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (prodCharacteristicId),
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__elementDefinition(
	stringId TEXT,
	elementDefinitionId TEXT,
	PRIMARY KEY (stringId, elementDefinitionId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinitionId),
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__capabilityStatement_Resource(
	stringId TEXT,
	capabilityStatement_ResourceId TEXT,
	PRIMARY KEY (stringId, capabilityStatement_ResourceId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_ResourceId),
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__claim_Insurance(
	stringId TEXT,
	claim_InsuranceId TEXT,
	PRIMARY KEY (stringId, claim_InsuranceId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_InsuranceId),
		REFERENCES claim_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__compartmentDefinition_Resource(
	stringId TEXT,
	compartmentDefinition_ResourceId TEXT,
	PRIMARY KEY (stringId, compartmentDefinition_ResourceId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compartmentDefinition_ResourceId),
		REFERENCES compartmentDefinition_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__contract(
	stringId TEXT,
	contractId TEXT,
	PRIMARY KEY (stringId, contractId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__contract_Offer(
	stringId TEXT,
	contract_OfferId TEXT,
	PRIMARY KEY (stringId, contract_OfferId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_OfferId),
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__contract_Asset(
	stringId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (stringId, contract_AssetId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__contract_ValuedItem(
	stringId TEXT,
	contract_ValuedItemId TEXT,
	PRIMARY KEY (stringId, contract_ValuedItemId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ValuedItemId),
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__contract_Action(
	stringId TEXT,
	contract_ActionId TEXT,
	PRIMARY KEY (stringId, contract_ActionId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ActionId),
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__deviceDefinition(
	stringId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (stringId, deviceDefinitionId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__endpoint(
	stringId TEXT,
	endpointId TEXT,
	PRIMARY KEY (stringId, endpointId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__explanationOfBenefit(
	stringId TEXT,
	explanationOfBenefitId TEXT,
	PRIMARY KEY (stringId, explanationOfBenefitId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefitId),
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__explanationOfBenefit_Insurance(
	stringId TEXT,
	explanationOfBenefit_InsuranceId TEXT,
	PRIMARY KEY (stringId, explanationOfBenefit_InsuranceId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_InsuranceId),
		REFERENCES explanationOfBenefit_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__implementationGuide_Manifest(
	stringId TEXT,
	implementationGuide_ManifestId TEXT,
	PRIMARY KEY (stringId, implementationGuide_ManifestId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_ManifestId),
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__implementationGuide_Page1(
	stringId TEXT,
	implementationGuide_Page1Id TEXT,
	PRIMARY KEY (stringId, implementationGuide_Page1Id),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_Page1Id),
		REFERENCES implementationGuide_Page1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__insurancePlan(
	stringId TEXT,
	insurancePlanId TEXT,
	PRIMARY KEY (stringId, insurancePlanId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlanId),
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__location(
	stringId TEXT,
	locationId TEXT,
	PRIMARY KEY (stringId, locationId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__medicationKnowledge(
	stringId TEXT,
	medicationKnowledgeId TEXT,
	PRIMARY KEY (stringId, medicationKnowledgeId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledgeId),
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__medicationKnowledge_PatientCharacteristics(
	stringId TEXT,
	medicationKnowledge_PatientCharacteristicsId TEXT,
	PRIMARY KEY (stringId, medicationKnowledge_PatientCharacteristicsId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_PatientCharacteristicsId),
		REFERENCES medicationKnowledge_PatientCharacteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__medicinalProduct(
	stringId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (stringId, medicinalProductId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__operationDefinition_Overload(
	stringId TEXT,
	operationDefinition_OverloadId TEXT,
	PRIMARY KEY (stringId, operationDefinition_OverloadId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_OverloadId),
		REFERENCES operationDefinition_Overload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__operationOutcome_Issue(
	stringId TEXT,
	operationOutcome_IssueId TEXT,
	PRIMARY KEY (stringId, operationOutcome_IssueId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationOutcome_IssueId),
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__organization(
	stringId TEXT,
	organizationId TEXT,
	PRIMARY KEY (stringId, organizationId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__researchDefinition(
	stringId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (stringId, researchDefinitionId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__researchElementDefinition(
	stringId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (stringId, researchElementDefinitionId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__searchParameter(
	stringId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (stringId, searchParameterId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__structureDefinition(
	stringId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (stringId, structureDefinitionId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__structureMap_Dependent(
	stringId TEXT,
	structureMap_DependentId TEXT,
	PRIMARY KEY (stringId, structureMap_DependentId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_DependentId),
		REFERENCES structureMap_Dependent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__subscription_Channel(
	stringId TEXT,
	subscription_ChannelId TEXT,
	PRIMARY KEY (stringId, subscription_ChannelId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (subscription_ChannelId),
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__substancePolymer(
	stringId TEXT,
	substancePolymerId TEXT,
	PRIMARY KEY (stringId, substancePolymerId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymerId),
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__substanceProtein(
	stringId TEXT,
	substanceProteinId TEXT,
	PRIMARY KEY (stringId, substanceProteinId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceProteinId),
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__substanceSourceMaterial(
	stringId TEXT,
	substanceSourceMaterialId TEXT,
	PRIMARY KEY (stringId, substanceSourceMaterialId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterialId),
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE string__verificationResult(
	stringId TEXT,
	verificationResultId TEXT,
	PRIMARY KEY (stringId, verificationResultId),

	FOREIGN KEY (stringId)
		REFERENCES string (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResultId),
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__humanName(
	elementId TEXT,
	humanNameId TEXT,
	PRIMARY KEY (elementId, humanNameId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (humanNameId),
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__address(
	elementId TEXT,
	addressId TEXT,
	PRIMARY KEY (elementId, addressId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (addressId),
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__timing(
	elementId TEXT,
	timingId TEXT,
	PRIMARY KEY (elementId, timingId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (timingId),
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__timing_Repeat(
	elementId TEXT,
	timing_RepeatId TEXT,
	PRIMARY KEY (elementId, timing_RepeatId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (timing_RepeatId),
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__dataRequirement(
	elementId TEXT,
	dataRequirementId TEXT,
	PRIMARY KEY (elementId, dataRequirementId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId),
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__prodCharacteristic(
	elementId TEXT,
	prodCharacteristicId TEXT,
	PRIMARY KEY (elementId, prodCharacteristicId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (prodCharacteristicId),
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__elementDefinition(
	elementId TEXT,
	elementDefinitionId TEXT,
	PRIMARY KEY (elementId, elementDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinitionId),
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__elementDefinition_Type(
	elementId TEXT,
	elementDefinition_TypeId TEXT,
	PRIMARY KEY (elementId, elementDefinition_TypeId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_TypeId),
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__allergyIntolerance(
	elementId TEXT,
	allergyIntoleranceId TEXT,
	PRIMARY KEY (elementId, allergyIntoleranceId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntoleranceId),
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__auditEvent_Agent(
	elementId TEXT,
	auditEvent_AgentId TEXT,
	PRIMARY KEY (elementId, auditEvent_AgentId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_AgentId),
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__capabilityStatement(
	elementId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (elementId, capabilityStatementId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__capabilityStatement_Resource(
	elementId TEXT,
	capabilityStatement_ResourceId TEXT,
	PRIMARY KEY (elementId, capabilityStatement_ResourceId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_ResourceId),
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__carePlan(
	elementId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (elementId, carePlanId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__carePlan_Detail(
	elementId TEXT,
	carePlan_DetailId TEXT,
	PRIMARY KEY (elementId, carePlan_DetailId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_DetailId),
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__chargeItem(
	elementId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (elementId, chargeItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__chargeItemDefinition(
	elementId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (elementId, chargeItemDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claim_Insurance(
	elementId TEXT,
	claim_InsuranceId TEXT,
	PRIMARY KEY (elementId, claim_InsuranceId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_InsuranceId),
		REFERENCES claim_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claim_Item(
	elementId TEXT,
	claim_ItemId TEXT,
	PRIMARY KEY (elementId, claim_ItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ItemId),
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claimResponse_Item(
	elementId TEXT,
	claimResponse_ItemId TEXT,
	PRIMARY KEY (elementId, claimResponse_ItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_ItemId),
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claimResponse_Detail(
	elementId TEXT,
	claimResponse_DetailId TEXT,
	PRIMARY KEY (elementId, claimResponse_DetailId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_DetailId),
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claimResponse_SubDetail(
	elementId TEXT,
	claimResponse_SubDetailId TEXT,
	PRIMARY KEY (elementId, claimResponse_SubDetailId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetailId),
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claimResponse_AddItem(
	elementId TEXT,
	claimResponse_AddItemId TEXT,
	PRIMARY KEY (elementId, claimResponse_AddItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AddItemId),
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claimResponse_Detail1(
	elementId TEXT,
	claimResponse_Detail1Id TEXT,
	PRIMARY KEY (elementId, claimResponse_Detail1Id),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_Detail1Id),
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__claimResponse_SubDetail1(
	elementId TEXT,
	claimResponse_SubDetail1Id TEXT,
	PRIMARY KEY (elementId, claimResponse_SubDetail1Id),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetail1Id),
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__clinicalImpression(
	elementId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (elementId, clinicalImpressionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__codeSystem_Filter(
	elementId TEXT,
	codeSystem_FilterId TEXT,
	PRIMARY KEY (elementId, codeSystem_FilterId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_FilterId),
		REFERENCES codeSystem_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__communication(
	elementId TEXT,
	communicationId TEXT,
	PRIMARY KEY (elementId, communicationId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__compartmentDefinition_Resource(
	elementId TEXT,
	compartmentDefinition_ResourceId TEXT,
	PRIMARY KEY (elementId, compartmentDefinition_ResourceId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compartmentDefinition_ResourceId),
		REFERENCES compartmentDefinition_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__contract(
	elementId TEXT,
	contractId TEXT,
	PRIMARY KEY (elementId, contractId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__contract_SecurityLabel(
	elementId TEXT,
	contract_SecurityLabelId TEXT,
	PRIMARY KEY (elementId, contract_SecurityLabelId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SecurityLabelId),
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__contract_Offer(
	elementId TEXT,
	contract_OfferId TEXT,
	PRIMARY KEY (elementId, contract_OfferId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_OfferId),
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__contract_Asset(
	elementId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (elementId, contract_AssetId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__contract_ValuedItem(
	elementId TEXT,
	contract_ValuedItemId TEXT,
	PRIMARY KEY (elementId, contract_ValuedItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ValuedItemId),
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__contract_Action(
	elementId TEXT,
	contract_ActionId TEXT,
	PRIMARY KEY (elementId, contract_ActionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ActionId),
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__coverageEligibilityRequest(
	elementId TEXT,
	coverageEligibilityRequestId TEXT,
	PRIMARY KEY (elementId, coverageEligibilityRequestId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequestId),
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__coverageEligibilityRequest_Item(
	elementId TEXT,
	coverageEligibilityRequest_ItemId TEXT,
	PRIMARY KEY (elementId, coverageEligibilityRequest_ItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_ItemId),
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__coverageEligibilityResponse(
	elementId TEXT,
	coverageEligibilityResponseId TEXT,
	PRIMARY KEY (elementId, coverageEligibilityResponseId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponseId),
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__deviceDefinition(
	elementId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (elementId, deviceDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__deviceRequest(
	elementId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (elementId, deviceRequestId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__endpoint(
	elementId TEXT,
	endpointId TEXT,
	PRIMARY KEY (elementId, endpointId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit(
	elementId TEXT,
	explanationOfBenefitId TEXT,
	PRIMARY KEY (elementId, explanationOfBenefitId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefitId),
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit_Insurance(
	elementId TEXT,
	explanationOfBenefit_InsuranceId TEXT,
	PRIMARY KEY (elementId, explanationOfBenefit_InsuranceId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_InsuranceId),
		REFERENCES explanationOfBenefit_Insurance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit_Item(
	elementId TEXT,
	explanationOfBenefit_ItemId TEXT,
	PRIMARY KEY (elementId, explanationOfBenefit_ItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ItemId),
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit_Detail(
	elementId TEXT,
	explanationOfBenefit_DetailId TEXT,
	PRIMARY KEY (elementId, explanationOfBenefit_DetailId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DetailId),
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit_SubDetail(
	elementId TEXT,
	explanationOfBenefit_SubDetailId TEXT,
	PRIMARY KEY (elementId, explanationOfBenefit_SubDetailId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetailId),
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit_AddItem(
	elementId TEXT,
	explanationOfBenefit_AddItemId TEXT,
	PRIMARY KEY (elementId, explanationOfBenefit_AddItemId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AddItemId),
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit_Detail1(
	elementId TEXT,
	explanationOfBenefit_Detail1Id TEXT,
	PRIMARY KEY (elementId, explanationOfBenefit_Detail1Id),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_Detail1Id),
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__explanationOfBenefit_SubDetail1(
	elementId TEXT,
	explanationOfBenefit_SubDetail1Id TEXT,
	PRIMARY KEY (elementId, explanationOfBenefit_SubDetail1Id),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetail1Id),
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__familyMemberHistory(
	elementId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (elementId, familyMemberHistoryId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__healthcareService_AvailableTime(
	elementId TEXT,
	healthcareService_AvailableTimeId TEXT,
	PRIMARY KEY (elementId, healthcareService_AvailableTimeId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareService_AvailableTimeId),
		REFERENCES healthcareService_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__implementationGuide(
	elementId TEXT,
	implementationGuideId TEXT,
	PRIMARY KEY (elementId, implementationGuideId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuideId),
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__implementationGuide_Resource(
	elementId TEXT,
	implementationGuide_ResourceId TEXT,
	PRIMARY KEY (elementId, implementationGuide_ResourceId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_ResourceId),
		REFERENCES implementationGuide_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__implementationGuide_Manifest(
	elementId TEXT,
	implementationGuide_ManifestId TEXT,
	PRIMARY KEY (elementId, implementationGuide_ManifestId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_ManifestId),
		REFERENCES implementationGuide_Manifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__implementationGuide_Page1(
	elementId TEXT,
	implementationGuide_Page1Id TEXT,
	PRIMARY KEY (elementId, implementationGuide_Page1Id),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuide_Page1Id),
		REFERENCES implementationGuide_Page1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__insurancePlan(
	elementId TEXT,
	insurancePlanId TEXT,
	PRIMARY KEY (elementId, insurancePlanId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlanId),
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__location(
	elementId TEXT,
	locationId TEXT,
	PRIMARY KEY (elementId, locationId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__location_HoursOfOperation(
	elementId TEXT,
	location_HoursOfOperationId TEXT,
	PRIMARY KEY (elementId, location_HoursOfOperationId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (location_HoursOfOperationId),
		REFERENCES location_HoursOfOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__measure(
	elementId TEXT,
	measureId TEXT,
	PRIMARY KEY (elementId, measureId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__medicationAdministration(
	elementId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (elementId, medicationAdministrationId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__medicationKnowledge(
	elementId TEXT,
	medicationKnowledgeId TEXT,
	PRIMARY KEY (elementId, medicationKnowledgeId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledgeId),
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__medicationKnowledge_PatientCharacteristics(
	elementId TEXT,
	medicationKnowledge_PatientCharacteristicsId TEXT,
	PRIMARY KEY (elementId, medicationKnowledge_PatientCharacteristicsId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_PatientCharacteristicsId),
		REFERENCES medicationKnowledge_PatientCharacteristics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__medicationRequest(
	elementId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (elementId, medicationRequestId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__medicinalProduct(
	elementId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (elementId, medicinalProductId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__molecularSequence_Roc(
	elementId TEXT,
	molecularSequence_RocId TEXT,
	PRIMARY KEY (elementId, molecularSequence_RocId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_RocId),
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__nutritionOrder(
	elementId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (elementId, nutritionOrderId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__observationDefinition(
	elementId TEXT,
	observationDefinitionId TEXT,
	PRIMARY KEY (elementId, observationDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinitionId),
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__operationDefinition(
	elementId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (elementId, operationDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__operationDefinition_Overload(
	elementId TEXT,
	operationDefinition_OverloadId TEXT,
	PRIMARY KEY (elementId, operationDefinition_OverloadId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_OverloadId),
		REFERENCES operationDefinition_Overload (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__operationOutcome_Issue(
	elementId TEXT,
	operationOutcome_IssueId TEXT,
	PRIMARY KEY (elementId, operationOutcome_IssueId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationOutcome_IssueId),
		REFERENCES operationOutcome_Issue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__organization(
	elementId TEXT,
	organizationId TEXT,
	PRIMARY KEY (elementId, organizationId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__planDefinition_Action(
	elementId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (elementId, planDefinition_ActionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__practitionerRole_AvailableTime(
	elementId TEXT,
	practitionerRole_AvailableTimeId TEXT,
	PRIMARY KEY (elementId, practitionerRole_AvailableTimeId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRole_AvailableTimeId),
		REFERENCES practitionerRole_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__procedure(
	elementId TEXT,
	procedureId TEXT,
	PRIMARY KEY (elementId, procedureId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__provenance(
	elementId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (elementId, provenanceId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__questionnaire(
	elementId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (elementId, questionnaireId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__requestGroup(
	elementId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (elementId, requestGroupId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__researchDefinition(
	elementId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (elementId, researchDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__researchElementDefinition(
	elementId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (elementId, researchElementDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__searchParameter(
	elementId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (elementId, searchParameterId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__serviceRequest(
	elementId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (elementId, serviceRequestId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__structureDefinition(
	elementId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (elementId, structureDefinitionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__structureMap_Target(
	elementId TEXT,
	structureMap_TargetId TEXT,
	PRIMARY KEY (elementId, structureMap_TargetId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_TargetId),
		REFERENCES structureMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__structureMap_Dependent(
	elementId TEXT,
	structureMap_DependentId TEXT,
	PRIMARY KEY (elementId, structureMap_DependentId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_DependentId),
		REFERENCES structureMap_Dependent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__subscription_Channel(
	elementId TEXT,
	subscription_ChannelId TEXT,
	PRIMARY KEY (elementId, subscription_ChannelId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (subscription_ChannelId),
		REFERENCES subscription_Channel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__substancePolymer(
	elementId TEXT,
	substancePolymerId TEXT,
	PRIMARY KEY (elementId, substancePolymerId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymerId),
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__substanceProtein(
	elementId TEXT,
	substanceProteinId TEXT,
	PRIMARY KEY (elementId, substanceProteinId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceProteinId),
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__substanceSourceMaterial(
	elementId TEXT,
	substanceSourceMaterialId TEXT,
	PRIMARY KEY (elementId, substanceSourceMaterialId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterialId),
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__terminologyCapabilities_Version(
	elementId TEXT,
	terminologyCapabilities_VersionId TEXT,
	PRIMARY KEY (elementId, terminologyCapabilities_VersionId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_VersionId),
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__terminologyCapabilities_Filter(
	elementId TEXT,
	terminologyCapabilities_FilterId TEXT,
	PRIMARY KEY (elementId, terminologyCapabilities_FilterId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_FilterId),
		REFERENCES terminologyCapabilities_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__testScript_Capability(
	elementId TEXT,
	testScript_CapabilityId TEXT,
	PRIMARY KEY (elementId, testScript_CapabilityId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_CapabilityId),
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE element__verificationResult(
	elementId TEXT,
	verificationResultId TEXT,
	PRIMARY KEY (elementId, verificationResultId),

	FOREIGN KEY (elementId)
		REFERENCES element (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResultId),
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__timing_Repeat(
	codeId TEXT,
	timing_RepeatId TEXT,
	PRIMARY KEY (codeId, timing_RepeatId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (timing_RepeatId),
		REFERENCES timing_Repeat (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__capabilityStatement(
	codeId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (codeId, capabilityStatementId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__codeSystem_Filter(
	codeId TEXT,
	codeSystem_FilterId TEXT,
	PRIMARY KEY (codeId, codeSystem_FilterId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_FilterId),
		REFERENCES codeSystem_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__endpoint(
	codeId TEXT,
	endpointId TEXT,
	PRIMARY KEY (codeId, endpointId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__location_HoursOfOperation(
	codeId TEXT,
	location_HoursOfOperationId TEXT,
	PRIMARY KEY (codeId, location_HoursOfOperationId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (location_HoursOfOperationId),
		REFERENCES location_HoursOfOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__operationDefinition(
	codeId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (codeId, operationDefinitionId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__practitionerRole_AvailableTime(
	codeId TEXT,
	practitionerRole_AvailableTimeId TEXT,
	PRIMARY KEY (codeId, practitionerRole_AvailableTimeId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRole_AvailableTimeId),
		REFERENCES practitionerRole_AvailableTime (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__questionnaire(
	codeId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (codeId, questionnaireId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__searchParameter(
	codeId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (codeId, searchParameterId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__terminologyCapabilities_Version(
	codeId TEXT,
	terminologyCapabilities_VersionId TEXT,
	PRIMARY KEY (codeId, terminologyCapabilities_VersionId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_VersionId),
		REFERENCES terminologyCapabilities_Version (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE code__terminologyCapabilities_Filter(
	codeId TEXT,
	terminologyCapabilities_FilterId TEXT,
	PRIMARY KEY (codeId, terminologyCapabilities_FilterId),

	FOREIGN KEY (codeId)
		REFERENCES code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilities_FilterId),
		REFERENCES terminologyCapabilities_Filter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__meta(
	canonicalId TEXT,
	metaId TEXT,
	PRIMARY KEY (canonicalId, metaId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (metaId),
		REFERENCES meta (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__dataRequirement(
	canonicalId TEXT,
	dataRequirementId TEXT,
	PRIMARY KEY (canonicalId, dataRequirementId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dataRequirementId),
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__elementDefinition_Type(
	canonicalId TEXT,
	elementDefinition_TypeId TEXT,
	PRIMARY KEY (canonicalId, elementDefinition_TypeId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinition_TypeId),
		REFERENCES elementDefinition_Type (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__activityDefinition(
	canonicalId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (canonicalId, activityDefinitionId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__capabilityStatement(
	canonicalId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (canonicalId, capabilityStatementId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__capabilityStatement_Rest(
	canonicalId TEXT,
	capabilityStatement_RestId TEXT,
	PRIMARY KEY (canonicalId, capabilityStatement_RestId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_RestId),
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__capabilityStatement_Resource(
	canonicalId TEXT,
	capabilityStatement_ResourceId TEXT,
	PRIMARY KEY (canonicalId, capabilityStatement_ResourceId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_ResourceId),
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__carePlan(
	canonicalId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (canonicalId, carePlanId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__carePlan_Detail(
	canonicalId TEXT,
	carePlan_DetailId TEXT,
	PRIMARY KEY (canonicalId, carePlan_DetailId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_DetailId),
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__chargeItem(
	canonicalId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (canonicalId, chargeItemId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__chargeItemDefinition(
	canonicalId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (canonicalId, chargeItemDefinitionId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__communication(
	canonicalId TEXT,
	communicationId TEXT,
	PRIMARY KEY (canonicalId, communicationId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__deviceRequest(
	canonicalId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (canonicalId, deviceRequestId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__exampleScenario(
	canonicalId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (canonicalId, exampleScenarioId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__familyMemberHistory(
	canonicalId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (canonicalId, familyMemberHistoryId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__measure(
	canonicalId TEXT,
	measureId TEXT,
	PRIMARY KEY (canonicalId, measureId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__medicationRequest(
	canonicalId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (canonicalId, medicationRequestId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__messageDefinition(
	canonicalId TEXT,
	messageDefinitionId TEXT,
	PRIMARY KEY (canonicalId, messageDefinitionId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinitionId),
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__nutritionOrder(
	canonicalId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (canonicalId, nutritionOrderId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__operationDefinition_Parameter(
	canonicalId TEXT,
	operationDefinition_ParameterId TEXT,
	PRIMARY KEY (canonicalId, operationDefinition_ParameterId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_ParameterId),
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__planDefinition(
	canonicalId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (canonicalId, planDefinitionId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__procedure(
	canonicalId TEXT,
	procedureId TEXT,
	PRIMARY KEY (canonicalId, procedureId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__questionnaire(
	canonicalId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (canonicalId, questionnaireId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__requestGroup(
	canonicalId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (canonicalId, requestGroupId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__researchDefinition(
	canonicalId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (canonicalId, researchDefinitionId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__researchElementDefinition(
	canonicalId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (canonicalId, researchElementDefinitionId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__serviceRequest(
	canonicalId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (canonicalId, serviceRequestId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__structureMap(
	canonicalId TEXT,
	structureMapId TEXT,
	PRIMARY KEY (canonicalId, structureMapId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMapId),
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE canonical__valueSet_Include(
	canonicalId TEXT,
	valueSet_IncludeId TEXT,
	PRIMARY KEY (canonicalId, valueSet_IncludeId),

	FOREIGN KEY (canonicalId)
		REFERENCES canonical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_IncludeId),
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__contactDetail(
	contactPointId TEXT,
	contactDetailId TEXT,
	PRIMARY KEY (contactPointId, contactDetailId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contactDetailId),
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__careTeam(
	contactPointId TEXT,
	careTeamId TEXT,
	PRIMARY KEY (contactPointId, careTeamId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeamId),
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__device(
	contactPointId TEXT,
	deviceId TEXT,
	PRIMARY KEY (contactPointId, deviceId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceId),
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__deviceDefinition(
	contactPointId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (contactPointId, deviceDefinitionId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__endpoint(
	contactPointId TEXT,
	endpointId TEXT,
	PRIMARY KEY (contactPointId, endpointId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__healthcareService(
	contactPointId TEXT,
	healthcareServiceId TEXT,
	PRIMARY KEY (contactPointId, healthcareServiceId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareServiceId),
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__insurancePlan_Contact(
	contactPointId TEXT,
	insurancePlan_ContactId TEXT,
	PRIMARY KEY (contactPointId, insurancePlan_ContactId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_ContactId),
		REFERENCES insurancePlan_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__location(
	contactPointId TEXT,
	locationId TEXT,
	PRIMARY KEY (contactPointId, locationId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__organization(
	contactPointId TEXT,
	organizationId TEXT,
	PRIMARY KEY (contactPointId, organizationId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__organization_Contact(
	contactPointId TEXT,
	organization_ContactId TEXT,
	PRIMARY KEY (contactPointId, organization_ContactId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organization_ContactId),
		REFERENCES organization_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__organizationAffiliation(
	contactPointId TEXT,
	organizationAffiliationId TEXT,
	PRIMARY KEY (contactPointId, organizationAffiliationId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationAffiliationId),
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__patient(
	contactPointId TEXT,
	patientId TEXT,
	PRIMARY KEY (contactPointId, patientId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__patient_Contact(
	contactPointId TEXT,
	patient_ContactId TEXT,
	PRIMARY KEY (contactPointId, patient_ContactId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patient_ContactId),
		REFERENCES patient_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__person(
	contactPointId TEXT,
	personId TEXT,
	PRIMARY KEY (contactPointId, personId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (personId),
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__practitioner(
	contactPointId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (contactPointId, practitionerId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__practitionerRole(
	contactPointId TEXT,
	practitionerRoleId TEXT,
	PRIMARY KEY (contactPointId, practitionerRoleId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRoleId),
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__relatedPerson(
	contactPointId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (contactPointId, relatedPersonId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactPoint__subscription(
	contactPointId TEXT,
	subscriptionId TEXT,
	PRIMARY KEY (contactPointId, subscriptionId),

	FOREIGN KEY (contactPointId)
		REFERENCES contactPoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (subscriptionId),
		REFERENCES subscription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__contributor(
	contactDetailId TEXT,
	contributorId TEXT,
	PRIMARY KEY (contactDetailId, contributorId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contributorId),
		REFERENCES contributor (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__activityDefinition(
	contactDetailId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, activityDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__capabilityStatement(
	contactDetailId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (contactDetailId, capabilityStatementId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__chargeItemDefinition(
	contactDetailId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, chargeItemDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__codeSystem(
	contactDetailId TEXT,
	codeSystemId TEXT,
	PRIMARY KEY (contactDetailId, codeSystemId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystemId),
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__compartmentDefinition(
	contactDetailId TEXT,
	compartmentDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, compartmentDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compartmentDefinitionId),
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__conceptMap(
	contactDetailId TEXT,
	conceptMapId TEXT,
	PRIMARY KEY (contactDetailId, conceptMapId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMapId),
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__effectEvidenceSynthesis(
	contactDetailId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (contactDetailId, effectEvidenceSynthesisId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__eventDefinition(
	contactDetailId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, eventDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__evidence(
	contactDetailId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (contactDetailId, evidenceId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__evidenceVariable(
	contactDetailId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (contactDetailId, evidenceVariableId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__exampleScenario(
	contactDetailId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (contactDetailId, exampleScenarioId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__graphDefinition(
	contactDetailId TEXT,
	graphDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, graphDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinitionId),
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__implementationGuide(
	contactDetailId TEXT,
	implementationGuideId TEXT,
	PRIMARY KEY (contactDetailId, implementationGuideId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuideId),
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__library(
	contactDetailId TEXT,
	libraryId TEXT,
	PRIMARY KEY (contactDetailId, libraryId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__measure(
	contactDetailId TEXT,
	measureId TEXT,
	PRIMARY KEY (contactDetailId, measureId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__messageDefinition(
	contactDetailId TEXT,
	messageDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, messageDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinitionId),
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__namingSystem(
	contactDetailId TEXT,
	namingSystemId TEXT,
	PRIMARY KEY (contactDetailId, namingSystemId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (namingSystemId),
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__operationDefinition(
	contactDetailId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, operationDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__planDefinition(
	contactDetailId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, planDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__questionnaire(
	contactDetailId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (contactDetailId, questionnaireId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__researchDefinition(
	contactDetailId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, researchDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__researchElementDefinition(
	contactDetailId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, researchElementDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__researchStudy(
	contactDetailId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (contactDetailId, researchStudyId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__riskEvidenceSynthesis(
	contactDetailId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (contactDetailId, riskEvidenceSynthesisId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__searchParameter(
	contactDetailId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (contactDetailId, searchParameterId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__structureDefinition(
	contactDetailId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (contactDetailId, structureDefinitionId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__structureMap(
	contactDetailId TEXT,
	structureMapId TEXT,
	PRIMARY KEY (contactDetailId, structureMapId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMapId),
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__terminologyCapabilities(
	contactDetailId TEXT,
	terminologyCapabilitiesId TEXT,
	PRIMARY KEY (contactDetailId, terminologyCapabilitiesId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilitiesId),
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__testScript(
	contactDetailId TEXT,
	testScriptId TEXT,
	PRIMARY KEY (contactDetailId, testScriptId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScriptId),
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contactDetail__valueSet(
	contactDetailId TEXT,
	valueSetId TEXT,
	PRIMARY KEY (contactDetailId, valueSetId),

	FOREIGN KEY (contactDetailId)
		REFERENCES contactDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSetId),
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dataRequirement__triggerDefinition(
	dataRequirementId TEXT,
	triggerDefinitionId TEXT,
	PRIMARY KEY (dataRequirementId, triggerDefinitionId),

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (triggerDefinitionId),
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dataRequirement__guidanceResponse(
	dataRequirementId TEXT,
	guidanceResponseId TEXT,
	PRIMARY KEY (dataRequirementId, guidanceResponseId),

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (guidanceResponseId),
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dataRequirement__library(
	dataRequirementId TEXT,
	libraryId TEXT,
	PRIMARY KEY (dataRequirementId, libraryId),

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dataRequirement__planDefinition_Action(
	dataRequirementId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (dataRequirementId, planDefinition_ActionId),

	FOREIGN KEY (dataRequirementId)
		REFERENCES dataRequirement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__dosage(
	codeableConceptId TEXT,
	dosageId TEXT,
	PRIMARY KEY (codeableConceptId, dosageId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (dosageId),
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__productShelfLife(
	codeableConceptId TEXT,
	productShelfLifeId TEXT,
	PRIMARY KEY (codeableConceptId, productShelfLifeId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (productShelfLifeId),
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__activityDefinition(
	codeableConceptId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, activityDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__adverseEvent(
	codeableConceptId TEXT,
	adverseEventId TEXT,
	PRIMARY KEY (codeableConceptId, adverseEventId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (adverseEventId),
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__allergyIntolerance_Reaction(
	codeableConceptId TEXT,
	allergyIntolerance_ReactionId TEXT,
	PRIMARY KEY (codeableConceptId, allergyIntolerance_ReactionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntolerance_ReactionId),
		REFERENCES allergyIntolerance_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__appointment(
	codeableConceptId TEXT,
	appointmentId TEXT,
	PRIMARY KEY (codeableConceptId, appointmentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentId),
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__appointment_Participant(
	codeableConceptId TEXT,
	appointment_ParticipantId TEXT,
	PRIMARY KEY (codeableConceptId, appointment_ParticipantId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointment_ParticipantId),
		REFERENCES appointment_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__appointmentResponse(
	codeableConceptId TEXT,
	appointmentResponseId TEXT,
	PRIMARY KEY (codeableConceptId, appointmentResponseId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentResponseId),
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__auditEvent(
	codeableConceptId TEXT,
	auditEventId TEXT,
	PRIMARY KEY (codeableConceptId, auditEventId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEventId),
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__auditEvent_Agent(
	codeableConceptId TEXT,
	auditEvent_AgentId TEXT,
	PRIMARY KEY (codeableConceptId, auditEvent_AgentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_AgentId),
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__bodyStructure(
	codeableConceptId TEXT,
	bodyStructureId TEXT,
	PRIMARY KEY (codeableConceptId, bodyStructureId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bodyStructureId),
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__capabilityStatement(
	codeableConceptId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (codeableConceptId, capabilityStatementId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__capabilityStatement_Security(
	codeableConceptId TEXT,
	capabilityStatement_SecurityId TEXT,
	PRIMARY KEY (codeableConceptId, capabilityStatement_SecurityId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_SecurityId),
		REFERENCES capabilityStatement_Security (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__carePlan(
	codeableConceptId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (codeableConceptId, carePlanId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__carePlan_Activity(
	codeableConceptId TEXT,
	carePlan_ActivityId TEXT,
	PRIMARY KEY (codeableConceptId, carePlan_ActivityId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_ActivityId),
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__carePlan_Detail(
	codeableConceptId TEXT,
	carePlan_DetailId TEXT,
	PRIMARY KEY (codeableConceptId, carePlan_DetailId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_DetailId),
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__careTeam(
	codeableConceptId TEXT,
	careTeamId TEXT,
	PRIMARY KEY (codeableConceptId, careTeamId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeamId),
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__careTeam_Participant(
	codeableConceptId TEXT,
	careTeam_ParticipantId TEXT,
	PRIMARY KEY (codeableConceptId, careTeam_ParticipantId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeam_ParticipantId),
		REFERENCES careTeam_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__catalogEntry(
	codeableConceptId TEXT,
	catalogEntryId TEXT,
	PRIMARY KEY (codeableConceptId, catalogEntryId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (catalogEntryId),
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__chargeItem(
	codeableConceptId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (codeableConceptId, chargeItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__chargeItemDefinition(
	codeableConceptId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, chargeItemDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claim_Diagnosis(
	codeableConceptId TEXT,
	claim_DiagnosisId TEXT,
	PRIMARY KEY (codeableConceptId, claim_DiagnosisId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_DiagnosisId),
		REFERENCES claim_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claim_Procedure(
	codeableConceptId TEXT,
	claim_ProcedureId TEXT,
	PRIMARY KEY (codeableConceptId, claim_ProcedureId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ProcedureId),
		REFERENCES claim_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claim_Item(
	codeableConceptId TEXT,
	claim_ItemId TEXT,
	PRIMARY KEY (codeableConceptId, claim_ItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ItemId),
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claim_Detail(
	codeableConceptId TEXT,
	claim_DetailId TEXT,
	PRIMARY KEY (codeableConceptId, claim_DetailId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_DetailId),
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claim_SubDetail(
	codeableConceptId TEXT,
	claim_SubDetailId TEXT,
	PRIMARY KEY (codeableConceptId, claim_SubDetailId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_SubDetailId),
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claimResponse_AddItem(
	codeableConceptId TEXT,
	claimResponse_AddItemId TEXT,
	PRIMARY KEY (codeableConceptId, claimResponse_AddItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AddItemId),
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claimResponse_Detail1(
	codeableConceptId TEXT,
	claimResponse_Detail1Id TEXT,
	PRIMARY KEY (codeableConceptId, claimResponse_Detail1Id),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_Detail1Id),
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__claimResponse_SubDetail1(
	codeableConceptId TEXT,
	claimResponse_SubDetail1Id TEXT,
	PRIMARY KEY (codeableConceptId, claimResponse_SubDetail1Id),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetail1Id),
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__clinicalImpression(
	codeableConceptId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (codeableConceptId, clinicalImpressionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__codeSystem(
	codeableConceptId TEXT,
	codeSystemId TEXT,
	PRIMARY KEY (codeableConceptId, codeSystemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystemId),
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__communication(
	codeableConceptId TEXT,
	communicationId TEXT,
	PRIMARY KEY (codeableConceptId, communicationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__communicationRequest(
	codeableConceptId TEXT,
	communicationRequestId TEXT,
	PRIMARY KEY (codeableConceptId, communicationRequestId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationRequestId),
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__composition(
	codeableConceptId TEXT,
	compositionId TEXT,
	PRIMARY KEY (codeableConceptId, compositionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compositionId),
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__composition_Event(
	codeableConceptId TEXT,
	composition_EventId TEXT,
	PRIMARY KEY (codeableConceptId, composition_EventId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_EventId),
		REFERENCES composition_Event (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__conceptMap(
	codeableConceptId TEXT,
	conceptMapId TEXT,
	PRIMARY KEY (codeableConceptId, conceptMapId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMapId),
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__condition(
	codeableConceptId TEXT,
	conditionId TEXT,
	PRIMARY KEY (codeableConceptId, conditionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conditionId),
		REFERENCES condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__condition_Evidence(
	codeableConceptId TEXT,
	condition_EvidenceId TEXT,
	PRIMARY KEY (codeableConceptId, condition_EvidenceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (condition_EvidenceId),
		REFERENCES condition_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__consent(
	codeableConceptId TEXT,
	consentId TEXT,
	PRIMARY KEY (codeableConceptId, consentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consentId),
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__consent_Provision(
	codeableConceptId TEXT,
	consent_ProvisionId TEXT,
	PRIMARY KEY (codeableConceptId, consent_ProvisionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consent_ProvisionId),
		REFERENCES consent_Provision (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__contract(
	codeableConceptId TEXT,
	contractId TEXT,
	PRIMARY KEY (codeableConceptId, contractId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__contract_Offer(
	codeableConceptId TEXT,
	contract_OfferId TEXT,
	PRIMARY KEY (codeableConceptId, contract_OfferId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_OfferId),
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__contract_Asset(
	codeableConceptId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (codeableConceptId, contract_AssetId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__contract_Context(
	codeableConceptId TEXT,
	contract_ContextId TEXT,
	PRIMARY KEY (codeableConceptId, contract_ContextId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ContextId),
		REFERENCES contract_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__contract_Action(
	codeableConceptId TEXT,
	contract_ActionId TEXT,
	PRIMARY KEY (codeableConceptId, contract_ActionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ActionId),
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__coverageEligibilityRequest_Item(
	codeableConceptId TEXT,
	coverageEligibilityRequest_ItemId TEXT,
	PRIMARY KEY (codeableConceptId, coverageEligibilityRequest_ItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_ItemId),
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__coverageEligibilityResponse_Item(
	codeableConceptId TEXT,
	coverageEligibilityResponse_ItemId TEXT,
	PRIMARY KEY (codeableConceptId, coverageEligibilityResponse_ItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponse_ItemId),
		REFERENCES coverageEligibilityResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__detectedIssue_Evidence(
	codeableConceptId TEXT,
	detectedIssue_EvidenceId TEXT,
	PRIMARY KEY (codeableConceptId, detectedIssue_EvidenceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssue_EvidenceId),
		REFERENCES detectedIssue_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__device(
	codeableConceptId TEXT,
	deviceId TEXT,
	PRIMARY KEY (codeableConceptId, deviceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceId),
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__device_Property(
	codeableConceptId TEXT,
	device_PropertyId TEXT,
	PRIMARY KEY (codeableConceptId, device_PropertyId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (device_PropertyId),
		REFERENCES device_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__deviceDefinition(
	codeableConceptId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, deviceDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__deviceDefinition_Capability(
	codeableConceptId TEXT,
	deviceDefinition_CapabilityId TEXT,
	PRIMARY KEY (codeableConceptId, deviceDefinition_CapabilityId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_CapabilityId),
		REFERENCES deviceDefinition_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__deviceDefinition_Property(
	codeableConceptId TEXT,
	deviceDefinition_PropertyId TEXT,
	PRIMARY KEY (codeableConceptId, deviceDefinition_PropertyId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_PropertyId),
		REFERENCES deviceDefinition_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__deviceRequest(
	codeableConceptId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (codeableConceptId, deviceRequestId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__deviceUseStatement(
	codeableConceptId TEXT,
	deviceUseStatementId TEXT,
	PRIMARY KEY (codeableConceptId, deviceUseStatementId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceUseStatementId),
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__diagnosticReport(
	codeableConceptId TEXT,
	diagnosticReportId TEXT,
	PRIMARY KEY (codeableConceptId, diagnosticReportId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (diagnosticReportId),
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__documentReference(
	codeableConceptId TEXT,
	documentReferenceId TEXT,
	PRIMARY KEY (codeableConceptId, documentReferenceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReferenceId),
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__documentReference_Context(
	codeableConceptId TEXT,
	documentReference_ContextId TEXT,
	PRIMARY KEY (codeableConceptId, documentReference_ContextId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReference_ContextId),
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__effectEvidenceSynthesis(
	codeableConceptId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (codeableConceptId, effectEvidenceSynthesisId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__effectEvidenceSynthesis_Certainty(
	codeableConceptId TEXT,
	effectEvidenceSynthesis_CertaintyId TEXT,
	PRIMARY KEY (codeableConceptId, effectEvidenceSynthesis_CertaintyId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_CertaintyId),
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__effectEvidenceSynthesis_CertaintySubcomponent(
	codeableConceptId TEXT,
	effectEvidenceSynthesis_CertaintySubcomponentId TEXT,
	PRIMARY KEY (codeableConceptId, effectEvidenceSynthesis_CertaintySubcomponentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_CertaintySubcomponentId),
		REFERENCES effectEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__encounter(
	codeableConceptId TEXT,
	encounterId TEXT,
	PRIMARY KEY (codeableConceptId, encounterId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounterId),
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__encounter_Participant(
	codeableConceptId TEXT,
	encounter_ParticipantId TEXT,
	PRIMARY KEY (codeableConceptId, encounter_ParticipantId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_ParticipantId),
		REFERENCES encounter_Participant (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__encounter_Hospitalization(
	codeableConceptId TEXT,
	encounter_HospitalizationId TEXT,
	PRIMARY KEY (codeableConceptId, encounter_HospitalizationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounter_HospitalizationId),
		REFERENCES encounter_Hospitalization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__endpoint(
	codeableConceptId TEXT,
	endpointId TEXT,
	PRIMARY KEY (codeableConceptId, endpointId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__episodeOfCare(
	codeableConceptId TEXT,
	episodeOfCareId TEXT,
	PRIMARY KEY (codeableConceptId, episodeOfCareId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (episodeOfCareId),
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__eventDefinition(
	codeableConceptId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, eventDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__evidence(
	codeableConceptId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (codeableConceptId, evidenceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__evidenceVariable(
	codeableConceptId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (codeableConceptId, evidenceVariableId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__exampleScenario(
	codeableConceptId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (codeableConceptId, exampleScenarioId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_Diagnosis(
	codeableConceptId TEXT,
	explanationOfBenefit_DiagnosisId TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_DiagnosisId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DiagnosisId),
		REFERENCES explanationOfBenefit_Diagnosis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_Procedure(
	codeableConceptId TEXT,
	explanationOfBenefit_ProcedureId TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_ProcedureId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ProcedureId),
		REFERENCES explanationOfBenefit_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_Item(
	codeableConceptId TEXT,
	explanationOfBenefit_ItemId TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_ItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ItemId),
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_Detail(
	codeableConceptId TEXT,
	explanationOfBenefit_DetailId TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_DetailId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DetailId),
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_SubDetail(
	codeableConceptId TEXT,
	explanationOfBenefit_SubDetailId TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_SubDetailId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetailId),
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_AddItem(
	codeableConceptId TEXT,
	explanationOfBenefit_AddItemId TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_AddItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AddItemId),
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_Detail1(
	codeableConceptId TEXT,
	explanationOfBenefit_Detail1Id TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_Detail1Id),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_Detail1Id),
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__explanationOfBenefit_SubDetail1(
	codeableConceptId TEXT,
	explanationOfBenefit_SubDetail1Id TEXT,
	PRIMARY KEY (codeableConceptId, explanationOfBenefit_SubDetail1Id),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetail1Id),
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__familyMemberHistory(
	codeableConceptId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (codeableConceptId, familyMemberHistoryId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__flag(
	codeableConceptId TEXT,
	flagId TEXT,
	PRIMARY KEY (codeableConceptId, flagId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (flagId),
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__goal(
	codeableConceptId TEXT,
	goalId TEXT,
	PRIMARY KEY (codeableConceptId, goalId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (goalId),
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__graphDefinition(
	codeableConceptId TEXT,
	graphDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, graphDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinitionId),
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__guidanceResponse(
	codeableConceptId TEXT,
	guidanceResponseId TEXT,
	PRIMARY KEY (codeableConceptId, guidanceResponseId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (guidanceResponseId),
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__healthcareService(
	codeableConceptId TEXT,
	healthcareServiceId TEXT,
	PRIMARY KEY (codeableConceptId, healthcareServiceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareServiceId),
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__imagingStudy(
	codeableConceptId TEXT,
	imagingStudyId TEXT,
	PRIMARY KEY (codeableConceptId, imagingStudyId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudyId),
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__immunization(
	codeableConceptId TEXT,
	immunizationId TEXT,
	PRIMARY KEY (codeableConceptId, immunizationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationId),
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__immunization_ProtocolApplied(
	codeableConceptId TEXT,
	immunization_ProtocolAppliedId TEXT,
	PRIMARY KEY (codeableConceptId, immunization_ProtocolAppliedId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunization_ProtocolAppliedId),
		REFERENCES immunization_ProtocolApplied (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__immunizationEvaluation(
	codeableConceptId TEXT,
	immunizationEvaluationId TEXT,
	PRIMARY KEY (codeableConceptId, immunizationEvaluationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationEvaluationId),
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__immunizationRecommendation_Recommendation(
	codeableConceptId TEXT,
	immunizationRecommendation_RecommendationId TEXT,
	PRIMARY KEY (codeableConceptId, immunizationRecommendation_RecommendationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationRecommendation_RecommendationId),
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__implementationGuide(
	codeableConceptId TEXT,
	implementationGuideId TEXT,
	PRIMARY KEY (codeableConceptId, implementationGuideId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuideId),
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__insurancePlan(
	codeableConceptId TEXT,
	insurancePlanId TEXT,
	PRIMARY KEY (codeableConceptId, insurancePlanId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlanId),
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__insurancePlan_Cost(
	codeableConceptId TEXT,
	insurancePlan_CostId TEXT,
	PRIMARY KEY (codeableConceptId, insurancePlan_CostId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_CostId),
		REFERENCES insurancePlan_Cost (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__library(
	codeableConceptId TEXT,
	libraryId TEXT,
	PRIMARY KEY (codeableConceptId, libraryId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__location(
	codeableConceptId TEXT,
	locationId TEXT,
	PRIMARY KEY (codeableConceptId, locationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__measure(
	codeableConceptId TEXT,
	measureId TEXT,
	PRIMARY KEY (codeableConceptId, measureId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__measure_SupplementalData(
	codeableConceptId TEXT,
	measure_SupplementalDataId TEXT,
	PRIMARY KEY (codeableConceptId, measure_SupplementalDataId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measure_SupplementalDataId),
		REFERENCES measure_SupplementalData (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__measureReport_Stratifier(
	codeableConceptId TEXT,
	measureReport_StratifierId TEXT,
	PRIMARY KEY (codeableConceptId, measureReport_StratifierId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReport_StratifierId),
		REFERENCES measureReport_Stratifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__media(
	codeableConceptId TEXT,
	mediaId TEXT,
	PRIMARY KEY (codeableConceptId, mediaId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (mediaId),
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicationAdministration(
	codeableConceptId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (codeableConceptId, medicationAdministrationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicationDispense_Substitution(
	codeableConceptId TEXT,
	medicationDispense_SubstitutionId TEXT,
	PRIMARY KEY (codeableConceptId, medicationDispense_SubstitutionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispense_SubstitutionId),
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicationKnowledge(
	codeableConceptId TEXT,
	medicationKnowledgeId TEXT,
	PRIMARY KEY (codeableConceptId, medicationKnowledgeId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledgeId),
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicationKnowledge_MedicineClassification(
	codeableConceptId TEXT,
	medicationKnowledge_MedicineClassificationId TEXT,
	PRIMARY KEY (codeableConceptId, medicationKnowledge_MedicineClassificationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_MedicineClassificationId),
		REFERENCES medicationKnowledge_MedicineClassification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicationRequest(
	codeableConceptId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (codeableConceptId, medicationRequestId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicationStatement(
	codeableConceptId TEXT,
	medicationStatementId TEXT,
	PRIMARY KEY (codeableConceptId, medicationStatementId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationStatementId),
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProduct(
	codeableConceptId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductAuthorization(
	codeableConceptId TEXT,
	medicinalProductAuthorizationId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductAuthorizationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorizationId),
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductAuthorization_JurisdictionalAuthorization(
	codeableConceptId TEXT,
	medicinalProductAuthorization_JurisdictionalAuthorizationId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductAuthorization_JurisdictionalAuthorizationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorization_JurisdictionalAuthorizationId),
		REFERENCES medicinalProductAuthorization_JurisdictionalAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductContraindication(
	codeableConceptId TEXT,
	medicinalProductContraindicationId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductContraindicationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductContraindicationId),
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductIndication(
	codeableConceptId TEXT,
	medicinalProductIndicationId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductIndicationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIndicationId),
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductIngredient_Strength(
	codeableConceptId TEXT,
	medicinalProductIngredient_StrengthId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductIngredient_StrengthId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_StrengthId),
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductIngredient_ReferenceStrength(
	codeableConceptId TEXT,
	medicinalProductIngredient_ReferenceStrengthId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductIngredient_ReferenceStrengthId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_ReferenceStrengthId),
		REFERENCES medicinalProductIngredient_ReferenceStrength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductManufactured(
	codeableConceptId TEXT,
	medicinalProductManufacturedId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductManufacturedId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductManufacturedId),
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__medicinalProductPackaged_PackageItem(
	codeableConceptId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,
	PRIMARY KEY (codeableConceptId, medicinalProductPackaged_PackageItemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId),
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__messageDefinition(
	codeableConceptId TEXT,
	messageDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, messageDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinitionId),
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__namingSystem(
	codeableConceptId TEXT,
	namingSystemId TEXT,
	PRIMARY KEY (codeableConceptId, namingSystemId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (namingSystemId),
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__nutritionOrder(
	codeableConceptId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (codeableConceptId, nutritionOrderId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__nutritionOrder_OralDiet(
	codeableConceptId TEXT,
	nutritionOrder_OralDietId TEXT,
	PRIMARY KEY (codeableConceptId, nutritionOrder_OralDietId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_OralDietId),
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__observation(
	codeableConceptId TEXT,
	observationId TEXT,
	PRIMARY KEY (codeableConceptId, observationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationId),
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__observation_ReferenceRange(
	codeableConceptId TEXT,
	observation_ReferenceRangeId TEXT,
	PRIMARY KEY (codeableConceptId, observation_ReferenceRangeId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observation_ReferenceRangeId),
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__observation_Component(
	codeableConceptId TEXT,
	observation_ComponentId TEXT,
	PRIMARY KEY (codeableConceptId, observation_ComponentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observation_ComponentId),
		REFERENCES observation_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__observationDefinition(
	codeableConceptId TEXT,
	observationDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, observationDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinitionId),
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__observationDefinition_QualifiedInterval(
	codeableConceptId TEXT,
	observationDefinition_QualifiedIntervalId TEXT,
	PRIMARY KEY (codeableConceptId, observationDefinition_QualifiedIntervalId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinition_QualifiedIntervalId),
		REFERENCES observationDefinition_QualifiedInterval (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__operationDefinition(
	codeableConceptId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, operationDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__organization(
	codeableConceptId TEXT,
	organizationId TEXT,
	PRIMARY KEY (codeableConceptId, organizationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__organizationAffiliation(
	codeableConceptId TEXT,
	organizationAffiliationId TEXT,
	PRIMARY KEY (codeableConceptId, organizationAffiliationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationAffiliationId),
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__patient_Contact(
	codeableConceptId TEXT,
	patient_ContactId TEXT,
	PRIMARY KEY (codeableConceptId, patient_ContactId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patient_ContactId),
		REFERENCES patient_Contact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__planDefinition(
	codeableConceptId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, planDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__planDefinition_Goal(
	codeableConceptId TEXT,
	planDefinition_GoalId TEXT,
	PRIMARY KEY (codeableConceptId, planDefinition_GoalId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_GoalId),
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__planDefinition_Action(
	codeableConceptId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (codeableConceptId, planDefinition_ActionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__practitioner(
	codeableConceptId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (codeableConceptId, practitionerId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__practitionerRole(
	codeableConceptId TEXT,
	practitionerRoleId TEXT,
	PRIMARY KEY (codeableConceptId, practitionerRoleId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRoleId),
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__procedure(
	codeableConceptId TEXT,
	procedureId TEXT,
	PRIMARY KEY (codeableConceptId, procedureId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__provenance(
	codeableConceptId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (codeableConceptId, provenanceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__provenance_Agent(
	codeableConceptId TEXT,
	provenance_AgentId TEXT,
	PRIMARY KEY (codeableConceptId, provenance_AgentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenance_AgentId),
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__questionnaire(
	codeableConceptId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (codeableConceptId, questionnaireId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__relatedPerson(
	codeableConceptId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (codeableConceptId, relatedPersonId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__requestGroup(
	codeableConceptId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (codeableConceptId, requestGroupId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__requestGroup_Action(
	codeableConceptId TEXT,
	requestGroup_ActionId TEXT,
	PRIMARY KEY (codeableConceptId, requestGroup_ActionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ActionId),
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__researchDefinition(
	codeableConceptId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, researchDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__researchElementDefinition(
	codeableConceptId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, researchElementDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__researchStudy(
	codeableConceptId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (codeableConceptId, researchStudyId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__riskAssessment(
	codeableConceptId TEXT,
	riskAssessmentId TEXT,
	PRIMARY KEY (codeableConceptId, riskAssessmentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskAssessmentId),
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__riskEvidenceSynthesis(
	codeableConceptId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (codeableConceptId, riskEvidenceSynthesisId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__riskEvidenceSynthesis_Certainty(
	codeableConceptId TEXT,
	riskEvidenceSynthesis_CertaintyId TEXT,
	PRIMARY KEY (codeableConceptId, riskEvidenceSynthesis_CertaintyId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_CertaintyId),
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__riskEvidenceSynthesis_CertaintySubcomponent(
	codeableConceptId TEXT,
	riskEvidenceSynthesis_CertaintySubcomponentId TEXT,
	PRIMARY KEY (codeableConceptId, riskEvidenceSynthesis_CertaintySubcomponentId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_CertaintySubcomponentId),
		REFERENCES riskEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__schedule(
	codeableConceptId TEXT,
	scheduleId TEXT,
	PRIMARY KEY (codeableConceptId, scheduleId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (scheduleId),
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__searchParameter(
	codeableConceptId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (codeableConceptId, searchParameterId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__serviceRequest(
	codeableConceptId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (codeableConceptId, serviceRequestId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__slot(
	codeableConceptId TEXT,
	slotId TEXT,
	PRIMARY KEY (codeableConceptId, slotId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (slotId),
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__specimen(
	codeableConceptId TEXT,
	specimenId TEXT,
	PRIMARY KEY (codeableConceptId, specimenId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenId),
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__specimenDefinition(
	codeableConceptId TEXT,
	specimenDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, specimenDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinitionId),
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__specimenDefinition_TypeTested(
	codeableConceptId TEXT,
	specimenDefinition_TypeTestedId TEXT,
	PRIMARY KEY (codeableConceptId, specimenDefinition_TypeTestedId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinition_TypeTestedId),
		REFERENCES specimenDefinition_TypeTested (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__structureDefinition(
	codeableConceptId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (codeableConceptId, structureDefinitionId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__structureMap(
	codeableConceptId TEXT,
	structureMapId TEXT,
	PRIMARY KEY (codeableConceptId, structureMapId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMapId),
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__substance(
	codeableConceptId TEXT,
	substanceId TEXT,
	PRIMARY KEY (codeableConceptId, substanceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceId),
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__substancePolymer(
	codeableConceptId TEXT,
	substancePolymerId TEXT,
	PRIMARY KEY (codeableConceptId, substancePolymerId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymerId),
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__substanceReferenceInformation_Classification(
	codeableConceptId TEXT,
	substanceReferenceInformation_ClassificationId TEXT,
	PRIMARY KEY (codeableConceptId, substanceReferenceInformation_ClassificationId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_ClassificationId),
		REFERENCES substanceReferenceInformation_Classification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__substanceSourceMaterial(
	codeableConceptId TEXT,
	substanceSourceMaterialId TEXT,
	PRIMARY KEY (codeableConceptId, substanceSourceMaterialId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterialId),
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__substanceSpecification_Name(
	codeableConceptId TEXT,
	substanceSpecification_NameId TEXT,
	PRIMARY KEY (codeableConceptId, substanceSpecification_NameId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_NameId),
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__supplyRequest(
	codeableConceptId TEXT,
	supplyRequestId TEXT,
	PRIMARY KEY (codeableConceptId, supplyRequestId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyRequestId),
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__task(
	codeableConceptId TEXT,
	taskId TEXT,
	PRIMARY KEY (codeableConceptId, taskId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (taskId),
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__terminologyCapabilities(
	codeableConceptId TEXT,
	terminologyCapabilitiesId TEXT,
	PRIMARY KEY (codeableConceptId, terminologyCapabilitiesId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilitiesId),
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__testScript(
	codeableConceptId TEXT,
	testScriptId TEXT,
	PRIMARY KEY (codeableConceptId, testScriptId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScriptId),
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__valueSet(
	codeableConceptId TEXT,
	valueSetId TEXT,
	PRIMARY KEY (codeableConceptId, valueSetId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSetId),
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__verificationResult(
	codeableConceptId TEXT,
	verificationResultId TEXT,
	PRIMARY KEY (codeableConceptId, verificationResultId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResultId),
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeableConcept__verificationResult_PrimarySource(
	codeableConceptId TEXT,
	verificationResult_PrimarySourceId TEXT,
	PRIMARY KEY (codeableConceptId, verificationResult_PrimarySourceId),

	FOREIGN KEY (codeableConceptId)
		REFERENCES codeableConcept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResult_PrimarySourceId),
		REFERENCES verificationResult_PrimarySource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE attachment__prodCharacteristic(
	attachmentId TEXT,
	prodCharacteristicId TEXT,
	PRIMARY KEY (attachmentId, prodCharacteristicId),

	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (prodCharacteristicId),
		REFERENCES prodCharacteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE attachment__bodyStructure(
	attachmentId TEXT,
	bodyStructureId TEXT,
	PRIMARY KEY (attachmentId, bodyStructureId),

	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bodyStructureId),
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE attachment__diagnosticReport(
	attachmentId TEXT,
	diagnosticReportId TEXT,
	PRIMARY KEY (attachmentId, diagnosticReportId),

	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (diagnosticReportId),
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE attachment__library(
	attachmentId TEXT,
	libraryId TEXT,
	PRIMARY KEY (attachmentId, libraryId),

	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE attachment__patient(
	attachmentId TEXT,
	patientId TEXT,
	PRIMARY KEY (attachmentId, patientId),

	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE attachment__practitioner(
	attachmentId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (attachmentId, practitionerId),

	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE attachment__relatedPerson(
	attachmentId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (attachmentId, relatedPersonId),

	FOREIGN KEY (attachmentId)
		REFERENCES attachment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE id__elementDefinition(
	idId TEXT,
	elementDefinitionId TEXT,
	PRIMARY KEY (idId, elementDefinitionId),

	FOREIGN KEY (idId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (elementDefinitionId),
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE id__planDefinition_Action(
	idId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (idId, planDefinition_ActionId),

	FOREIGN KEY (idId)
		REFERENCES id (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__account(
	resourceListId TEXT,
	accountId TEXT,
	PRIMARY KEY (resourceListId, accountId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (accountId),
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__activityDefinition(
	resourceListId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (resourceListId, activityDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__adverseEvent(
	resourceListId TEXT,
	adverseEventId TEXT,
	PRIMARY KEY (resourceListId, adverseEventId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (adverseEventId),
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__allergyIntolerance(
	resourceListId TEXT,
	allergyIntoleranceId TEXT,
	PRIMARY KEY (resourceListId, allergyIntoleranceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntoleranceId),
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__appointment(
	resourceListId TEXT,
	appointmentId TEXT,
	PRIMARY KEY (resourceListId, appointmentId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentId),
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__appointmentResponse(
	resourceListId TEXT,
	appointmentResponseId TEXT,
	PRIMARY KEY (resourceListId, appointmentResponseId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentResponseId),
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__auditEvent(
	resourceListId TEXT,
	auditEventId TEXT,
	PRIMARY KEY (resourceListId, auditEventId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEventId),
		REFERENCES auditEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__basic(
	resourceListId TEXT,
	basicId TEXT,
	PRIMARY KEY (resourceListId, basicId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (basicId),
		REFERENCES basic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__biologicallyDerivedProduct(
	resourceListId TEXT,
	biologicallyDerivedProductId TEXT,
	PRIMARY KEY (resourceListId, biologicallyDerivedProductId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProductId),
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__bodyStructure(
	resourceListId TEXT,
	bodyStructureId TEXT,
	PRIMARY KEY (resourceListId, bodyStructureId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bodyStructureId),
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__capabilityStatement(
	resourceListId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (resourceListId, capabilityStatementId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__carePlan(
	resourceListId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (resourceListId, carePlanId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__careTeam(
	resourceListId TEXT,
	careTeamId TEXT,
	PRIMARY KEY (resourceListId, careTeamId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeamId),
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__catalogEntry(
	resourceListId TEXT,
	catalogEntryId TEXT,
	PRIMARY KEY (resourceListId, catalogEntryId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (catalogEntryId),
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__chargeItem(
	resourceListId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (resourceListId, chargeItemId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__chargeItemDefinition(
	resourceListId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (resourceListId, chargeItemDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__claim(
	resourceListId TEXT,
	claimId TEXT,
	PRIMARY KEY (resourceListId, claimId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimId),
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__claimResponse(
	resourceListId TEXT,
	claimResponseId TEXT,
	PRIMARY KEY (resourceListId, claimResponseId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponseId),
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__clinicalImpression(
	resourceListId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (resourceListId, clinicalImpressionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__codeSystem(
	resourceListId TEXT,
	codeSystemId TEXT,
	PRIMARY KEY (resourceListId, codeSystemId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystemId),
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__communication(
	resourceListId TEXT,
	communicationId TEXT,
	PRIMARY KEY (resourceListId, communicationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__communicationRequest(
	resourceListId TEXT,
	communicationRequestId TEXT,
	PRIMARY KEY (resourceListId, communicationRequestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationRequestId),
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__compartmentDefinition(
	resourceListId TEXT,
	compartmentDefinitionId TEXT,
	PRIMARY KEY (resourceListId, compartmentDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compartmentDefinitionId),
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__composition(
	resourceListId TEXT,
	compositionId TEXT,
	PRIMARY KEY (resourceListId, compositionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compositionId),
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__conceptMap(
	resourceListId TEXT,
	conceptMapId TEXT,
	PRIMARY KEY (resourceListId, conceptMapId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMapId),
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__condition(
	resourceListId TEXT,
	conditionId TEXT,
	PRIMARY KEY (resourceListId, conditionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conditionId),
		REFERENCES condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__consent(
	resourceListId TEXT,
	consentId TEXT,
	PRIMARY KEY (resourceListId, consentId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consentId),
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__contract(
	resourceListId TEXT,
	contractId TEXT,
	PRIMARY KEY (resourceListId, contractId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__coverage(
	resourceListId TEXT,
	coverageId TEXT,
	PRIMARY KEY (resourceListId, coverageId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageId),
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__coverageEligibilityRequest(
	resourceListId TEXT,
	coverageEligibilityRequestId TEXT,
	PRIMARY KEY (resourceListId, coverageEligibilityRequestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequestId),
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__coverageEligibilityResponse(
	resourceListId TEXT,
	coverageEligibilityResponseId TEXT,
	PRIMARY KEY (resourceListId, coverageEligibilityResponseId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponseId),
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__detectedIssue(
	resourceListId TEXT,
	detectedIssueId TEXT,
	PRIMARY KEY (resourceListId, detectedIssueId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssueId),
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__device(
	resourceListId TEXT,
	deviceId TEXT,
	PRIMARY KEY (resourceListId, deviceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceId),
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__deviceDefinition(
	resourceListId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (resourceListId, deviceDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__deviceMetric(
	resourceListId TEXT,
	deviceMetricId TEXT,
	PRIMARY KEY (resourceListId, deviceMetricId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceMetricId),
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__deviceRequest(
	resourceListId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (resourceListId, deviceRequestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__deviceUseStatement(
	resourceListId TEXT,
	deviceUseStatementId TEXT,
	PRIMARY KEY (resourceListId, deviceUseStatementId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceUseStatementId),
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__diagnosticReport(
	resourceListId TEXT,
	diagnosticReportId TEXT,
	PRIMARY KEY (resourceListId, diagnosticReportId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (diagnosticReportId),
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__documentManifest(
	resourceListId TEXT,
	documentManifestId TEXT,
	PRIMARY KEY (resourceListId, documentManifestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentManifestId),
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__documentReference(
	resourceListId TEXT,
	documentReferenceId TEXT,
	PRIMARY KEY (resourceListId, documentReferenceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReferenceId),
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__effectEvidenceSynthesis(
	resourceListId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (resourceListId, effectEvidenceSynthesisId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__encounter(
	resourceListId TEXT,
	encounterId TEXT,
	PRIMARY KEY (resourceListId, encounterId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounterId),
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__endpoint(
	resourceListId TEXT,
	endpointId TEXT,
	PRIMARY KEY (resourceListId, endpointId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__enrollmentRequest(
	resourceListId TEXT,
	enrollmentRequestId TEXT,
	PRIMARY KEY (resourceListId, enrollmentRequestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (enrollmentRequestId),
		REFERENCES enrollmentRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__enrollmentResponse(
	resourceListId TEXT,
	enrollmentResponseId TEXT,
	PRIMARY KEY (resourceListId, enrollmentResponseId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (enrollmentResponseId),
		REFERENCES enrollmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__episodeOfCare(
	resourceListId TEXT,
	episodeOfCareId TEXT,
	PRIMARY KEY (resourceListId, episodeOfCareId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (episodeOfCareId),
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__eventDefinition(
	resourceListId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (resourceListId, eventDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__evidence(
	resourceListId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (resourceListId, evidenceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__evidenceVariable(
	resourceListId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (resourceListId, evidenceVariableId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__exampleScenario(
	resourceListId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (resourceListId, exampleScenarioId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__explanationOfBenefit(
	resourceListId TEXT,
	explanationOfBenefitId TEXT,
	PRIMARY KEY (resourceListId, explanationOfBenefitId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefitId),
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__familyMemberHistory(
	resourceListId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (resourceListId, familyMemberHistoryId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__flag(
	resourceListId TEXT,
	flagId TEXT,
	PRIMARY KEY (resourceListId, flagId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (flagId),
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__goal(
	resourceListId TEXT,
	goalId TEXT,
	PRIMARY KEY (resourceListId, goalId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (goalId),
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__graphDefinition(
	resourceListId TEXT,
	graphDefinitionId TEXT,
	PRIMARY KEY (resourceListId, graphDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinitionId),
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__group(
	resourceListId TEXT,
	groupId TEXT,
	PRIMARY KEY (resourceListId, groupId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (groupId),
		REFERENCES group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__guidanceResponse(
	resourceListId TEXT,
	guidanceResponseId TEXT,
	PRIMARY KEY (resourceListId, guidanceResponseId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (guidanceResponseId),
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__healthcareService(
	resourceListId TEXT,
	healthcareServiceId TEXT,
	PRIMARY KEY (resourceListId, healthcareServiceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareServiceId),
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__imagingStudy(
	resourceListId TEXT,
	imagingStudyId TEXT,
	PRIMARY KEY (resourceListId, imagingStudyId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudyId),
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__immunization(
	resourceListId TEXT,
	immunizationId TEXT,
	PRIMARY KEY (resourceListId, immunizationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationId),
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__immunizationEvaluation(
	resourceListId TEXT,
	immunizationEvaluationId TEXT,
	PRIMARY KEY (resourceListId, immunizationEvaluationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationEvaluationId),
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__immunizationRecommendation(
	resourceListId TEXT,
	immunizationRecommendationId TEXT,
	PRIMARY KEY (resourceListId, immunizationRecommendationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationRecommendationId),
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__implementationGuide(
	resourceListId TEXT,
	implementationGuideId TEXT,
	PRIMARY KEY (resourceListId, implementationGuideId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuideId),
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__insurancePlan(
	resourceListId TEXT,
	insurancePlanId TEXT,
	PRIMARY KEY (resourceListId, insurancePlanId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlanId),
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__invoice(
	resourceListId TEXT,
	invoiceId TEXT,
	PRIMARY KEY (resourceListId, invoiceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoiceId),
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__library(
	resourceListId TEXT,
	libraryId TEXT,
	PRIMARY KEY (resourceListId, libraryId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__linkage(
	resourceListId TEXT,
	linkageId TEXT,
	PRIMARY KEY (resourceListId, linkageId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (linkageId),
		REFERENCES linkage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__list(
	resourceListId TEXT,
	listId TEXT,
	PRIMARY KEY (resourceListId, listId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (listId),
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__location(
	resourceListId TEXT,
	locationId TEXT,
	PRIMARY KEY (resourceListId, locationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__measure(
	resourceListId TEXT,
	measureId TEXT,
	PRIMARY KEY (resourceListId, measureId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__measureReport(
	resourceListId TEXT,
	measureReportId TEXT,
	PRIMARY KEY (resourceListId, measureReportId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReportId),
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__media(
	resourceListId TEXT,
	mediaId TEXT,
	PRIMARY KEY (resourceListId, mediaId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (mediaId),
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medication(
	resourceListId TEXT,
	medicationId TEXT,
	PRIMARY KEY (resourceListId, medicationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationId),
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicationAdministration(
	resourceListId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (resourceListId, medicationAdministrationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicationDispense(
	resourceListId TEXT,
	medicationDispenseId TEXT,
	PRIMARY KEY (resourceListId, medicationDispenseId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispenseId),
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicationKnowledge(
	resourceListId TEXT,
	medicationKnowledgeId TEXT,
	PRIMARY KEY (resourceListId, medicationKnowledgeId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledgeId),
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicationRequest(
	resourceListId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (resourceListId, medicationRequestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicationStatement(
	resourceListId TEXT,
	medicationStatementId TEXT,
	PRIMARY KEY (resourceListId, medicationStatementId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationStatementId),
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProduct(
	resourceListId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductAuthorization(
	resourceListId TEXT,
	medicinalProductAuthorizationId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductAuthorizationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorizationId),
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductContraindication(
	resourceListId TEXT,
	medicinalProductContraindicationId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductContraindicationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductContraindicationId),
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductIndication(
	resourceListId TEXT,
	medicinalProductIndicationId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductIndicationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIndicationId),
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductIngredient(
	resourceListId TEXT,
	medicinalProductIngredientId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductIngredientId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredientId),
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductInteraction(
	resourceListId TEXT,
	medicinalProductInteractionId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductInteractionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductInteractionId),
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductManufactured(
	resourceListId TEXT,
	medicinalProductManufacturedId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductManufacturedId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductManufacturedId),
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductPackaged(
	resourceListId TEXT,
	medicinalProductPackagedId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductPackagedId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackagedId),
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductPharmaceutical(
	resourceListId TEXT,
	medicinalProductPharmaceuticalId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductPharmaceuticalId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceuticalId),
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__medicinalProductUndesirableEffect(
	resourceListId TEXT,
	medicinalProductUndesirableEffectId TEXT,
	PRIMARY KEY (resourceListId, medicinalProductUndesirableEffectId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductUndesirableEffectId),
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__messageDefinition(
	resourceListId TEXT,
	messageDefinitionId TEXT,
	PRIMARY KEY (resourceListId, messageDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinitionId),
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__messageHeader(
	resourceListId TEXT,
	messageHeaderId TEXT,
	PRIMARY KEY (resourceListId, messageHeaderId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageHeaderId),
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__molecularSequence(
	resourceListId TEXT,
	molecularSequenceId TEXT,
	PRIMARY KEY (resourceListId, molecularSequenceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequenceId),
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__namingSystem(
	resourceListId TEXT,
	namingSystemId TEXT,
	PRIMARY KEY (resourceListId, namingSystemId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (namingSystemId),
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__nutritionOrder(
	resourceListId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (resourceListId, nutritionOrderId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__observation(
	resourceListId TEXT,
	observationId TEXT,
	PRIMARY KEY (resourceListId, observationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationId),
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__observationDefinition(
	resourceListId TEXT,
	observationDefinitionId TEXT,
	PRIMARY KEY (resourceListId, observationDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinitionId),
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__operationDefinition(
	resourceListId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (resourceListId, operationDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__operationOutcome(
	resourceListId TEXT,
	operationOutcomeId TEXT,
	PRIMARY KEY (resourceListId, operationOutcomeId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationOutcomeId),
		REFERENCES operationOutcome (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__organization(
	resourceListId TEXT,
	organizationId TEXT,
	PRIMARY KEY (resourceListId, organizationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__organizationAffiliation(
	resourceListId TEXT,
	organizationAffiliationId TEXT,
	PRIMARY KEY (resourceListId, organizationAffiliationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationAffiliationId),
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__patient(
	resourceListId TEXT,
	patientId TEXT,
	PRIMARY KEY (resourceListId, patientId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__paymentNotice(
	resourceListId TEXT,
	paymentNoticeId TEXT,
	PRIMARY KEY (resourceListId, paymentNoticeId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentNoticeId),
		REFERENCES paymentNotice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__paymentReconciliation(
	resourceListId TEXT,
	paymentReconciliationId TEXT,
	PRIMARY KEY (resourceListId, paymentReconciliationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentReconciliationId),
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__person(
	resourceListId TEXT,
	personId TEXT,
	PRIMARY KEY (resourceListId, personId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (personId),
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__planDefinition(
	resourceListId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (resourceListId, planDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__practitioner(
	resourceListId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (resourceListId, practitionerId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__practitionerRole(
	resourceListId TEXT,
	practitionerRoleId TEXT,
	PRIMARY KEY (resourceListId, practitionerRoleId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRoleId),
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__procedure(
	resourceListId TEXT,
	procedureId TEXT,
	PRIMARY KEY (resourceListId, procedureId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__provenance(
	resourceListId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (resourceListId, provenanceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__questionnaire(
	resourceListId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (resourceListId, questionnaireId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__questionnaireResponse(
	resourceListId TEXT,
	questionnaireResponseId TEXT,
	PRIMARY KEY (resourceListId, questionnaireResponseId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponseId),
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__relatedPerson(
	resourceListId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (resourceListId, relatedPersonId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__requestGroup(
	resourceListId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (resourceListId, requestGroupId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__researchDefinition(
	resourceListId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (resourceListId, researchDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__researchElementDefinition(
	resourceListId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (resourceListId, researchElementDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__researchStudy(
	resourceListId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (resourceListId, researchStudyId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__researchSubject(
	resourceListId TEXT,
	researchSubjectId TEXT,
	PRIMARY KEY (resourceListId, researchSubjectId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchSubjectId),
		REFERENCES researchSubject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__riskAssessment(
	resourceListId TEXT,
	riskAssessmentId TEXT,
	PRIMARY KEY (resourceListId, riskAssessmentId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskAssessmentId),
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__riskEvidenceSynthesis(
	resourceListId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (resourceListId, riskEvidenceSynthesisId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__schedule(
	resourceListId TEXT,
	scheduleId TEXT,
	PRIMARY KEY (resourceListId, scheduleId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (scheduleId),
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__searchParameter(
	resourceListId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (resourceListId, searchParameterId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__serviceRequest(
	resourceListId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (resourceListId, serviceRequestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__slot(
	resourceListId TEXT,
	slotId TEXT,
	PRIMARY KEY (resourceListId, slotId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (slotId),
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__specimen(
	resourceListId TEXT,
	specimenId TEXT,
	PRIMARY KEY (resourceListId, specimenId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenId),
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__specimenDefinition(
	resourceListId TEXT,
	specimenDefinitionId TEXT,
	PRIMARY KEY (resourceListId, specimenDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenDefinitionId),
		REFERENCES specimenDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__structureDefinition(
	resourceListId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (resourceListId, structureDefinitionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__structureMap(
	resourceListId TEXT,
	structureMapId TEXT,
	PRIMARY KEY (resourceListId, structureMapId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMapId),
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__subscription(
	resourceListId TEXT,
	subscriptionId TEXT,
	PRIMARY KEY (resourceListId, subscriptionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (subscriptionId),
		REFERENCES subscription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__substance(
	resourceListId TEXT,
	substanceId TEXT,
	PRIMARY KEY (resourceListId, substanceId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceId),
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__substanceNucleicAcid(
	resourceListId TEXT,
	substanceNucleicAcidId TEXT,
	PRIMARY KEY (resourceListId, substanceNucleicAcidId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceNucleicAcidId),
		REFERENCES substanceNucleicAcid (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__substancePolymer(
	resourceListId TEXT,
	substancePolymerId TEXT,
	PRIMARY KEY (resourceListId, substancePolymerId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substancePolymerId),
		REFERENCES substancePolymer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__substanceProtein(
	resourceListId TEXT,
	substanceProteinId TEXT,
	PRIMARY KEY (resourceListId, substanceProteinId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceProteinId),
		REFERENCES substanceProtein (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__substanceReferenceInformation(
	resourceListId TEXT,
	substanceReferenceInformationId TEXT,
	PRIMARY KEY (resourceListId, substanceReferenceInformationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformationId),
		REFERENCES substanceReferenceInformation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__substanceSourceMaterial(
	resourceListId TEXT,
	substanceSourceMaterialId TEXT,
	PRIMARY KEY (resourceListId, substanceSourceMaterialId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterialId),
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__substanceSpecification(
	resourceListId TEXT,
	substanceSpecificationId TEXT,
	PRIMARY KEY (resourceListId, substanceSpecificationId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecificationId),
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__supplyDelivery(
	resourceListId TEXT,
	supplyDeliveryId TEXT,
	PRIMARY KEY (resourceListId, supplyDeliveryId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyDeliveryId),
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__supplyRequest(
	resourceListId TEXT,
	supplyRequestId TEXT,
	PRIMARY KEY (resourceListId, supplyRequestId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyRequestId),
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__task(
	resourceListId TEXT,
	taskId TEXT,
	PRIMARY KEY (resourceListId, taskId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (taskId),
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__terminologyCapabilities(
	resourceListId TEXT,
	terminologyCapabilitiesId TEXT,
	PRIMARY KEY (resourceListId, terminologyCapabilitiesId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilitiesId),
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__testReport(
	resourceListId TEXT,
	testReportId TEXT,
	PRIMARY KEY (resourceListId, testReportId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testReportId),
		REFERENCES testReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__testScript(
	resourceListId TEXT,
	testScriptId TEXT,
	PRIMARY KEY (resourceListId, testScriptId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScriptId),
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__valueSet(
	resourceListId TEXT,
	valueSetId TEXT,
	PRIMARY KEY (resourceListId, valueSetId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSetId),
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__verificationResult(
	resourceListId TEXT,
	verificationResultId TEXT,
	PRIMARY KEY (resourceListId, verificationResultId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResultId),
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE resourceList__visionPrescription(
	resourceListId TEXT,
	visionPrescriptionId TEXT,
	PRIMARY KEY (resourceListId, visionPrescriptionId),

	FOREIGN KEY (resourceListId)
		REFERENCES resourceList (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (visionPrescriptionId),
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__account(
	identifierId TEXT,
	accountId TEXT,
	PRIMARY KEY (identifierId, accountId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (accountId),
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__activityDefinition(
	identifierId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (identifierId, activityDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__allergyIntolerance(
	identifierId TEXT,
	allergyIntoleranceId TEXT,
	PRIMARY KEY (identifierId, allergyIntoleranceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntoleranceId),
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__appointment(
	identifierId TEXT,
	appointmentId TEXT,
	PRIMARY KEY (identifierId, appointmentId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentId),
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__appointmentResponse(
	identifierId TEXT,
	appointmentResponseId TEXT,
	PRIMARY KEY (identifierId, appointmentResponseId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentResponseId),
		REFERENCES appointmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__basic(
	identifierId TEXT,
	basicId TEXT,
	PRIMARY KEY (identifierId, basicId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (basicId),
		REFERENCES basic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__biologicallyDerivedProduct(
	identifierId TEXT,
	biologicallyDerivedProductId TEXT,
	PRIMARY KEY (identifierId, biologicallyDerivedProductId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProductId),
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__bodyStructure(
	identifierId TEXT,
	bodyStructureId TEXT,
	PRIMARY KEY (identifierId, bodyStructureId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bodyStructureId),
		REFERENCES bodyStructure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__carePlan(
	identifierId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (identifierId, carePlanId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__careTeam(
	identifierId TEXT,
	careTeamId TEXT,
	PRIMARY KEY (identifierId, careTeamId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeamId),
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__catalogEntry(
	identifierId TEXT,
	catalogEntryId TEXT,
	PRIMARY KEY (identifierId, catalogEntryId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (catalogEntryId),
		REFERENCES catalogEntry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__chargeItem(
	identifierId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (identifierId, chargeItemId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__chargeItemDefinition(
	identifierId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (identifierId, chargeItemDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__claim(
	identifierId TEXT,
	claimId TEXT,
	PRIMARY KEY (identifierId, claimId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimId),
		REFERENCES claim (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__claimResponse(
	identifierId TEXT,
	claimResponseId TEXT,
	PRIMARY KEY (identifierId, claimResponseId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponseId),
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__clinicalImpression(
	identifierId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (identifierId, clinicalImpressionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__codeSystem(
	identifierId TEXT,
	codeSystemId TEXT,
	PRIMARY KEY (identifierId, codeSystemId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystemId),
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__communication(
	identifierId TEXT,
	communicationId TEXT,
	PRIMARY KEY (identifierId, communicationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__communicationRequest(
	identifierId TEXT,
	communicationRequestId TEXT,
	PRIMARY KEY (identifierId, communicationRequestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationRequestId),
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__condition(
	identifierId TEXT,
	conditionId TEXT,
	PRIMARY KEY (identifierId, conditionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conditionId),
		REFERENCES condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__consent(
	identifierId TEXT,
	consentId TEXT,
	PRIMARY KEY (identifierId, consentId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consentId),
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__contract(
	identifierId TEXT,
	contractId TEXT,
	PRIMARY KEY (identifierId, contractId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__contract_Offer(
	identifierId TEXT,
	contract_OfferId TEXT,
	PRIMARY KEY (identifierId, contract_OfferId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_OfferId),
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__coverage(
	identifierId TEXT,
	coverageId TEXT,
	PRIMARY KEY (identifierId, coverageId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageId),
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__coverageEligibilityRequest(
	identifierId TEXT,
	coverageEligibilityRequestId TEXT,
	PRIMARY KEY (identifierId, coverageEligibilityRequestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequestId),
		REFERENCES coverageEligibilityRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__coverageEligibilityResponse(
	identifierId TEXT,
	coverageEligibilityResponseId TEXT,
	PRIMARY KEY (identifierId, coverageEligibilityResponseId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityResponseId),
		REFERENCES coverageEligibilityResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__detectedIssue(
	identifierId TEXT,
	detectedIssueId TEXT,
	PRIMARY KEY (identifierId, detectedIssueId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssueId),
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__device(
	identifierId TEXT,
	deviceId TEXT,
	PRIMARY KEY (identifierId, deviceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceId),
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__deviceDefinition(
	identifierId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (identifierId, deviceDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__deviceMetric(
	identifierId TEXT,
	deviceMetricId TEXT,
	PRIMARY KEY (identifierId, deviceMetricId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceMetricId),
		REFERENCES deviceMetric (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__deviceRequest(
	identifierId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (identifierId, deviceRequestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__deviceUseStatement(
	identifierId TEXT,
	deviceUseStatementId TEXT,
	PRIMARY KEY (identifierId, deviceUseStatementId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceUseStatementId),
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__diagnosticReport(
	identifierId TEXT,
	diagnosticReportId TEXT,
	PRIMARY KEY (identifierId, diagnosticReportId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (diagnosticReportId),
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__documentManifest(
	identifierId TEXT,
	documentManifestId TEXT,
	PRIMARY KEY (identifierId, documentManifestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentManifestId),
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__documentReference(
	identifierId TEXT,
	documentReferenceId TEXT,
	PRIMARY KEY (identifierId, documentReferenceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReferenceId),
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__effectEvidenceSynthesis(
	identifierId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (identifierId, effectEvidenceSynthesisId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__encounter(
	identifierId TEXT,
	encounterId TEXT,
	PRIMARY KEY (identifierId, encounterId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounterId),
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__endpoint(
	identifierId TEXT,
	endpointId TEXT,
	PRIMARY KEY (identifierId, endpointId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (endpointId),
		REFERENCES endpoint (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__enrollmentRequest(
	identifierId TEXT,
	enrollmentRequestId TEXT,
	PRIMARY KEY (identifierId, enrollmentRequestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (enrollmentRequestId),
		REFERENCES enrollmentRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__enrollmentResponse(
	identifierId TEXT,
	enrollmentResponseId TEXT,
	PRIMARY KEY (identifierId, enrollmentResponseId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (enrollmentResponseId),
		REFERENCES enrollmentResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__episodeOfCare(
	identifierId TEXT,
	episodeOfCareId TEXT,
	PRIMARY KEY (identifierId, episodeOfCareId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (episodeOfCareId),
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__eventDefinition(
	identifierId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (identifierId, eventDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__evidence(
	identifierId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (identifierId, evidenceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__evidenceVariable(
	identifierId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (identifierId, evidenceVariableId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__exampleScenario(
	identifierId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (identifierId, exampleScenarioId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__explanationOfBenefit(
	identifierId TEXT,
	explanationOfBenefitId TEXT,
	PRIMARY KEY (identifierId, explanationOfBenefitId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefitId),
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__familyMemberHistory(
	identifierId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (identifierId, familyMemberHistoryId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__flag(
	identifierId TEXT,
	flagId TEXT,
	PRIMARY KEY (identifierId, flagId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (flagId),
		REFERENCES flag (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__goal(
	identifierId TEXT,
	goalId TEXT,
	PRIMARY KEY (identifierId, goalId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (goalId),
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__group(
	identifierId TEXT,
	groupId TEXT,
	PRIMARY KEY (identifierId, groupId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (groupId),
		REFERENCES group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__guidanceResponse(
	identifierId TEXT,
	guidanceResponseId TEXT,
	PRIMARY KEY (identifierId, guidanceResponseId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (guidanceResponseId),
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__healthcareService(
	identifierId TEXT,
	healthcareServiceId TEXT,
	PRIMARY KEY (identifierId, healthcareServiceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareServiceId),
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__imagingStudy(
	identifierId TEXT,
	imagingStudyId TEXT,
	PRIMARY KEY (identifierId, imagingStudyId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudyId),
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__immunization(
	identifierId TEXT,
	immunizationId TEXT,
	PRIMARY KEY (identifierId, immunizationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationId),
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__immunizationEvaluation(
	identifierId TEXT,
	immunizationEvaluationId TEXT,
	PRIMARY KEY (identifierId, immunizationEvaluationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationEvaluationId),
		REFERENCES immunizationEvaluation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__immunizationRecommendation(
	identifierId TEXT,
	immunizationRecommendationId TEXT,
	PRIMARY KEY (identifierId, immunizationRecommendationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationRecommendationId),
		REFERENCES immunizationRecommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__insurancePlan(
	identifierId TEXT,
	insurancePlanId TEXT,
	PRIMARY KEY (identifierId, insurancePlanId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlanId),
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__insurancePlan_Plan(
	identifierId TEXT,
	insurancePlan_PlanId TEXT,
	PRIMARY KEY (identifierId, insurancePlan_PlanId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_PlanId),
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__invoice(
	identifierId TEXT,
	invoiceId TEXT,
	PRIMARY KEY (identifierId, invoiceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoiceId),
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__library(
	identifierId TEXT,
	libraryId TEXT,
	PRIMARY KEY (identifierId, libraryId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__list(
	identifierId TEXT,
	listId TEXT,
	PRIMARY KEY (identifierId, listId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (listId),
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__location(
	identifierId TEXT,
	locationId TEXT,
	PRIMARY KEY (identifierId, locationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__measure(
	identifierId TEXT,
	measureId TEXT,
	PRIMARY KEY (identifierId, measureId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__measureReport(
	identifierId TEXT,
	measureReportId TEXT,
	PRIMARY KEY (identifierId, measureReportId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReportId),
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__media(
	identifierId TEXT,
	mediaId TEXT,
	PRIMARY KEY (identifierId, mediaId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (mediaId),
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medication(
	identifierId TEXT,
	medicationId TEXT,
	PRIMARY KEY (identifierId, medicationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationId),
		REFERENCES medication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicationAdministration(
	identifierId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (identifierId, medicationAdministrationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicationDispense(
	identifierId TEXT,
	medicationDispenseId TEXT,
	PRIMARY KEY (identifierId, medicationDispenseId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispenseId),
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicationRequest(
	identifierId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (identifierId, medicationRequestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicationStatement(
	identifierId TEXT,
	medicationStatementId TEXT,
	PRIMARY KEY (identifierId, medicationStatementId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationStatementId),
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicinalProduct(
	identifierId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (identifierId, medicinalProductId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicinalProduct_SpecialDesignation(
	identifierId TEXT,
	medicinalProduct_SpecialDesignationId TEXT,
	PRIMARY KEY (identifierId, medicinalProduct_SpecialDesignationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProduct_SpecialDesignationId),
		REFERENCES medicinalProduct_SpecialDesignation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicinalProductAuthorization(
	identifierId TEXT,
	medicinalProductAuthorizationId TEXT,
	PRIMARY KEY (identifierId, medicinalProductAuthorizationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorizationId),
		REFERENCES medicinalProductAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicinalProductAuthorization_JurisdictionalAuthorization(
	identifierId TEXT,
	medicinalProductAuthorization_JurisdictionalAuthorizationId TEXT,
	PRIMARY KEY (identifierId, medicinalProductAuthorization_JurisdictionalAuthorizationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductAuthorization_JurisdictionalAuthorizationId),
		REFERENCES medicinalProductAuthorization_JurisdictionalAuthorization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicinalProductPackaged(
	identifierId TEXT,
	medicinalProductPackagedId TEXT,
	PRIMARY KEY (identifierId, medicinalProductPackagedId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackagedId),
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicinalProductPackaged_PackageItem(
	identifierId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,
	PRIMARY KEY (identifierId, medicinalProductPackaged_PackageItemId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId),
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__medicinalProductPharmaceutical(
	identifierId TEXT,
	medicinalProductPharmaceuticalId TEXT,
	PRIMARY KEY (identifierId, medicinalProductPharmaceuticalId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceuticalId),
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__messageDefinition(
	identifierId TEXT,
	messageDefinitionId TEXT,
	PRIMARY KEY (identifierId, messageDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinitionId),
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__molecularSequence(
	identifierId TEXT,
	molecularSequenceId TEXT,
	PRIMARY KEY (identifierId, molecularSequenceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequenceId),
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__nutritionOrder(
	identifierId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (identifierId, nutritionOrderId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__observation(
	identifierId TEXT,
	observationId TEXT,
	PRIMARY KEY (identifierId, observationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationId),
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__observationDefinition(
	identifierId TEXT,
	observationDefinitionId TEXT,
	PRIMARY KEY (identifierId, observationDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationDefinitionId),
		REFERENCES observationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__organization(
	identifierId TEXT,
	organizationId TEXT,
	PRIMARY KEY (identifierId, organizationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__organizationAffiliation(
	identifierId TEXT,
	organizationAffiliationId TEXT,
	PRIMARY KEY (identifierId, organizationAffiliationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationAffiliationId),
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__patient(
	identifierId TEXT,
	patientId TEXT,
	PRIMARY KEY (identifierId, patientId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__paymentNotice(
	identifierId TEXT,
	paymentNoticeId TEXT,
	PRIMARY KEY (identifierId, paymentNoticeId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentNoticeId),
		REFERENCES paymentNotice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__paymentReconciliation(
	identifierId TEXT,
	paymentReconciliationId TEXT,
	PRIMARY KEY (identifierId, paymentReconciliationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (paymentReconciliationId),
		REFERENCES paymentReconciliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__person(
	identifierId TEXT,
	personId TEXT,
	PRIMARY KEY (identifierId, personId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (personId),
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__planDefinition(
	identifierId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (identifierId, planDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__practitioner(
	identifierId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (identifierId, practitionerId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__practitioner_Qualification(
	identifierId TEXT,
	practitioner_QualificationId TEXT,
	PRIMARY KEY (identifierId, practitioner_QualificationId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitioner_QualificationId),
		REFERENCES practitioner_Qualification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__practitionerRole(
	identifierId TEXT,
	practitionerRoleId TEXT,
	PRIMARY KEY (identifierId, practitionerRoleId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRoleId),
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__procedure(
	identifierId TEXT,
	procedureId TEXT,
	PRIMARY KEY (identifierId, procedureId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__questionnaire(
	identifierId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (identifierId, questionnaireId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__relatedPerson(
	identifierId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (identifierId, relatedPersonId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__requestGroup(
	identifierId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (identifierId, requestGroupId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__researchDefinition(
	identifierId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (identifierId, researchDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__researchElementDefinition(
	identifierId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (identifierId, researchElementDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__researchStudy(
	identifierId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (identifierId, researchStudyId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__researchSubject(
	identifierId TEXT,
	researchSubjectId TEXT,
	PRIMARY KEY (identifierId, researchSubjectId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchSubjectId),
		REFERENCES researchSubject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__riskAssessment(
	identifierId TEXT,
	riskAssessmentId TEXT,
	PRIMARY KEY (identifierId, riskAssessmentId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskAssessmentId),
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__riskEvidenceSynthesis(
	identifierId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (identifierId, riskEvidenceSynthesisId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__schedule(
	identifierId TEXT,
	scheduleId TEXT,
	PRIMARY KEY (identifierId, scheduleId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (scheduleId),
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__serviceRequest(
	identifierId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (identifierId, serviceRequestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__slot(
	identifierId TEXT,
	slotId TEXT,
	PRIMARY KEY (identifierId, slotId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (slotId),
		REFERENCES slot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__specimen(
	identifierId TEXT,
	specimenId TEXT,
	PRIMARY KEY (identifierId, specimenId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenId),
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__specimen_Container(
	identifierId TEXT,
	specimen_ContainerId TEXT,
	PRIMARY KEY (identifierId, specimen_ContainerId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimen_ContainerId),
		REFERENCES specimen_Container (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__structureDefinition(
	identifierId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (identifierId, structureDefinitionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__structureMap(
	identifierId TEXT,
	structureMapId TEXT,
	PRIMARY KEY (identifierId, structureMapId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMapId),
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__substance(
	identifierId TEXT,
	substanceId TEXT,
	PRIMARY KEY (identifierId, substanceId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceId),
		REFERENCES substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__substanceSourceMaterial(
	identifierId TEXT,
	substanceSourceMaterialId TEXT,
	PRIMARY KEY (identifierId, substanceSourceMaterialId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSourceMaterialId),
		REFERENCES substanceSourceMaterial (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__supplyDelivery(
	identifierId TEXT,
	supplyDeliveryId TEXT,
	PRIMARY KEY (identifierId, supplyDeliveryId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyDeliveryId),
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__supplyRequest(
	identifierId TEXT,
	supplyRequestId TEXT,
	PRIMARY KEY (identifierId, supplyRequestId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyRequestId),
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__task(
	identifierId TEXT,
	taskId TEXT,
	PRIMARY KEY (identifierId, taskId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (taskId),
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__valueSet(
	identifierId TEXT,
	valueSetId TEXT,
	PRIMARY KEY (identifierId, valueSetId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSetId),
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE identifier__visionPrescription(
	identifierId TEXT,
	visionPrescriptionId TEXT,
	PRIMARY KEY (identifierId, visionPrescriptionId),

	FOREIGN KEY (identifierId)
		REFERENCES identifier (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (visionPrescriptionId),
		REFERENCES visionPrescription (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__account(
	referenceId TEXT,
	accountId TEXT,
	PRIMARY KEY (referenceId, accountId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (accountId),
		REFERENCES account (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__activityDefinition(
	referenceId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (referenceId, activityDefinitionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__adverseEvent(
	referenceId TEXT,
	adverseEventId TEXT,
	PRIMARY KEY (referenceId, adverseEventId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (adverseEventId),
		REFERENCES adverseEvent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__appointment(
	referenceId TEXT,
	appointmentId TEXT,
	PRIMARY KEY (referenceId, appointmentId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentId),
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__biologicallyDerivedProduct(
	referenceId TEXT,
	biologicallyDerivedProductId TEXT,
	PRIMARY KEY (referenceId, biologicallyDerivedProductId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (biologicallyDerivedProductId),
		REFERENCES biologicallyDerivedProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__carePlan(
	referenceId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (referenceId, carePlanId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__carePlan_Activity(
	referenceId TEXT,
	carePlan_ActivityId TEXT,
	PRIMARY KEY (referenceId, carePlan_ActivityId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_ActivityId),
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__carePlan_Detail(
	referenceId TEXT,
	carePlan_DetailId TEXT,
	PRIMARY KEY (referenceId, carePlan_DetailId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_DetailId),
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__careTeam(
	referenceId TEXT,
	careTeamId TEXT,
	PRIMARY KEY (referenceId, careTeamId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeamId),
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__chargeItem(
	referenceId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (referenceId, chargeItemId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__chargeItemDefinition(
	referenceId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (referenceId, chargeItemDefinitionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__claim_Procedure(
	referenceId TEXT,
	claim_ProcedureId TEXT,
	PRIMARY KEY (referenceId, claim_ProcedureId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ProcedureId),
		REFERENCES claim_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__claim_Item(
	referenceId TEXT,
	claim_ItemId TEXT,
	PRIMARY KEY (referenceId, claim_ItemId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ItemId),
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__claim_Detail(
	referenceId TEXT,
	claim_DetailId TEXT,
	PRIMARY KEY (referenceId, claim_DetailId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_DetailId),
		REFERENCES claim_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__claim_SubDetail(
	referenceId TEXT,
	claim_SubDetailId TEXT,
	PRIMARY KEY (referenceId, claim_SubDetailId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_SubDetailId),
		REFERENCES claim_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__claimResponse(
	referenceId TEXT,
	claimResponseId TEXT,
	PRIMARY KEY (referenceId, claimResponseId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponseId),
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__claimResponse_AddItem(
	referenceId TEXT,
	claimResponse_AddItemId TEXT,
	PRIMARY KEY (referenceId, claimResponse_AddItemId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AddItemId),
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__clinicalImpression(
	referenceId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (referenceId, clinicalImpressionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__clinicalImpression_Investigation(
	referenceId TEXT,
	clinicalImpression_InvestigationId TEXT,
	PRIMARY KEY (referenceId, clinicalImpression_InvestigationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpression_InvestigationId),
		REFERENCES clinicalImpression_Investigation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__communication(
	referenceId TEXT,
	communicationId TEXT,
	PRIMARY KEY (referenceId, communicationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__communicationRequest(
	referenceId TEXT,
	communicationRequestId TEXT,
	PRIMARY KEY (referenceId, communicationRequestId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationRequestId),
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__composition(
	referenceId TEXT,
	compositionId TEXT,
	PRIMARY KEY (referenceId, compositionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compositionId),
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__composition_Event(
	referenceId TEXT,
	composition_EventId TEXT,
	PRIMARY KEY (referenceId, composition_EventId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_EventId),
		REFERENCES composition_Event (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__composition_Section(
	referenceId TEXT,
	composition_SectionId TEXT,
	PRIMARY KEY (referenceId, composition_SectionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_SectionId),
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__condition_Stage(
	referenceId TEXT,
	condition_StageId TEXT,
	PRIMARY KEY (referenceId, condition_StageId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (condition_StageId),
		REFERENCES condition_Stage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__condition_Evidence(
	referenceId TEXT,
	condition_EvidenceId TEXT,
	PRIMARY KEY (referenceId, condition_EvidenceId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (condition_EvidenceId),
		REFERENCES condition_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__consent(
	referenceId TEXT,
	consentId TEXT,
	PRIMARY KEY (referenceId, consentId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (consentId),
		REFERENCES consent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__contract(
	referenceId TEXT,
	contractId TEXT,
	PRIMARY KEY (referenceId, contractId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__contract_Party(
	referenceId TEXT,
	contract_PartyId TEXT,
	PRIMARY KEY (referenceId, contract_PartyId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_PartyId),
		REFERENCES contract_Party (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__contract_Asset(
	referenceId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (referenceId, contract_AssetId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__contract_Action(
	referenceId TEXT,
	contract_ActionId TEXT,
	PRIMARY KEY (referenceId, contract_ActionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ActionId),
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__contract_Subject(
	referenceId TEXT,
	contract_SubjectId TEXT,
	PRIMARY KEY (referenceId, contract_SubjectId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SubjectId),
		REFERENCES contract_Subject (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__coverage(
	referenceId TEXT,
	coverageId TEXT,
	PRIMARY KEY (referenceId, coverageId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageId),
		REFERENCES coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__coverageEligibilityRequest_Item(
	referenceId TEXT,
	coverageEligibilityRequest_ItemId TEXT,
	PRIMARY KEY (referenceId, coverageEligibilityRequest_ItemId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_ItemId),
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__detectedIssue(
	referenceId TEXT,
	detectedIssueId TEXT,
	PRIMARY KEY (referenceId, detectedIssueId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssueId),
		REFERENCES detectedIssue (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__detectedIssue_Evidence(
	referenceId TEXT,
	detectedIssue_EvidenceId TEXT,
	PRIMARY KEY (referenceId, detectedIssue_EvidenceId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (detectedIssue_EvidenceId),
		REFERENCES detectedIssue_Evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__deviceRequest(
	referenceId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (referenceId, deviceRequestId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__deviceUseStatement(
	referenceId TEXT,
	deviceUseStatementId TEXT,
	PRIMARY KEY (referenceId, deviceUseStatementId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceUseStatementId),
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__diagnosticReport(
	referenceId TEXT,
	diagnosticReportId TEXT,
	PRIMARY KEY (referenceId, diagnosticReportId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (diagnosticReportId),
		REFERENCES diagnosticReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__documentManifest(
	referenceId TEXT,
	documentManifestId TEXT,
	PRIMARY KEY (referenceId, documentManifestId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentManifestId),
		REFERENCES documentManifest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__documentReference(
	referenceId TEXT,
	documentReferenceId TEXT,
	PRIMARY KEY (referenceId, documentReferenceId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReferenceId),
		REFERENCES documentReference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__documentReference_Context(
	referenceId TEXT,
	documentReference_ContextId TEXT,
	PRIMARY KEY (referenceId, documentReference_ContextId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (documentReference_ContextId),
		REFERENCES documentReference_Context (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__encounter(
	referenceId TEXT,
	encounterId TEXT,
	PRIMARY KEY (referenceId, encounterId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (encounterId),
		REFERENCES encounter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__episodeOfCare(
	referenceId TEXT,
	episodeOfCareId TEXT,
	PRIMARY KEY (referenceId, episodeOfCareId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (episodeOfCareId),
		REFERENCES episodeOfCare (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__evidence(
	referenceId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (referenceId, evidenceId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__explanationOfBenefit_Procedure(
	referenceId TEXT,
	explanationOfBenefit_ProcedureId TEXT,
	PRIMARY KEY (referenceId, explanationOfBenefit_ProcedureId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ProcedureId),
		REFERENCES explanationOfBenefit_Procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__explanationOfBenefit_Item(
	referenceId TEXT,
	explanationOfBenefit_ItemId TEXT,
	PRIMARY KEY (referenceId, explanationOfBenefit_ItemId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ItemId),
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__explanationOfBenefit_Detail(
	referenceId TEXT,
	explanationOfBenefit_DetailId TEXT,
	PRIMARY KEY (referenceId, explanationOfBenefit_DetailId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DetailId),
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__explanationOfBenefit_SubDetail(
	referenceId TEXT,
	explanationOfBenefit_SubDetailId TEXT,
	PRIMARY KEY (referenceId, explanationOfBenefit_SubDetailId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetailId),
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__explanationOfBenefit_AddItem(
	referenceId TEXT,
	explanationOfBenefit_AddItemId TEXT,
	PRIMARY KEY (referenceId, explanationOfBenefit_AddItemId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AddItemId),
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__familyMemberHistory(
	referenceId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (referenceId, familyMemberHistoryId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__goal(
	referenceId TEXT,
	goalId TEXT,
	PRIMARY KEY (referenceId, goalId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (goalId),
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__guidanceResponse(
	referenceId TEXT,
	guidanceResponseId TEXT,
	PRIMARY KEY (referenceId, guidanceResponseId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (guidanceResponseId),
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__healthcareService(
	referenceId TEXT,
	healthcareServiceId TEXT,
	PRIMARY KEY (referenceId, healthcareServiceId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (healthcareServiceId),
		REFERENCES healthcareService (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__imagingStudy(
	referenceId TEXT,
	imagingStudyId TEXT,
	PRIMARY KEY (referenceId, imagingStudyId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudyId),
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__imagingStudy_Series(
	referenceId TEXT,
	imagingStudy_SeriesId TEXT,
	PRIMARY KEY (referenceId, imagingStudy_SeriesId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudy_SeriesId),
		REFERENCES imagingStudy_Series (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__immunization(
	referenceId TEXT,
	immunizationId TEXT,
	PRIMARY KEY (referenceId, immunizationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationId),
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__immunizationRecommendation_Recommendation(
	referenceId TEXT,
	immunizationRecommendation_RecommendationId TEXT,
	PRIMARY KEY (referenceId, immunizationRecommendation_RecommendationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationRecommendation_RecommendationId),
		REFERENCES immunizationRecommendation_Recommendation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__insurancePlan(
	referenceId TEXT,
	insurancePlanId TEXT,
	PRIMARY KEY (referenceId, insurancePlanId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlanId),
		REFERENCES insurancePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__insurancePlan_Coverage(
	referenceId TEXT,
	insurancePlan_CoverageId TEXT,
	PRIMARY KEY (referenceId, insurancePlan_CoverageId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_CoverageId),
		REFERENCES insurancePlan_Coverage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__insurancePlan_Plan(
	referenceId TEXT,
	insurancePlan_PlanId TEXT,
	PRIMARY KEY (referenceId, insurancePlan_PlanId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (insurancePlan_PlanId),
		REFERENCES insurancePlan_Plan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__location(
	referenceId TEXT,
	locationId TEXT,
	PRIMARY KEY (referenceId, locationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (locationId),
		REFERENCES location (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__measureReport(
	referenceId TEXT,
	measureReportId TEXT,
	PRIMARY KEY (referenceId, measureReportId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureReportId),
		REFERENCES measureReport (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__media(
	referenceId TEXT,
	mediaId TEXT,
	PRIMARY KEY (referenceId, mediaId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (mediaId),
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicationAdministration(
	referenceId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (referenceId, medicationAdministrationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicationDispense(
	referenceId TEXT,
	medicationDispenseId TEXT,
	PRIMARY KEY (referenceId, medicationDispenseId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispenseId),
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicationDispense_Substitution(
	referenceId TEXT,
	medicationDispense_SubstitutionId TEXT,
	PRIMARY KEY (referenceId, medicationDispense_SubstitutionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispense_SubstitutionId),
		REFERENCES medicationDispense_Substitution (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicationKnowledge(
	referenceId TEXT,
	medicationKnowledgeId TEXT,
	PRIMARY KEY (referenceId, medicationKnowledgeId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledgeId),
		REFERENCES medicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicationKnowledge_RelatedMedicationKnowledge(
	referenceId TEXT,
	medicationKnowledge_RelatedMedicationKnowledgeId TEXT,
	PRIMARY KEY (referenceId, medicationKnowledge_RelatedMedicationKnowledgeId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_RelatedMedicationKnowledgeId),
		REFERENCES medicationKnowledge_RelatedMedicationKnowledge (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicationRequest(
	referenceId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (referenceId, medicationRequestId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicationStatement(
	referenceId TEXT,
	medicationStatementId TEXT,
	PRIMARY KEY (referenceId, medicationStatementId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationStatementId),
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProduct(
	referenceId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (referenceId, medicinalProductId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProduct_ManufacturingBusinessOperation(
	referenceId TEXT,
	medicinalProduct_ManufacturingBusinessOperationId TEXT,
	PRIMARY KEY (referenceId, medicinalProduct_ManufacturingBusinessOperationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProduct_ManufacturingBusinessOperationId),
		REFERENCES medicinalProduct_ManufacturingBusinessOperation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductContraindication(
	referenceId TEXT,
	medicinalProductContraindicationId TEXT,
	PRIMARY KEY (referenceId, medicinalProductContraindicationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductContraindicationId),
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductIndication(
	referenceId TEXT,
	medicinalProductIndicationId TEXT,
	PRIMARY KEY (referenceId, medicinalProductIndicationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIndicationId),
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductIngredient(
	referenceId TEXT,
	medicinalProductIngredientId TEXT,
	PRIMARY KEY (referenceId, medicinalProductIngredientId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredientId),
		REFERENCES medicinalProductIngredient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductInteraction(
	referenceId TEXT,
	medicinalProductInteractionId TEXT,
	PRIMARY KEY (referenceId, medicinalProductInteractionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductInteractionId),
		REFERENCES medicinalProductInteraction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductManufactured(
	referenceId TEXT,
	medicinalProductManufacturedId TEXT,
	PRIMARY KEY (referenceId, medicinalProductManufacturedId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductManufacturedId),
		REFERENCES medicinalProductManufactured (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductPackaged(
	referenceId TEXT,
	medicinalProductPackagedId TEXT,
	PRIMARY KEY (referenceId, medicinalProductPackagedId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackagedId),
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductPackaged_PackageItem(
	referenceId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,
	PRIMARY KEY (referenceId, medicinalProductPackaged_PackageItemId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId),
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductPharmaceutical(
	referenceId TEXT,
	medicinalProductPharmaceuticalId TEXT,
	PRIMARY KEY (referenceId, medicinalProductPharmaceuticalId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPharmaceuticalId),
		REFERENCES medicinalProductPharmaceutical (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__medicinalProductUndesirableEffect(
	referenceId TEXT,
	medicinalProductUndesirableEffectId TEXT,
	PRIMARY KEY (referenceId, medicinalProductUndesirableEffectId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductUndesirableEffectId),
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__messageHeader(
	referenceId TEXT,
	messageHeaderId TEXT,
	PRIMARY KEY (referenceId, messageHeaderId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageHeaderId),
		REFERENCES messageHeader (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__molecularSequence(
	referenceId TEXT,
	molecularSequenceId TEXT,
	PRIMARY KEY (referenceId, molecularSequenceId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequenceId),
		REFERENCES molecularSequence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__nutritionOrder(
	referenceId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (referenceId, nutritionOrderId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__observation(
	referenceId TEXT,
	observationId TEXT,
	PRIMARY KEY (referenceId, observationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationId),
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__organization(
	referenceId TEXT,
	organizationId TEXT,
	PRIMARY KEY (referenceId, organizationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__organizationAffiliation(
	referenceId TEXT,
	organizationAffiliationId TEXT,
	PRIMARY KEY (referenceId, organizationAffiliationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationAffiliationId),
		REFERENCES organizationAffiliation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__patient(
	referenceId TEXT,
	patientId TEXT,
	PRIMARY KEY (referenceId, patientId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__practitionerRole(
	referenceId TEXT,
	practitionerRoleId TEXT,
	PRIMARY KEY (referenceId, practitionerRoleId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerRoleId),
		REFERENCES practitionerRole (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__procedure(
	referenceId TEXT,
	procedureId TEXT,
	PRIMARY KEY (referenceId, procedureId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__provenance(
	referenceId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (referenceId, provenanceId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__questionnaireResponse(
	referenceId TEXT,
	questionnaireResponseId TEXT,
	PRIMARY KEY (referenceId, questionnaireResponseId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponseId),
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__requestGroup(
	referenceId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (referenceId, requestGroupId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__requestGroup_Action(
	referenceId TEXT,
	requestGroup_ActionId TEXT,
	PRIMARY KEY (referenceId, requestGroup_ActionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ActionId),
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__researchStudy(
	referenceId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (referenceId, researchStudyId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__riskAssessment(
	referenceId TEXT,
	riskAssessmentId TEXT,
	PRIMARY KEY (referenceId, riskAssessmentId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskAssessmentId),
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__schedule(
	referenceId TEXT,
	scheduleId TEXT,
	PRIMARY KEY (referenceId, scheduleId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (scheduleId),
		REFERENCES schedule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__serviceRequest(
	referenceId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (referenceId, serviceRequestId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__specimen(
	referenceId TEXT,
	specimenId TEXT,
	PRIMARY KEY (referenceId, specimenId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenId),
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__specimen_Processing(
	referenceId TEXT,
	specimen_ProcessingId TEXT,
	PRIMARY KEY (referenceId, specimen_ProcessingId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimen_ProcessingId),
		REFERENCES specimen_Processing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceReferenceInformation_Gene(
	referenceId TEXT,
	substanceReferenceInformation_GeneId TEXT,
	PRIMARY KEY (referenceId, substanceReferenceInformation_GeneId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_GeneId),
		REFERENCES substanceReferenceInformation_Gene (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceReferenceInformation_GeneElement(
	referenceId TEXT,
	substanceReferenceInformation_GeneElementId TEXT,
	PRIMARY KEY (referenceId, substanceReferenceInformation_GeneElementId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_GeneElementId),
		REFERENCES substanceReferenceInformation_GeneElement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceReferenceInformation_Classification(
	referenceId TEXT,
	substanceReferenceInformation_ClassificationId TEXT,
	PRIMARY KEY (referenceId, substanceReferenceInformation_ClassificationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_ClassificationId),
		REFERENCES substanceReferenceInformation_Classification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceReferenceInformation_Target(
	referenceId TEXT,
	substanceReferenceInformation_TargetId TEXT,
	PRIMARY KEY (referenceId, substanceReferenceInformation_TargetId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceReferenceInformation_TargetId),
		REFERENCES substanceReferenceInformation_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceSpecification(
	referenceId TEXT,
	substanceSpecificationId TEXT,
	PRIMARY KEY (referenceId, substanceSpecificationId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecificationId),
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceSpecification_Structure(
	referenceId TEXT,
	substanceSpecification_StructureId TEXT,
	PRIMARY KEY (referenceId, substanceSpecification_StructureId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_StructureId),
		REFERENCES substanceSpecification_Structure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceSpecification_Code(
	referenceId TEXT,
	substanceSpecification_CodeId TEXT,
	PRIMARY KEY (referenceId, substanceSpecification_CodeId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_CodeId),
		REFERENCES substanceSpecification_Code (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceSpecification_Name(
	referenceId TEXT,
	substanceSpecification_NameId TEXT,
	PRIMARY KEY (referenceId, substanceSpecification_NameId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_NameId),
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__substanceSpecification_Relationship(
	referenceId TEXT,
	substanceSpecification_RelationshipId TEXT,
	PRIMARY KEY (referenceId, substanceSpecification_RelationshipId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_RelationshipId),
		REFERENCES substanceSpecification_Relationship (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__supplyDelivery(
	referenceId TEXT,
	supplyDeliveryId TEXT,
	PRIMARY KEY (referenceId, supplyDeliveryId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyDeliveryId),
		REFERENCES supplyDelivery (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__supplyRequest(
	referenceId TEXT,
	supplyRequestId TEXT,
	PRIMARY KEY (referenceId, supplyRequestId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (supplyRequestId),
		REFERENCES supplyRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__task(
	referenceId TEXT,
	taskId TEXT,
	PRIMARY KEY (referenceId, taskId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (taskId),
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__task_Restriction(
	referenceId TEXT,
	task_RestrictionId TEXT,
	PRIMARY KEY (referenceId, task_RestrictionId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (task_RestrictionId),
		REFERENCES task_Restriction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__testScript(
	referenceId TEXT,
	testScriptId TEXT,
	PRIMARY KEY (referenceId, testScriptId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScriptId),
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE reference__verificationResult(
	referenceId TEXT,
	verificationResultId TEXT,
	PRIMARY KEY (referenceId, verificationResultId),

	FOREIGN KEY (referenceId)
		REFERENCES reference (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (verificationResultId),
		REFERENCES verificationResult (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__activityDefinition(
	usageContextId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (usageContextId, activityDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__capabilityStatement(
	usageContextId TEXT,
	capabilityStatementId TEXT,
	PRIMARY KEY (usageContextId, capabilityStatementId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatementId),
		REFERENCES capabilityStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__chargeItemDefinition(
	usageContextId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (usageContextId, chargeItemDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__codeSystem(
	usageContextId TEXT,
	codeSystemId TEXT,
	PRIMARY KEY (usageContextId, codeSystemId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystemId),
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__compartmentDefinition(
	usageContextId TEXT,
	compartmentDefinitionId TEXT,
	PRIMARY KEY (usageContextId, compartmentDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compartmentDefinitionId),
		REFERENCES compartmentDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__conceptMap(
	usageContextId TEXT,
	conceptMapId TEXT,
	PRIMARY KEY (usageContextId, conceptMapId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMapId),
		REFERENCES conceptMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__effectEvidenceSynthesis(
	usageContextId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (usageContextId, effectEvidenceSynthesisId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__eventDefinition(
	usageContextId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (usageContextId, eventDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__evidence(
	usageContextId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (usageContextId, evidenceId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__evidenceVariable(
	usageContextId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (usageContextId, evidenceVariableId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__evidenceVariable_Characteristic(
	usageContextId TEXT,
	evidenceVariable_CharacteristicId TEXT,
	PRIMARY KEY (usageContextId, evidenceVariable_CharacteristicId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariable_CharacteristicId),
		REFERENCES evidenceVariable_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__exampleScenario(
	usageContextId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (usageContextId, exampleScenarioId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__graphDefinition(
	usageContextId TEXT,
	graphDefinitionId TEXT,
	PRIMARY KEY (usageContextId, graphDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinitionId),
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__implementationGuide(
	usageContextId TEXT,
	implementationGuideId TEXT,
	PRIMARY KEY (usageContextId, implementationGuideId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (implementationGuideId),
		REFERENCES implementationGuide (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__library(
	usageContextId TEXT,
	libraryId TEXT,
	PRIMARY KEY (usageContextId, libraryId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__measure(
	usageContextId TEXT,
	measureId TEXT,
	PRIMARY KEY (usageContextId, measureId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__messageDefinition(
	usageContextId TEXT,
	messageDefinitionId TEXT,
	PRIMARY KEY (usageContextId, messageDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (messageDefinitionId),
		REFERENCES messageDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__namingSystem(
	usageContextId TEXT,
	namingSystemId TEXT,
	PRIMARY KEY (usageContextId, namingSystemId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (namingSystemId),
		REFERENCES namingSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__operationDefinition(
	usageContextId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (usageContextId, operationDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__planDefinition(
	usageContextId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (usageContextId, planDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__questionnaire(
	usageContextId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (usageContextId, questionnaireId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__researchDefinition(
	usageContextId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (usageContextId, researchDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__researchElementDefinition(
	usageContextId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (usageContextId, researchElementDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__researchElementDefinition_Characteristic(
	usageContextId TEXT,
	researchElementDefinition_CharacteristicId TEXT,
	PRIMARY KEY (usageContextId, researchElementDefinition_CharacteristicId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinition_CharacteristicId),
		REFERENCES researchElementDefinition_Characteristic (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__riskEvidenceSynthesis(
	usageContextId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (usageContextId, riskEvidenceSynthesisId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__searchParameter(
	usageContextId TEXT,
	searchParameterId TEXT,
	PRIMARY KEY (usageContextId, searchParameterId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (searchParameterId),
		REFERENCES searchParameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__structureDefinition(
	usageContextId TEXT,
	structureDefinitionId TEXT,
	PRIMARY KEY (usageContextId, structureDefinitionId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinitionId),
		REFERENCES structureDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__structureMap(
	usageContextId TEXT,
	structureMapId TEXT,
	PRIMARY KEY (usageContextId, structureMapId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMapId),
		REFERENCES structureMap (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__terminologyCapabilities(
	usageContextId TEXT,
	terminologyCapabilitiesId TEXT,
	PRIMARY KEY (usageContextId, terminologyCapabilitiesId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (terminologyCapabilitiesId),
		REFERENCES terminologyCapabilities (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__testScript(
	usageContextId TEXT,
	testScriptId TEXT,
	PRIMARY KEY (usageContextId, testScriptId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScriptId),
		REFERENCES testScript (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE usageContext__valueSet(
	usageContextId TEXT,
	valueSetId TEXT,
	PRIMARY KEY (usageContextId, valueSetId),

	FOREIGN KEY (usageContextId)
		REFERENCES usageContext (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSetId),
		REFERENCES valueSet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__activityDefinition(
	relatedArtifactId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (relatedArtifactId, activityDefinitionId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__effectEvidenceSynthesis(
	relatedArtifactId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (relatedArtifactId, effectEvidenceSynthesisId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__eventDefinition(
	relatedArtifactId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (relatedArtifactId, eventDefinitionId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__evidence(
	relatedArtifactId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (relatedArtifactId, evidenceId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__evidenceVariable(
	relatedArtifactId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (relatedArtifactId, evidenceVariableId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__library(
	relatedArtifactId TEXT,
	libraryId TEXT,
	PRIMARY KEY (relatedArtifactId, libraryId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (libraryId),
		REFERENCES library (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__measure(
	relatedArtifactId TEXT,
	measureId TEXT,
	PRIMARY KEY (relatedArtifactId, measureId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (measureId),
		REFERENCES measure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__planDefinition(
	relatedArtifactId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (relatedArtifactId, planDefinitionId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__planDefinition_Goal(
	relatedArtifactId TEXT,
	planDefinition_GoalId TEXT,
	PRIMARY KEY (relatedArtifactId, planDefinition_GoalId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_GoalId),
		REFERENCES planDefinition_Goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__planDefinition_Action(
	relatedArtifactId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (relatedArtifactId, planDefinition_ActionId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__requestGroup_Action(
	relatedArtifactId TEXT,
	requestGroup_ActionId TEXT,
	PRIMARY KEY (relatedArtifactId, requestGroup_ActionId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ActionId),
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__researchDefinition(
	relatedArtifactId TEXT,
	researchDefinitionId TEXT,
	PRIMARY KEY (relatedArtifactId, researchDefinitionId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchDefinitionId),
		REFERENCES researchDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__researchElementDefinition(
	relatedArtifactId TEXT,
	researchElementDefinitionId TEXT,
	PRIMARY KEY (relatedArtifactId, researchElementDefinitionId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchElementDefinitionId),
		REFERENCES researchElementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__researchStudy(
	relatedArtifactId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (relatedArtifactId, researchStudyId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE relatedArtifact__riskEvidenceSynthesis(
	relatedArtifactId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (relatedArtifactId, riskEvidenceSynthesisId),

	FOREIGN KEY (relatedArtifactId)
		REFERENCES relatedArtifact (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dosage__activityDefinition(
	dosageId TEXT,
	activityDefinitionId TEXT,
	PRIMARY KEY (dosageId, activityDefinitionId),

	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (activityDefinitionId),
		REFERENCES activityDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dosage__medicationDispense(
	dosageId TEXT,
	medicationDispenseId TEXT,
	PRIMARY KEY (dosageId, medicationDispenseId),

	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispenseId),
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dosage__medicationKnowledge_Dosage(
	dosageId TEXT,
	medicationKnowledge_DosageId TEXT,
	PRIMARY KEY (dosageId, medicationKnowledge_DosageId),

	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_DosageId),
		REFERENCES medicationKnowledge_Dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dosage__medicationRequest(
	dosageId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (dosageId, medicationRequestId),

	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE dosage__medicationStatement(
	dosageId TEXT,
	medicationStatementId TEXT,
	PRIMARY KEY (dosageId, medicationStatementId),

	FOREIGN KEY (dosageId)
		REFERENCES dosage (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationStatementId),
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__allergyIntolerance(
	annotationId TEXT,
	allergyIntoleranceId TEXT,
	PRIMARY KEY (annotationId, allergyIntoleranceId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntoleranceId),
		REFERENCES allergyIntolerance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__allergyIntolerance_Reaction(
	annotationId TEXT,
	allergyIntolerance_ReactionId TEXT,
	PRIMARY KEY (annotationId, allergyIntolerance_ReactionId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (allergyIntolerance_ReactionId),
		REFERENCES allergyIntolerance_Reaction (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__carePlan(
	annotationId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (annotationId, carePlanId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__carePlan_Activity(
	annotationId TEXT,
	carePlan_ActivityId TEXT,
	PRIMARY KEY (annotationId, carePlan_ActivityId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_ActivityId),
		REFERENCES carePlan_Activity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__careTeam(
	annotationId TEXT,
	careTeamId TEXT,
	PRIMARY KEY (annotationId, careTeamId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (careTeamId),
		REFERENCES careTeam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__chargeItem(
	annotationId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (annotationId, chargeItemId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__clinicalImpression(
	annotationId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (annotationId, clinicalImpressionId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__communication(
	annotationId TEXT,
	communicationId TEXT,
	PRIMARY KEY (annotationId, communicationId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__communicationRequest(
	annotationId TEXT,
	communicationRequestId TEXT,
	PRIMARY KEY (annotationId, communicationRequestId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationRequestId),
		REFERENCES communicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__condition(
	annotationId TEXT,
	conditionId TEXT,
	PRIMARY KEY (annotationId, conditionId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conditionId),
		REFERENCES condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__contract_Action(
	annotationId TEXT,
	contract_ActionId TEXT,
	PRIMARY KEY (annotationId, contract_ActionId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ActionId),
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__device(
	annotationId TEXT,
	deviceId TEXT,
	PRIMARY KEY (annotationId, deviceId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceId),
		REFERENCES device (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__deviceDefinition(
	annotationId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (annotationId, deviceDefinitionId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__deviceRequest(
	annotationId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (annotationId, deviceRequestId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__deviceUseStatement(
	annotationId TEXT,
	deviceUseStatementId TEXT,
	PRIMARY KEY (annotationId, deviceUseStatementId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceUseStatementId),
		REFERENCES deviceUseStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__effectEvidenceSynthesis(
	annotationId TEXT,
	effectEvidenceSynthesisId TEXT,
	PRIMARY KEY (annotationId, effectEvidenceSynthesisId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesisId),
		REFERENCES effectEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__effectEvidenceSynthesis_Certainty(
	annotationId TEXT,
	effectEvidenceSynthesis_CertaintyId TEXT,
	PRIMARY KEY (annotationId, effectEvidenceSynthesis_CertaintyId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_CertaintyId),
		REFERENCES effectEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__effectEvidenceSynthesis_CertaintySubcomponent(
	annotationId TEXT,
	effectEvidenceSynthesis_CertaintySubcomponentId TEXT,
	PRIMARY KEY (annotationId, effectEvidenceSynthesis_CertaintySubcomponentId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (effectEvidenceSynthesis_CertaintySubcomponentId),
		REFERENCES effectEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__evidence(
	annotationId TEXT,
	evidenceId TEXT,
	PRIMARY KEY (annotationId, evidenceId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceId),
		REFERENCES evidence (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__evidenceVariable(
	annotationId TEXT,
	evidenceVariableId TEXT,
	PRIMARY KEY (annotationId, evidenceVariableId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (evidenceVariableId),
		REFERENCES evidenceVariable (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__familyMemberHistory(
	annotationId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (annotationId, familyMemberHistoryId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__familyMemberHistory_Condition(
	annotationId TEXT,
	familyMemberHistory_ConditionId TEXT,
	PRIMARY KEY (annotationId, familyMemberHistory_ConditionId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistory_ConditionId),
		REFERENCES familyMemberHistory_Condition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__goal(
	annotationId TEXT,
	goalId TEXT,
	PRIMARY KEY (annotationId, goalId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (goalId),
		REFERENCES goal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__guidanceResponse(
	annotationId TEXT,
	guidanceResponseId TEXT,
	PRIMARY KEY (annotationId, guidanceResponseId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (guidanceResponseId),
		REFERENCES guidanceResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__imagingStudy(
	annotationId TEXT,
	imagingStudyId TEXT,
	PRIMARY KEY (annotationId, imagingStudyId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (imagingStudyId),
		REFERENCES imagingStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__immunization(
	annotationId TEXT,
	immunizationId TEXT,
	PRIMARY KEY (annotationId, immunizationId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (immunizationId),
		REFERENCES immunization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__invoice(
	annotationId TEXT,
	invoiceId TEXT,
	PRIMARY KEY (annotationId, invoiceId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoiceId),
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__list(
	annotationId TEXT,
	listId TEXT,
	PRIMARY KEY (annotationId, listId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (listId),
		REFERENCES list (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__media(
	annotationId TEXT,
	mediaId TEXT,
	PRIMARY KEY (annotationId, mediaId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (mediaId),
		REFERENCES media (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__medicationAdministration(
	annotationId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (annotationId, medicationAdministrationId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__medicationDispense(
	annotationId TEXT,
	medicationDispenseId TEXT,
	PRIMARY KEY (annotationId, medicationDispenseId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationDispenseId),
		REFERENCES medicationDispense (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__medicationRequest(
	annotationId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (annotationId, medicationRequestId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__medicationStatement(
	annotationId TEXT,
	medicationStatementId TEXT,
	PRIMARY KEY (annotationId, medicationStatementId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationStatementId),
		REFERENCES medicationStatement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__nutritionOrder(
	annotationId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (annotationId, nutritionOrderId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__observation(
	annotationId TEXT,
	observationId TEXT,
	PRIMARY KEY (annotationId, observationId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationId),
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__procedure(
	annotationId TEXT,
	procedureId TEXT,
	PRIMARY KEY (annotationId, procedureId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__requestGroup(
	annotationId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (annotationId, requestGroupId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__researchStudy(
	annotationId TEXT,
	researchStudyId TEXT,
	PRIMARY KEY (annotationId, researchStudyId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (researchStudyId),
		REFERENCES researchStudy (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__riskAssessment(
	annotationId TEXT,
	riskAssessmentId TEXT,
	PRIMARY KEY (annotationId, riskAssessmentId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskAssessmentId),
		REFERENCES riskAssessment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__riskEvidenceSynthesis(
	annotationId TEXT,
	riskEvidenceSynthesisId TEXT,
	PRIMARY KEY (annotationId, riskEvidenceSynthesisId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesisId),
		REFERENCES riskEvidenceSynthesis (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__riskEvidenceSynthesis_Certainty(
	annotationId TEXT,
	riskEvidenceSynthesis_CertaintyId TEXT,
	PRIMARY KEY (annotationId, riskEvidenceSynthesis_CertaintyId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_CertaintyId),
		REFERENCES riskEvidenceSynthesis_Certainty (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__riskEvidenceSynthesis_CertaintySubcomponent(
	annotationId TEXT,
	riskEvidenceSynthesis_CertaintySubcomponentId TEXT,
	PRIMARY KEY (annotationId, riskEvidenceSynthesis_CertaintySubcomponentId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (riskEvidenceSynthesis_CertaintySubcomponentId),
		REFERENCES riskEvidenceSynthesis_CertaintySubcomponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__serviceRequest(
	annotationId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (annotationId, serviceRequestId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__specimen(
	annotationId TEXT,
	specimenId TEXT,
	PRIMARY KEY (annotationId, specimenId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (specimenId),
		REFERENCES specimen (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__task(
	annotationId TEXT,
	taskId TEXT,
	PRIMARY KEY (annotationId, taskId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (taskId),
		REFERENCES task (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE annotation__visionPrescription_LensSpecification(
	annotationId TEXT,
	visionPrescription_LensSpecificationId TEXT,
	PRIMARY KEY (annotationId, visionPrescription_LensSpecificationId),

	FOREIGN KEY (annotationId)
		REFERENCES annotation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (visionPrescription_LensSpecificationId),
		REFERENCES visionPrescription_LensSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE period__appointment(
	periodId TEXT,
	appointmentId TEXT,
	PRIMARY KEY (periodId, appointmentId),

	FOREIGN KEY (periodId)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (appointmentId),
		REFERENCES appointment (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE period__contract_Asset(
	periodId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (periodId, contract_AssetId),

	FOREIGN KEY (periodId)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE period__explanationOfBenefit(
	periodId TEXT,
	explanationOfBenefitId TEXT,
	PRIMARY KEY (periodId, explanationOfBenefitId),

	FOREIGN KEY (periodId)
		REFERENCES period (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefitId),
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__auditEvent_Agent(
	uriId TEXT,
	auditEvent_AgentId TEXT,
	PRIMARY KEY (uriId, auditEvent_AgentId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (auditEvent_AgentId),
		REFERENCES auditEvent_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__carePlan(
	uriId TEXT,
	carePlanId TEXT,
	PRIMARY KEY (uriId, carePlanId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlanId),
		REFERENCES carePlan (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__carePlan_Detail(
	uriId TEXT,
	carePlan_DetailId TEXT,
	PRIMARY KEY (uriId, carePlan_DetailId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (carePlan_DetailId),
		REFERENCES carePlan_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__chargeItem(
	uriId TEXT,
	chargeItemId TEXT,
	PRIMARY KEY (uriId, chargeItemId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemId),
		REFERENCES chargeItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__chargeItemDefinition(
	uriId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (uriId, chargeItemDefinitionId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__clinicalImpression(
	uriId TEXT,
	clinicalImpressionId TEXT,
	PRIMARY KEY (uriId, clinicalImpressionId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (clinicalImpressionId),
		REFERENCES clinicalImpression (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__communication(
	uriId TEXT,
	communicationId TEXT,
	PRIMARY KEY (uriId, communicationId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (communicationId),
		REFERENCES communication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__deviceRequest(
	uriId TEXT,
	deviceRequestId TEXT,
	PRIMARY KEY (uriId, deviceRequestId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceRequestId),
		REFERENCES deviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__familyMemberHistory(
	uriId TEXT,
	familyMemberHistoryId TEXT,
	PRIMARY KEY (uriId, familyMemberHistoryId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (familyMemberHistoryId),
		REFERENCES familyMemberHistory (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__medicationAdministration(
	uriId TEXT,
	medicationAdministrationId TEXT,
	PRIMARY KEY (uriId, medicationAdministrationId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationAdministrationId),
		REFERENCES medicationAdministration (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__medicationRequest(
	uriId TEXT,
	medicationRequestId TEXT,
	PRIMARY KEY (uriId, medicationRequestId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationRequestId),
		REFERENCES medicationRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__nutritionOrder(
	uriId TEXT,
	nutritionOrderId TEXT,
	PRIMARY KEY (uriId, nutritionOrderId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrderId),
		REFERENCES nutritionOrder (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__procedure(
	uriId TEXT,
	procedureId TEXT,
	PRIMARY KEY (uriId, procedureId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (procedureId),
		REFERENCES procedure (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__provenance(
	uriId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (uriId, provenanceId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__requestGroup(
	uriId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (uriId, requestGroupId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__serviceRequest(
	uriId TEXT,
	serviceRequestId TEXT,
	PRIMARY KEY (uriId, serviceRequestId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (serviceRequestId),
		REFERENCES serviceRequest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE uri__testScript_Capability(
	uriId TEXT,
	testScript_CapabilityId TEXT,
	PRIMARY KEY (uriId, testScript_CapabilityId),

	FOREIGN KEY (uriId)
		REFERENCES uri (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_CapabilityId),
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE bundle_Link__bundle(
	bundle_LinkId TEXT,
	bundleId TEXT,
	PRIMARY KEY (bundle_LinkId, bundleId),

	FOREIGN KEY (bundle_LinkId)
		REFERENCES bundle_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundleId),
		REFERENCES bundle (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE bundle_Link__bundle_Entry(
	bundle_LinkId TEXT,
	bundle_EntryId TEXT,
	PRIMARY KEY (bundle_LinkId, bundle_EntryId),

	FOREIGN KEY (bundle_LinkId)
		REFERENCES bundle_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (bundle_EntryId),
		REFERENCES bundle_Entry (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE capabilityStatement_SearchParam__capabilityStatement_Rest(
	capabilityStatement_SearchParamId TEXT,
	capabilityStatement_RestId TEXT,
	PRIMARY KEY (capabilityStatement_SearchParamId, capabilityStatement_RestId),

	FOREIGN KEY (capabilityStatement_SearchParamId)
		REFERENCES capabilityStatement_SearchParam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_RestId),
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE capabilityStatement_SearchParam__capabilityStatement_Resource(
	capabilityStatement_SearchParamId TEXT,
	capabilityStatement_ResourceId TEXT,
	PRIMARY KEY (capabilityStatement_SearchParamId, capabilityStatement_ResourceId),

	FOREIGN KEY (capabilityStatement_SearchParamId)
		REFERENCES capabilityStatement_SearchParam (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_ResourceId),
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE capabilityStatement_Operation__capabilityStatement_Rest(
	capabilityStatement_OperationId TEXT,
	capabilityStatement_RestId TEXT,
	PRIMARY KEY (capabilityStatement_OperationId, capabilityStatement_RestId),

	FOREIGN KEY (capabilityStatement_OperationId)
		REFERENCES capabilityStatement_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_RestId),
		REFERENCES capabilityStatement_Rest (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE capabilityStatement_Operation__capabilityStatement_Resource(
	capabilityStatement_OperationId TEXT,
	capabilityStatement_ResourceId TEXT,
	PRIMARY KEY (capabilityStatement_OperationId, capabilityStatement_ResourceId),

	FOREIGN KEY (capabilityStatement_OperationId)
		REFERENCES capabilityStatement_Operation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (capabilityStatement_ResourceId),
		REFERENCES capabilityStatement_Resource (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE chargeItemDefinition_Applicability__chargeItemDefinition(
	chargeItemDefinition_ApplicabilityId TEXT,
	chargeItemDefinitionId TEXT,
	PRIMARY KEY (chargeItemDefinition_ApplicabilityId, chargeItemDefinitionId),

	FOREIGN KEY (chargeItemDefinition_ApplicabilityId)
		REFERENCES chargeItemDefinition_Applicability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinitionId),
		REFERENCES chargeItemDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE chargeItemDefinition_Applicability__chargeItemDefinition_PropertyGroup(
	chargeItemDefinition_ApplicabilityId TEXT,
	chargeItemDefinition_PropertyGroupId TEXT,
	PRIMARY KEY (chargeItemDefinition_ApplicabilityId, chargeItemDefinition_PropertyGroupId),

	FOREIGN KEY (chargeItemDefinition_ApplicabilityId)
		REFERENCES chargeItemDefinition_Applicability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (chargeItemDefinition_PropertyGroupId),
		REFERENCES chargeItemDefinition_PropertyGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__claim_Item(
	positiveIntId TEXT,
	claim_ItemId TEXT,
	PRIMARY KEY (positiveIntId, claim_ItemId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claim_ItemId),
		REFERENCES claim_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__claimResponse_Item(
	positiveIntId TEXT,
	claimResponse_ItemId TEXT,
	PRIMARY KEY (positiveIntId, claimResponse_ItemId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_ItemId),
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__claimResponse_Detail(
	positiveIntId TEXT,
	claimResponse_DetailId TEXT,
	PRIMARY KEY (positiveIntId, claimResponse_DetailId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_DetailId),
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__claimResponse_SubDetail(
	positiveIntId TEXT,
	claimResponse_SubDetailId TEXT,
	PRIMARY KEY (positiveIntId, claimResponse_SubDetailId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetailId),
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__claimResponse_AddItem(
	positiveIntId TEXT,
	claimResponse_AddItemId TEXT,
	PRIMARY KEY (positiveIntId, claimResponse_AddItemId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AddItemId),
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__claimResponse_Detail1(
	positiveIntId TEXT,
	claimResponse_Detail1Id TEXT,
	PRIMARY KEY (positiveIntId, claimResponse_Detail1Id),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_Detail1Id),
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__claimResponse_SubDetail1(
	positiveIntId TEXT,
	claimResponse_SubDetail1Id TEXT,
	PRIMARY KEY (positiveIntId, claimResponse_SubDetail1Id),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetail1Id),
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__coverageEligibilityRequest_Item(
	positiveIntId TEXT,
	coverageEligibilityRequest_ItemId TEXT,
	PRIMARY KEY (positiveIntId, coverageEligibilityRequest_ItemId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (coverageEligibilityRequest_ItemId),
		REFERENCES coverageEligibilityRequest_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__explanationOfBenefit_Item(
	positiveIntId TEXT,
	explanationOfBenefit_ItemId TEXT,
	PRIMARY KEY (positiveIntId, explanationOfBenefit_ItemId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ItemId),
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__explanationOfBenefit_Detail(
	positiveIntId TEXT,
	explanationOfBenefit_DetailId TEXT,
	PRIMARY KEY (positiveIntId, explanationOfBenefit_DetailId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DetailId),
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__explanationOfBenefit_SubDetail(
	positiveIntId TEXT,
	explanationOfBenefit_SubDetailId TEXT,
	PRIMARY KEY (positiveIntId, explanationOfBenefit_SubDetailId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetailId),
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__explanationOfBenefit_AddItem(
	positiveIntId TEXT,
	explanationOfBenefit_AddItemId TEXT,
	PRIMARY KEY (positiveIntId, explanationOfBenefit_AddItemId),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AddItemId),
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__explanationOfBenefit_Detail1(
	positiveIntId TEXT,
	explanationOfBenefit_Detail1Id TEXT,
	PRIMARY KEY (positiveIntId, explanationOfBenefit_Detail1Id),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_Detail1Id),
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE positiveInt__explanationOfBenefit_SubDetail1(
	positiveIntId TEXT,
	explanationOfBenefit_SubDetail1Id TEXT,
	PRIMARY KEY (positiveIntId, explanationOfBenefit_SubDetail1Id),

	FOREIGN KEY (positiveIntId)
		REFERENCES positiveInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetail1Id),
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE claimResponse_Adjudication__claimResponse(
	claimResponse_AdjudicationId TEXT,
	claimResponseId TEXT,
	PRIMARY KEY (claimResponse_AdjudicationId, claimResponseId),

	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponseId),
		REFERENCES claimResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE claimResponse_Adjudication__claimResponse_Item(
	claimResponse_AdjudicationId TEXT,
	claimResponse_ItemId TEXT,
	PRIMARY KEY (claimResponse_AdjudicationId, claimResponse_ItemId),

	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_ItemId),
		REFERENCES claimResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE claimResponse_Adjudication__claimResponse_Detail(
	claimResponse_AdjudicationId TEXT,
	claimResponse_DetailId TEXT,
	PRIMARY KEY (claimResponse_AdjudicationId, claimResponse_DetailId),

	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_DetailId),
		REFERENCES claimResponse_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE claimResponse_Adjudication__claimResponse_SubDetail(
	claimResponse_AdjudicationId TEXT,
	claimResponse_SubDetailId TEXT,
	PRIMARY KEY (claimResponse_AdjudicationId, claimResponse_SubDetailId),

	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetailId),
		REFERENCES claimResponse_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE claimResponse_Adjudication__claimResponse_AddItem(
	claimResponse_AdjudicationId TEXT,
	claimResponse_AddItemId TEXT,
	PRIMARY KEY (claimResponse_AdjudicationId, claimResponse_AddItemId),

	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_AddItemId),
		REFERENCES claimResponse_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE claimResponse_Adjudication__claimResponse_Detail1(
	claimResponse_AdjudicationId TEXT,
	claimResponse_Detail1Id TEXT,
	PRIMARY KEY (claimResponse_AdjudicationId, claimResponse_Detail1Id),

	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_Detail1Id),
		REFERENCES claimResponse_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE claimResponse_Adjudication__claimResponse_SubDetail1(
	claimResponse_AdjudicationId TEXT,
	claimResponse_SubDetail1Id TEXT,
	PRIMARY KEY (claimResponse_AdjudicationId, claimResponse_SubDetail1Id),

	FOREIGN KEY (claimResponse_AdjudicationId)
		REFERENCES claimResponse_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (claimResponse_SubDetail1Id),
		REFERENCES claimResponse_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeSystem_Concept__codeSystem(
	codeSystem_ConceptId TEXT,
	codeSystemId TEXT,
	PRIMARY KEY (codeSystem_ConceptId, codeSystemId),

	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystemId),
		REFERENCES codeSystem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE codeSystem_Concept__codeSystem_Concept(
	codeSystem_ConceptId TEXT,
	codeSystem_ConceptId TEXT,
	PRIMARY KEY (codeSystem_ConceptId, codeSystem_ConceptId),

	FOREIGN KEY (codeSystem_ConceptId)
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (codeSystem_ConceptId),
		REFERENCES codeSystem_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE composition_Section__composition(
	composition_SectionId TEXT,
	compositionId TEXT,
	PRIMARY KEY (composition_SectionId, compositionId),

	FOREIGN KEY (composition_SectionId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (compositionId),
		REFERENCES composition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE composition_Section__composition_Section(
	composition_SectionId TEXT,
	composition_SectionId TEXT,
	PRIMARY KEY (composition_SectionId, composition_SectionId),

	FOREIGN KEY (composition_SectionId)
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (composition_SectionId),
		REFERENCES composition_Section (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE conceptMap_DependsOn__conceptMap_Target(
	conceptMap_DependsOnId TEXT,
	conceptMap_TargetId TEXT,
	PRIMARY KEY (conceptMap_DependsOnId, conceptMap_TargetId),

	FOREIGN KEY (conceptMap_DependsOnId)
		REFERENCES conceptMap_DependsOn (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (conceptMap_TargetId),
		REFERENCES conceptMap_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contract_Term__contract(
	contract_TermId TEXT,
	contractId TEXT,
	PRIMARY KEY (contract_TermId, contractId),

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contractId),
		REFERENCES contract (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contract_Term__contract_Term(
	contract_TermId TEXT,
	contract_TermId TEXT,
	PRIMARY KEY (contract_TermId, contract_TermId),

	FOREIGN KEY (contract_TermId)
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_TermId),
		REFERENCES contract_Term (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE unsignedInt__contract_SecurityLabel(
	unsignedIntId TEXT,
	contract_SecurityLabelId TEXT,
	PRIMARY KEY (unsignedIntId, contract_SecurityLabelId),

	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SecurityLabelId),
		REFERENCES contract_SecurityLabel (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE unsignedInt__contract_Offer(
	unsignedIntId TEXT,
	contract_OfferId TEXT,
	PRIMARY KEY (unsignedIntId, contract_OfferId),

	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_OfferId),
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE unsignedInt__contract_Asset(
	unsignedIntId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (unsignedIntId, contract_AssetId),

	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE unsignedInt__contract_ValuedItem(
	unsignedIntId TEXT,
	contract_ValuedItemId TEXT,
	PRIMARY KEY (unsignedIntId, contract_ValuedItemId),

	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ValuedItemId),
		REFERENCES contract_ValuedItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE unsignedInt__contract_Action(
	unsignedIntId TEXT,
	contract_ActionId TEXT,
	PRIMARY KEY (unsignedIntId, contract_ActionId),

	FOREIGN KEY (unsignedIntId)
		REFERENCES unsignedInt (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_ActionId),
		REFERENCES contract_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contract_Answer__contract_Offer(
	contract_AnswerId TEXT,
	contract_OfferId TEXT,
	PRIMARY KEY (contract_AnswerId, contract_OfferId),

	FOREIGN KEY (contract_AnswerId)
		REFERENCES contract_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_OfferId),
		REFERENCES contract_Offer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE contract_Answer__contract_Asset(
	contract_AnswerId TEXT,
	contract_AssetId TEXT,
	PRIMARY KEY (contract_AnswerId, contract_AssetId),

	FOREIGN KEY (contract_AnswerId)
		REFERENCES contract_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_AssetId),
		REFERENCES contract_Asset (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE signature__contract_Signer(
	signatureId TEXT,
	contract_SignerId TEXT,
	PRIMARY KEY (signatureId, contract_SignerId),

	FOREIGN KEY (signatureId)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (contract_SignerId),
		REFERENCES contract_Signer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE signature__provenance(
	signatureId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (signatureId, provenanceId),

	FOREIGN KEY (signatureId)
		REFERENCES signature (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE quantity__device_Property(
	quantityId TEXT,
	device_PropertyId TEXT,
	PRIMARY KEY (quantityId, device_PropertyId),

	FOREIGN KEY (quantityId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (device_PropertyId),
		REFERENCES device_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE quantity__deviceDefinition_Property(
	quantityId TEXT,
	deviceDefinition_PropertyId TEXT,
	PRIMARY KEY (quantityId, deviceDefinition_PropertyId),

	FOREIGN KEY (quantityId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinition_PropertyId),
		REFERENCES deviceDefinition_Property (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE quantity__medicationKnowledge_Kinetics(
	quantityId TEXT,
	medicationKnowledge_KineticsId TEXT,
	PRIMARY KEY (quantityId, medicationKnowledge_KineticsId),

	FOREIGN KEY (quantityId)
		REFERENCES quantity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicationKnowledge_KineticsId),
		REFERENCES medicationKnowledge_Kinetics (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE productShelfLife__deviceDefinition(
	productShelfLifeId TEXT,
	deviceDefinitionId TEXT,
	PRIMARY KEY (productShelfLifeId, deviceDefinitionId),

	FOREIGN KEY (productShelfLifeId)
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (deviceDefinitionId),
		REFERENCES deviceDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE productShelfLife__medicinalProductPackaged_PackageItem(
	productShelfLifeId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,
	PRIMARY KEY (productShelfLifeId, medicinalProductPackaged_PackageItemId),

	FOREIGN KEY (productShelfLifeId)
		REFERENCES productShelfLife (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId),
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE triggerDefinition__eventDefinition(
	triggerDefinitionId TEXT,
	eventDefinitionId TEXT,
	PRIMARY KEY (triggerDefinitionId, eventDefinitionId),

	FOREIGN KEY (triggerDefinitionId)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (eventDefinitionId),
		REFERENCES eventDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE triggerDefinition__planDefinition_Action(
	triggerDefinitionId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (triggerDefinitionId, planDefinition_ActionId),

	FOREIGN KEY (triggerDefinitionId)
		REFERENCES triggerDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE exampleScenario_Process__exampleScenario(
	exampleScenario_ProcessId TEXT,
	exampleScenarioId TEXT,
	PRIMARY KEY (exampleScenario_ProcessId, exampleScenarioId),

	FOREIGN KEY (exampleScenario_ProcessId)
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenarioId),
		REFERENCES exampleScenario (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE exampleScenario_Process__exampleScenario_Step(
	exampleScenario_ProcessId TEXT,
	exampleScenario_StepId TEXT,
	PRIMARY KEY (exampleScenario_ProcessId, exampleScenario_StepId),

	FOREIGN KEY (exampleScenario_ProcessId)
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_StepId),
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE exampleScenario_Step__exampleScenario_Process(
	exampleScenario_StepId TEXT,
	exampleScenario_ProcessId TEXT,
	PRIMARY KEY (exampleScenario_StepId, exampleScenario_ProcessId),

	FOREIGN KEY (exampleScenario_StepId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_ProcessId),
		REFERENCES exampleScenario_Process (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE exampleScenario_Step__exampleScenario_Alternative(
	exampleScenario_StepId TEXT,
	exampleScenario_AlternativeId TEXT,
	PRIMARY KEY (exampleScenario_StepId, exampleScenario_AlternativeId),

	FOREIGN KEY (exampleScenario_StepId)
		REFERENCES exampleScenario_Step (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (exampleScenario_AlternativeId),
		REFERENCES exampleScenario_Alternative (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE explanationOfBenefit_Adjudication__explanationOfBenefit(
	explanationOfBenefit_AdjudicationId TEXT,
	explanationOfBenefitId TEXT,
	PRIMARY KEY (explanationOfBenefit_AdjudicationId, explanationOfBenefitId),

	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefitId),
		REFERENCES explanationOfBenefit (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE explanationOfBenefit_Adjudication__explanationOfBenefit_Item(
	explanationOfBenefit_AdjudicationId TEXT,
	explanationOfBenefit_ItemId TEXT,
	PRIMARY KEY (explanationOfBenefit_AdjudicationId, explanationOfBenefit_ItemId),

	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_ItemId),
		REFERENCES explanationOfBenefit_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE explanationOfBenefit_Adjudication__explanationOfBenefit_Detail(
	explanationOfBenefit_AdjudicationId TEXT,
	explanationOfBenefit_DetailId TEXT,
	PRIMARY KEY (explanationOfBenefit_AdjudicationId, explanationOfBenefit_DetailId),

	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_DetailId),
		REFERENCES explanationOfBenefit_Detail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE explanationOfBenefit_Adjudication__explanationOfBenefit_SubDetail(
	explanationOfBenefit_AdjudicationId TEXT,
	explanationOfBenefit_SubDetailId TEXT,
	PRIMARY KEY (explanationOfBenefit_AdjudicationId, explanationOfBenefit_SubDetailId),

	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetailId),
		REFERENCES explanationOfBenefit_SubDetail (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE explanationOfBenefit_Adjudication__explanationOfBenefit_AddItem(
	explanationOfBenefit_AdjudicationId TEXT,
	explanationOfBenefit_AddItemId TEXT,
	PRIMARY KEY (explanationOfBenefit_AdjudicationId, explanationOfBenefit_AddItemId),

	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_AddItemId),
		REFERENCES explanationOfBenefit_AddItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE explanationOfBenefit_Adjudication__explanationOfBenefit_Detail1(
	explanationOfBenefit_AdjudicationId TEXT,
	explanationOfBenefit_Detail1Id TEXT,
	PRIMARY KEY (explanationOfBenefit_AdjudicationId, explanationOfBenefit_Detail1Id),

	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_Detail1Id),
		REFERENCES explanationOfBenefit_Detail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE explanationOfBenefit_Adjudication__explanationOfBenefit_SubDetail1(
	explanationOfBenefit_AdjudicationId TEXT,
	explanationOfBenefit_SubDetail1Id TEXT,
	PRIMARY KEY (explanationOfBenefit_AdjudicationId, explanationOfBenefit_SubDetail1Id),

	FOREIGN KEY (explanationOfBenefit_AdjudicationId)
		REFERENCES explanationOfBenefit_Adjudication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (explanationOfBenefit_SubDetail1Id),
		REFERENCES explanationOfBenefit_SubDetail1 (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE graphDefinition_Link__graphDefinition(
	graphDefinition_LinkId TEXT,
	graphDefinitionId TEXT,
	PRIMARY KEY (graphDefinition_LinkId, graphDefinitionId),

	FOREIGN KEY (graphDefinition_LinkId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinitionId),
		REFERENCES graphDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE graphDefinition_Link__graphDefinition_Target(
	graphDefinition_LinkId TEXT,
	graphDefinition_TargetId TEXT,
	PRIMARY KEY (graphDefinition_LinkId, graphDefinition_TargetId),

	FOREIGN KEY (graphDefinition_LinkId)
		REFERENCES graphDefinition_Link (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (graphDefinition_TargetId),
		REFERENCES graphDefinition_Target (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE invoice_PriceComponent__invoice(
	invoice_PriceComponentId TEXT,
	invoiceId TEXT,
	PRIMARY KEY (invoice_PriceComponentId, invoiceId),

	FOREIGN KEY (invoice_PriceComponentId)
		REFERENCES invoice_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoiceId),
		REFERENCES invoice (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE invoice_PriceComponent__invoice_LineItem(
	invoice_PriceComponentId TEXT,
	invoice_LineItemId TEXT,
	PRIMARY KEY (invoice_PriceComponentId, invoice_LineItemId),

	FOREIGN KEY (invoice_PriceComponentId)
		REFERENCES invoice_PriceComponent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (invoice_LineItemId),
		REFERENCES invoice_LineItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE marketingStatus__medicinalProduct(
	marketingStatusId TEXT,
	medicinalProductId TEXT,
	PRIMARY KEY (marketingStatusId, medicinalProductId),

	FOREIGN KEY (marketingStatusId)
		REFERENCES marketingStatus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductId),
		REFERENCES medicinalProduct (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE marketingStatus__medicinalProductPackaged(
	marketingStatusId TEXT,
	medicinalProductPackagedId TEXT,
	PRIMARY KEY (marketingStatusId, medicinalProductPackagedId),

	FOREIGN KEY (marketingStatusId)
		REFERENCES marketingStatus (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackagedId),
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE population__medicinalProductContraindication(
	populationId TEXT,
	medicinalProductContraindicationId TEXT,
	PRIMARY KEY (populationId, medicinalProductContraindicationId),

	FOREIGN KEY (populationId)
		REFERENCES population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductContraindicationId),
		REFERENCES medicinalProductContraindication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE population__medicinalProductIndication(
	populationId TEXT,
	medicinalProductIndicationId TEXT,
	PRIMARY KEY (populationId, medicinalProductIndicationId),

	FOREIGN KEY (populationId)
		REFERENCES population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIndicationId),
		REFERENCES medicinalProductIndication (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE population__medicinalProductUndesirableEffect(
	populationId TEXT,
	medicinalProductUndesirableEffectId TEXT,
	PRIMARY KEY (populationId, medicinalProductUndesirableEffectId),

	FOREIGN KEY (populationId)
		REFERENCES population (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductUndesirableEffectId),
		REFERENCES medicinalProductUndesirableEffect (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE medicinalProductIngredient_Strength__medicinalProductIngredient_SpecifiedSubstance(
	medicinalProductIngredient_StrengthId TEXT,
	medicinalProductIngredient_SpecifiedSubstanceId TEXT,
	PRIMARY KEY (medicinalProductIngredient_StrengthId, medicinalProductIngredient_SpecifiedSubstanceId),

	FOREIGN KEY (medicinalProductIngredient_StrengthId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_SpecifiedSubstanceId),
		REFERENCES medicinalProductIngredient_SpecifiedSubstance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE medicinalProductIngredient_Strength__medicinalProductIngredient_Substance(
	medicinalProductIngredient_StrengthId TEXT,
	medicinalProductIngredient_SubstanceId TEXT,
	PRIMARY KEY (medicinalProductIngredient_StrengthId, medicinalProductIngredient_SubstanceId),

	FOREIGN KEY (medicinalProductIngredient_StrengthId)
		REFERENCES medicinalProductIngredient_Strength (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductIngredient_SubstanceId),
		REFERENCES medicinalProductIngredient_Substance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE medicinalProductPackaged_PackageItem__medicinalProductPackaged(
	medicinalProductPackaged_PackageItemId TEXT,
	medicinalProductPackagedId TEXT,
	PRIMARY KEY (medicinalProductPackaged_PackageItemId, medicinalProductPackagedId),

	FOREIGN KEY (medicinalProductPackaged_PackageItemId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackagedId),
		REFERENCES medicinalProductPackaged (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE medicinalProductPackaged_PackageItem__medicinalProductPackaged_PackageItem(
	medicinalProductPackaged_PackageItemId TEXT,
	medicinalProductPackaged_PackageItemId TEXT,
	PRIMARY KEY (medicinalProductPackaged_PackageItemId, medicinalProductPackaged_PackageItemId),

	FOREIGN KEY (medicinalProductPackaged_PackageItemId)
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (medicinalProductPackaged_PackageItemId),
		REFERENCES medicinalProductPackaged_PackageItem (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE integer__molecularSequence_Roc(
	integerId TEXT,
	molecularSequence_RocId TEXT,
	PRIMARY KEY (integerId, molecularSequence_RocId),

	FOREIGN KEY (integerId)
		REFERENCES integer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_RocId),
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE integer__testScript_Capability(
	integerId TEXT,
	testScript_CapabilityId TEXT,
	PRIMARY KEY (integerId, testScript_CapabilityId),

	FOREIGN KEY (integerId)
		REFERENCES integer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (testScript_CapabilityId),
		REFERENCES testScript_Capability (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE decimal__molecularSequence_Roc(
	decimalId TEXT,
	molecularSequence_RocId TEXT,
	PRIMARY KEY (decimalId, molecularSequence_RocId),

	FOREIGN KEY (decimalId)
		REFERENCES decimal (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (molecularSequence_RocId),
		REFERENCES molecularSequence_Roc (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE timing__nutritionOrder_OralDiet(
	timingId TEXT,
	nutritionOrder_OralDietId TEXT,
	PRIMARY KEY (timingId, nutritionOrder_OralDietId),

	FOREIGN KEY (timingId)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_OralDietId),
		REFERENCES nutritionOrder_OralDiet (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE timing__nutritionOrder_Supplement(
	timingId TEXT,
	nutritionOrder_SupplementId TEXT,
	PRIMARY KEY (timingId, nutritionOrder_SupplementId),

	FOREIGN KEY (timingId)
		REFERENCES timing (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (nutritionOrder_SupplementId),
		REFERENCES nutritionOrder_Supplement (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE observation_ReferenceRange__observation(
	observation_ReferenceRangeId TEXT,
	observationId TEXT,
	PRIMARY KEY (observation_ReferenceRangeId, observationId),

	FOREIGN KEY (observation_ReferenceRangeId)
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observationId),
		REFERENCES observation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE observation_ReferenceRange__observation_Component(
	observation_ReferenceRangeId TEXT,
	observation_ComponentId TEXT,
	PRIMARY KEY (observation_ReferenceRangeId, observation_ComponentId),

	FOREIGN KEY (observation_ReferenceRangeId)
		REFERENCES observation_ReferenceRange (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (observation_ComponentId),
		REFERENCES observation_Component (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE operationDefinition_Parameter__operationDefinition(
	operationDefinition_ParameterId TEXT,
	operationDefinitionId TEXT,
	PRIMARY KEY (operationDefinition_ParameterId, operationDefinitionId),

	FOREIGN KEY (operationDefinition_ParameterId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinitionId),
		REFERENCES operationDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE operationDefinition_Parameter__operationDefinition_Parameter(
	operationDefinition_ParameterId TEXT,
	operationDefinition_ParameterId TEXT,
	PRIMARY KEY (operationDefinition_ParameterId, operationDefinition_ParameterId),

	FOREIGN KEY (operationDefinition_ParameterId)
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (operationDefinition_ParameterId),
		REFERENCES operationDefinition_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE address__organization(
	addressId TEXT,
	organizationId TEXT,
	PRIMARY KEY (addressId, organizationId),

	FOREIGN KEY (addressId)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (organizationId),
		REFERENCES organization (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE address__patient(
	addressId TEXT,
	patientId TEXT,
	PRIMARY KEY (addressId, patientId),

	FOREIGN KEY (addressId)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE address__person(
	addressId TEXT,
	personId TEXT,
	PRIMARY KEY (addressId, personId),

	FOREIGN KEY (addressId)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (personId),
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE address__practitioner(
	addressId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (addressId, practitionerId),

	FOREIGN KEY (addressId)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE address__relatedPerson(
	addressId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (addressId, relatedPersonId),

	FOREIGN KEY (addressId)
		REFERENCES address (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE parameters_Parameter__parameters(
	parameters_ParameterId TEXT,
	parametersId TEXT,
	PRIMARY KEY (parameters_ParameterId, parametersId),

	FOREIGN KEY (parameters_ParameterId)
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (parametersId),
		REFERENCES parameters (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE parameters_Parameter__parameters_Parameter(
	parameters_ParameterId TEXT,
	parameters_ParameterId TEXT,
	PRIMARY KEY (parameters_ParameterId, parameters_ParameterId),

	FOREIGN KEY (parameters_ParameterId)
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (parameters_ParameterId),
		REFERENCES parameters_Parameter (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE humanName__patient(
	humanNameId TEXT,
	patientId TEXT,
	PRIMARY KEY (humanNameId, patientId),

	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (patientId),
		REFERENCES patient (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE humanName__person(
	humanNameId TEXT,
	personId TEXT,
	PRIMARY KEY (humanNameId, personId),

	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (personId),
		REFERENCES person (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE humanName__practitioner(
	humanNameId TEXT,
	practitionerId TEXT,
	PRIMARY KEY (humanNameId, practitionerId),

	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (practitionerId),
		REFERENCES practitioner (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE humanName__relatedPerson(
	humanNameId TEXT,
	relatedPersonId TEXT,
	PRIMARY KEY (humanNameId, relatedPersonId),

	FOREIGN KEY (humanNameId)
		REFERENCES humanName (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (relatedPersonId),
		REFERENCES relatedPerson (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE planDefinition_Action__planDefinition(
	planDefinition_ActionId TEXT,
	planDefinitionId TEXT,
	PRIMARY KEY (planDefinition_ActionId, planDefinitionId),

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinitionId),
		REFERENCES planDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE planDefinition_Action__planDefinition_Action(
	planDefinition_ActionId TEXT,
	planDefinition_ActionId TEXT,
	PRIMARY KEY (planDefinition_ActionId, planDefinition_ActionId),

	FOREIGN KEY (planDefinition_ActionId)
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (planDefinition_ActionId),
		REFERENCES planDefinition_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE provenance_Agent__provenance(
	provenance_AgentId TEXT,
	provenanceId TEXT,
	PRIMARY KEY (provenance_AgentId, provenanceId),

	FOREIGN KEY (provenance_AgentId)
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenanceId),
		REFERENCES provenance (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE provenance_Agent__provenance_Entity(
	provenance_AgentId TEXT,
	provenance_EntityId TEXT,
	PRIMARY KEY (provenance_AgentId, provenance_EntityId),

	FOREIGN KEY (provenance_AgentId)
		REFERENCES provenance_Agent (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (provenance_EntityId),
		REFERENCES provenance_Entity (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE questionnaire_Item__questionnaire(
	questionnaire_ItemId TEXT,
	questionnaireId TEXT,
	PRIMARY KEY (questionnaire_ItemId, questionnaireId),

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireId),
		REFERENCES questionnaire (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE questionnaire_Item__questionnaire_Item(
	questionnaire_ItemId TEXT,
	questionnaire_ItemId TEXT,
	PRIMARY KEY (questionnaire_ItemId, questionnaire_ItemId),

	FOREIGN KEY (questionnaire_ItemId)
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaire_ItemId),
		REFERENCES questionnaire_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE questionnaireResponse_Item__questionnaireResponse(
	questionnaireResponse_ItemId TEXT,
	questionnaireResponseId TEXT,
	PRIMARY KEY (questionnaireResponse_ItemId, questionnaireResponseId),

	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponseId),
		REFERENCES questionnaireResponse (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE questionnaireResponse_Item__questionnaireResponse_Item(
	questionnaireResponse_ItemId TEXT,
	questionnaireResponse_ItemId TEXT,
	PRIMARY KEY (questionnaireResponse_ItemId, questionnaireResponse_ItemId),

	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponse_ItemId),
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE questionnaireResponse_Item__questionnaireResponse_Answer(
	questionnaireResponse_ItemId TEXT,
	questionnaireResponse_AnswerId TEXT,
	PRIMARY KEY (questionnaireResponse_ItemId, questionnaireResponse_AnswerId),

	FOREIGN KEY (questionnaireResponse_ItemId)
		REFERENCES questionnaireResponse_Item (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (questionnaireResponse_AnswerId),
		REFERENCES questionnaireResponse_Answer (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE requestGroup_Action__requestGroup(
	requestGroup_ActionId TEXT,
	requestGroupId TEXT,
	PRIMARY KEY (requestGroup_ActionId, requestGroupId),

	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroupId),
		REFERENCES requestGroup (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE requestGroup_Action__requestGroup_Action(
	requestGroup_ActionId TEXT,
	requestGroup_ActionId TEXT,
	PRIMARY KEY (requestGroup_ActionId, requestGroup_ActionId),

	FOREIGN KEY (requestGroup_ActionId)
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (requestGroup_ActionId),
		REFERENCES requestGroup_Action (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE elementDefinition__structureDefinition_Snapshot(
	elementDefinitionId TEXT,
	structureDefinition_SnapshotId TEXT,
	PRIMARY KEY (elementDefinitionId, structureDefinition_SnapshotId),

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinition_SnapshotId),
		REFERENCES structureDefinition_Snapshot (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE elementDefinition__structureDefinition_Differential(
	elementDefinitionId TEXT,
	structureDefinition_DifferentialId TEXT,
	PRIMARY KEY (elementDefinitionId, structureDefinition_DifferentialId),

	FOREIGN KEY (elementDefinitionId)
		REFERENCES elementDefinition (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureDefinition_DifferentialId),
		REFERENCES structureDefinition_Differential (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE structureMap_Rule__structureMap_Group(
	structureMap_RuleId TEXT,
	structureMap_GroupId TEXT,
	PRIMARY KEY (structureMap_RuleId, structureMap_GroupId),

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_GroupId),
		REFERENCES structureMap_Group (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE structureMap_Rule__structureMap_Rule(
	structureMap_RuleId TEXT,
	structureMap_RuleId TEXT,
	PRIMARY KEY (structureMap_RuleId, structureMap_RuleId),

	FOREIGN KEY (structureMap_RuleId)
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (structureMap_RuleId),
		REFERENCES structureMap_Rule (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE substanceSpecification_Name__substanceSpecification(
	substanceSpecification_NameId TEXT,
	substanceSpecificationId TEXT,
	PRIMARY KEY (substanceSpecification_NameId, substanceSpecificationId),

	FOREIGN KEY (substanceSpecification_NameId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecificationId),
		REFERENCES substanceSpecification (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE substanceSpecification_Name__substanceSpecification_Name(
	substanceSpecification_NameId TEXT,
	substanceSpecification_NameId TEXT,
	PRIMARY KEY (substanceSpecification_NameId, substanceSpecification_NameId),

	FOREIGN KEY (substanceSpecification_NameId)
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (substanceSpecification_NameId),
		REFERENCES substanceSpecification_Name (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE valueSet_Include__valueSet_Compose(
	valueSet_IncludeId TEXT,
	valueSet_ComposeId TEXT,
	PRIMARY KEY (valueSet_IncludeId, valueSet_ComposeId),

	FOREIGN KEY (valueSet_IncludeId)
		REFERENCES valueSet_Include (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ComposeId),
		REFERENCES valueSet_Compose (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE valueSet_Designation__valueSet_Concept(
	valueSet_DesignationId TEXT,
	valueSet_ConceptId TEXT,
	PRIMARY KEY (valueSet_DesignationId, valueSet_ConceptId),

	FOREIGN KEY (valueSet_DesignationId)
		REFERENCES valueSet_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ConceptId),
		REFERENCES valueSet_Concept (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE valueSet_Designation__valueSet_Contains(
	valueSet_DesignationId TEXT,
	valueSet_ContainsId TEXT,
	PRIMARY KEY (valueSet_DesignationId, valueSet_ContainsId),

	FOREIGN KEY (valueSet_DesignationId)
		REFERENCES valueSet_Designation (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ContainsId),
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE valueSet_Contains__valueSet_Expansion(
	valueSet_ContainsId TEXT,
	valueSet_ExpansionId TEXT,
	PRIMARY KEY (valueSet_ContainsId, valueSet_ExpansionId),

	FOREIGN KEY (valueSet_ContainsId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ExpansionId),
		REFERENCES valueSet_Expansion (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE valueSet_Contains__valueSet_Contains(
	valueSet_ContainsId TEXT,
	valueSet_ContainsId TEXT,
	PRIMARY KEY (valueSet_ContainsId, valueSet_ContainsId),

	FOREIGN KEY (valueSet_ContainsId)
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION,
	FOREIGN KEY (valueSet_ContainsId),
		REFERENCES valueSet_Contains (id)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE timing_Repeat__enumWhen(
	id TEXT PRIMARY KEY,
	timing_Repeat__When TEXT,
	enum TEXT CHECK( enum IN ('MORN','MORN.early','MORN.late','NOON','AFT','AFT.early','AFT.late','EVE','EVE.early','EVE.late','NIGHT','PHS','HS','WAKE','C','CM','CD','CV','AC','ACM','ACD','ACV','PC','PCM','PCD','PCV') ),

	FOREIGN KEY (timing_Repeat__When)
		REFERENCES timing_Repeat (When)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE elementDefinition__enumRepresentation(
	id TEXT PRIMARY KEY,
	elementDefinition__Representation TEXT,
	enum TEXT CHECK( enum IN ('xmlAttr','xmlText','typeAttr','cdaText','xhtml') ),

	FOREIGN KEY (elementDefinition__Representation)
		REFERENCES elementDefinition (Representation)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE elementDefinition_Type__enumAggregation(
	id TEXT PRIMARY KEY,
	elementDefinition_Type__Aggregation TEXT,
	enum TEXT CHECK( enum IN ('contained','referenced','bundled') ),

	FOREIGN KEY (elementDefinition_Type__Aggregation)
		REFERENCES elementDefinition_Type (Aggregation)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE allergyIntolerance__enumCategory(
	id TEXT PRIMARY KEY,
	allergyIntolerance__Category TEXT,
	enum TEXT CHECK( enum IN ('food','medication','environment','biologic') ),

	FOREIGN KEY (allergyIntolerance__Category)
		REFERENCES allergyIntolerance (Category)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE capabilityStatement_Resource__enumReferencePolicy(
	id TEXT PRIMARY KEY,
	capabilityStatement_Resource__ReferencePolicy TEXT,
	enum TEXT CHECK( enum IN ('literal','logical','resolves','enforced','local') ),

	FOREIGN KEY (capabilityStatement_Resource__ReferencePolicy)
		REFERENCES capabilityStatement_Resource (ReferencePolicy)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coverageEligibilityRequest__enumPurpose(
	id TEXT PRIMARY KEY,
	coverageEligibilityRequest__Purpose TEXT,
	enum TEXT CHECK( enum IN ('auth-requirements','benefits','discovery','validation') ),

	FOREIGN KEY (coverageEligibilityRequest__Purpose)
		REFERENCES coverageEligibilityRequest (Purpose)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE coverageEligibilityResponse__enumPurpose(
	id TEXT PRIMARY KEY,
	coverageEligibilityResponse__Purpose TEXT,
	enum TEXT CHECK( enum IN ('auth-requirements','benefits','discovery','validation') ),

	FOREIGN KEY (coverageEligibilityResponse__Purpose)
		REFERENCES coverageEligibilityResponse (Purpose)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE healthcareService_AvailableTime__enumDaysOfWeek(
	id TEXT PRIMARY KEY,
	healthcareService_AvailableTime__DaysOfWeek TEXT,
	enum TEXT CHECK( enum IN ('mon','tue','wed','thu','fri','sat','sun') ),

	FOREIGN KEY (healthcareService_AvailableTime__DaysOfWeek)
		REFERENCES healthcareService_AvailableTime (DaysOfWeek)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE implementationGuide__enumFhirVersion(
	id TEXT PRIMARY KEY,
	implementationGuide__FhirVersion TEXT,
	enum TEXT CHECK( enum IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),

	FOREIGN KEY (implementationGuide__FhirVersion)
		REFERENCES implementationGuide (FhirVersion)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE implementationGuide_Resource__enumFhirVersion(
	id TEXT PRIMARY KEY,
	implementationGuide_Resource__FhirVersion TEXT,
	enum TEXT CHECK( enum IN ('0.01','0.05','0.06','0.11','0.0.80','0.0.81','0.0.82','0.4.0','0.5.0','1.0.0','1.0.1','1.0.2','1.1.0','1.4.0','1.6.0','1.8.0','3.0.0','3.0.1','3.3.0','3.5.0','4.0.0','4.0.1') ),

	FOREIGN KEY (implementationGuide_Resource__FhirVersion)
		REFERENCES implementationGuide_Resource (FhirVersion)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE observationDefinition__enumPermittedDataType(
	id TEXT PRIMARY KEY,
	observationDefinition__PermittedDataType TEXT,
	enum TEXT CHECK( enum IN ('Quantity','CodeableConcept','string','boolean','integer','Range','Ratio','SampledData','time','dateTime','Period') ),

	FOREIGN KEY (observationDefinition__PermittedDataType)
		REFERENCES observationDefinition (PermittedDataType)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE searchParameter__enumComparator(
	id TEXT PRIMARY KEY,
	searchParameter__Comparator TEXT,
	enum TEXT CHECK( enum IN ('eq','ne','gt','lt','ge','le','sa','eb','ap') ),

	FOREIGN KEY (searchParameter__Comparator)
		REFERENCES searchParameter (Comparator)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE searchParameter__enumModifier(
	id TEXT PRIMARY KEY,
	searchParameter__Modifier TEXT,
	enum TEXT CHECK( enum IN ('missing','exact','contains','not','text','in','not-in','below','above','type','identifier','ofType') ),

	FOREIGN KEY (searchParameter__Modifier)
		REFERENCES searchParameter (Modifier)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

CREATE TABLE structureMap_Target__enumListMode(
	id TEXT PRIMARY KEY,
	structureMap_Target__ListMode TEXT,
	enum TEXT CHECK( enum IN ('first','share','last','collate') ),

	FOREIGN KEY (structureMap_Target__ListMode)
		REFERENCES structureMap_Target (ListMode)
			ON DELETE CASCADE
			ON UPDATE NO ACTION
);

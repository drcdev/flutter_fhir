{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "id": "http://hl7.org/fhir/json-schema/4.0",
  "description": "see http://hl7.org/fhir/json.html#schema for information about the FHIR Json Schemas",
  "discriminator": {
    "propertyName": "resourceType",
    "Element": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Extension": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "valueBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_valueBase64Binary": { "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": { "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": { "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        },
        "valueId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": { "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueMarkdown": { "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": { "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": { "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": { "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": { "$ref": "#/definitions/Element"
        },
        "valueAddress": { "$ref": "#/definitions/Address"
        },
        "valueAge": { "$ref": "#/definitions/Age"
        },
        "valueAnnotation": { "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": { "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": { "$ref": "#/definitions/Count"
        },
        "valueDistance": { "$ref": "#/definitions/Distance"
        },
        "valueDuration": { "$ref": "#/definitions/Duration"
        },
        "valueHumanName": { "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "valueMoney": { "$ref": "#/definitions/Money"
        },
        "valuePeriod": { "$ref": "#/definitions/Period"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueRatio": { "$ref": "#/definitions/Ratio"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "valueSampledData": { "$ref": "#/definitions/SampledData"
        },
        "valueSignature": { "$ref": "#/definitions/Signature"
        },
        "valueTiming": { "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": { "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": { "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": { "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": { "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": { "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": { "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": { "$ref": "#/definitions/Dosage"
        },
        "valueMeta": { "$ref": "#/definitions/Meta"
        }
      },
      "additionalProperties": false
    },
    "Narrative": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "status": {
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "div": { "$ref": "#/definitions/xhtml"
        }
      },
      "additionalProperties": false,
      "required": [
        "div"
      ]
    },
    "Annotation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "authorReference": { "$ref": "#/definitions/Reference"
        },
        "authorString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_authorString": { "$ref": "#/definitions/Element"
        },
        "time": { "$ref": "#/definitions/dateTime"
        },
        "_time": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/markdown"
        },
        "_text": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Attachment": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "contentType": { "$ref": "#/definitions/code"
        },
        "_contentType": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "data": { "$ref": "#/definitions/base64Binary"
        },
        "_data": { "$ref": "#/definitions/Element"
        },
        "url": { "$ref": "#/definitions/url"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "size": { "$ref": "#/definitions/unsignedInt"
        },
        "_size": { "$ref": "#/definitions/Element"
        },
        "hash": { "$ref": "#/definitions/base64Binary"
        },
        "_hash": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "creation": { "$ref": "#/definitions/dateTime"
        },
        "_creation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Identifier": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "use": {
          "enum": [
            "usual",
            "official",
            "temp",
            "secondary",
            "old"
          ]
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "system": { "$ref": "#/definitions/uri"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "assigner": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "CodeableConcept": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "coding": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Coding": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "system": { "$ref": "#/definitions/uri"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        },
        "userSelected": { "$ref": "#/definitions/boolean"
        },
        "_userSelected": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Quantity": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "comparator": {
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e"
          ]
        },
        "_comparator": { "$ref": "#/definitions/Element"
        },
        "unit": { "$ref": "#/definitions/string"
        },
        "_unit": { "$ref": "#/definitions/Element"
        },
        "system": { "$ref": "#/definitions/uri"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Duration": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "comparator": {
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e"
          ]
        },
        "_comparator": { "$ref": "#/definitions/Element"
        },
        "unit": { "$ref": "#/definitions/string"
        },
        "_unit": { "$ref": "#/definitions/Element"
        },
        "system": { "$ref": "#/definitions/uri"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Distance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "comparator": {
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e"
          ]
        },
        "_comparator": { "$ref": "#/definitions/Element"
        },
        "unit": { "$ref": "#/definitions/string"
        },
        "_unit": { "$ref": "#/definitions/Element"
        },
        "system": { "$ref": "#/definitions/uri"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Count": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "comparator": {
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e"
          ]
        },
        "_comparator": { "$ref": "#/definitions/Element"
        },
        "unit": { "$ref": "#/definitions/string"
        },
        "_unit": { "$ref": "#/definitions/Element"
        },
        "system": { "$ref": "#/definitions/uri"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Money": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "currency": { "$ref": "#/definitions/code"
        },
        "_currency": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Age": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "comparator": {
          "enum": [
            "\u003c",
            "\u003c\u003d",
            "\u003e\u003d",
            "\u003e"
          ]
        },
        "_comparator": { "$ref": "#/definitions/Element"
        },
        "unit": { "$ref": "#/definitions/string"
        },
        "_unit": { "$ref": "#/definitions/Element"
        },
        "system": { "$ref": "#/definitions/uri"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Range": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "low": { "$ref": "#/definitions/Quantity"
        },
        "high": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "Period": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "start": { "$ref": "#/definitions/dateTime"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/dateTime"
        },
        "_end": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Ratio": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "numerator": { "$ref": "#/definitions/Quantity"
        },
        "denominator": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "Reference": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "reference": { "$ref": "#/definitions/string"
        },
        "_reference": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/uri"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SampledData": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "origin": { "$ref": "#/definitions/Quantity"
        },
        "period": { "$ref": "#/definitions/decimal"
        },
        "_period": { "$ref": "#/definitions/Element"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "lowerLimit": { "$ref": "#/definitions/decimal"
        },
        "_lowerLimit": { "$ref": "#/definitions/Element"
        },
        "upperLimit": { "$ref": "#/definitions/decimal"
        },
        "_upperLimit": { "$ref": "#/definitions/Element"
        },
        "dimensions": { "$ref": "#/definitions/positiveInt"
        },
        "_dimensions": { "$ref": "#/definitions/Element"
        },
        "data": { "$ref": "#/definitions/string"
        },
        "_data": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "origin"
      ]
    },
    "Signature": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "when": { "$ref": "#/definitions/instant"
        },
        "_when": { "$ref": "#/definitions/Element"
        },
        "who": { "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": { "$ref": "#/definitions/Reference"
        },
        "targetFormat": { "$ref": "#/definitions/code"
        },
        "_targetFormat": { "$ref": "#/definitions/Element"
        },
        "sigFormat": { "$ref": "#/definitions/code"
        },
        "_sigFormat": { "$ref": "#/definitions/Element"
        },
        "data": { "$ref": "#/definitions/base64Binary"
        },
        "_data": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "who"
      ]
    },
    "HumanName": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "use": {
          "enum": [
            "usual",
            "official",
            "temp",
            "nickname",
            "anonymous",
            "old",
            "maiden"
          ]
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "family": { "$ref": "#/definitions/string"
        },
        "_family": { "$ref": "#/definitions/Element"
        },
        "given": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_given": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "prefix": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_prefix": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "suffix": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_suffix": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "Address": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "use": {
          "enum": [
            "home",
            "work",
            "temp",
            "old",
            "billing"
          ]
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "postal",
            "physical",
            "both"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "line": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_line": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "city": { "$ref": "#/definitions/string"
        },
        "_city": { "$ref": "#/definitions/Element"
        },
        "district": { "$ref": "#/definitions/string"
        },
        "_district": { "$ref": "#/definitions/Element"
        },
        "state": { "$ref": "#/definitions/string"
        },
        "_state": { "$ref": "#/definitions/Element"
        },
        "postalCode": { "$ref": "#/definitions/string"
        },
        "_postalCode": { "$ref": "#/definitions/Element"
        },
        "country": { "$ref": "#/definitions/string"
        },
        "_country": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "ContactPoint": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "system": {
          "enum": [
            "phone",
            "fax",
            "email",
            "pager",
            "url",
            "sms",
            "other"
          ]
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "use": {
          "enum": [
            "home",
            "work",
            "temp",
            "old",
            "mobile"
          ]
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "rank": { "$ref": "#/definitions/positiveInt"
        },
        "_rank": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "Timing": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "event": { "items": { "$ref": "#/definitions/dateTime" }, "type": "array" },
        "_event": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "repeat": { "$ref": "#/definitions/Timing_Repeat"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "Timing_Repeat": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "boundsDuration": { "$ref": "#/definitions/Duration"
        },
        "boundsRange": { "$ref": "#/definitions/Range"
        },
        "boundsPeriod": { "$ref": "#/definitions/Period"
        },
        "count": { "$ref": "#/definitions/positiveInt"
        },
        "_count": { "$ref": "#/definitions/Element"
        },
        "countMax": { "$ref": "#/definitions/positiveInt"
        },
        "_countMax": { "$ref": "#/definitions/Element"
        },
        "duration": { "$ref": "#/definitions/decimal"
        },
        "_duration": { "$ref": "#/definitions/Element"
        },
        "durationMax": { "$ref": "#/definitions/decimal"
        },
        "_durationMax": { "$ref": "#/definitions/Element"
        },
        "durationUnit": {
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ]
        },
        "_durationUnit": { "$ref": "#/definitions/Element"
        },
        "frequency": { "$ref": "#/definitions/positiveInt"
        },
        "_frequency": { "$ref": "#/definitions/Element"
        },
        "frequencyMax": { "$ref": "#/definitions/positiveInt"
        },
        "_frequencyMax": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/decimal"
        },
        "_period": { "$ref": "#/definitions/Element"
        },
        "periodMax": { "$ref": "#/definitions/decimal"
        },
        "_periodMax": { "$ref": "#/definitions/Element"
        },
        "periodUnit": {
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ]
        },
        "_periodUnit": { "$ref": "#/definitions/Element"
        },
        "dayOfWeek": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_dayOfWeek": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "timeOfDay": { "items": { "$ref": "#/definitions/time" }, "type": "array" },
        "_timeOfDay": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "when": { "items": {
            "enum": [
              "MORN",
              "MORN.early",
              "MORN.late",
              "NOON",
              "AFT",
              "AFT.early",
              "AFT.late",
              "EVE",
              "EVE.early",
              "EVE.late",
              "NIGHT",
              "PHS",
              "HS",
              "WAKE",
              "C",
              "CM",
              "CD",
              "CV",
              "AC",
              "ACM",
              "ACD",
              "ACV",
              "PC",
              "PCM",
              "PCD",
              "PCV"
            ] }, "type": "array" },
        "_when": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "offset": { "$ref": "#/definitions/unsignedInt"
        },
        "_offset": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Meta": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "versionId": { "$ref": "#/definitions/id"
        },
        "_versionId": { "$ref": "#/definitions/Element"
        },
        "lastUpdated": { "$ref": "#/definitions/instant"
        },
        "_lastUpdated": { "$ref": "#/definitions/Element"
        },
        "source": { "$ref": "#/definitions/uri"
        },
        "_source": { "$ref": "#/definitions/Element"
        },
        "profile": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "security": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "tag": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ContactDetail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Contributor": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "author",
            "editor",
            "reviewer",
            "endorser"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "DataRequirement": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "profile": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "mustSupport": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_mustSupport": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "codeFilter": { "items": { "$ref": "#/definitions/DataRequirement_CodeFilter" }, "type": "array" },
        "dateFilter": { "items": { "$ref": "#/definitions/DataRequirement_DateFilter" }, "type": "array" },
        "limit": { "$ref": "#/definitions/positiveInt"
        },
        "_limit": { "$ref": "#/definitions/Element"
        },
        "sort": { "items": { "$ref": "#/definitions/DataRequirement_Sort" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "DataRequirement_CodeFilter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "searchParam": { "$ref": "#/definitions/string"
        },
        "_searchParam": { "$ref": "#/definitions/Element"
        },
        "valueSet": { "$ref": "#/definitions/canonical"
        },
        "code": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "DataRequirement_DateFilter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "searchParam": { "$ref": "#/definitions/string"
        },
        "_searchParam": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valuePeriod": { "$ref": "#/definitions/Period"
        },
        "valueDuration": { "$ref": "#/definitions/Duration"
        }
      },
      "additionalProperties": false
    },
    "DataRequirement_Sort": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "direction": {
          "enum": [
            "ascending",
            "descending"
          ]
        },
        "_direction": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ParameterDefinition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/code"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "use": { "$ref": "#/definitions/code"
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "min": { "$ref": "#/definitions/integer"
        },
        "_min": { "$ref": "#/definitions/Element"
        },
        "max": { "$ref": "#/definitions/string"
        },
        "_max": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/string"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false
    },
    "RelatedArtifact": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "documentation",
            "justification",
            "citation",
            "predecessor",
            "successor",
            "derived-from",
            "depends-on",
            "composed-of"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "label": { "$ref": "#/definitions/string"
        },
        "_label": { "$ref": "#/definitions/Element"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        },
        "citation": { "$ref": "#/definitions/markdown"
        },
        "_citation": { "$ref": "#/definitions/Element"
        },
        "url": { "$ref": "#/definitions/url"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "document": { "$ref": "#/definitions/Attachment"
        },
        "resource": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false
    },
    "TriggerDefinition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "named-event",
            "periodic",
            "data-changed",
            "data-added",
            "data-modified",
            "data-removed",
            "data-accessed",
            "data-access-ended"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "timingTiming": { "$ref": "#/definitions/Timing"
        },
        "timingReference": { "$ref": "#/definitions/Reference"
        },
        "timingDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_timingDate": { "$ref": "#/definitions/Element"
        },
        "timingDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timingDateTime": { "$ref": "#/definitions/Element"
        },
        "data": { "items": { "$ref": "#/definitions/DataRequirement" }, "type": "array" },
        "condition": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false
    },
    "UsageContext": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/Coding"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Dosage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/integer"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "additionalInstruction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "patientInstruction": { "$ref": "#/definitions/string"
        },
        "_patientInstruction": { "$ref": "#/definitions/Element"
        },
        "timing": { "$ref": "#/definitions/Timing"
        },
        "asNeededBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_asNeededBoolean": { "$ref": "#/definitions/Element"
        },
        "asNeededCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "site": { "$ref": "#/definitions/CodeableConcept"
        },
        "route": { "$ref": "#/definitions/CodeableConcept"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        },
        "doseAndRate": { "items": { "$ref": "#/definitions/Dosage_DoseAndRate" }, "type": "array" },
        "maxDosePerPeriod": { "$ref": "#/definitions/Ratio"
        },
        "maxDosePerAdministration": { "$ref": "#/definitions/Quantity"
        },
        "maxDosePerLifetime": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "Dosage_DoseAndRate": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "doseRange": { "$ref": "#/definitions/Range"
        },
        "doseQuantity": { "$ref": "#/definitions/Quantity"
        },
        "rateRatio": { "$ref": "#/definitions/Ratio"
        },
        "rateRange": { "$ref": "#/definitions/Range"
        },
        "rateQuantity": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "Population": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "ageRange": { "$ref": "#/definitions/Range"
        },
        "ageCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "gender": { "$ref": "#/definitions/CodeableConcept"
        },
        "race": { "$ref": "#/definitions/CodeableConcept"
        },
        "physiologicalCondition": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "ProductShelfLife": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "period": { "$ref": "#/definitions/Quantity"
        },
        "specialPrecautionsForStorage": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "period",
        "type"
      ]
    },
    "ProdCharacteristic": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "height": { "$ref": "#/definitions/Quantity"
        },
        "width": { "$ref": "#/definitions/Quantity"
        },
        "depth": { "$ref": "#/definitions/Quantity"
        },
        "weight": { "$ref": "#/definitions/Quantity"
        },
        "nominalVolume": { "$ref": "#/definitions/Quantity"
        },
        "externalDiameter": { "$ref": "#/definitions/Quantity"
        },
        "shape": { "$ref": "#/definitions/string"
        },
        "_shape": { "$ref": "#/definitions/Element"
        },
        "color": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_color": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "imprint": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_imprint": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "image": { "items": { "$ref": "#/definitions/Attachment" }, "type": "array" },
        "scoring": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "MarketingStatus": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "country": { "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdiction": { "$ref": "#/definitions/CodeableConcept"
        },
        "status": { "$ref": "#/definitions/CodeableConcept"
        },
        "dateRange": { "$ref": "#/definitions/Period"
        },
        "restoreDate": { "$ref": "#/definitions/dateTime"
        },
        "_restoreDate": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "country",
        "dateRange",
        "status"
      ]
    },
    "SubstanceAmount": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "amountQuantity": { "$ref": "#/definitions/Quantity"
        },
        "amountRange": { "$ref": "#/definitions/Range"
        },
        "amountString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": { "$ref": "#/definitions/Element"
        },
        "amountType": { "$ref": "#/definitions/CodeableConcept"
        },
        "amountText": { "$ref": "#/definitions/string"
        },
        "_amountText": { "$ref": "#/definitions/Element"
        },
        "referenceRange": { "$ref": "#/definitions/SubstanceAmount_ReferenceRange"
        }
      },
      "additionalProperties": false
    },
    "SubstanceAmount_ReferenceRange": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "lowLimit": { "$ref": "#/definitions/Quantity"
        },
        "highLimit": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "Expression": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/id"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "language": {
          "enum": [
            "text/cql",
            "text/fhirpath",
            "application/x-fhir-query"
          ]
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/string"
        },
        "_expression": { "$ref": "#/definitions/Element"
        },
        "reference": { "$ref": "#/definitions/uri"
        },
        "_reference": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "representation": { "items": {
            "enum": [
              "xmlAttr",
              "xmlText",
              "typeAttr",
              "cdaText",
              "xhtml"
            ] }, "type": "array" },
        "_representation": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "sliceName": { "$ref": "#/definitions/string"
        },
        "_sliceName": { "$ref": "#/definitions/Element"
        },
        "sliceIsConstraining": { "$ref": "#/definitions/boolean"
        },
        "_sliceIsConstraining": { "$ref": "#/definitions/Element"
        },
        "label": { "$ref": "#/definitions/string"
        },
        "_label": { "$ref": "#/definitions/Element"
        },
        "code": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "slicing": { "$ref": "#/definitions/ElementDefinition_Slicing"
        },
        "short": { "$ref": "#/definitions/string"
        },
        "_short": { "$ref": "#/definitions/Element"
        },
        "definition": { "$ref": "#/definitions/markdown"
        },
        "_definition": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/markdown"
        },
        "_comment": { "$ref": "#/definitions/Element"
        },
        "requirements": { "$ref": "#/definitions/markdown"
        },
        "_requirements": { "$ref": "#/definitions/Element"
        },
        "alias": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_alias": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "min": { "$ref": "#/definitions/unsignedInt"
        },
        "_min": { "$ref": "#/definitions/Element"
        },
        "max": { "$ref": "#/definitions/string"
        },
        "_max": { "$ref": "#/definitions/Element"
        },
        "base": { "$ref": "#/definitions/ElementDefinition_Base"
        },
        "contentReference": { "$ref": "#/definitions/uri"
        },
        "_contentReference": { "$ref": "#/definitions/Element"
        },
        "type": { "items": { "$ref": "#/definitions/ElementDefinition_Type" }, "type": "array" },
        "defaultValueBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_defaultValueBase64Binary": { "$ref": "#/definitions/Element"
        },
        "defaultValueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_defaultValueBoolean": { "$ref": "#/definitions/Element"
        },
        "defaultValueCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueCanonical": { "$ref": "#/definitions/Element"
        },
        "defaultValueCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_defaultValueCode": { "$ref": "#/definitions/Element"
        },
        "defaultValueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_defaultValueDate": { "$ref": "#/definitions/Element"
        },
        "defaultValueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_defaultValueDateTime": { "$ref": "#/definitions/Element"
        },
        "defaultValueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_defaultValueDecimal": { "$ref": "#/definitions/Element"
        },
        "defaultValueId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_defaultValueId": { "$ref": "#/definitions/Element"
        },
        "defaultValueInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_defaultValueInstant": { "$ref": "#/definitions/Element"
        },
        "defaultValueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_defaultValueInteger": { "$ref": "#/definitions/Element"
        },
        "defaultValueMarkdown": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_defaultValueMarkdown": { "$ref": "#/definitions/Element"
        },
        "defaultValueOid": {
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_defaultValueOid": { "$ref": "#/definitions/Element"
        },
        "defaultValuePositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_defaultValuePositiveInt": { "$ref": "#/definitions/Element"
        },
        "defaultValueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_defaultValueString": { "$ref": "#/definitions/Element"
        },
        "defaultValueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_defaultValueTime": { "$ref": "#/definitions/Element"
        },
        "defaultValueUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_defaultValueUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "defaultValueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueUri": { "$ref": "#/definitions/Element"
        },
        "defaultValueUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueUrl": { "$ref": "#/definitions/Element"
        },
        "defaultValueUuid": {
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_defaultValueUuid": { "$ref": "#/definitions/Element"
        },
        "defaultValueAddress": { "$ref": "#/definitions/Address"
        },
        "defaultValueAge": { "$ref": "#/definitions/Age"
        },
        "defaultValueAnnotation": { "$ref": "#/definitions/Annotation"
        },
        "defaultValueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "defaultValueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "defaultValueCoding": { "$ref": "#/definitions/Coding"
        },
        "defaultValueContactPoint": { "$ref": "#/definitions/ContactPoint"
        },
        "defaultValueCount": { "$ref": "#/definitions/Count"
        },
        "defaultValueDistance": { "$ref": "#/definitions/Distance"
        },
        "defaultValueDuration": { "$ref": "#/definitions/Duration"
        },
        "defaultValueHumanName": { "$ref": "#/definitions/HumanName"
        },
        "defaultValueIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "defaultValueMoney": { "$ref": "#/definitions/Money"
        },
        "defaultValuePeriod": { "$ref": "#/definitions/Period"
        },
        "defaultValueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "defaultValueRange": { "$ref": "#/definitions/Range"
        },
        "defaultValueRatio": { "$ref": "#/definitions/Ratio"
        },
        "defaultValueReference": { "$ref": "#/definitions/Reference"
        },
        "defaultValueSampledData": { "$ref": "#/definitions/SampledData"
        },
        "defaultValueSignature": { "$ref": "#/definitions/Signature"
        },
        "defaultValueTiming": { "$ref": "#/definitions/Timing"
        },
        "defaultValueContactDetail": { "$ref": "#/definitions/ContactDetail"
        },
        "defaultValueContributor": { "$ref": "#/definitions/Contributor"
        },
        "defaultValueDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "defaultValueExpression": { "$ref": "#/definitions/Expression"
        },
        "defaultValueParameterDefinition": { "$ref": "#/definitions/ParameterDefinition"
        },
        "defaultValueRelatedArtifact": { "$ref": "#/definitions/RelatedArtifact"
        },
        "defaultValueTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "defaultValueUsageContext": { "$ref": "#/definitions/UsageContext"
        },
        "defaultValueDosage": { "$ref": "#/definitions/Dosage"
        },
        "defaultValueMeta": { "$ref": "#/definitions/Meta"
        },
        "meaningWhenMissing": { "$ref": "#/definitions/markdown"
        },
        "_meaningWhenMissing": { "$ref": "#/definitions/Element"
        },
        "orderMeaning": { "$ref": "#/definitions/string"
        },
        "_orderMeaning": { "$ref": "#/definitions/Element"
        },
        "fixedBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_fixedBase64Binary": { "$ref": "#/definitions/Element"
        },
        "fixedBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_fixedBoolean": { "$ref": "#/definitions/Element"
        },
        "fixedCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_fixedCanonical": { "$ref": "#/definitions/Element"
        },
        "fixedCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_fixedCode": { "$ref": "#/definitions/Element"
        },
        "fixedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_fixedDate": { "$ref": "#/definitions/Element"
        },
        "fixedDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_fixedDateTime": { "$ref": "#/definitions/Element"
        },
        "fixedDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_fixedDecimal": { "$ref": "#/definitions/Element"
        },
        "fixedId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_fixedId": { "$ref": "#/definitions/Element"
        },
        "fixedInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_fixedInstant": { "$ref": "#/definitions/Element"
        },
        "fixedInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_fixedInteger": { "$ref": "#/definitions/Element"
        },
        "fixedMarkdown": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_fixedMarkdown": { "$ref": "#/definitions/Element"
        },
        "fixedOid": {
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_fixedOid": { "$ref": "#/definitions/Element"
        },
        "fixedPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_fixedPositiveInt": { "$ref": "#/definitions/Element"
        },
        "fixedString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_fixedString": { "$ref": "#/definitions/Element"
        },
        "fixedTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_fixedTime": { "$ref": "#/definitions/Element"
        },
        "fixedUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_fixedUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "fixedUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_fixedUri": { "$ref": "#/definitions/Element"
        },
        "fixedUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_fixedUrl": { "$ref": "#/definitions/Element"
        },
        "fixedUuid": {
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_fixedUuid": { "$ref": "#/definitions/Element"
        },
        "fixedAddress": { "$ref": "#/definitions/Address"
        },
        "fixedAge": { "$ref": "#/definitions/Age"
        },
        "fixedAnnotation": { "$ref": "#/definitions/Annotation"
        },
        "fixedAttachment": { "$ref": "#/definitions/Attachment"
        },
        "fixedCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "fixedCoding": { "$ref": "#/definitions/Coding"
        },
        "fixedContactPoint": { "$ref": "#/definitions/ContactPoint"
        },
        "fixedCount": { "$ref": "#/definitions/Count"
        },
        "fixedDistance": { "$ref": "#/definitions/Distance"
        },
        "fixedDuration": { "$ref": "#/definitions/Duration"
        },
        "fixedHumanName": { "$ref": "#/definitions/HumanName"
        },
        "fixedIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "fixedMoney": { "$ref": "#/definitions/Money"
        },
        "fixedPeriod": { "$ref": "#/definitions/Period"
        },
        "fixedQuantity": { "$ref": "#/definitions/Quantity"
        },
        "fixedRange": { "$ref": "#/definitions/Range"
        },
        "fixedRatio": { "$ref": "#/definitions/Ratio"
        },
        "fixedReference": { "$ref": "#/definitions/Reference"
        },
        "fixedSampledData": { "$ref": "#/definitions/SampledData"
        },
        "fixedSignature": { "$ref": "#/definitions/Signature"
        },
        "fixedTiming": { "$ref": "#/definitions/Timing"
        },
        "fixedContactDetail": { "$ref": "#/definitions/ContactDetail"
        },
        "fixedContributor": { "$ref": "#/definitions/Contributor"
        },
        "fixedDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "fixedExpression": { "$ref": "#/definitions/Expression"
        },
        "fixedParameterDefinition": { "$ref": "#/definitions/ParameterDefinition"
        },
        "fixedRelatedArtifact": { "$ref": "#/definitions/RelatedArtifact"
        },
        "fixedTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "fixedUsageContext": { "$ref": "#/definitions/UsageContext"
        },
        "fixedDosage": { "$ref": "#/definitions/Dosage"
        },
        "fixedMeta": { "$ref": "#/definitions/Meta"
        },
        "patternBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_patternBase64Binary": { "$ref": "#/definitions/Element"
        },
        "patternBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_patternBoolean": { "$ref": "#/definitions/Element"
        },
        "patternCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_patternCanonical": { "$ref": "#/definitions/Element"
        },
        "patternCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_patternCode": { "$ref": "#/definitions/Element"
        },
        "patternDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_patternDate": { "$ref": "#/definitions/Element"
        },
        "patternDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_patternDateTime": { "$ref": "#/definitions/Element"
        },
        "patternDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_patternDecimal": { "$ref": "#/definitions/Element"
        },
        "patternId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_patternId": { "$ref": "#/definitions/Element"
        },
        "patternInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_patternInstant": { "$ref": "#/definitions/Element"
        },
        "patternInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_patternInteger": { "$ref": "#/definitions/Element"
        },
        "patternMarkdown": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_patternMarkdown": { "$ref": "#/definitions/Element"
        },
        "patternOid": {
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_patternOid": { "$ref": "#/definitions/Element"
        },
        "patternPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_patternPositiveInt": { "$ref": "#/definitions/Element"
        },
        "patternString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_patternString": { "$ref": "#/definitions/Element"
        },
        "patternTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_patternTime": { "$ref": "#/definitions/Element"
        },
        "patternUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_patternUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "patternUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_patternUri": { "$ref": "#/definitions/Element"
        },
        "patternUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_patternUrl": { "$ref": "#/definitions/Element"
        },
        "patternUuid": {
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_patternUuid": { "$ref": "#/definitions/Element"
        },
        "patternAddress": { "$ref": "#/definitions/Address"
        },
        "patternAge": { "$ref": "#/definitions/Age"
        },
        "patternAnnotation": { "$ref": "#/definitions/Annotation"
        },
        "patternAttachment": { "$ref": "#/definitions/Attachment"
        },
        "patternCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "patternCoding": { "$ref": "#/definitions/Coding"
        },
        "patternContactPoint": { "$ref": "#/definitions/ContactPoint"
        },
        "patternCount": { "$ref": "#/definitions/Count"
        },
        "patternDistance": { "$ref": "#/definitions/Distance"
        },
        "patternDuration": { "$ref": "#/definitions/Duration"
        },
        "patternHumanName": { "$ref": "#/definitions/HumanName"
        },
        "patternIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "patternMoney": { "$ref": "#/definitions/Money"
        },
        "patternPeriod": { "$ref": "#/definitions/Period"
        },
        "patternQuantity": { "$ref": "#/definitions/Quantity"
        },
        "patternRange": { "$ref": "#/definitions/Range"
        },
        "patternRatio": { "$ref": "#/definitions/Ratio"
        },
        "patternReference": { "$ref": "#/definitions/Reference"
        },
        "patternSampledData": { "$ref": "#/definitions/SampledData"
        },
        "patternSignature": { "$ref": "#/definitions/Signature"
        },
        "patternTiming": { "$ref": "#/definitions/Timing"
        },
        "patternContactDetail": { "$ref": "#/definitions/ContactDetail"
        },
        "patternContributor": { "$ref": "#/definitions/Contributor"
        },
        "patternDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "patternExpression": { "$ref": "#/definitions/Expression"
        },
        "patternParameterDefinition": { "$ref": "#/definitions/ParameterDefinition"
        },
        "patternRelatedArtifact": { "$ref": "#/definitions/RelatedArtifact"
        },
        "patternTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "patternUsageContext": { "$ref": "#/definitions/UsageContext"
        },
        "patternDosage": { "$ref": "#/definitions/Dosage"
        },
        "patternMeta": { "$ref": "#/definitions/Meta"
        },
        "example": { "items": { "$ref": "#/definitions/ElementDefinition_Example" }, "type": "array" },
        "minValueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_minValueDate": { "$ref": "#/definitions/Element"
        },
        "minValueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_minValueDateTime": { "$ref": "#/definitions/Element"
        },
        "minValueInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_minValueInstant": { "$ref": "#/definitions/Element"
        },
        "minValueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_minValueTime": { "$ref": "#/definitions/Element"
        },
        "minValueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_minValueDecimal": { "$ref": "#/definitions/Element"
        },
        "minValueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_minValueInteger": { "$ref": "#/definitions/Element"
        },
        "minValuePositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_minValuePositiveInt": { "$ref": "#/definitions/Element"
        },
        "minValueUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_minValueUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "minValueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "maxValueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_maxValueDate": { "$ref": "#/definitions/Element"
        },
        "maxValueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_maxValueDateTime": { "$ref": "#/definitions/Element"
        },
        "maxValueInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_maxValueInstant": { "$ref": "#/definitions/Element"
        },
        "maxValueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_maxValueTime": { "$ref": "#/definitions/Element"
        },
        "maxValueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_maxValueDecimal": { "$ref": "#/definitions/Element"
        },
        "maxValueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_maxValueInteger": { "$ref": "#/definitions/Element"
        },
        "maxValuePositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_maxValuePositiveInt": { "$ref": "#/definitions/Element"
        },
        "maxValueUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_maxValueUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "maxValueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "maxLength": { "$ref": "#/definitions/integer"
        },
        "_maxLength": { "$ref": "#/definitions/Element"
        },
        "condition": { "items": { "$ref": "#/definitions/id" }, "type": "array" },
        "_condition": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "constraint": { "items": { "$ref": "#/definitions/ElementDefinition_Constraint" }, "type": "array" },
        "mustSupport": { "$ref": "#/definitions/boolean"
        },
        "_mustSupport": { "$ref": "#/definitions/Element"
        },
        "isModifier": { "$ref": "#/definitions/boolean"
        },
        "_isModifier": { "$ref": "#/definitions/Element"
        },
        "isModifierReason": { "$ref": "#/definitions/string"
        },
        "_isModifierReason": { "$ref": "#/definitions/Element"
        },
        "isSummary": { "$ref": "#/definitions/boolean"
        },
        "_isSummary": { "$ref": "#/definitions/Element"
        },
        "binding": { "$ref": "#/definitions/ElementDefinition_Binding"
        },
        "mapping": { "items": { "$ref": "#/definitions/ElementDefinition_Mapping" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Slicing": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "discriminator": { "items": { "$ref": "#/definitions/ElementDefinition_Discriminator" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "ordered": { "$ref": "#/definitions/boolean"
        },
        "_ordered": { "$ref": "#/definitions/Element"
        },
        "rules": {
          "enum": [
            "closed",
            "open",
            "openAtEnd"
          ]
        },
        "_rules": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Discriminator": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "value",
            "exists",
            "pattern",
            "type",
            "profile"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Base": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "min": { "$ref": "#/definitions/unsignedInt"
        },
        "_min": { "$ref": "#/definitions/Element"
        },
        "max": { "$ref": "#/definitions/string"
        },
        "_max": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Type": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/uri"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "profile": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "targetProfile": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "aggregation": { "items": {
            "enum": [
              "contained",
              "referenced",
              "bundled"
            ] }, "type": "array" },
        "_aggregation": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "versioning": {
          "enum": [
            "either",
            "independent",
            "specific"
          ]
        },
        "_versioning": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Example": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "label": { "$ref": "#/definitions/string"
        },
        "_label": { "$ref": "#/definitions/Element"
        },
        "valueBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_valueBase64Binary": { "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": { "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": { "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        },
        "valueId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": { "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueMarkdown": { "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": { "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": { "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": { "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": { "$ref": "#/definitions/Element"
        },
        "valueAddress": { "$ref": "#/definitions/Address"
        },
        "valueAge": { "$ref": "#/definitions/Age"
        },
        "valueAnnotation": { "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": { "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": { "$ref": "#/definitions/Count"
        },
        "valueDistance": { "$ref": "#/definitions/Distance"
        },
        "valueDuration": { "$ref": "#/definitions/Duration"
        },
        "valueHumanName": { "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "valueMoney": { "$ref": "#/definitions/Money"
        },
        "valuePeriod": { "$ref": "#/definitions/Period"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueRatio": { "$ref": "#/definitions/Ratio"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "valueSampledData": { "$ref": "#/definitions/SampledData"
        },
        "valueSignature": { "$ref": "#/definitions/Signature"
        },
        "valueTiming": { "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": { "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": { "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": { "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": { "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": { "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": { "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": { "$ref": "#/definitions/Dosage"
        },
        "valueMeta": { "$ref": "#/definitions/Meta"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Constraint": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "key": { "$ref": "#/definitions/id"
        },
        "_key": { "$ref": "#/definitions/Element"
        },
        "requirements": { "$ref": "#/definitions/string"
        },
        "_requirements": { "$ref": "#/definitions/Element"
        },
        "severity": {
          "enum": [
            "error",
            "warning"
          ]
        },
        "_severity": { "$ref": "#/definitions/Element"
        },
        "human": { "$ref": "#/definitions/string"
        },
        "_human": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/string"
        },
        "_expression": { "$ref": "#/definitions/Element"
        },
        "xpath": { "$ref": "#/definitions/string"
        },
        "_xpath": { "$ref": "#/definitions/Element"
        },
        "source": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Binding": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "strength": {
          "enum": [
            "required",
            "extensible",
            "preferred",
            "example"
          ]
        },
        "_strength": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "valueSet": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false
    },
    "ElementDefinition_Mapping": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identity": { "$ref": "#/definitions/id"
        },
        "_identity": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "map": { "$ref": "#/definitions/string"
        },
        "_map": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Account": {
      "properties": {
        "resourceType": {
          "const": "Account"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "inactive",
            "entered-in-error",
            "on-hold",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "subject": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "servicePeriod": { "$ref": "#/definitions/Period"
        },
        "coverage": { "items": { "$ref": "#/definitions/Account_Coverage" }, "type": "array" },
        "owner": { "$ref": "#/definitions/Reference"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "guarantor": { "items": { "$ref": "#/definitions/Account_Guarantor" }, "type": "array" },
        "partOf": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Account_Coverage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "coverage": { "$ref": "#/definitions/Reference"
        },
        "priority": { "$ref": "#/definitions/positiveInt"
        },
        "_priority": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "Account_Guarantor": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "party": { "$ref": "#/definitions/Reference"
        },
        "onHold": { "$ref": "#/definitions/boolean"
        },
        "_onHold": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false,
      "required": [
        "party"
      ]
    },
    "ActivityDefinition": {
      "properties": {
        "resourceType": {
          "const": "ActivityDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "library": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "kind": { "$ref": "#/definitions/code"
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "intent": { "$ref": "#/definitions/code"
        },
        "_intent": { "$ref": "#/definitions/Element"
        },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "doNotPerform": { "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": { "$ref": "#/definitions/Element"
        },
        "timingTiming": { "$ref": "#/definitions/Timing"
        },
        "timingDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timingDateTime": { "$ref": "#/definitions/Element"
        },
        "timingAge": { "$ref": "#/definitions/Age"
        },
        "timingPeriod": { "$ref": "#/definitions/Period"
        },
        "timingRange": { "$ref": "#/definitions/Range"
        },
        "timingDuration": { "$ref": "#/definitions/Duration"
        },
        "location": { "$ref": "#/definitions/Reference"
        },
        "participant": { "items": { "$ref": "#/definitions/ActivityDefinition_Participant" }, "type": "array" },
        "productReference": { "$ref": "#/definitions/Reference"
        },
        "productCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "dosage": { "items": { "$ref": "#/definitions/Dosage" }, "type": "array" },
        "bodySite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specimenRequirement": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "observationRequirement": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "observationResultRequirement": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "transform": { "$ref": "#/definitions/canonical"
        },
        "dynamicValue": { "items": { "$ref": "#/definitions/ActivityDefinition_DynamicValue" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ActivityDefinition_Participant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "role": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "ActivityDefinition_DynamicValue": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false,
      "required": [
        "expression"
      ]
    },
    "AdverseEvent": {
      "properties": {
        "resourceType": {
          "const": "AdverseEvent"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "actuality": {
          "enum": [
            "actual",
            "potential"
          ]
        },
        "_actuality": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "event": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "detected": { "$ref": "#/definitions/dateTime"
        },
        "_detected": { "$ref": "#/definitions/Element"
        },
        "recordedDate": { "$ref": "#/definitions/dateTime"
        },
        "_recordedDate": { "$ref": "#/definitions/Element"
        },
        "resultingCondition": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "location": { "$ref": "#/definitions/Reference"
        },
        "seriousness": { "$ref": "#/definitions/CodeableConcept"
        },
        "severity": { "$ref": "#/definitions/CodeableConcept"
        },
        "outcome": { "$ref": "#/definitions/CodeableConcept"
        },
        "recorder": { "$ref": "#/definitions/Reference"
        },
        "contributor": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "suspectEntity": { "items": { "$ref": "#/definitions/AdverseEvent_SuspectEntity" }, "type": "array" },
        "subjectMedicalHistory": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "referenceDocument": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "study": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "AdverseEvent_SuspectEntity": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "instance": { "$ref": "#/definitions/Reference"
        },
        "causality": { "items": { "$ref": "#/definitions/AdverseEvent_Causality" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "instance"
      ]
    },
    "AdverseEvent_Causality": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "assessment": { "$ref": "#/definitions/CodeableConcept"
        },
        "productRelatedness": { "$ref": "#/definitions/string"
        },
        "_productRelatedness": { "$ref": "#/definitions/Element"
        },
        "author": { "$ref": "#/definitions/Reference"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "AllergyIntolerance": {
      "properties": {
        "resourceType": {
          "const": "AllergyIntolerance"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "clinicalStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "verificationStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "enum": [
            "allergy",
            "intolerance"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "category": { "items": {
            "enum": [
              "food",
              "medication",
              "environment",
              "biologic"
            ] }, "type": "array" },
        "_category": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "criticality": {
          "enum": [
            "low",
            "high",
            "unable-to-assess"
          ]
        },
        "_criticality": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "onsetDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_onsetDateTime": { "$ref": "#/definitions/Element"
        },
        "onsetAge": { "$ref": "#/definitions/Age"
        },
        "onsetPeriod": { "$ref": "#/definitions/Period"
        },
        "onsetRange": { "$ref": "#/definitions/Range"
        },
        "onsetString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_onsetString": { "$ref": "#/definitions/Element"
        },
        "recordedDate": { "$ref": "#/definitions/dateTime"
        },
        "_recordedDate": { "$ref": "#/definitions/Element"
        },
        "recorder": { "$ref": "#/definitions/Reference"
        },
        "asserter": { "$ref": "#/definitions/Reference"
        },
        "lastOccurrence": { "$ref": "#/definitions/dateTime"
        },
        "_lastOccurrence": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "reaction": { "items": { "$ref": "#/definitions/AllergyIntolerance_Reaction" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "AllergyIntolerance_Reaction": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "substance": { "$ref": "#/definitions/CodeableConcept"
        },
        "manifestation": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "onset": { "$ref": "#/definitions/dateTime"
        },
        "_onset": { "$ref": "#/definitions/Element"
        },
        "severity": {
          "enum": [
            "mild",
            "moderate",
            "severe"
          ]
        },
        "_severity": { "$ref": "#/definitions/Element"
        },
        "exposureRoute": { "$ref": "#/definitions/CodeableConcept"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "manifestation"
      ]
    },
    "Appointment": {
      "properties": {
        "resourceType": {
          "const": "Appointment"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "proposed",
            "pending",
            "booked",
            "arrived",
            "fulfilled",
            "cancelled",
            "noshow",
            "entered-in-error",
            "checked-in",
            "waitlist"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "cancelationReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "serviceCategory": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "serviceType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialty": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "appointmentType": { "$ref": "#/definitions/CodeableConcept"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "priority": { "$ref": "#/definitions/unsignedInt"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "supportingInformation": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "start": { "$ref": "#/definitions/instant"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/instant"
        },
        "_end": { "$ref": "#/definitions/Element"
        },
        "minutesDuration": { "$ref": "#/definitions/positiveInt"
        },
        "_minutesDuration": { "$ref": "#/definitions/Element"
        },
        "slot": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        },
        "patientInstruction": { "$ref": "#/definitions/string"
        },
        "_patientInstruction": { "$ref": "#/definitions/Element"
        },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "participant": { "items": { "$ref": "#/definitions/Appointment_Participant" }, "type": "array" },
        "requestedPeriod": { "items": { "$ref": "#/definitions/Period" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "participant",
        "resourceType"
      ]
    },
    "Appointment_Participant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "actor": { "$ref": "#/definitions/Reference"
        },
        "required": {
          "enum": [
            "required",
            "optional",
            "information-only"
          ]
        },
        "_required": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "accepted",
            "declined",
            "tentative",
            "needs-action"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "AppointmentResponse": {
      "properties": {
        "resourceType": {
          "const": "AppointmentResponse"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "appointment": { "$ref": "#/definitions/Reference"
        },
        "start": { "$ref": "#/definitions/instant"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/instant"
        },
        "_end": { "$ref": "#/definitions/Element"
        },
        "participantType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "actor": { "$ref": "#/definitions/Reference"
        },
        "participantStatus": { "$ref": "#/definitions/code"
        },
        "_participantStatus": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "appointment",
        "resourceType"
      ]
    },
    "AuditEvent": {
      "properties": {
        "resourceType": {
          "const": "AuditEvent"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/Coding"
        },
        "subtype": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "action": {
          "enum": [
            "C",
            "R",
            "U",
            "D",
            "E"
          ]
        },
        "_action": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "recorded": { "$ref": "#/definitions/instant"
        },
        "_recorded": { "$ref": "#/definitions/Element"
        },
        "outcome": {
          "enum": [
            "0",
            "4",
            "8",
            "12"
          ]
        },
        "_outcome": { "$ref": "#/definitions/Element"
        },
        "outcomeDesc": { "$ref": "#/definitions/string"
        },
        "_outcomeDesc": { "$ref": "#/definitions/Element"
        },
        "purposeOfEvent": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "agent": { "items": { "$ref": "#/definitions/AuditEvent_Agent" }, "type": "array" },
        "source": { "$ref": "#/definitions/AuditEvent_Source"
        },
        "entity": { "items": { "$ref": "#/definitions/AuditEvent_Entity" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "agent",
        "source",
        "type",
        "resourceType"
      ]
    },
    "AuditEvent_Agent": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "role": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "who": { "$ref": "#/definitions/Reference"
        },
        "altId": { "$ref": "#/definitions/string"
        },
        "_altId": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "requestor": { "$ref": "#/definitions/boolean"
        },
        "_requestor": { "$ref": "#/definitions/Element"
        },
        "location": { "$ref": "#/definitions/Reference"
        },
        "policy": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_policy": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "media": { "$ref": "#/definitions/Coding"
        },
        "network": { "$ref": "#/definitions/AuditEvent_Network"
        },
        "purposeOfUse": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "AuditEvent_Network": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "address": { "$ref": "#/definitions/string"
        },
        "_address": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "AuditEvent_Source": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "site": { "$ref": "#/definitions/string"
        },
        "_site": { "$ref": "#/definitions/Element"
        },
        "observer": { "$ref": "#/definitions/Reference"
        },
        "type": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "observer"
      ]
    },
    "AuditEvent_Entity": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "what": { "$ref": "#/definitions/Reference"
        },
        "type": { "$ref": "#/definitions/Coding"
        },
        "role": { "$ref": "#/definitions/Coding"
        },
        "lifecycle": { "$ref": "#/definitions/Coding"
        },
        "securityLabel": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "query": { "$ref": "#/definitions/base64Binary"
        },
        "_query": { "$ref": "#/definitions/Element"
        },
        "detail": { "items": { "$ref": "#/definitions/AuditEvent_Detail" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "AuditEvent_Detail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/string"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_valueBase64Binary": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Basic": {
      "properties": {
        "resourceType": {
          "const": "Basic"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "created": { "$ref": "#/definitions/date"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "author": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "Binary": {
      "properties": {
        "resourceType": {
          "const": "Binary"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "contentType": { "$ref": "#/definitions/code"
        },
        "_contentType": { "$ref": "#/definitions/Element"
        },
        "securityContext": { "$ref": "#/definitions/Reference"
        },
        "data": { "$ref": "#/definitions/base64Binary"
        },
        "_data": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "BiologicallyDerivedProduct": {
      "properties": {
        "resourceType": {
          "const": "BiologicallyDerivedProduct"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "productCategory": {
          "enum": [
            "organ",
            "tissue",
            "fluid",
            "cells",
            "biologicalAgent"
          ]
        },
        "_productCategory": { "$ref": "#/definitions/Element"
        },
        "productCode": { "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "enum": [
            "available",
            "unavailable"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "request": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/integer"
        },
        "_quantity": { "$ref": "#/definitions/Element"
        },
        "parent": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "collection": { "$ref": "#/definitions/BiologicallyDerivedProduct_Collection"
        },
        "processing": { "items": { "$ref": "#/definitions/BiologicallyDerivedProduct_Processing" }, "type": "array" },
        "manipulation": { "$ref": "#/definitions/BiologicallyDerivedProduct_Manipulation"
        },
        "storage": { "items": { "$ref": "#/definitions/BiologicallyDerivedProduct_Storage" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "BiologicallyDerivedProduct_Collection": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "collector": { "$ref": "#/definitions/Reference"
        },
        "source": { "$ref": "#/definitions/Reference"
        },
        "collectedDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_collectedDateTime": { "$ref": "#/definitions/Element"
        },
        "collectedPeriod": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "BiologicallyDerivedProduct_Processing": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "procedure": { "$ref": "#/definitions/CodeableConcept"
        },
        "additive": { "$ref": "#/definitions/Reference"
        },
        "timeDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timeDateTime": { "$ref": "#/definitions/Element"
        },
        "timePeriod": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "BiologicallyDerivedProduct_Manipulation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "timeDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timeDateTime": { "$ref": "#/definitions/Element"
        },
        "timePeriod": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "BiologicallyDerivedProduct_Storage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "temperature": { "$ref": "#/definitions/decimal"
        },
        "_temperature": { "$ref": "#/definitions/Element"
        },
        "scale": {
          "enum": [
            "farenheit",
            "celsius",
            "kelvin"
          ]
        },
        "_scale": { "$ref": "#/definitions/Element"
        },
        "duration": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "BodyStructure": {
      "properties": {
        "resourceType": {
          "const": "BodyStructure"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "morphology": { "$ref": "#/definitions/CodeableConcept"
        },
        "location": { "$ref": "#/definitions/CodeableConcept"
        },
        "locationQualifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "image": { "items": { "$ref": "#/definitions/Attachment" }, "type": "array" },
        "patient": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "Bundle": {
      "properties": {
        "resourceType": {
          "const": "Bundle"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "type": {
          "enum": [
            "document",
            "message",
            "transaction",
            "transaction-response",
            "batch",
            "batch-response",
            "history",
            "searchset",
            "collection"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "timestamp": { "$ref": "#/definitions/instant"
        },
        "_timestamp": { "$ref": "#/definitions/Element"
        },
        "total": { "$ref": "#/definitions/unsignedInt"
        },
        "_total": { "$ref": "#/definitions/Element"
        },
        "link": { "items": { "$ref": "#/definitions/Bundle_Link" }, "type": "array" },
        "entry": { "items": { "$ref": "#/definitions/Bundle_Entry" }, "type": "array" },
        "signature": { "$ref": "#/definitions/Signature"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Bundle_Link": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "relation": { "$ref": "#/definitions/string"
        },
        "_relation": { "$ref": "#/definitions/Element"
        },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Bundle_Entry": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "link": { "items": { "$ref": "#/definitions/Bundle_Link" }, "type": "array" },
        "fullUrl": { "$ref": "#/definitions/uri"
        },
        "_fullUrl": { "$ref": "#/definitions/Element"
        },
        "resource": { "$ref": "#/definitions/ResourceList"
        },
        "search": { "$ref": "#/definitions/Bundle_Search"
        },
        "request": { "$ref": "#/definitions/Bundle_Request"
        },
        "response": { "$ref": "#/definitions/Bundle_Response"
        }
      },
      "additionalProperties": false
    },
    "Bundle_Search": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "mode": {
          "enum": [
            "match",
            "include",
            "outcome"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "score": { "$ref": "#/definitions/decimal"
        },
        "_score": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Bundle_Request": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "method": {
          "enum": [
            "GET",
            "HEAD",
            "POST",
            "PUT",
            "DELETE",
            "PATCH"
          ]
        },
        "_method": { "$ref": "#/definitions/Element"
        },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "ifNoneMatch": { "$ref": "#/definitions/string"
        },
        "_ifNoneMatch": { "$ref": "#/definitions/Element"
        },
        "ifModifiedSince": { "$ref": "#/definitions/instant"
        },
        "_ifModifiedSince": { "$ref": "#/definitions/Element"
        },
        "ifMatch": { "$ref": "#/definitions/string"
        },
        "_ifMatch": { "$ref": "#/definitions/Element"
        },
        "ifNoneExist": { "$ref": "#/definitions/string"
        },
        "_ifNoneExist": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Bundle_Response": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "status": { "$ref": "#/definitions/string"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "location": { "$ref": "#/definitions/uri"
        },
        "_location": { "$ref": "#/definitions/Element"
        },
        "etag": { "$ref": "#/definitions/string"
        },
        "_etag": { "$ref": "#/definitions/Element"
        },
        "lastModified": { "$ref": "#/definitions/instant"
        },
        "_lastModified": { "$ref": "#/definitions/Element"
        },
        "outcome": { "$ref": "#/definitions/ResourceList"
        }
      },
      "additionalProperties": false
    },
    "CapabilityStatement": {
      "properties": {
        "resourceType": {
          "const": "CapabilityStatement"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "kind": {
          "enum": [
            "instance",
            "capability",
            "requirements"
          ]
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "instantiates": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "imports": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "software": { "$ref": "#/definitions/CapabilityStatement_Software"
        },
        "implementation": { "$ref": "#/definitions/CapabilityStatement_Implementation"
        },
        "fhirVersion": {
          "enum": [
            "0.01",
            "0.05",
            "0.06",
            "0.11",
            "0.0.80",
            "0.0.81",
            "0.0.82",
            "0.4.0",
            "0.5.0",
            "1.0.0",
            "1.0.1",
            "1.0.2",
            "1.1.0",
            "1.4.0",
            "1.6.0",
            "1.8.0",
            "3.0.0",
            "3.0.1",
            "3.3.0",
            "3.5.0",
            "4.0.0",
            "4.0.1"
          ]
        },
        "_fhirVersion": { "$ref": "#/definitions/Element"
        },
        "format": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_format": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "patchFormat": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_patchFormat": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "implementationGuide": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "rest": { "items": { "$ref": "#/definitions/CapabilityStatement_Rest" }, "type": "array" },
        "messaging": { "items": { "$ref": "#/definitions/CapabilityStatement_Messaging" }, "type": "array" },
        "document": { "items": { "$ref": "#/definitions/CapabilityStatement_Document" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CapabilityStatement_Software": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "releaseDate": { "$ref": "#/definitions/dateTime"
        },
        "_releaseDate": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Implementation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "url": { "$ref": "#/definitions/url"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "custodian": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Rest": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "mode": {
          "enum": [
            "client",
            "server"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        },
        "security": { "$ref": "#/definitions/CapabilityStatement_Security"
        },
        "resource": { "items": { "$ref": "#/definitions/CapabilityStatement_Resource" }, "type": "array" },
        "interaction": { "items": { "$ref": "#/definitions/CapabilityStatement_Interaction1" }, "type": "array" },
        "searchParam": { "items": { "$ref": "#/definitions/CapabilityStatement_SearchParam" }, "type": "array" },
        "operation": { "items": { "$ref": "#/definitions/CapabilityStatement_Operation" }, "type": "array" },
        "compartment": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Security": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "cors": { "$ref": "#/definitions/boolean"
        },
        "_cors": { "$ref": "#/definitions/Element"
        },
        "service": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Resource": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        },
        "supportedProfile": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        },
        "interaction": { "items": { "$ref": "#/definitions/CapabilityStatement_Interaction" }, "type": "array" },
        "versioning": {
          "enum": [
            "no-version",
            "versioned",
            "versioned-update"
          ]
        },
        "_versioning": { "$ref": "#/definitions/Element"
        },
        "readHistory": { "$ref": "#/definitions/boolean"
        },
        "_readHistory": { "$ref": "#/definitions/Element"
        },
        "updateCreate": { "$ref": "#/definitions/boolean"
        },
        "_updateCreate": { "$ref": "#/definitions/Element"
        },
        "conditionalCreate": { "$ref": "#/definitions/boolean"
        },
        "_conditionalCreate": { "$ref": "#/definitions/Element"
        },
        "conditionalRead": {
          "enum": [
            "not-supported",
            "modified-since",
            "not-match",
            "full-support"
          ]
        },
        "_conditionalRead": { "$ref": "#/definitions/Element"
        },
        "conditionalUpdate": { "$ref": "#/definitions/boolean"
        },
        "_conditionalUpdate": { "$ref": "#/definitions/Element"
        },
        "conditionalDelete": {
          "enum": [
            "not-supported",
            "single",
            "multiple"
          ]
        },
        "_conditionalDelete": { "$ref": "#/definitions/Element"
        },
        "referencePolicy": { "items": {
            "enum": [
              "literal",
              "logical",
              "resolves",
              "enforced",
              "local"
            ] }, "type": "array" },
        "_referencePolicy": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "searchInclude": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_searchInclude": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "searchRevInclude": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_searchRevInclude": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "searchParam": { "items": { "$ref": "#/definitions/CapabilityStatement_SearchParam" }, "type": "array" },
        "operation": { "items": { "$ref": "#/definitions/CapabilityStatement_Operation" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Interaction": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "enum": [
            "read",
            "vread",
            "update",
            "patch",
            "delete",
            "history-instance",
            "history-type",
            "create",
            "search-type"
          ]
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_SearchParam": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "definition": { "$ref": "#/definitions/canonical"
        },
        "type": {
          "enum": [
            "number",
            "date",
            "string",
            "token",
            "reference",
            "composite",
            "quantity",
            "uri",
            "special"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Operation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "definition": { "$ref": "#/definitions/canonical"
        },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "definition"
      ]
    },
    "CapabilityStatement_Interaction1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "enum": [
            "transaction",
            "batch",
            "search-system",
            "history-system"
          ]
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Messaging": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "endpoint": { "items": { "$ref": "#/definitions/CapabilityStatement_Endpoint" }, "type": "array" },
        "reliableCache": { "$ref": "#/definitions/unsignedInt"
        },
        "_reliableCache": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        },
        "supportedMessage": { "items": { "$ref": "#/definitions/CapabilityStatement_SupportedMessage" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "CapabilityStatement_Endpoint": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "protocol": { "$ref": "#/definitions/Coding"
        },
        "address": { "$ref": "#/definitions/url"
        },
        "_address": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "protocol"
      ]
    },
    "CapabilityStatement_SupportedMessage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "mode": {
          "enum": [
            "sender",
            "receiver"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "definition": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false,
      "required": [
        "definition"
      ]
    },
    "CapabilityStatement_Document": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "mode": {
          "enum": [
            "producer",
            "consumer"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/markdown"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "CarePlan": {
      "properties": {
        "resourceType": {
          "const": "CarePlan"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "replaces": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "intent": { "$ref": "#/definitions/code"
        },
        "_intent": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "author": { "$ref": "#/definitions/Reference"
        },
        "contributor": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "careTeam": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "addresses": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "supportingInfo": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "goal": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "activity": { "items": { "$ref": "#/definitions/CarePlan_Activity" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "CarePlan_Activity": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "outcomeCodeableConcept": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "outcomeReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "progress": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "reference": { "$ref": "#/definitions/Reference"
        },
        "detail": { "$ref": "#/definitions/CarePlan_Detail"
        }
      },
      "additionalProperties": false
    },
    "CarePlan_Detail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "kind": { "$ref": "#/definitions/code"
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "goal": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": {
          "enum": [
            "not-started",
            "scheduled",
            "in-progress",
            "on-hold",
            "completed",
            "cancelled",
            "stopped",
            "unknown",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "doNotPerform": { "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": { "$ref": "#/definitions/Element"
        },
        "scheduledTiming": { "$ref": "#/definitions/Timing"
        },
        "scheduledPeriod": { "$ref": "#/definitions/Period"
        },
        "scheduledString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_scheduledString": { "$ref": "#/definitions/Element"
        },
        "location": { "$ref": "#/definitions/Reference"
        },
        "performer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "productCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "productReference": { "$ref": "#/definitions/Reference"
        },
        "dailyAmount": { "$ref": "#/definitions/Quantity"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CareTeam": {
      "properties": {
        "resourceType": {
          "const": "CareTeam"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "proposed",
            "active",
            "suspended",
            "inactive",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "participant": { "items": { "$ref": "#/definitions/CareTeam_Participant" }, "type": "array" },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "managingOrganization": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CareTeam_Participant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "role": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "member": { "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "CatalogEntry": {
      "properties": {
        "resourceType": {
          "const": "CatalogEntry"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "orderable": { "$ref": "#/definitions/boolean"
        },
        "_orderable": { "$ref": "#/definitions/Element"
        },
        "referencedItem": { "$ref": "#/definitions/Reference"
        },
        "additionalIdentifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "classification": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "validityPeriod": { "$ref": "#/definitions/Period"
        },
        "validTo": { "$ref": "#/definitions/dateTime"
        },
        "_validTo": { "$ref": "#/definitions/Element"
        },
        "lastUpdated": { "$ref": "#/definitions/dateTime"
        },
        "_lastUpdated": { "$ref": "#/definitions/Element"
        },
        "additionalCharacteristic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "additionalClassification": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "relatedEntry": { "items": { "$ref": "#/definitions/CatalogEntry_RelatedEntry" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType",
        "referencedItem"
      ]
    },
    "CatalogEntry_RelatedEntry": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "relationtype": {
          "enum": [
            "triggers",
            "is-replaced-by"
          ]
        },
        "_relationtype": { "$ref": "#/definitions/Element"
        },
        "item": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "item"
      ]
    },
    "ChargeItem": {
      "properties": {
        "resourceType": {
          "const": "ChargeItem"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "definitionUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_definitionUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "definitionCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "status": {
          "enum": [
            "planned",
            "billable",
            "not-billable",
            "aborted",
            "billed",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "context": { "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": { "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": { "$ref": "#/definitions/Timing"
        },
        "performer": { "items": { "$ref": "#/definitions/ChargeItem_Performer" }, "type": "array" },
        "performingOrganization": { "$ref": "#/definitions/Reference"
        },
        "requestingOrganization": { "$ref": "#/definitions/Reference"
        },
        "costCenter": { "$ref": "#/definitions/Reference"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "bodysite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "factorOverride": { "$ref": "#/definitions/decimal"
        },
        "_factorOverride": { "$ref": "#/definitions/Element"
        },
        "priceOverride": { "$ref": "#/definitions/Money"
        },
        "overrideReason": { "$ref": "#/definitions/string"
        },
        "_overrideReason": { "$ref": "#/definitions/Element"
        },
        "enterer": { "$ref": "#/definitions/Reference"
        },
        "enteredDate": { "$ref": "#/definitions/dateTime"
        },
        "_enteredDate": { "$ref": "#/definitions/Element"
        },
        "reason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "service": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "productReference": { "$ref": "#/definitions/Reference"
        },
        "productCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "account": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "supportingInformation": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "subject",
        "resourceType"
      ]
    },
    "ChargeItem_Performer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "function": { "$ref": "#/definitions/CodeableConcept"
        },
        "actor": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "ChargeItemDefinition": {
      "properties": {
        "resourceType": {
          "const": "ChargeItemDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "derivedFromUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_derivedFromUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "replaces": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "instance": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "applicability": { "items": { "$ref": "#/definitions/ChargeItemDefinition_Applicability" }, "type": "array" },
        "propertyGroup": { "items": { "$ref": "#/definitions/ChargeItemDefinition_PropertyGroup" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ChargeItemDefinition_Applicability": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/string"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/string"
        },
        "_expression": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ChargeItemDefinition_PropertyGroup": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "applicability": { "items": { "$ref": "#/definitions/ChargeItemDefinition_Applicability" }, "type": "array" },
        "priceComponent": { "items": { "$ref": "#/definitions/ChargeItemDefinition_PriceComponent" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ChargeItemDefinition_PriceComponent": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "amount": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false
    },
    "Claim": {
      "properties": {
        "resourceType": {
          "const": "Claim"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subType": { "$ref": "#/definitions/CodeableConcept"
        },
        "use": {
          "enum": [
            "claim",
            "preauthorization",
            "predetermination"
          ]
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "billablePeriod": { "$ref": "#/definitions/Period"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "enterer": { "$ref": "#/definitions/Reference"
        },
        "insurer": { "$ref": "#/definitions/Reference"
        },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "priority": { "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserve": { "$ref": "#/definitions/CodeableConcept"
        },
        "related": { "items": { "$ref": "#/definitions/Claim_Related" }, "type": "array" },
        "prescription": { "$ref": "#/definitions/Reference"
        },
        "originalPrescription": { "$ref": "#/definitions/Reference"
        },
        "payee": { "$ref": "#/definitions/Claim_Payee"
        },
        "referral": { "$ref": "#/definitions/Reference"
        },
        "facility": { "$ref": "#/definitions/Reference"
        },
        "careTeam": { "items": { "$ref": "#/definitions/Claim_CareTeam" }, "type": "array" },
        "supportingInfo": { "items": { "$ref": "#/definitions/Claim_SupportingInfo" }, "type": "array" },
        "diagnosis": { "items": { "$ref": "#/definitions/Claim_Diagnosis" }, "type": "array" },
        "procedure": { "items": { "$ref": "#/definitions/Claim_Procedure" }, "type": "array" },
        "insurance": { "items": { "$ref": "#/definitions/Claim_Insurance" }, "type": "array" },
        "accident": { "$ref": "#/definitions/Claim_Accident"
        },
        "item": { "items": { "$ref": "#/definitions/Claim_Item" }, "type": "array" },
        "total": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false,
      "required": [
        "insurance",
        "provider",
        "patient",
        "type",
        "priority",
        "resourceType"
      ]
    },
    "Claim_Related": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "claim": { "$ref": "#/definitions/Reference"
        },
        "relationship": { "$ref": "#/definitions/CodeableConcept"
        },
        "reference": { "$ref": "#/definitions/Identifier"
        }
      },
      "additionalProperties": false
    },
    "Claim_Payee": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "party": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Claim_CareTeam": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "responsible": { "$ref": "#/definitions/boolean"
        },
        "_responsible": { "$ref": "#/definitions/Element"
        },
        "role": { "$ref": "#/definitions/CodeableConcept"
        },
        "qualification": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "provider"
      ]
    },
    "Claim_SupportingInfo": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "timingDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_timingDate": { "$ref": "#/definitions/Element"
        },
        "timingPeriod": { "$ref": "#/definitions/Period"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "reason": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "Claim_Diagnosis": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "diagnosisCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": { "$ref": "#/definitions/Reference"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "onAdmission": { "$ref": "#/definitions/CodeableConcept"
        },
        "packageCode": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "Claim_Procedure": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "procedureCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "procedureReference": { "$ref": "#/definitions/Reference"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Claim_Insurance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "focal": { "$ref": "#/definitions/boolean"
        },
        "_focal": { "$ref": "#/definitions/Element"
        },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "coverage": { "$ref": "#/definitions/Reference"
        },
        "businessArrangement": { "$ref": "#/definitions/string"
        },
        "_businessArrangement": { "$ref": "#/definitions/Element"
        },
        "preAuthRef": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_preAuthRef": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "claimResponse": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "Claim_Accident": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "date": { "$ref": "#/definitions/date"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": { "$ref": "#/definitions/Address"
        },
        "locationReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Claim_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "careTeamSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_careTeamSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "diagnosisSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_diagnosisSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "procedureSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_procedureSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "informationSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_informationSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "revenue": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "servicedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": { "$ref": "#/definitions/Element"
        },
        "servicedPeriod": { "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": { "$ref": "#/definitions/Address"
        },
        "locationReference": { "$ref": "#/definitions/Reference"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "subSite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "encounter": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/Claim_Detail" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "Claim_Detail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "revenue": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "subDetail": { "items": { "$ref": "#/definitions/Claim_SubDetail" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "Claim_SubDetail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "revenue": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "ClaimResponse": {
      "properties": {
        "resourceType": {
          "const": "ClaimResponse"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subType": { "$ref": "#/definitions/CodeableConcept"
        },
        "use": { "$ref": "#/definitions/code"
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "insurer": { "$ref": "#/definitions/Reference"
        },
        "requestor": { "$ref": "#/definitions/Reference"
        },
        "request": { "$ref": "#/definitions/Reference"
        },
        "outcome": { "$ref": "#/definitions/code"
        },
        "_outcome": { "$ref": "#/definitions/Element"
        },
        "disposition": { "$ref": "#/definitions/string"
        },
        "_disposition": { "$ref": "#/definitions/Element"
        },
        "preAuthRef": { "$ref": "#/definitions/string"
        },
        "_preAuthRef": { "$ref": "#/definitions/Element"
        },
        "preAuthPeriod": { "$ref": "#/definitions/Period"
        },
        "payeeType": { "$ref": "#/definitions/CodeableConcept"
        },
        "item": { "items": { "$ref": "#/definitions/ClaimResponse_Item" }, "type": "array" },
        "addItem": { "items": { "$ref": "#/definitions/ClaimResponse_AddItem" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ClaimResponse_Adjudication" }, "type": "array" },
        "total": { "items": { "$ref": "#/definitions/ClaimResponse_Total" }, "type": "array" },
        "payment": { "$ref": "#/definitions/ClaimResponse_Payment"
        },
        "fundsReserve": { "$ref": "#/definitions/CodeableConcept"
        },
        "formCode": { "$ref": "#/definitions/CodeableConcept"
        },
        "form": { "$ref": "#/definitions/Attachment"
        },
        "processNote": { "items": { "$ref": "#/definitions/ClaimResponse_ProcessNote" }, "type": "array" },
        "communicationRequest": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "insurance": { "items": { "$ref": "#/definitions/ClaimResponse_Insurance" }, "type": "array" },
        "error": { "items": { "$ref": "#/definitions/ClaimResponse_Error" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "insurer",
        "type",
        "resourceType"
      ]
    },
    "ClaimResponse_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemSequence": { "$ref": "#/definitions/positiveInt"
        },
        "_itemSequence": { "$ref": "#/definitions/Element"
        },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ClaimResponse_Adjudication" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/ClaimResponse_Detail" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "adjudication"
      ]
    },
    "ClaimResponse_Adjudication": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "reason": { "$ref": "#/definitions/CodeableConcept"
        },
        "amount": { "$ref": "#/definitions/Money"
        },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ClaimResponse_Detail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "detailSequence": { "$ref": "#/definitions/positiveInt"
        },
        "_detailSequence": { "$ref": "#/definitions/Element"
        },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ClaimResponse_Adjudication" }, "type": "array" },
        "subDetail": { "items": { "$ref": "#/definitions/ClaimResponse_SubDetail" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "adjudication"
      ]
    },
    "ClaimResponse_SubDetail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "subDetailSequence": { "$ref": "#/definitions/positiveInt"
        },
        "_subDetailSequence": { "$ref": "#/definitions/Element"
        },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ClaimResponse_Adjudication" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ClaimResponse_AddItem": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_itemSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "detailSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_detailSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "subdetailSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_subdetailSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "provider": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "servicedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": { "$ref": "#/definitions/Element"
        },
        "servicedPeriod": { "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": { "$ref": "#/definitions/Address"
        },
        "locationReference": { "$ref": "#/definitions/Reference"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "subSite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ClaimResponse_Adjudication" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/ClaimResponse_Detail1" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "adjudication",
        "productOrService"
      ]
    },
    "ClaimResponse_Detail1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ClaimResponse_Adjudication" }, "type": "array" },
        "subDetail": { "items": { "$ref": "#/definitions/ClaimResponse_SubDetail1" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "adjudication",
        "productOrService"
      ]
    },
    "ClaimResponse_SubDetail1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ClaimResponse_Adjudication" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "adjudication",
        "productOrService"
      ]
    },
    "ClaimResponse_Total": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "amount": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false,
      "required": [
        "amount",
        "category"
      ]
    },
    "ClaimResponse_Payment": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "adjustment": { "$ref": "#/definitions/Money"
        },
        "adjustmentReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "date": { "$ref": "#/definitions/date"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "amount": { "$ref": "#/definitions/Money"
        },
        "identifier": { "$ref": "#/definitions/Identifier"
        }
      },
      "additionalProperties": false,
      "required": [
        "amount",
        "type"
      ]
    },
    "ClaimResponse_ProcessNote": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "number": { "$ref": "#/definitions/positiveInt"
        },
        "_number": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "display",
            "print",
            "printoper"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "ClaimResponse_Insurance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "focal": { "$ref": "#/definitions/boolean"
        },
        "_focal": { "$ref": "#/definitions/Element"
        },
        "coverage": { "$ref": "#/definitions/Reference"
        },
        "businessArrangement": { "$ref": "#/definitions/string"
        },
        "_businessArrangement": { "$ref": "#/definitions/Element"
        },
        "claimResponse": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "ClaimResponse_Error": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemSequence": { "$ref": "#/definitions/positiveInt"
        },
        "_itemSequence": { "$ref": "#/definitions/Element"
        },
        "detailSequence": { "$ref": "#/definitions/positiveInt"
        },
        "_detailSequence": { "$ref": "#/definitions/Element"
        },
        "subDetailSequence": { "$ref": "#/definitions/positiveInt"
        },
        "_subDetailSequence": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ClinicalImpression": {
      "properties": {
        "resourceType": {
          "const": "ClinicalImpression"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_effectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "assessor": { "$ref": "#/definitions/Reference"
        },
        "previous": { "$ref": "#/definitions/Reference"
        },
        "problem": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "investigation": { "items": { "$ref": "#/definitions/ClinicalImpression_Investigation" }, "type": "array" },
        "protocol": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_protocol": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "summary": { "$ref": "#/definitions/string"
        },
        "_summary": { "$ref": "#/definitions/Element"
        },
        "finding": { "items": { "$ref": "#/definitions/ClinicalImpression_Finding" }, "type": "array" },
        "prognosisCodeableConcept": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "prognosisReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "supportingInfo": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "ClinicalImpression_Investigation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "item": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ClinicalImpression_Finding": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": { "$ref": "#/definitions/Reference"
        },
        "basis": { "$ref": "#/definitions/string"
        },
        "_basis": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CodeSystem": {
      "properties": {
        "resourceType": {
          "const": "CodeSystem"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "caseSensitive": { "$ref": "#/definitions/boolean"
        },
        "_caseSensitive": { "$ref": "#/definitions/Element"
        },
        "valueSet": { "$ref": "#/definitions/canonical"
        },
        "hierarchyMeaning": {
          "enum": [
            "grouped-by",
            "is-a",
            "part-of",
            "classified-with"
          ]
        },
        "_hierarchyMeaning": { "$ref": "#/definitions/Element"
        },
        "compositional": { "$ref": "#/definitions/boolean"
        },
        "_compositional": { "$ref": "#/definitions/Element"
        },
        "versionNeeded": { "$ref": "#/definitions/boolean"
        },
        "_versionNeeded": { "$ref": "#/definitions/Element"
        },
        "content": {
          "enum": [
            "not-present",
            "example",
            "fragment",
            "complete",
            "supplement"
          ]
        },
        "_content": { "$ref": "#/definitions/Element"
        },
        "supplements": { "$ref": "#/definitions/canonical"
        },
        "count": { "$ref": "#/definitions/unsignedInt"
        },
        "_count": { "$ref": "#/definitions/Element"
        },
        "filter": { "items": { "$ref": "#/definitions/CodeSystem_Filter" }, "type": "array" },
        "property": { "items": { "$ref": "#/definitions/CodeSystem_Property" }, "type": "array" },
        "concept": { "items": { "$ref": "#/definitions/CodeSystem_Concept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CodeSystem_Filter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "operator": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_operator": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CodeSystem_Property": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "uri": { "$ref": "#/definitions/uri"
        },
        "_uri": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "code",
            "Coding",
            "string",
            "integer",
            "boolean",
            "dateTime",
            "decimal"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CodeSystem_Concept": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        },
        "definition": { "$ref": "#/definitions/string"
        },
        "_definition": { "$ref": "#/definitions/Element"
        },
        "designation": { "items": { "$ref": "#/definitions/CodeSystem_Designation" }, "type": "array" },
        "property": { "items": { "$ref": "#/definitions/CodeSystem_Property1" }, "type": "array" },
        "concept": { "items": { "$ref": "#/definitions/CodeSystem_Concept" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "CodeSystem_Designation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "use": { "$ref": "#/definitions/Coding"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CodeSystem_Property1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": { "$ref": "#/definitions/Element"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Communication": {
      "properties": {
        "resourceType": {
          "const": "Communication"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "inResponseTo": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "medium": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "topic": { "$ref": "#/definitions/CodeableConcept"
        },
        "about": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "sent": { "$ref": "#/definitions/dateTime"
        },
        "_sent": { "$ref": "#/definitions/Element"
        },
        "received": { "$ref": "#/definitions/dateTime"
        },
        "_received": { "$ref": "#/definitions/Element"
        },
        "recipient": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "sender": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "payload": { "items": { "$ref": "#/definitions/Communication_Payload" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Communication_Payload": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "contentString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_contentString": { "$ref": "#/definitions/Element"
        },
        "contentAttachment": { "$ref": "#/definitions/Attachment"
        },
        "contentReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "CommunicationRequest": {
      "properties": {
        "resourceType": {
          "const": "CommunicationRequest"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "replaces": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "groupIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "doNotPerform": { "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": { "$ref": "#/definitions/Element"
        },
        "medium": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "about": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "payload": { "items": { "$ref": "#/definitions/CommunicationRequest_Payload" }, "type": "array" },
        "occurrenceDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": { "$ref": "#/definitions/Period"
        },
        "authoredOn": { "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": { "$ref": "#/definitions/Element"
        },
        "requester": { "$ref": "#/definitions/Reference"
        },
        "recipient": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "sender": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CommunicationRequest_Payload": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "contentString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_contentString": { "$ref": "#/definitions/Element"
        },
        "contentAttachment": { "$ref": "#/definitions/Attachment"
        },
        "contentReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "CompartmentDefinition": {
      "properties": {
        "resourceType": {
          "const": "CompartmentDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "code": {
          "enum": [
            "Patient",
            "Encounter",
            "RelatedPerson",
            "Practitioner",
            "Device"
          ]
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "search": { "$ref": "#/definitions/boolean"
        },
        "_search": { "$ref": "#/definitions/Element"
        },
        "resource": { "items": { "$ref": "#/definitions/CompartmentDefinition_Resource" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "CompartmentDefinition_Resource": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "param": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_param": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "documentation": { "$ref": "#/definitions/string"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Composition": {
      "properties": {
        "resourceType": {
          "const": "Composition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "status": {
          "enum": [
            "preliminary",
            "final",
            "amended",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "author": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "confidentiality": { "$ref": "#/definitions/code"
        },
        "_confidentiality": { "$ref": "#/definitions/Element"
        },
        "attester": { "items": { "$ref": "#/definitions/Composition_Attester" }, "type": "array" },
        "custodian": { "$ref": "#/definitions/Reference"
        },
        "relatesTo": { "items": { "$ref": "#/definitions/Composition_RelatesTo" }, "type": "array" },
        "event": { "items": { "$ref": "#/definitions/Composition_Event" }, "type": "array" },
        "section": { "items": { "$ref": "#/definitions/Composition_Section" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "author",
        "type",
        "resourceType"
      ]
    },
    "Composition_Attester": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "mode": {
          "enum": [
            "personal",
            "professional",
            "legal",
            "official"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "time": { "$ref": "#/definitions/dateTime"
        },
        "_time": { "$ref": "#/definitions/Element"
        },
        "party": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Composition_RelatesTo": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "targetIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "targetReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Composition_Event": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "detail": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Composition_Section": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "author": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "focus": { "$ref": "#/definitions/Reference"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "mode": { "$ref": "#/definitions/code"
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "orderedBy": { "$ref": "#/definitions/CodeableConcept"
        },
        "entry": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "emptyReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "section": { "items": { "$ref": "#/definitions/Composition_Section" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ConceptMap": {
      "properties": {
        "resourceType": {
          "const": "ConceptMap"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "sourceUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_sourceUri": { "$ref": "#/definitions/Element"
        },
        "sourceCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_sourceCanonical": { "$ref": "#/definitions/Element"
        },
        "targetUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_targetUri": { "$ref": "#/definitions/Element"
        },
        "targetCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_targetCanonical": { "$ref": "#/definitions/Element"
        },
        "group": { "items": { "$ref": "#/definitions/ConceptMap_Group" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ConceptMap_Group": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "source": { "$ref": "#/definitions/uri"
        },
        "_source": { "$ref": "#/definitions/Element"
        },
        "sourceVersion": { "$ref": "#/definitions/string"
        },
        "_sourceVersion": { "$ref": "#/definitions/Element"
        },
        "target": { "$ref": "#/definitions/uri"
        },
        "_target": { "$ref": "#/definitions/Element"
        },
        "targetVersion": { "$ref": "#/definitions/string"
        },
        "_targetVersion": { "$ref": "#/definitions/Element"
        },
        "element": { "items": { "$ref": "#/definitions/ConceptMap_Element" }, "type": "array" },
        "unmapped": { "$ref": "#/definitions/ConceptMap_Unmapped"
        }
      },
      "additionalProperties": false,
      "required": [
        "element"
      ]
    },
    "ConceptMap_Element": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        },
        "target": { "items": { "$ref": "#/definitions/ConceptMap_Target" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ConceptMap_Target": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        },
        "equivalence": {
          "enum": [
            "relatedto",
            "equivalent",
            "equal",
            "wider",
            "subsumes",
            "narrower",
            "specializes",
            "inexact",
            "unmatched",
            "disjoint"
          ]
        },
        "_equivalence": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        },
        "dependsOn": { "items": { "$ref": "#/definitions/ConceptMap_DependsOn" }, "type": "array" },
        "product": { "items": { "$ref": "#/definitions/ConceptMap_DependsOn" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ConceptMap_DependsOn": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "property": { "$ref": "#/definitions/uri"
        },
        "_property": { "$ref": "#/definitions/Element"
        },
        "system": { "$ref": "#/definitions/canonical"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ConceptMap_Unmapped": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "mode": {
          "enum": [
            "provided",
            "fixed",
            "other-map"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "display": { "$ref": "#/definitions/string"
        },
        "_display": { "$ref": "#/definitions/Element"
        },
        "url": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false
    },
    "Condition": {
      "properties": {
        "resourceType": {
          "const": "Condition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "clinicalStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "verificationStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "severity": { "$ref": "#/definitions/CodeableConcept"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "bodySite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "onsetDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_onsetDateTime": { "$ref": "#/definitions/Element"
        },
        "onsetAge": { "$ref": "#/definitions/Age"
        },
        "onsetPeriod": { "$ref": "#/definitions/Period"
        },
        "onsetRange": { "$ref": "#/definitions/Range"
        },
        "onsetString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_onsetString": { "$ref": "#/definitions/Element"
        },
        "abatementDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_abatementDateTime": { "$ref": "#/definitions/Element"
        },
        "abatementAge": { "$ref": "#/definitions/Age"
        },
        "abatementPeriod": { "$ref": "#/definitions/Period"
        },
        "abatementRange": { "$ref": "#/definitions/Range"
        },
        "abatementString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_abatementString": { "$ref": "#/definitions/Element"
        },
        "recordedDate": { "$ref": "#/definitions/dateTime"
        },
        "_recordedDate": { "$ref": "#/definitions/Element"
        },
        "recorder": { "$ref": "#/definitions/Reference"
        },
        "asserter": { "$ref": "#/definitions/Reference"
        },
        "stage": { "items": { "$ref": "#/definitions/Condition_Stage" }, "type": "array" },
        "evidence": { "items": { "$ref": "#/definitions/Condition_Evidence" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "Condition_Stage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "summary": { "$ref": "#/definitions/CodeableConcept"
        },
        "assessment": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "Condition_Evidence": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Consent": {
      "properties": {
        "resourceType": {
          "const": "Consent"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "draft",
            "proposed",
            "active",
            "rejected",
            "inactive",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "scope": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "dateTime": { "$ref": "#/definitions/dateTime"
        },
        "_dateTime": { "$ref": "#/definitions/Element"
        },
        "performer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "organization": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "sourceAttachment": { "$ref": "#/definitions/Attachment"
        },
        "sourceReference": { "$ref": "#/definitions/Reference"
        },
        "policy": { "items": { "$ref": "#/definitions/Consent_Policy" }, "type": "array" },
        "policyRule": { "$ref": "#/definitions/CodeableConcept"
        },
        "verification": { "items": { "$ref": "#/definitions/Consent_Verification" }, "type": "array" },
        "provision": { "$ref": "#/definitions/Consent_Provision"
        }
      },
      "additionalProperties": false,
      "required": [
        "scope",
        "category",
        "resourceType"
      ]
    },
    "Consent_Policy": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "authority": { "$ref": "#/definitions/uri"
        },
        "_authority": { "$ref": "#/definitions/Element"
        },
        "uri": { "$ref": "#/definitions/uri"
        },
        "_uri": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Consent_Verification": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "verified": { "$ref": "#/definitions/boolean"
        },
        "_verified": { "$ref": "#/definitions/Element"
        },
        "verifiedWith": { "$ref": "#/definitions/Reference"
        },
        "verificationDate": { "$ref": "#/definitions/dateTime"
        },
        "_verificationDate": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Consent_Provision": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "deny",
            "permit"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "actor": { "items": { "$ref": "#/definitions/Consent_Actor" }, "type": "array" },
        "action": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "securityLabel": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "purpose": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "class": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "dataPeriod": { "$ref": "#/definitions/Period"
        },
        "data": { "items": { "$ref": "#/definitions/Consent_Data" }, "type": "array" },
        "provision": { "items": { "$ref": "#/definitions/Consent_Provision" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Consent_Actor": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "role": { "$ref": "#/definitions/CodeableConcept"
        },
        "reference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "reference",
        "role"
      ]
    },
    "Consent_Data": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "meaning": {
          "enum": [
            "instance",
            "related",
            "dependents",
            "authoredby"
          ]
        },
        "_meaning": { "$ref": "#/definitions/Element"
        },
        "reference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "Contract": {
      "properties": {
        "resourceType": {
          "const": "Contract"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "legalState": { "$ref": "#/definitions/CodeableConcept"
        },
        "instantiatesCanonical": { "$ref": "#/definitions/Reference"
        },
        "instantiatesUri": { "$ref": "#/definitions/uri"
        },
        "_instantiatesUri": { "$ref": "#/definitions/Element"
        },
        "contentDerivative": { "$ref": "#/definitions/CodeableConcept"
        },
        "issued": { "$ref": "#/definitions/dateTime"
        },
        "_issued": { "$ref": "#/definitions/Element"
        },
        "applies": { "$ref": "#/definitions/Period"
        },
        "expirationType": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "authority": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "domain": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "site": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "alias": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_alias": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "author": { "$ref": "#/definitions/Reference"
        },
        "scope": { "$ref": "#/definitions/CodeableConcept"
        },
        "topicCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "topicReference": { "$ref": "#/definitions/Reference"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "contentDefinition": { "$ref": "#/definitions/Contract_ContentDefinition"
        },
        "term": { "items": { "$ref": "#/definitions/Contract_Term" }, "type": "array" },
        "supportingInfo": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "relevantHistory": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "signer": { "items": { "$ref": "#/definitions/Contract_Signer" }, "type": "array" },
        "friendly": { "items": { "$ref": "#/definitions/Contract_Friendly" }, "type": "array" },
        "legal": { "items": { "$ref": "#/definitions/Contract_Legal" }, "type": "array" },
        "rule": { "items": { "$ref": "#/definitions/Contract_Rule" }, "type": "array" },
        "legallyBindingAttachment": { "$ref": "#/definitions/Attachment"
        },
        "legallyBindingReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Contract_ContentDefinition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subType": { "$ref": "#/definitions/CodeableConcept"
        },
        "publisher": { "$ref": "#/definitions/Reference"
        },
        "publicationDate": { "$ref": "#/definitions/dateTime"
        },
        "_publicationDate": { "$ref": "#/definitions/Element"
        },
        "publicationStatus": { "$ref": "#/definitions/code"
        },
        "_publicationStatus": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Contract_Term": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "issued": { "$ref": "#/definitions/dateTime"
        },
        "_issued": { "$ref": "#/definitions/Element"
        },
        "applies": { "$ref": "#/definitions/Period"
        },
        "topicCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "topicReference": { "$ref": "#/definitions/Reference"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subType": { "$ref": "#/definitions/CodeableConcept"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "securityLabel": { "items": { "$ref": "#/definitions/Contract_SecurityLabel" }, "type": "array" },
        "offer": { "$ref": "#/definitions/Contract_Offer"
        },
        "asset": { "items": { "$ref": "#/definitions/Contract_Asset" }, "type": "array" },
        "action": { "items": { "$ref": "#/definitions/Contract_Action" }, "type": "array" },
        "group": { "items": { "$ref": "#/definitions/Contract_Term" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "offer"
      ]
    },
    "Contract_SecurityLabel": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "number": { "items": { "$ref": "#/definitions/unsignedInt" }, "type": "array" },
        "_number": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "classification": { "$ref": "#/definitions/Coding"
        },
        "category": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "control": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "classification"
      ]
    },
    "Contract_Offer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "party": { "items": { "$ref": "#/definitions/Contract_Party" }, "type": "array" },
        "topic": { "$ref": "#/definitions/Reference"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "decision": { "$ref": "#/definitions/CodeableConcept"
        },
        "decisionMode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "answer": { "items": { "$ref": "#/definitions/Contract_Answer" }, "type": "array" },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "linkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_linkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "securityLabelNumber": { "items": { "$ref": "#/definitions/unsignedInt" }, "type": "array" },
        "_securityLabelNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Contract_Party": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "reference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "role": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "reference",
        "role"
      ]
    },
    "Contract_Answer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": { "$ref": "#/definitions/Element"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Contract_Asset": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "scope": { "$ref": "#/definitions/CodeableConcept"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "typeReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "subtype": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "relationship": { "$ref": "#/definitions/Coding"
        },
        "context": { "items": { "$ref": "#/definitions/Contract_Context" }, "type": "array" },
        "condition": { "$ref": "#/definitions/string"
        },
        "_condition": { "$ref": "#/definitions/Element"
        },
        "periodType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "period": { "items": { "$ref": "#/definitions/Period" }, "type": "array" },
        "usePeriod": { "items": { "$ref": "#/definitions/Period" }, "type": "array" },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "linkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_linkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "answer": { "items": { "$ref": "#/definitions/Contract_Answer" }, "type": "array" },
        "securityLabelNumber": { "items": { "$ref": "#/definitions/unsignedInt" }, "type": "array" },
        "_securityLabelNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "valuedItem": { "items": { "$ref": "#/definitions/Contract_ValuedItem" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Contract_Context": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "reference": { "$ref": "#/definitions/Reference"
        },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Contract_ValuedItem": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "entityCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "entityReference": { "$ref": "#/definitions/Reference"
        },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "effectiveTime": { "$ref": "#/definitions/dateTime"
        },
        "_effectiveTime": { "$ref": "#/definitions/Element"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "points": { "$ref": "#/definitions/decimal"
        },
        "_points": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "payment": { "$ref": "#/definitions/string"
        },
        "_payment": { "$ref": "#/definitions/Element"
        },
        "paymentDate": { "$ref": "#/definitions/dateTime"
        },
        "_paymentDate": { "$ref": "#/definitions/Element"
        },
        "responsible": { "$ref": "#/definitions/Reference"
        },
        "recipient": { "$ref": "#/definitions/Reference"
        },
        "linkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_linkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "securityLabelNumber": { "items": { "$ref": "#/definitions/unsignedInt" }, "type": "array" },
        "_securityLabelNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Contract_Action": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "doNotPerform": { "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "items": { "$ref": "#/definitions/Contract_Subject" }, "type": "array" },
        "intent": { "$ref": "#/definitions/CodeableConcept"
        },
        "linkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_linkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "status": { "$ref": "#/definitions/CodeableConcept"
        },
        "context": { "$ref": "#/definitions/Reference"
        },
        "contextLinkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_contextLinkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "occurrenceDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": { "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": { "$ref": "#/definitions/Timing"
        },
        "requester": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "requesterLinkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_requesterLinkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "performerType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "performerRole": { "$ref": "#/definitions/CodeableConcept"
        },
        "performer": { "$ref": "#/definitions/Reference"
        },
        "performerLinkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_performerLinkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "reason": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_reason": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "reasonLinkId": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_reasonLinkId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "securityLabelNumber": { "items": { "$ref": "#/definitions/unsignedInt" }, "type": "array" },
        "_securityLabelNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "intent",
        "status"
      ]
    },
    "Contract_Subject": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "reference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "role": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "Contract_Signer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/Coding"
        },
        "party": { "$ref": "#/definitions/Reference"
        },
        "signature": { "items": { "$ref": "#/definitions/Signature" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "signature",
        "type",
        "party"
      ]
    },
    "Contract_Friendly": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "contentAttachment": { "$ref": "#/definitions/Attachment"
        },
        "contentReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Contract_Legal": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "contentAttachment": { "$ref": "#/definitions/Attachment"
        },
        "contentReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Contract_Rule": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "contentAttachment": { "$ref": "#/definitions/Attachment"
        },
        "contentReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Coverage": {
      "properties": {
        "resourceType": {
          "const": "Coverage"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "policyHolder": { "$ref": "#/definitions/Reference"
        },
        "subscriber": { "$ref": "#/definitions/Reference"
        },
        "subscriberId": { "$ref": "#/definitions/string"
        },
        "_subscriberId": { "$ref": "#/definitions/Element"
        },
        "beneficiary": { "$ref": "#/definitions/Reference"
        },
        "dependent": { "$ref": "#/definitions/string"
        },
        "_dependent": { "$ref": "#/definitions/Element"
        },
        "relationship": { "$ref": "#/definitions/CodeableConcept"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "payor": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "class": { "items": { "$ref": "#/definitions/Coverage_Class" }, "type": "array" },
        "order": { "$ref": "#/definitions/positiveInt"
        },
        "_order": { "$ref": "#/definitions/Element"
        },
        "network": { "$ref": "#/definitions/string"
        },
        "_network": { "$ref": "#/definitions/Element"
        },
        "costToBeneficiary": { "items": { "$ref": "#/definitions/Coverage_CostToBeneficiary" }, "type": "array" },
        "subrogation": { "$ref": "#/definitions/boolean"
        },
        "_subrogation": { "$ref": "#/definitions/Element"
        },
        "contract": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "payor",
        "beneficiary",
        "resourceType"
      ]
    },
    "Coverage_Class": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Coverage_CostToBeneficiary": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueMoney": { "$ref": "#/definitions/Money"
        },
        "exception": { "items": { "$ref": "#/definitions/Coverage_Exception" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Coverage_Exception": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "CoverageEligibilityRequest": {
      "properties": {
        "resourceType": {
          "const": "CoverageEligibilityRequest"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "priority": { "$ref": "#/definitions/CodeableConcept"
        },
        "purpose": { "items": {
            "enum": [
              "auth-requirements",
              "benefits",
              "discovery",
              "validation"
            ] }, "type": "array" },
        "_purpose": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "servicedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": { "$ref": "#/definitions/Element"
        },
        "servicedPeriod": { "$ref": "#/definitions/Period"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "enterer": { "$ref": "#/definitions/Reference"
        },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "insurer": { "$ref": "#/definitions/Reference"
        },
        "facility": { "$ref": "#/definitions/Reference"
        },
        "supportingInfo": { "items": { "$ref": "#/definitions/CoverageEligibilityRequest_SupportingInfo" }, "type": "array" },
        "insurance": { "items": { "$ref": "#/definitions/CoverageEligibilityRequest_Insurance" }, "type": "array" },
        "item": { "items": { "$ref": "#/definitions/CoverageEligibilityRequest_Item" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "insurer",
        "resourceType"
      ]
    },
    "CoverageEligibilityRequest_SupportingInfo": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "information": { "$ref": "#/definitions/Reference"
        },
        "appliesToAll": { "$ref": "#/definitions/boolean"
        },
        "_appliesToAll": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "information"
      ]
    },
    "CoverageEligibilityRequest_Insurance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "focal": { "$ref": "#/definitions/boolean"
        },
        "_focal": { "$ref": "#/definitions/Element"
        },
        "coverage": { "$ref": "#/definitions/Reference"
        },
        "businessArrangement": { "$ref": "#/definitions/string"
        },
        "_businessArrangement": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "CoverageEligibilityRequest_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "supportingInfoSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_supportingInfoSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "facility": { "$ref": "#/definitions/Reference"
        },
        "diagnosis": { "items": { "$ref": "#/definitions/CoverageEligibilityRequest_Diagnosis" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "CoverageEligibilityRequest_Diagnosis": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "diagnosisCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "CoverageEligibilityResponse": {
      "properties": {
        "resourceType": {
          "const": "CoverageEligibilityResponse"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "purpose": { "items": {
            "enum": [
              "auth-requirements",
              "benefits",
              "discovery",
              "validation"
            ] }, "type": "array" },
        "_purpose": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "servicedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": { "$ref": "#/definitions/Element"
        },
        "servicedPeriod": { "$ref": "#/definitions/Period"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "requestor": { "$ref": "#/definitions/Reference"
        },
        "request": { "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "enum": [
            "queued",
            "complete",
            "error",
            "partial"
          ]
        },
        "_outcome": { "$ref": "#/definitions/Element"
        },
        "disposition": { "$ref": "#/definitions/string"
        },
        "_disposition": { "$ref": "#/definitions/Element"
        },
        "insurer": { "$ref": "#/definitions/Reference"
        },
        "insurance": { "items": { "$ref": "#/definitions/CoverageEligibilityResponse_Insurance" }, "type": "array" },
        "preAuthRef": { "$ref": "#/definitions/string"
        },
        "_preAuthRef": { "$ref": "#/definitions/Element"
        },
        "form": { "$ref": "#/definitions/CodeableConcept"
        },
        "error": { "items": { "$ref": "#/definitions/CoverageEligibilityResponse_Error" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "request",
        "patient",
        "insurer",
        "resourceType"
      ]
    },
    "CoverageEligibilityResponse_Insurance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "coverage": { "$ref": "#/definitions/Reference"
        },
        "inforce": { "$ref": "#/definitions/boolean"
        },
        "_inforce": { "$ref": "#/definitions/Element"
        },
        "benefitPeriod": { "$ref": "#/definitions/Period"
        },
        "item": { "items": { "$ref": "#/definitions/CoverageEligibilityResponse_Item" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "CoverageEligibilityResponse_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "excluded": { "$ref": "#/definitions/boolean"
        },
        "_excluded": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "network": { "$ref": "#/definitions/CodeableConcept"
        },
        "unit": { "$ref": "#/definitions/CodeableConcept"
        },
        "term": { "$ref": "#/definitions/CodeableConcept"
        },
        "benefit": { "items": { "$ref": "#/definitions/CoverageEligibilityResponse_Benefit" }, "type": "array" },
        "authorizationRequired": { "$ref": "#/definitions/boolean"
        },
        "_authorizationRequired": { "$ref": "#/definitions/Element"
        },
        "authorizationSupporting": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "authorizationUrl": { "$ref": "#/definitions/uri"
        },
        "_authorizationUrl": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "CoverageEligibilityResponse_Benefit": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "allowedUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_allowedUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "allowedString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_allowedString": { "$ref": "#/definitions/Element"
        },
        "allowedMoney": { "$ref": "#/definitions/Money"
        },
        "usedUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_usedUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "usedString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_usedString": { "$ref": "#/definitions/Element"
        },
        "usedMoney": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "CoverageEligibilityResponse_Error": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "DetectedIssue": {
      "properties": {
        "resourceType": {
          "const": "DetectedIssue"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "severity": {
          "enum": [
            "high",
            "moderate",
            "low"
          ]
        },
        "_severity": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "identifiedDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_identifiedDateTime": { "$ref": "#/definitions/Element"
        },
        "identifiedPeriod": { "$ref": "#/definitions/Period"
        },
        "author": { "$ref": "#/definitions/Reference"
        },
        "implicated": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "evidence": { "items": { "$ref": "#/definitions/DetectedIssue_Evidence" }, "type": "array" },
        "detail": { "$ref": "#/definitions/string"
        },
        "_detail": { "$ref": "#/definitions/Element"
        },
        "reference": { "$ref": "#/definitions/uri"
        },
        "_reference": { "$ref": "#/definitions/Element"
        },
        "mitigation": { "items": { "$ref": "#/definitions/DetectedIssue_Mitigation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "DetectedIssue_Evidence": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "DetectedIssue_Mitigation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "action": { "$ref": "#/definitions/CodeableConcept"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "author": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "Device": {
      "properties": {
        "resourceType": {
          "const": "Device"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "definition": { "$ref": "#/definitions/Reference"
        },
        "udiCarrier": { "items": { "$ref": "#/definitions/Device_UdiCarrier" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "inactive",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "distinctIdentifier": { "$ref": "#/definitions/string"
        },
        "_distinctIdentifier": { "$ref": "#/definitions/Element"
        },
        "manufacturer": { "$ref": "#/definitions/string"
        },
        "_manufacturer": { "$ref": "#/definitions/Element"
        },
        "manufactureDate": { "$ref": "#/definitions/dateTime"
        },
        "_manufactureDate": { "$ref": "#/definitions/Element"
        },
        "expirationDate": { "$ref": "#/definitions/dateTime"
        },
        "_expirationDate": { "$ref": "#/definitions/Element"
        },
        "lotNumber": { "$ref": "#/definitions/string"
        },
        "_lotNumber": { "$ref": "#/definitions/Element"
        },
        "serialNumber": { "$ref": "#/definitions/string"
        },
        "_serialNumber": { "$ref": "#/definitions/Element"
        },
        "deviceName": { "items": { "$ref": "#/definitions/Device_DeviceName" }, "type": "array" },
        "modelNumber": { "$ref": "#/definitions/string"
        },
        "_modelNumber": { "$ref": "#/definitions/Element"
        },
        "partNumber": { "$ref": "#/definitions/string"
        },
        "_partNumber": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "specialization": { "items": { "$ref": "#/definitions/Device_Specialization" }, "type": "array" },
        "version": { "items": { "$ref": "#/definitions/Device_Version" }, "type": "array" },
        "property": { "items": { "$ref": "#/definitions/Device_Property" }, "type": "array" },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "owner": { "$ref": "#/definitions/Reference"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "location": { "$ref": "#/definitions/Reference"
        },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "safety": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "parent": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Device_UdiCarrier": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "deviceIdentifier": { "$ref": "#/definitions/string"
        },
        "_deviceIdentifier": { "$ref": "#/definitions/Element"
        },
        "issuer": { "$ref": "#/definitions/uri"
        },
        "_issuer": { "$ref": "#/definitions/Element"
        },
        "jurisdiction": { "$ref": "#/definitions/uri"
        },
        "_jurisdiction": { "$ref": "#/definitions/Element"
        },
        "carrierAIDC": { "$ref": "#/definitions/base64Binary"
        },
        "_carrierAIDC": { "$ref": "#/definitions/Element"
        },
        "carrierHRF": { "$ref": "#/definitions/string"
        },
        "_carrierHRF": { "$ref": "#/definitions/Element"
        },
        "entryType": {
          "enum": [
            "barcode",
            "rfid",
            "manual",
            "card",
            "self-reported",
            "unknown"
          ]
        },
        "_entryType": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Device_DeviceName": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "udi-label-name",
            "user-friendly-name",
            "patient-reported-name",
            "manufacturer-name",
            "model-name",
            "other"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Device_Specialization": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "systemType": { "$ref": "#/definitions/CodeableConcept"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "systemType"
      ]
    },
    "Device_Version": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "component": { "$ref": "#/definitions/Identifier"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Device_Property": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": { "items": { "$ref": "#/definitions/Quantity" }, "type": "array" },
        "valueCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "DeviceDefinition": {
      "properties": {
        "resourceType": {
          "const": "DeviceDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "udiDeviceIdentifier": { "items": { "$ref": "#/definitions/DeviceDefinition_UdiDeviceIdentifier" }, "type": "array" },
        "manufacturerString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_manufacturerString": { "$ref": "#/definitions/Element"
        },
        "manufacturerReference": { "$ref": "#/definitions/Reference"
        },
        "deviceName": { "items": { "$ref": "#/definitions/DeviceDefinition_DeviceName" }, "type": "array" },
        "modelNumber": { "$ref": "#/definitions/string"
        },
        "_modelNumber": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "specialization": { "items": { "$ref": "#/definitions/DeviceDefinition_Specialization" }, "type": "array" },
        "version": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_version": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "safety": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "shelfLifeStorage": { "items": { "$ref": "#/definitions/ProductShelfLife" }, "type": "array" },
        "physicalCharacteristics": { "$ref": "#/definitions/ProdCharacteristic"
        },
        "languageCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "capability": { "items": { "$ref": "#/definitions/DeviceDefinition_Capability" }, "type": "array" },
        "property": { "items": { "$ref": "#/definitions/DeviceDefinition_Property" }, "type": "array" },
        "owner": { "$ref": "#/definitions/Reference"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "onlineInformation": { "$ref": "#/definitions/uri"
        },
        "_onlineInformation": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "parentDevice": { "$ref": "#/definitions/Reference"
        },
        "material": { "items": { "$ref": "#/definitions/DeviceDefinition_Material" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "DeviceDefinition_UdiDeviceIdentifier": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "deviceIdentifier": { "$ref": "#/definitions/string"
        },
        "_deviceIdentifier": { "$ref": "#/definitions/Element"
        },
        "issuer": { "$ref": "#/definitions/uri"
        },
        "_issuer": { "$ref": "#/definitions/Element"
        },
        "jurisdiction": { "$ref": "#/definitions/uri"
        },
        "_jurisdiction": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "DeviceDefinition_DeviceName": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "udi-label-name",
            "user-friendly-name",
            "patient-reported-name",
            "manufacturer-name",
            "model-name",
            "other"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "DeviceDefinition_Specialization": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "systemType": { "$ref": "#/definitions/string"
        },
        "_systemType": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "DeviceDefinition_Capability": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "DeviceDefinition_Property": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": { "items": { "$ref": "#/definitions/Quantity" }, "type": "array" },
        "valueCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "DeviceDefinition_Material": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "substance": { "$ref": "#/definitions/CodeableConcept"
        },
        "alternate": { "$ref": "#/definitions/boolean"
        },
        "_alternate": { "$ref": "#/definitions/Element"
        },
        "allergenicIndicator": { "$ref": "#/definitions/boolean"
        },
        "_allergenicIndicator": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "substance"
      ]
    },
    "DeviceMetric": {
      "properties": {
        "resourceType": {
          "const": "DeviceMetric"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "unit": { "$ref": "#/definitions/CodeableConcept"
        },
        "source": { "$ref": "#/definitions/Reference"
        },
        "parent": { "$ref": "#/definitions/Reference"
        },
        "operationalStatus": {
          "enum": [
            "on",
            "off",
            "standby",
            "entered-in-error"
          ]
        },
        "_operationalStatus": { "$ref": "#/definitions/Element"
        },
        "color": {
          "enum": [
            "black",
            "red",
            "green",
            "yellow",
            "blue",
            "magenta",
            "cyan",
            "white"
          ]
        },
        "_color": { "$ref": "#/definitions/Element"
        },
        "category": {
          "enum": [
            "measurement",
            "setting",
            "calculation",
            "unspecified"
          ]
        },
        "_category": { "$ref": "#/definitions/Element"
        },
        "measurementPeriod": { "$ref": "#/definitions/Timing"
        },
        "calibration": { "items": { "$ref": "#/definitions/DeviceMetric_Calibration" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "resourceType"
      ]
    },
    "DeviceMetric_Calibration": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "unspecified",
            "offset",
            "gain",
            "two-point"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "state": {
          "enum": [
            "not-calibrated",
            "calibration-required",
            "calibrated",
            "unspecified"
          ]
        },
        "_state": { "$ref": "#/definitions/Element"
        },
        "time": { "$ref": "#/definitions/instant"
        },
        "_time": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "DeviceRequest": {
      "properties": {
        "resourceType": {
          "const": "DeviceRequest"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "priorRequest": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "groupIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "intent": { "$ref": "#/definitions/code"
        },
        "_intent": { "$ref": "#/definitions/Element"
        },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "codeReference": { "$ref": "#/definitions/Reference"
        },
        "codeCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "parameter": { "items": { "$ref": "#/definitions/DeviceRequest_Parameter" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": { "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": { "$ref": "#/definitions/Timing"
        },
        "authoredOn": { "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": { "$ref": "#/definitions/Element"
        },
        "requester": { "$ref": "#/definitions/Reference"
        },
        "performerType": { "$ref": "#/definitions/CodeableConcept"
        },
        "performer": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "insurance": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "supportingInfo": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "relevantHistory": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "DeviceRequest_Parameter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "DeviceUseStatement": {
      "properties": {
        "resourceType": {
          "const": "DeviceUseStatement"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "completed",
            "entered-in-error",
            "intended",
            "stopped",
            "on-hold"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "derivedFrom": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "timingTiming": { "$ref": "#/definitions/Timing"
        },
        "timingPeriod": { "$ref": "#/definitions/Period"
        },
        "timingDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timingDateTime": { "$ref": "#/definitions/Element"
        },
        "recordedOn": { "$ref": "#/definitions/dateTime"
        },
        "_recordedOn": { "$ref": "#/definitions/Element"
        },
        "source": { "$ref": "#/definitions/Reference"
        },
        "device": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "device",
        "resourceType"
      ]
    },
    "DiagnosticReport": {
      "properties": {
        "resourceType": {
          "const": "DiagnosticReport"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": {
          "enum": [
            "registered",
            "partial",
            "preliminary",
            "final",
            "amended",
            "corrected",
            "appended",
            "cancelled",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_effectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "issued": { "$ref": "#/definitions/instant"
        },
        "_issued": { "$ref": "#/definitions/Element"
        },
        "performer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "resultsInterpreter": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "specimen": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "result": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "imagingStudy": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "media": { "items": { "$ref": "#/definitions/DiagnosticReport_Media" }, "type": "array" },
        "conclusion": { "$ref": "#/definitions/string"
        },
        "_conclusion": { "$ref": "#/definitions/Element"
        },
        "conclusionCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "presentedForm": { "items": { "$ref": "#/definitions/Attachment" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "DiagnosticReport_Media": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        },
        "link": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "link"
      ]
    },
    "DocumentManifest": {
      "properties": {
        "resourceType": {
          "const": "DocumentManifest"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "masterIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "current",
            "superseded",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "author": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "recipient": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "source": { "$ref": "#/definitions/uri"
        },
        "_source": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "content": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "related": { "items": { "$ref": "#/definitions/DocumentManifest_Related" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "content",
        "resourceType"
      ]
    },
    "DocumentManifest_Related": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "ref": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "DocumentReference": {
      "properties": {
        "resourceType": {
          "const": "DocumentReference"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "masterIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "current",
            "superseded",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "docStatus": { "$ref": "#/definitions/code"
        },
        "_docStatus": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/instant"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "author": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "authenticator": { "$ref": "#/definitions/Reference"
        },
        "custodian": { "$ref": "#/definitions/Reference"
        },
        "relatesTo": { "items": { "$ref": "#/definitions/DocumentReference_RelatesTo" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "securityLabel": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "content": { "items": { "$ref": "#/definitions/DocumentReference_Content" }, "type": "array" },
        "context": { "$ref": "#/definitions/DocumentReference_Context"
        }
      },
      "additionalProperties": false,
      "required": [
        "content",
        "resourceType"
      ]
    },
    "DocumentReference_RelatesTo": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "enum": [
            "replaces",
            "transforms",
            "signs",
            "appends"
          ]
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "target": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "target"
      ]
    },
    "DocumentReference_Content": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "attachment": { "$ref": "#/definitions/Attachment"
        },
        "format": { "$ref": "#/definitions/Coding"
        }
      },
      "additionalProperties": false,
      "required": [
        "attachment"
      ]
    },
    "DocumentReference_Context": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "encounter": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "event": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "facilityType": { "$ref": "#/definitions/CodeableConcept"
        },
        "practiceSetting": { "$ref": "#/definitions/CodeableConcept"
        },
        "sourcePatientInfo": { "$ref": "#/definitions/Reference"
        },
        "related": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "EffectEvidenceSynthesis": {
      "properties": {
        "resourceType": {
          "const": "EffectEvidenceSynthesis"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "synthesisType": { "$ref": "#/definitions/CodeableConcept"
        },
        "studyType": { "$ref": "#/definitions/CodeableConcept"
        },
        "population": { "$ref": "#/definitions/Reference"
        },
        "exposure": { "$ref": "#/definitions/Reference"
        },
        "exposureAlternative": { "$ref": "#/definitions/Reference"
        },
        "outcome": { "$ref": "#/definitions/Reference"
        },
        "sampleSize": { "$ref": "#/definitions/EffectEvidenceSynthesis_SampleSize"
        },
        "resultsByExposure": { "items": { "$ref": "#/definitions/EffectEvidenceSynthesis_ResultsByExposure" }, "type": "array" },
        "effectEstimate": { "items": { "$ref": "#/definitions/EffectEvidenceSynthesis_EffectEstimate" }, "type": "array" },
        "certainty": { "items": { "$ref": "#/definitions/EffectEvidenceSynthesis_Certainty" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "exposureAlternative",
        "exposure",
        "outcome",
        "resourceType",
        "population"
      ]
    },
    "EffectEvidenceSynthesis_SampleSize": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "numberOfStudies": { "$ref": "#/definitions/integer"
        },
        "_numberOfStudies": { "$ref": "#/definitions/Element"
        },
        "numberOfParticipants": { "$ref": "#/definitions/integer"
        },
        "_numberOfParticipants": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "EffectEvidenceSynthesis_ResultsByExposure": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "exposureState": {
          "enum": [
            "exposure",
            "exposure-alternative"
          ]
        },
        "_exposureState": { "$ref": "#/definitions/Element"
        },
        "variantState": { "$ref": "#/definitions/CodeableConcept"
        },
        "riskEvidenceSynthesis": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "riskEvidenceSynthesis"
      ]
    },
    "EffectEvidenceSynthesis_EffectEstimate": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "variantState": { "$ref": "#/definitions/CodeableConcept"
        },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "unitOfMeasure": { "$ref": "#/definitions/CodeableConcept"
        },
        "precisionEstimate": { "items": { "$ref": "#/definitions/EffectEvidenceSynthesis_PrecisionEstimate" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "EffectEvidenceSynthesis_PrecisionEstimate": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "level": { "$ref": "#/definitions/decimal"
        },
        "_level": { "$ref": "#/definitions/Element"
        },
        "from": { "$ref": "#/definitions/decimal"
        },
        "_from": { "$ref": "#/definitions/Element"
        },
        "to": { "$ref": "#/definitions/decimal"
        },
        "_to": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "EffectEvidenceSynthesis_Certainty": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "rating": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "certaintySubcomponent": { "items": { "$ref": "#/definitions/EffectEvidenceSynthesis_CertaintySubcomponent" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "EffectEvidenceSynthesis_CertaintySubcomponent": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "rating": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Encounter": {
      "properties": {
        "resourceType": {
          "const": "Encounter"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "planned",
            "arrived",
            "triaged",
            "in-progress",
            "onleave",
            "finished",
            "cancelled",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusHistory": { "items": { "$ref": "#/definitions/Encounter_StatusHistory" }, "type": "array" },
        "class": { "$ref": "#/definitions/Coding"
        },
        "classHistory": { "items": { "$ref": "#/definitions/Encounter_ClassHistory" }, "type": "array" },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "serviceType": { "$ref": "#/definitions/CodeableConcept"
        },
        "priority": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "episodeOfCare": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "participant": { "items": { "$ref": "#/definitions/Encounter_Participant" }, "type": "array" },
        "appointment": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "length": { "$ref": "#/definitions/Duration"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "diagnosis": { "items": { "$ref": "#/definitions/Encounter_Diagnosis" }, "type": "array" },
        "account": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "hospitalization": { "$ref": "#/definitions/Encounter_Hospitalization"
        },
        "location": { "items": { "$ref": "#/definitions/Encounter_Location" }, "type": "array" },
        "serviceProvider": { "$ref": "#/definitions/Reference"
        },
        "partOf": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "class",
        "resourceType"
      ]
    },
    "Encounter_StatusHistory": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "status": {
          "enum": [
            "planned",
            "arrived",
            "triaged",
            "in-progress",
            "onleave",
            "finished",
            "cancelled",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false,
      "required": [
        "period"
      ]
    },
    "Encounter_ClassHistory": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "class": { "$ref": "#/definitions/Coding"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false,
      "required": [
        "period",
        "class"
      ]
    },
    "Encounter_Participant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "individual": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Encounter_Diagnosis": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "condition": { "$ref": "#/definitions/Reference"
        },
        "use": { "$ref": "#/definitions/CodeableConcept"
        },
        "rank": { "$ref": "#/definitions/positiveInt"
        },
        "_rank": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "condition"
      ]
    },
    "Encounter_Hospitalization": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "preAdmissionIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "origin": { "$ref": "#/definitions/Reference"
        },
        "admitSource": { "$ref": "#/definitions/CodeableConcept"
        },
        "reAdmission": { "$ref": "#/definitions/CodeableConcept"
        },
        "dietPreference": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialCourtesy": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialArrangement": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "destination": { "$ref": "#/definitions/Reference"
        },
        "dischargeDisposition": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "Encounter_Location": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "location": { "$ref": "#/definitions/Reference"
        },
        "status": {
          "enum": [
            "planned",
            "active",
            "reserved",
            "completed"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "physicalType": { "$ref": "#/definitions/CodeableConcept"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false,
      "required": [
        "location"
      ]
    },
    "Endpoint": {
      "properties": {
        "resourceType": {
          "const": "Endpoint"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "suspended",
            "error",
            "off",
            "entered-in-error",
            "test"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "connectionType": { "$ref": "#/definitions/Coding"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "managingOrganization": { "$ref": "#/definitions/Reference"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "payloadType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "payloadMimeType": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_payloadMimeType": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "address": { "$ref": "#/definitions/url"
        },
        "_address": { "$ref": "#/definitions/Element"
        },
        "header": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_header": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "payloadType",
        "connectionType",
        "resourceType"
      ]
    },
    "EnrollmentRequest": {
      "properties": {
        "resourceType": {
          "const": "EnrollmentRequest"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "insurer": { "$ref": "#/definitions/Reference"
        },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "candidate": { "$ref": "#/definitions/Reference"
        },
        "coverage": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "EnrollmentResponse": {
      "properties": {
        "resourceType": {
          "const": "EnrollmentResponse"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "request": { "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "enum": [
            "queued",
            "complete",
            "error",
            "partial"
          ]
        },
        "_outcome": { "$ref": "#/definitions/Element"
        },
        "disposition": { "$ref": "#/definitions/string"
        },
        "_disposition": { "$ref": "#/definitions/Element"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "organization": { "$ref": "#/definitions/Reference"
        },
        "requestProvider": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "EpisodeOfCare": {
      "properties": {
        "resourceType": {
          "const": "EpisodeOfCare"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "planned",
            "waitlist",
            "active",
            "onhold",
            "finished",
            "cancelled",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusHistory": { "items": { "$ref": "#/definitions/EpisodeOfCare_StatusHistory" }, "type": "array" },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "diagnosis": { "items": { "$ref": "#/definitions/EpisodeOfCare_Diagnosis" }, "type": "array" },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "managingOrganization": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "referralRequest": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "careManager": { "$ref": "#/definitions/Reference"
        },
        "team": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "account": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "EpisodeOfCare_StatusHistory": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "status": {
          "enum": [
            "planned",
            "waitlist",
            "active",
            "onhold",
            "finished",
            "cancelled",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false,
      "required": [
        "period"
      ]
    },
    "EpisodeOfCare_Diagnosis": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "condition": { "$ref": "#/definitions/Reference"
        },
        "role": { "$ref": "#/definitions/CodeableConcept"
        },
        "rank": { "$ref": "#/definitions/positiveInt"
        },
        "_rank": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "condition"
      ]
    },
    "EventDefinition": {
      "properties": {
        "resourceType": {
          "const": "EventDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "trigger": { "items": { "$ref": "#/definitions/TriggerDefinition" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "trigger",
        "resourceType"
      ]
    },
    "Evidence": {
      "properties": {
        "resourceType": {
          "const": "Evidence"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "shortTitle": { "$ref": "#/definitions/string"
        },
        "_shortTitle": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "exposureBackground": { "$ref": "#/definitions/Reference"
        },
        "exposureVariant": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "outcome": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "exposureBackground",
        "resourceType"
      ]
    },
    "EvidenceVariable": {
      "properties": {
        "resourceType": {
          "const": "EvidenceVariable"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "shortTitle": { "$ref": "#/definitions/string"
        },
        "_shortTitle": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "type": {
          "enum": [
            "dichotomous",
            "continuous",
            "descriptive"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "characteristic": { "items": { "$ref": "#/definitions/EvidenceVariable_Characteristic" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "characteristic",
        "resourceType"
      ]
    },
    "EvidenceVariable_Characteristic": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "definitionReference": { "$ref": "#/definitions/Reference"
        },
        "definitionCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionCanonical": { "$ref": "#/definitions/Element"
        },
        "definitionCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "definitionExpression": { "$ref": "#/definitions/Expression"
        },
        "definitionDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "definitionTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "usageContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "exclude": { "$ref": "#/definitions/boolean"
        },
        "_exclude": { "$ref": "#/definitions/Element"
        },
        "participantEffectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_participantEffectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "participantEffectivePeriod": { "$ref": "#/definitions/Period"
        },
        "participantEffectiveDuration": { "$ref": "#/definitions/Duration"
        },
        "participantEffectiveTiming": { "$ref": "#/definitions/Timing"
        },
        "timeFromStart": { "$ref": "#/definitions/Duration"
        },
        "groupMeasure": {
          "enum": [
            "mean",
            "median",
            "mean-of-mean",
            "mean-of-median",
            "median-of-mean",
            "median-of-median"
          ]
        },
        "_groupMeasure": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ExampleScenario": {
      "properties": {
        "resourceType": {
          "const": "ExampleScenario"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "actor": { "items": { "$ref": "#/definitions/ExampleScenario_Actor" }, "type": "array" },
        "instance": { "items": { "$ref": "#/definitions/ExampleScenario_Instance" }, "type": "array" },
        "process": { "items": { "$ref": "#/definitions/ExampleScenario_Process" }, "type": "array" },
        "workflow": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ExampleScenario_Actor": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "actorId": { "$ref": "#/definitions/string"
        },
        "_actorId": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "person",
            "entity"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ExampleScenario_Instance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "resourceId": { "$ref": "#/definitions/string"
        },
        "_resourceId": { "$ref": "#/definitions/Element"
        },
        "resourceType": { "$ref": "#/definitions/code"
        },
        "_resourceType": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "version": { "items": { "$ref": "#/definitions/ExampleScenario_Version" }, "type": "array" },
        "containedInstance": { "items": { "$ref": "#/definitions/ExampleScenario_ContainedInstance" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ExampleScenario_Version": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "versionId": { "$ref": "#/definitions/string"
        },
        "_versionId": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ExampleScenario_ContainedInstance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "resourceId": { "$ref": "#/definitions/string"
        },
        "_resourceId": { "$ref": "#/definitions/Element"
        },
        "versionId": { "$ref": "#/definitions/string"
        },
        "_versionId": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ExampleScenario_Process": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "preConditions": { "$ref": "#/definitions/markdown"
        },
        "_preConditions": { "$ref": "#/definitions/Element"
        },
        "postConditions": { "$ref": "#/definitions/markdown"
        },
        "_postConditions": { "$ref": "#/definitions/Element"
        },
        "step": { "items": { "$ref": "#/definitions/ExampleScenario_Step" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ExampleScenario_Step": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "process": { "items": { "$ref": "#/definitions/ExampleScenario_Process" }, "type": "array" },
        "pause": { "$ref": "#/definitions/boolean"
        },
        "_pause": { "$ref": "#/definitions/Element"
        },
        "operation": { "$ref": "#/definitions/ExampleScenario_Operation"
        },
        "alternative": { "items": { "$ref": "#/definitions/ExampleScenario_Alternative" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ExampleScenario_Operation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "number": { "$ref": "#/definitions/string"
        },
        "_number": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/string"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "initiator": { "$ref": "#/definitions/string"
        },
        "_initiator": { "$ref": "#/definitions/Element"
        },
        "receiver": { "$ref": "#/definitions/string"
        },
        "_receiver": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "initiatorActive": { "$ref": "#/definitions/boolean"
        },
        "_initiatorActive": { "$ref": "#/definitions/Element"
        },
        "receiverActive": { "$ref": "#/definitions/boolean"
        },
        "_receiverActive": { "$ref": "#/definitions/Element"
        },
        "request": { "$ref": "#/definitions/ExampleScenario_ContainedInstance"
        },
        "response": { "$ref": "#/definitions/ExampleScenario_ContainedInstance"
        }
      },
      "additionalProperties": false
    },
    "ExampleScenario_Alternative": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "step": { "items": { "$ref": "#/definitions/ExampleScenario_Step" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit": {
      "properties": {
        "resourceType": {
          "const": "ExplanationOfBenefit"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "cancelled",
            "draft",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subType": { "$ref": "#/definitions/CodeableConcept"
        },
        "use": { "$ref": "#/definitions/code"
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "billablePeriod": { "$ref": "#/definitions/Period"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "enterer": { "$ref": "#/definitions/Reference"
        },
        "insurer": { "$ref": "#/definitions/Reference"
        },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "priority": { "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserveRequested": { "$ref": "#/definitions/CodeableConcept"
        },
        "fundsReserve": { "$ref": "#/definitions/CodeableConcept"
        },
        "related": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Related" }, "type": "array" },
        "prescription": { "$ref": "#/definitions/Reference"
        },
        "originalPrescription": { "$ref": "#/definitions/Reference"
        },
        "payee": { "$ref": "#/definitions/ExplanationOfBenefit_Payee"
        },
        "referral": { "$ref": "#/definitions/Reference"
        },
        "facility": { "$ref": "#/definitions/Reference"
        },
        "claim": { "$ref": "#/definitions/Reference"
        },
        "claimResponse": { "$ref": "#/definitions/Reference"
        },
        "outcome": { "$ref": "#/definitions/code"
        },
        "_outcome": { "$ref": "#/definitions/Element"
        },
        "disposition": { "$ref": "#/definitions/string"
        },
        "_disposition": { "$ref": "#/definitions/Element"
        },
        "preAuthRef": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_preAuthRef": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "preAuthRefPeriod": { "items": { "$ref": "#/definitions/Period" }, "type": "array" },
        "careTeam": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_CareTeam" }, "type": "array" },
        "supportingInfo": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_SupportingInfo" }, "type": "array" },
        "diagnosis": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Diagnosis" }, "type": "array" },
        "procedure": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Procedure" }, "type": "array" },
        "precedence": { "$ref": "#/definitions/positiveInt"
        },
        "_precedence": { "$ref": "#/definitions/Element"
        },
        "insurance": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Insurance" }, "type": "array" },
        "accident": { "$ref": "#/definitions/ExplanationOfBenefit_Accident"
        },
        "item": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Item" }, "type": "array" },
        "addItem": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_AddItem" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Adjudication" }, "type": "array" },
        "total": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Total" }, "type": "array" },
        "payment": { "$ref": "#/definitions/ExplanationOfBenefit_Payment"
        },
        "formCode": { "$ref": "#/definitions/CodeableConcept"
        },
        "form": { "$ref": "#/definitions/Attachment"
        },
        "processNote": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_ProcessNote" }, "type": "array" },
        "benefitPeriod": { "$ref": "#/definitions/Period"
        },
        "benefitBalance": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_BenefitBalance" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "insurance",
        "provider",
        "patient",
        "insurer",
        "type",
        "resourceType"
      ]
    },
    "ExplanationOfBenefit_Related": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "claim": { "$ref": "#/definitions/Reference"
        },
        "relationship": { "$ref": "#/definitions/CodeableConcept"
        },
        "reference": { "$ref": "#/definitions/Identifier"
        }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Payee": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "party": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit_CareTeam": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "responsible": { "$ref": "#/definitions/boolean"
        },
        "_responsible": { "$ref": "#/definitions/Element"
        },
        "role": { "$ref": "#/definitions/CodeableConcept"
        },
        "qualification": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "provider"
      ]
    },
    "ExplanationOfBenefit_SupportingInfo": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "timingDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_timingDate": { "$ref": "#/definitions/Element"
        },
        "timingPeriod": { "$ref": "#/definitions/Period"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "reason": { "$ref": "#/definitions/Coding"
        }
      },
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ExplanationOfBenefit_Diagnosis": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "diagnosisCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "diagnosisReference": { "$ref": "#/definitions/Reference"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "onAdmission": { "$ref": "#/definitions/CodeableConcept"
        },
        "packageCode": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Procedure": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "procedureCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "procedureReference": { "$ref": "#/definitions/Reference"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Insurance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "focal": { "$ref": "#/definitions/boolean"
        },
        "_focal": { "$ref": "#/definitions/Element"
        },
        "coverage": { "$ref": "#/definitions/Reference"
        },
        "preAuthRef": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_preAuthRef": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "coverage"
      ]
    },
    "ExplanationOfBenefit_Accident": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "date": { "$ref": "#/definitions/date"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": { "$ref": "#/definitions/Address"
        },
        "locationReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "careTeamSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_careTeamSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "diagnosisSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_diagnosisSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "procedureSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_procedureSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "informationSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_informationSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "revenue": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "servicedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": { "$ref": "#/definitions/Element"
        },
        "servicedPeriod": { "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": { "$ref": "#/definitions/Address"
        },
        "locationReference": { "$ref": "#/definitions/Reference"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "subSite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "encounter": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Adjudication" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Detail" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "ExplanationOfBenefit_Adjudication": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "reason": { "$ref": "#/definitions/CodeableConcept"
        },
        "amount": { "$ref": "#/definitions/Money"
        },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ExplanationOfBenefit_Detail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "revenue": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Adjudication" }, "type": "array" },
        "subDetail": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_SubDetail" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "ExplanationOfBenefit_SubDetail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "revenue": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "udi": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Adjudication" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "ExplanationOfBenefit_AddItem": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_itemSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "detailSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_detailSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "subDetailSequence": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_subDetailSequence": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "provider": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "programCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "servicedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_servicedDate": { "$ref": "#/definitions/Element"
        },
        "servicedPeriod": { "$ref": "#/definitions/Period"
        },
        "locationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "locationAddress": { "$ref": "#/definitions/Address"
        },
        "locationReference": { "$ref": "#/definitions/Reference"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "subSite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Adjudication" }, "type": "array" },
        "detail": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Detail1" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "ExplanationOfBenefit_Detail1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Adjudication" }, "type": "array" },
        "subDetail": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_SubDetail1" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "ExplanationOfBenefit_SubDetail1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "productOrService": { "$ref": "#/definitions/CodeableConcept"
        },
        "modifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "unitPrice": { "$ref": "#/definitions/Money"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "net": { "$ref": "#/definitions/Money"
        },
        "noteNumber": { "items": { "$ref": "#/definitions/positiveInt" }, "type": "array" },
        "_noteNumber": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "adjudication": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Adjudication" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "productOrService"
      ]
    },
    "ExplanationOfBenefit_Total": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "amount": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false,
      "required": [
        "amount",
        "category"
      ]
    },
    "ExplanationOfBenefit_Payment": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "adjustment": { "$ref": "#/definitions/Money"
        },
        "adjustmentReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "date": { "$ref": "#/definitions/date"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "amount": { "$ref": "#/definitions/Money"
        },
        "identifier": { "$ref": "#/definitions/Identifier"
        }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit_ProcessNote": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "number": { "$ref": "#/definitions/positiveInt"
        },
        "_number": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "display",
            "print",
            "printoper"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "ExplanationOfBenefit_BenefitBalance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "excluded": { "$ref": "#/definitions/boolean"
        },
        "_excluded": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "network": { "$ref": "#/definitions/CodeableConcept"
        },
        "unit": { "$ref": "#/definitions/CodeableConcept"
        },
        "term": { "$ref": "#/definitions/CodeableConcept"
        },
        "financial": { "items": { "$ref": "#/definitions/ExplanationOfBenefit_Financial" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "ExplanationOfBenefit_Financial": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "allowedUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_allowedUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "allowedString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_allowedString": { "$ref": "#/definitions/Element"
        },
        "allowedMoney": { "$ref": "#/definitions/Money"
        },
        "usedUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_usedUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "usedMoney": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "FamilyMemberHistory": {
      "properties": {
        "resourceType": {
          "const": "FamilyMemberHistory"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "status": {
          "enum": [
            "partial",
            "completed",
            "entered-in-error",
            "health-unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "dataAbsentReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "relationship": { "$ref": "#/definitions/CodeableConcept"
        },
        "sex": { "$ref": "#/definitions/CodeableConcept"
        },
        "bornPeriod": { "$ref": "#/definitions/Period"
        },
        "bornDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_bornDate": { "$ref": "#/definitions/Element"
        },
        "bornString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_bornString": { "$ref": "#/definitions/Element"
        },
        "ageAge": { "$ref": "#/definitions/Age"
        },
        "ageRange": { "$ref": "#/definitions/Range"
        },
        "ageString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_ageString": { "$ref": "#/definitions/Element"
        },
        "estimatedAge": { "$ref": "#/definitions/boolean"
        },
        "_estimatedAge": { "$ref": "#/definitions/Element"
        },
        "deceasedBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_deceasedBoolean": { "$ref": "#/definitions/Element"
        },
        "deceasedAge": { "$ref": "#/definitions/Age"
        },
        "deceasedRange": { "$ref": "#/definitions/Range"
        },
        "deceasedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_deceasedDate": { "$ref": "#/definitions/Element"
        },
        "deceasedString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_deceasedString": { "$ref": "#/definitions/Element"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "condition": { "items": { "$ref": "#/definitions/FamilyMemberHistory_Condition" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "relationship",
        "resourceType"
      ]
    },
    "FamilyMemberHistory_Condition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "outcome": { "$ref": "#/definitions/CodeableConcept"
        },
        "contributedToDeath": { "$ref": "#/definitions/boolean"
        },
        "_contributedToDeath": { "$ref": "#/definitions/Element"
        },
        "onsetAge": { "$ref": "#/definitions/Age"
        },
        "onsetRange": { "$ref": "#/definitions/Range"
        },
        "onsetPeriod": { "$ref": "#/definitions/Period"
        },
        "onsetString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_onsetString": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Flag": {
      "properties": {
        "resourceType": {
          "const": "Flag"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "inactive",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "author": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "subject",
        "resourceType"
      ]
    },
    "Goal": {
      "properties": {
        "resourceType": {
          "const": "Goal"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "lifecycleStatus": {
          "enum": [
            "proposed",
            "planned",
            "accepted",
            "active",
            "on-hold",
            "completed",
            "cancelled",
            "entered-in-error",
            "rejected"
          ]
        },
        "_lifecycleStatus": { "$ref": "#/definitions/Element"
        },
        "achievementStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "priority": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "startDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_startDate": { "$ref": "#/definitions/Element"
        },
        "startCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "target": { "items": { "$ref": "#/definitions/Goal_Target" }, "type": "array" },
        "statusDate": { "$ref": "#/definitions/date"
        },
        "_statusDate": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/string"
        },
        "_statusReason": { "$ref": "#/definitions/Element"
        },
        "expressedBy": { "$ref": "#/definitions/Reference"
        },
        "addresses": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "outcomeCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "outcomeReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "description",
        "resourceType"
      ]
    },
    "Goal_Target": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "measure": { "$ref": "#/definitions/CodeableConcept"
        },
        "detailQuantity": { "$ref": "#/definitions/Quantity"
        },
        "detailRange": { "$ref": "#/definitions/Range"
        },
        "detailCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "detailString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_detailString": { "$ref": "#/definitions/Element"
        },
        "detailBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_detailBoolean": { "$ref": "#/definitions/Element"
        },
        "detailInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_detailInteger": { "$ref": "#/definitions/Element"
        },
        "detailRatio": { "$ref": "#/definitions/Ratio"
        },
        "dueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_dueDate": { "$ref": "#/definitions/Element"
        },
        "dueDuration": { "$ref": "#/definitions/Duration"
        }
      },
      "additionalProperties": false
    },
    "GraphDefinition": {
      "properties": {
        "resourceType": {
          "const": "GraphDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "start": { "$ref": "#/definitions/code"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        },
        "link": { "items": { "$ref": "#/definitions/GraphDefinition_Link" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "GraphDefinition_Link": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "sliceName": { "$ref": "#/definitions/string"
        },
        "_sliceName": { "$ref": "#/definitions/Element"
        },
        "min": { "$ref": "#/definitions/integer"
        },
        "_min": { "$ref": "#/definitions/Element"
        },
        "max": { "$ref": "#/definitions/string"
        },
        "_max": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "target": { "items": { "$ref": "#/definitions/GraphDefinition_Target" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "GraphDefinition_Target": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "params": { "$ref": "#/definitions/string"
        },
        "_params": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        },
        "compartment": { "items": { "$ref": "#/definitions/GraphDefinition_Compartment" }, "type": "array" },
        "link": { "items": { "$ref": "#/definitions/GraphDefinition_Link" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "GraphDefinition_Compartment": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "use": {
          "enum": [
            "condition",
            "requirement"
          ]
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "rule": {
          "enum": [
            "identical",
            "matching",
            "different",
            "custom"
          ]
        },
        "_rule": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/string"
        },
        "_expression": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Group": {
      "properties": {
        "resourceType": {
          "const": "Group"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "person",
            "animal",
            "practitioner",
            "device",
            "medication",
            "substance"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "actual": { "$ref": "#/definitions/boolean"
        },
        "_actual": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "quantity": { "$ref": "#/definitions/unsignedInt"
        },
        "_quantity": { "$ref": "#/definitions/Element"
        },
        "managingEntity": { "$ref": "#/definitions/Reference"
        },
        "characteristic": { "items": { "$ref": "#/definitions/Group_Characteristic" }, "type": "array" },
        "member": { "items": { "$ref": "#/definitions/Group_Member" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Group_Characteristic": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "exclude": { "$ref": "#/definitions/boolean"
        },
        "_exclude": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "Group_Member": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "entity": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "inactive": { "$ref": "#/definitions/boolean"
        },
        "_inactive": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "entity"
      ]
    },
    "GuidanceResponse": {
      "properties": {
        "resourceType": {
          "const": "GuidanceResponse"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "requestIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "moduleUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_moduleUri": { "$ref": "#/definitions/Element"
        },
        "moduleCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_moduleCanonical": { "$ref": "#/definitions/Element"
        },
        "moduleCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "enum": [
            "success",
            "data-requested",
            "data-required",
            "in-progress",
            "failure",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": { "$ref": "#/definitions/dateTime"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "performer": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "evaluationMessage": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "outputParameters": { "$ref": "#/definitions/Reference"
        },
        "result": { "$ref": "#/definitions/Reference"
        },
        "dataRequirement": { "items": { "$ref": "#/definitions/DataRequirement" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "HealthcareService": {
      "properties": {
        "resourceType": {
          "const": "HealthcareService"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "providedBy": { "$ref": "#/definitions/Reference"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialty": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "location": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        },
        "extraDetails": { "$ref": "#/definitions/markdown"
        },
        "_extraDetails": { "$ref": "#/definitions/Element"
        },
        "photo": { "$ref": "#/definitions/Attachment"
        },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "coverageArea": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "serviceProvisionCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "eligibility": { "items": { "$ref": "#/definitions/HealthcareService_Eligibility" }, "type": "array" },
        "program": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "characteristic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "communication": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "referralMethod": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "appointmentRequired": { "$ref": "#/definitions/boolean"
        },
        "_appointmentRequired": { "$ref": "#/definitions/Element"
        },
        "availableTime": { "items": { "$ref": "#/definitions/HealthcareService_AvailableTime" }, "type": "array" },
        "notAvailable": { "items": { "$ref": "#/definitions/HealthcareService_NotAvailable" }, "type": "array" },
        "availabilityExceptions": { "$ref": "#/definitions/string"
        },
        "_availabilityExceptions": { "$ref": "#/definitions/Element"
        },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "HealthcareService_Eligibility": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "comment": { "$ref": "#/definitions/markdown"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "HealthcareService_AvailableTime": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "daysOfWeek": { "items": {
            "enum": [
              "mon",
              "tue",
              "wed",
              "thu",
              "fri",
              "sat",
              "sun"
            ] }, "type": "array" },
        "_daysOfWeek": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "allDay": { "$ref": "#/definitions/boolean"
        },
        "_allDay": { "$ref": "#/definitions/Element"
        },
        "availableStartTime": { "$ref": "#/definitions/time"
        },
        "_availableStartTime": { "$ref": "#/definitions/Element"
        },
        "availableEndTime": { "$ref": "#/definitions/time"
        },
        "_availableEndTime": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "HealthcareService_NotAvailable": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "during": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "ImagingStudy": {
      "properties": {
        "resourceType": {
          "const": "ImagingStudy"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "registered",
            "available",
            "cancelled",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "modality": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "started": { "$ref": "#/definitions/dateTime"
        },
        "_started": { "$ref": "#/definitions/Element"
        },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "referrer": { "$ref": "#/definitions/Reference"
        },
        "interpreter": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "numberOfSeries": { "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfSeries": { "$ref": "#/definitions/Element"
        },
        "numberOfInstances": { "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfInstances": { "$ref": "#/definitions/Element"
        },
        "procedureReference": { "$ref": "#/definitions/Reference"
        },
        "procedureCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "location": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "series": { "items": { "$ref": "#/definitions/ImagingStudy_Series" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "ImagingStudy_Series": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "uid": { "$ref": "#/definitions/id"
        },
        "_uid": { "$ref": "#/definitions/Element"
        },
        "number": { "$ref": "#/definitions/unsignedInt"
        },
        "_number": { "$ref": "#/definitions/Element"
        },
        "modality": { "$ref": "#/definitions/Coding"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "numberOfInstances": { "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfInstances": { "$ref": "#/definitions/Element"
        },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "bodySite": { "$ref": "#/definitions/Coding"
        },
        "laterality": { "$ref": "#/definitions/Coding"
        },
        "specimen": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "started": { "$ref": "#/definitions/dateTime"
        },
        "_started": { "$ref": "#/definitions/Element"
        },
        "performer": { "items": { "$ref": "#/definitions/ImagingStudy_Performer" }, "type": "array" },
        "instance": { "items": { "$ref": "#/definitions/ImagingStudy_Instance" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "modality"
      ]
    },
    "ImagingStudy_Performer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "function": { "$ref": "#/definitions/CodeableConcept"
        },
        "actor": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "ImagingStudy_Instance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "uid": { "$ref": "#/definitions/id"
        },
        "_uid": { "$ref": "#/definitions/Element"
        },
        "sopClass": { "$ref": "#/definitions/Coding"
        },
        "number": { "$ref": "#/definitions/unsignedInt"
        },
        "_number": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "sopClass"
      ]
    },
    "Immunization": {
      "properties": {
        "resourceType": {
          "const": "Immunization"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "vaccineCode": { "$ref": "#/definitions/CodeableConcept"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "occurrenceString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_occurrenceString": { "$ref": "#/definitions/Element"
        },
        "recorded": { "$ref": "#/definitions/dateTime"
        },
        "_recorded": { "$ref": "#/definitions/Element"
        },
        "primarySource": { "$ref": "#/definitions/boolean"
        },
        "_primarySource": { "$ref": "#/definitions/Element"
        },
        "reportOrigin": { "$ref": "#/definitions/CodeableConcept"
        },
        "location": { "$ref": "#/definitions/Reference"
        },
        "manufacturer": { "$ref": "#/definitions/Reference"
        },
        "lotNumber": { "$ref": "#/definitions/string"
        },
        "_lotNumber": { "$ref": "#/definitions/Element"
        },
        "expirationDate": { "$ref": "#/definitions/date"
        },
        "_expirationDate": { "$ref": "#/definitions/Element"
        },
        "site": { "$ref": "#/definitions/CodeableConcept"
        },
        "route": { "$ref": "#/definitions/CodeableConcept"
        },
        "doseQuantity": { "$ref": "#/definitions/Quantity"
        },
        "performer": { "items": { "$ref": "#/definitions/Immunization_Performer" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "isSubpotent": { "$ref": "#/definitions/boolean"
        },
        "_isSubpotent": { "$ref": "#/definitions/Element"
        },
        "subpotentReason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "education": { "items": { "$ref": "#/definitions/Immunization_Education" }, "type": "array" },
        "programEligibility": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "fundingSource": { "$ref": "#/definitions/CodeableConcept"
        },
        "reaction": { "items": { "$ref": "#/definitions/Immunization_Reaction" }, "type": "array" },
        "protocolApplied": { "items": { "$ref": "#/definitions/Immunization_ProtocolApplied" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "vaccineCode",
        "resourceType"
      ]
    },
    "Immunization_Performer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "function": { "$ref": "#/definitions/CodeableConcept"
        },
        "actor": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "Immunization_Education": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "documentType": { "$ref": "#/definitions/string"
        },
        "_documentType": { "$ref": "#/definitions/Element"
        },
        "reference": { "$ref": "#/definitions/uri"
        },
        "_reference": { "$ref": "#/definitions/Element"
        },
        "publicationDate": { "$ref": "#/definitions/dateTime"
        },
        "_publicationDate": { "$ref": "#/definitions/Element"
        },
        "presentationDate": { "$ref": "#/definitions/dateTime"
        },
        "_presentationDate": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Immunization_Reaction": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "detail": { "$ref": "#/definitions/Reference"
        },
        "reported": { "$ref": "#/definitions/boolean"
        },
        "_reported": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Immunization_ProtocolApplied": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "series": { "$ref": "#/definitions/string"
        },
        "_series": { "$ref": "#/definitions/Element"
        },
        "authority": { "$ref": "#/definitions/Reference"
        },
        "targetDisease": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "doseNumberPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_doseNumberPositiveInt": { "$ref": "#/definitions/Element"
        },
        "doseNumberString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_doseNumberString": { "$ref": "#/definitions/Element"
        },
        "seriesDosesPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_seriesDosesPositiveInt": { "$ref": "#/definitions/Element"
        },
        "seriesDosesString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_seriesDosesString": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ImmunizationEvaluation": {
      "properties": {
        "resourceType": {
          "const": "ImmunizationEvaluation"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "authority": { "$ref": "#/definitions/Reference"
        },
        "targetDisease": { "$ref": "#/definitions/CodeableConcept"
        },
        "immunizationEvent": { "$ref": "#/definitions/Reference"
        },
        "doseStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "doseStatusReason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "series": { "$ref": "#/definitions/string"
        },
        "_series": { "$ref": "#/definitions/Element"
        },
        "doseNumberPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_doseNumberPositiveInt": { "$ref": "#/definitions/Element"
        },
        "doseNumberString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_doseNumberString": { "$ref": "#/definitions/Element"
        },
        "seriesDosesPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_seriesDosesPositiveInt": { "$ref": "#/definitions/Element"
        },
        "seriesDosesString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_seriesDosesString": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "doseStatus",
        "patient",
        "targetDisease",
        "immunizationEvent",
        "resourceType"
      ]
    },
    "ImmunizationRecommendation": {
      "properties": {
        "resourceType": {
          "const": "ImmunizationRecommendation"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "authority": { "$ref": "#/definitions/Reference"
        },
        "recommendation": { "items": { "$ref": "#/definitions/ImmunizationRecommendation_Recommendation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "recommendation",
        "resourceType"
      ]
    },
    "ImmunizationRecommendation_Recommendation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "vaccineCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "targetDisease": { "$ref": "#/definitions/CodeableConcept"
        },
        "contraindicatedVaccineCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "forecastStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "forecastReason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "dateCriterion": { "items": { "$ref": "#/definitions/ImmunizationRecommendation_DateCriterion" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "series": { "$ref": "#/definitions/string"
        },
        "_series": { "$ref": "#/definitions/Element"
        },
        "doseNumberPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_doseNumberPositiveInt": { "$ref": "#/definitions/Element"
        },
        "doseNumberString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_doseNumberString": { "$ref": "#/definitions/Element"
        },
        "seriesDosesPositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_seriesDosesPositiveInt": { "$ref": "#/definitions/Element"
        },
        "seriesDosesString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_seriesDosesString": { "$ref": "#/definitions/Element"
        },
        "supportingImmunization": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "supportingPatientInformation": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "forecastStatus"
      ]
    },
    "ImmunizationRecommendation_DateCriterion": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "value": { "$ref": "#/definitions/dateTime"
        },
        "_value": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ImplementationGuide": {
      "properties": {
        "resourceType": {
          "const": "ImplementationGuide"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "packageId": { "$ref": "#/definitions/id"
        },
        "_packageId": { "$ref": "#/definitions/Element"
        },
        "license": {
          "enum": [
            "not-open-source",
            "0BSD",
            "AAL",
            "Abstyles",
            "Adobe-2006",
            "Adobe-Glyph",
            "ADSL",
            "AFL-1.1",
            "AFL-1.2",
            "AFL-2.0",
            "AFL-2.1",
            "AFL-3.0",
            "Afmparse",
            "AGPL-1.0-only",
            "AGPL-1.0-or-later",
            "AGPL-3.0-only",
            "AGPL-3.0-or-later",
            "Aladdin",
            "AMDPLPA",
            "AML",
            "AMPAS",
            "ANTLR-PD",
            "Apache-1.0",
            "Apache-1.1",
            "Apache-2.0",
            "APAFML",
            "APL-1.0",
            "APSL-1.0",
            "APSL-1.1",
            "APSL-1.2",
            "APSL-2.0",
            "Artistic-1.0-cl8",
            "Artistic-1.0-Perl",
            "Artistic-1.0",
            "Artistic-2.0",
            "Bahyph",
            "Barr",
            "Beerware",
            "BitTorrent-1.0",
            "BitTorrent-1.1",
            "Borceux",
            "BSD-1-Clause",
            "BSD-2-Clause-FreeBSD",
            "BSD-2-Clause-NetBSD",
            "BSD-2-Clause-Patent",
            "BSD-2-Clause",
            "BSD-3-Clause-Attribution",
            "BSD-3-Clause-Clear",
            "BSD-3-Clause-LBNL",
            "BSD-3-Clause-No-Nuclear-License-2014",
            "BSD-3-Clause-No-Nuclear-License",
            "BSD-3-Clause-No-Nuclear-Warranty",
            "BSD-3-Clause",
            "BSD-4-Clause-UC",
            "BSD-4-Clause",
            "BSD-Protection",
            "BSD-Source-Code",
            "BSL-1.0",
            "bzip2-1.0.5",
            "bzip2-1.0.6",
            "Caldera",
            "CATOSL-1.1",
            "CC-BY-1.0",
            "CC-BY-2.0",
            "CC-BY-2.5",
            "CC-BY-3.0",
            "CC-BY-4.0",
            "CC-BY-NC-1.0",
            "CC-BY-NC-2.0",
            "CC-BY-NC-2.5",
            "CC-BY-NC-3.0",
            "CC-BY-NC-4.0",
            "CC-BY-NC-ND-1.0",
            "CC-BY-NC-ND-2.0",
            "CC-BY-NC-ND-2.5",
            "CC-BY-NC-ND-3.0",
            "CC-BY-NC-ND-4.0",
            "CC-BY-NC-SA-1.0",
            "CC-BY-NC-SA-2.0",
            "CC-BY-NC-SA-2.5",
            "CC-BY-NC-SA-3.0",
            "CC-BY-NC-SA-4.0",
            "CC-BY-ND-1.0",
            "CC-BY-ND-2.0",
            "CC-BY-ND-2.5",
            "CC-BY-ND-3.0",
            "CC-BY-ND-4.0",
            "CC-BY-SA-1.0",
            "CC-BY-SA-2.0",
            "CC-BY-SA-2.5",
            "CC-BY-SA-3.0",
            "CC-BY-SA-4.0",
            "CC0-1.0",
            "CDDL-1.0",
            "CDDL-1.1",
            "CDLA-Permissive-1.0",
            "CDLA-Sharing-1.0",
            "CECILL-1.0",
            "CECILL-1.1",
            "CECILL-2.0",
            "CECILL-2.1",
            "CECILL-B",
            "CECILL-C",
            "ClArtistic",
            "CNRI-Jython",
            "CNRI-Python-GPL-Compatible",
            "CNRI-Python",
            "Condor-1.1",
            "CPAL-1.0",
            "CPL-1.0",
            "CPOL-1.02",
            "Crossword",
            "CrystalStacker",
            "CUA-OPL-1.0",
            "Cube",
            "curl",
            "D-FSL-1.0",
            "diffmark",
            "DOC",
            "Dotseqn",
            "DSDP",
            "dvipdfm",
            "ECL-1.0",
            "ECL-2.0",
            "EFL-1.0",
            "EFL-2.0",
            "eGenix",
            "Entessa",
            "EPL-1.0",
            "EPL-2.0",
            "ErlPL-1.1",
            "EUDatagrid",
            "EUPL-1.0",
            "EUPL-1.1",
            "EUPL-1.2",
            "Eurosym",
            "Fair",
            "Frameworx-1.0",
            "FreeImage",
            "FSFAP",
            "FSFUL",
            "FSFULLR",
            "FTL",
            "GFDL-1.1-only",
            "GFDL-1.1-or-later",
            "GFDL-1.2-only",
            "GFDL-1.2-or-later",
            "GFDL-1.3-only",
            "GFDL-1.3-or-later",
            "Giftware",
            "GL2PS",
            "Glide",
            "Glulxe",
            "gnuplot",
            "GPL-1.0-only",
            "GPL-1.0-or-later",
            "GPL-2.0-only",
            "GPL-2.0-or-later",
            "GPL-3.0-only",
            "GPL-3.0-or-later",
            "gSOAP-1.3b",
            "HaskellReport",
            "HPND",
            "IBM-pibs",
            "ICU",
            "IJG",
            "ImageMagick",
            "iMatix",
            "Imlib2",
            "Info-ZIP",
            "Intel-ACPI",
            "Intel",
            "Interbase-1.0",
            "IPA",
            "IPL-1.0",
            "ISC",
            "JasPer-2.0",
            "JSON",
            "LAL-1.2",
            "LAL-1.3",
            "Latex2e",
            "Leptonica",
            "LGPL-2.0-only",
            "LGPL-2.0-or-later",
            "LGPL-2.1-only",
            "LGPL-2.1-or-later",
            "LGPL-3.0-only",
            "LGPL-3.0-or-later",
            "LGPLLR",
            "Libpng",
            "libtiff",
            "LiLiQ-P-1.1",
            "LiLiQ-R-1.1",
            "LiLiQ-Rplus-1.1",
            "Linux-OpenIB",
            "LPL-1.0",
            "LPL-1.02",
            "LPPL-1.0",
            "LPPL-1.1",
            "LPPL-1.2",
            "LPPL-1.3a",
            "LPPL-1.3c",
            "MakeIndex",
            "MirOS",
            "MIT-0",
            "MIT-advertising",
            "MIT-CMU",
            "MIT-enna",
            "MIT-feh",
            "MIT",
            "MITNFA",
            "Motosoto",
            "mpich2",
            "MPL-1.0",
            "MPL-1.1",
            "MPL-2.0-no-copyleft-exception",
            "MPL-2.0",
            "MS-PL",
            "MS-RL",
            "MTLL",
            "Multics",
            "Mup",
            "NASA-1.3",
            "Naumen",
            "NBPL-1.0",
            "NCSA",
            "Net-SNMP",
            "NetCDF",
            "Newsletr",
            "NGPL",
            "NLOD-1.0",
            "NLPL",
            "Nokia",
            "NOSL",
            "Noweb",
            "NPL-1.0",
            "NPL-1.1",
            "NPOSL-3.0",
            "NRL",
            "NTP",
            "OCCT-PL",
            "OCLC-2.0",
            "ODbL-1.0",
            "OFL-1.0",
            "OFL-1.1",
            "OGTSL",
            "OLDAP-1.1",
            "OLDAP-1.2",
            "OLDAP-1.3",
            "OLDAP-1.4",
            "OLDAP-2.0.1",
            "OLDAP-2.0",
            "OLDAP-2.1",
            "OLDAP-2.2.1",
            "OLDAP-2.2.2",
            "OLDAP-2.2",
            "OLDAP-2.3",
            "OLDAP-2.4",
            "OLDAP-2.5",
            "OLDAP-2.6",
            "OLDAP-2.7",
            "OLDAP-2.8",
            "OML",
            "OpenSSL",
            "OPL-1.0",
            "OSET-PL-2.1",
            "OSL-1.0",
            "OSL-1.1",
            "OSL-2.0",
            "OSL-2.1",
            "OSL-3.0",
            "PDDL-1.0",
            "PHP-3.0",
            "PHP-3.01",
            "Plexus",
            "PostgreSQL",
            "psfrag",
            "psutils",
            "Python-2.0",
            "Qhull",
            "QPL-1.0",
            "Rdisc",
            "RHeCos-1.1",
            "RPL-1.1",
            "RPL-1.5",
            "RPSL-1.0",
            "RSA-MD",
            "RSCPL",
            "Ruby",
            "SAX-PD",
            "Saxpath",
            "SCEA",
            "Sendmail",
            "SGI-B-1.0",
            "SGI-B-1.1",
            "SGI-B-2.0",
            "SimPL-2.0",
            "SISSL-1.2",
            "SISSL",
            "Sleepycat",
            "SMLNJ",
            "SMPPL",
            "SNIA",
            "Spencer-86",
            "Spencer-94",
            "Spencer-99",
            "SPL-1.0",
            "SugarCRM-1.1.3",
            "SWL",
            "TCL",
            "TCP-wrappers",
            "TMate",
            "TORQUE-1.1",
            "TOSL",
            "Unicode-DFS-2015",
            "Unicode-DFS-2016",
            "Unicode-TOU",
            "Unlicense",
            "UPL-1.0",
            "Vim",
            "VOSTROM",
            "VSL-1.0",
            "W3C-19980720",
            "W3C-20150513",
            "W3C",
            "Watcom-1.0",
            "Wsuipa",
            "WTFPL",
            "X11",
            "Xerox",
            "XFree86-1.1",
            "xinetd",
            "Xnet",
            "xpp",
            "XSkat",
            "YPL-1.0",
            "YPL-1.1",
            "Zed",
            "Zend-2.0",
            "Zimbra-1.3",
            "Zimbra-1.4",
            "zlib-acknowledgement",
            "Zlib",
            "ZPL-1.1",
            "ZPL-2.0",
            "ZPL-2.1"
          ]
        },
        "_license": { "$ref": "#/definitions/Element"
        },
        "fhirVersion": { "items": {
            "enum": [
              "0.01",
              "0.05",
              "0.06",
              "0.11",
              "0.0.80",
              "0.0.81",
              "0.0.82",
              "0.4.0",
              "0.5.0",
              "1.0.0",
              "1.0.1",
              "1.0.2",
              "1.1.0",
              "1.4.0",
              "1.6.0",
              "1.8.0",
              "3.0.0",
              "3.0.1",
              "3.3.0",
              "3.5.0",
              "4.0.0",
              "4.0.1"
            ] }, "type": "array" },
        "_fhirVersion": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "dependsOn": { "items": { "$ref": "#/definitions/ImplementationGuide_DependsOn" }, "type": "array" },
        "global": { "items": { "$ref": "#/definitions/ImplementationGuide_Global" }, "type": "array" },
        "definition": { "$ref": "#/definitions/ImplementationGuide_Definition"
        },
        "manifest": { "$ref": "#/definitions/ImplementationGuide_Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ImplementationGuide_DependsOn": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "uri": { "$ref": "#/definitions/canonical"
        },
        "packageId": { "$ref": "#/definitions/id"
        },
        "_packageId": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "uri"
      ]
    },
    "ImplementationGuide_Global": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "ImplementationGuide_Definition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "grouping": { "items": { "$ref": "#/definitions/ImplementationGuide_Grouping" }, "type": "array" },
        "resource": { "items": { "$ref": "#/definitions/ImplementationGuide_Resource" }, "type": "array" },
        "page": { "$ref": "#/definitions/ImplementationGuide_Page"
        },
        "parameter": { "items": { "$ref": "#/definitions/ImplementationGuide_Parameter" }, "type": "array" },
        "template": { "items": { "$ref": "#/definitions/ImplementationGuide_Template" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resource"
      ]
    },
    "ImplementationGuide_Grouping": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ImplementationGuide_Resource": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "reference": { "$ref": "#/definitions/Reference"
        },
        "fhirVersion": { "items": {
            "enum": [
              "0.01",
              "0.05",
              "0.06",
              "0.11",
              "0.0.80",
              "0.0.81",
              "0.0.82",
              "0.4.0",
              "0.5.0",
              "1.0.0",
              "1.0.1",
              "1.0.2",
              "1.1.0",
              "1.4.0",
              "1.6.0",
              "1.8.0",
              "3.0.0",
              "3.0.1",
              "3.3.0",
              "3.5.0",
              "4.0.0",
              "4.0.1"
            ] }, "type": "array" },
        "_fhirVersion": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "exampleBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_exampleBoolean": { "$ref": "#/definitions/Element"
        },
        "exampleCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_exampleCanonical": { "$ref": "#/definitions/Element"
        },
        "groupingId": { "$ref": "#/definitions/id"
        },
        "_groupingId": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "ImplementationGuide_Page": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "nameUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_nameUrl": { "$ref": "#/definitions/Element"
        },
        "nameReference": { "$ref": "#/definitions/Reference"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "generation": {
          "enum": [
            "html",
            "markdown",
            "xml",
            "generated"
          ]
        },
        "_generation": { "$ref": "#/definitions/Element"
        },
        "page": { "items": { "$ref": "#/definitions/ImplementationGuide_Page" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ImplementationGuide_Parameter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "enum": [
            "apply",
            "path-resource",
            "path-pages",
            "path-tx-cache",
            "expansion-parameter",
            "rule-broken-links",
            "generate-xml",
            "generate-json",
            "generate-turtle",
            "html-template"
          ]
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ImplementationGuide_Template": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "source": { "$ref": "#/definitions/string"
        },
        "_source": { "$ref": "#/definitions/Element"
        },
        "scope": { "$ref": "#/definitions/string"
        },
        "_scope": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ImplementationGuide_Manifest": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "rendering": { "$ref": "#/definitions/url"
        },
        "_rendering": { "$ref": "#/definitions/Element"
        },
        "resource": { "items": { "$ref": "#/definitions/ImplementationGuide_Resource1" }, "type": "array" },
        "page": { "items": { "$ref": "#/definitions/ImplementationGuide_Page1" }, "type": "array" },
        "image": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_image": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "other": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_other": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resource"
      ]
    },
    "ImplementationGuide_Resource1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "reference": { "$ref": "#/definitions/Reference"
        },
        "exampleBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_exampleBoolean": { "$ref": "#/definitions/Element"
        },
        "exampleCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_exampleCanonical": { "$ref": "#/definitions/Element"
        },
        "relativePath": { "$ref": "#/definitions/url"
        },
        "_relativePath": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "reference"
      ]
    },
    "ImplementationGuide_Page1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "anchor": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_anchor": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "InsurancePlan": {
      "properties": {
        "resourceType": {
          "const": "InsurancePlan"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "alias": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_alias": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "ownedBy": { "$ref": "#/definitions/Reference"
        },
        "administeredBy": { "$ref": "#/definitions/Reference"
        },
        "coverageArea": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "contact": { "items": { "$ref": "#/definitions/InsurancePlan_Contact" }, "type": "array" },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "network": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "coverage": { "items": { "$ref": "#/definitions/InsurancePlan_Coverage" }, "type": "array" },
        "plan": { "items": { "$ref": "#/definitions/InsurancePlan_Plan" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "InsurancePlan_Contact": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/CodeableConcept"
        },
        "name": { "$ref": "#/definitions/HumanName"
        },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "address": { "$ref": "#/definitions/Address"
        }
      },
      "additionalProperties": false
    },
    "InsurancePlan_Coverage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "network": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "benefit": { "items": { "$ref": "#/definitions/InsurancePlan_Benefit" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "benefit"
      ]
    },
    "InsurancePlan_Benefit": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "requirement": { "$ref": "#/definitions/string"
        },
        "_requirement": { "$ref": "#/definitions/Element"
        },
        "limit": { "items": { "$ref": "#/definitions/InsurancePlan_Limit" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "InsurancePlan_Limit": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/Quantity"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "InsurancePlan_Plan": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "coverageArea": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "network": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "generalCost": { "items": { "$ref": "#/definitions/InsurancePlan_GeneralCost" }, "type": "array" },
        "specificCost": { "items": { "$ref": "#/definitions/InsurancePlan_SpecificCost" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "InsurancePlan_GeneralCost": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "groupSize": { "$ref": "#/definitions/positiveInt"
        },
        "_groupSize": { "$ref": "#/definitions/Element"
        },
        "cost": { "$ref": "#/definitions/Money"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "InsurancePlan_SpecificCost": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "benefit": { "items": { "$ref": "#/definitions/InsurancePlan_Benefit1" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "category"
      ]
    },
    "InsurancePlan_Benefit1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "cost": { "items": { "$ref": "#/definitions/InsurancePlan_Cost" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "InsurancePlan_Cost": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "applicability": { "$ref": "#/definitions/CodeableConcept"
        },
        "qualifiers": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "value": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Invoice": {
      "properties": {
        "resourceType": {
          "const": "Invoice"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "draft",
            "issued",
            "balanced",
            "cancelled",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "cancelledReason": { "$ref": "#/definitions/string"
        },
        "_cancelledReason": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "recipient": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "participant": { "items": { "$ref": "#/definitions/Invoice_Participant" }, "type": "array" },
        "issuer": { "$ref": "#/definitions/Reference"
        },
        "account": { "$ref": "#/definitions/Reference"
        },
        "lineItem": { "items": { "$ref": "#/definitions/Invoice_LineItem" }, "type": "array" },
        "totalPriceComponent": { "items": { "$ref": "#/definitions/Invoice_PriceComponent" }, "type": "array" },
        "totalNet": { "$ref": "#/definitions/Money"
        },
        "totalGross": { "$ref": "#/definitions/Money"
        },
        "paymentTerms": { "$ref": "#/definitions/markdown"
        },
        "_paymentTerms": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Invoice_Participant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "role": { "$ref": "#/definitions/CodeableConcept"
        },
        "actor": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "Invoice_LineItem": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequence": { "$ref": "#/definitions/positiveInt"
        },
        "_sequence": { "$ref": "#/definitions/Element"
        },
        "chargeItemReference": { "$ref": "#/definitions/Reference"
        },
        "chargeItemCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "priceComponent": { "items": { "$ref": "#/definitions/Invoice_PriceComponent" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Invoice_PriceComponent": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "base",
            "surcharge",
            "deduction",
            "discount",
            "tax",
            "informational"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "factor": { "$ref": "#/definitions/decimal"
        },
        "_factor": { "$ref": "#/definitions/Element"
        },
        "amount": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false
    },
    "Library": {
      "properties": {
        "resourceType": {
          "const": "Library"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "parameter": { "items": { "$ref": "#/definitions/ParameterDefinition" }, "type": "array" },
        "dataRequirement": { "items": { "$ref": "#/definitions/DataRequirement" }, "type": "array" },
        "content": { "items": { "$ref": "#/definitions/Attachment" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "resourceType"
      ]
    },
    "Linkage": {
      "properties": {
        "resourceType": {
          "const": "Linkage"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "author": { "$ref": "#/definitions/Reference"
        },
        "item": { "items": { "$ref": "#/definitions/Linkage_Item" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "item",
        "resourceType"
      ]
    },
    "Linkage_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "source",
            "alternate",
            "historical"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "resource": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resource"
      ]
    },
    "List": {
      "properties": {
        "resourceType": {
          "const": "List"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "current",
            "retired",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "mode": {
          "enum": [
            "working",
            "snapshot",
            "changes"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "source": { "$ref": "#/definitions/Reference"
        },
        "orderedBy": { "$ref": "#/definitions/CodeableConcept"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "entry": { "items": { "$ref": "#/definitions/List_Entry" }, "type": "array" },
        "emptyReason": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "List_Entry": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "flag": { "$ref": "#/definitions/CodeableConcept"
        },
        "deleted": { "$ref": "#/definitions/boolean"
        },
        "_deleted": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "item": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "item"
      ]
    },
    "Location": {
      "properties": {
        "resourceType": {
          "const": "Location"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "suspended",
            "inactive"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "operationalStatus": { "$ref": "#/definitions/Coding"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "alias": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_alias": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "mode": {
          "enum": [
            "instance",
            "kind"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "address": { "$ref": "#/definitions/Address"
        },
        "physicalType": { "$ref": "#/definitions/CodeableConcept"
        },
        "position": { "$ref": "#/definitions/Location_Position"
        },
        "managingOrganization": { "$ref": "#/definitions/Reference"
        },
        "partOf": { "$ref": "#/definitions/Reference"
        },
        "hoursOfOperation": { "items": { "$ref": "#/definitions/Location_HoursOfOperation" }, "type": "array" },
        "availabilityExceptions": { "$ref": "#/definitions/string"
        },
        "_availabilityExceptions": { "$ref": "#/definitions/Element"
        },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Location_Position": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "longitude": { "$ref": "#/definitions/decimal"
        },
        "_longitude": { "$ref": "#/definitions/Element"
        },
        "latitude": { "$ref": "#/definitions/decimal"
        },
        "_latitude": { "$ref": "#/definitions/Element"
        },
        "altitude": { "$ref": "#/definitions/decimal"
        },
        "_altitude": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Location_HoursOfOperation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "daysOfWeek": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_daysOfWeek": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "allDay": { "$ref": "#/definitions/boolean"
        },
        "_allDay": { "$ref": "#/definitions/Element"
        },
        "openingTime": { "$ref": "#/definitions/time"
        },
        "_openingTime": { "$ref": "#/definitions/Element"
        },
        "closingTime": { "$ref": "#/definitions/time"
        },
        "_closingTime": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Measure": {
      "properties": {
        "resourceType": {
          "const": "Measure"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "library": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "disclaimer": { "$ref": "#/definitions/markdown"
        },
        "_disclaimer": { "$ref": "#/definitions/Element"
        },
        "scoring": { "$ref": "#/definitions/CodeableConcept"
        },
        "compositeScoring": { "$ref": "#/definitions/CodeableConcept"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "riskAdjustment": { "$ref": "#/definitions/string"
        },
        "_riskAdjustment": { "$ref": "#/definitions/Element"
        },
        "rateAggregation": { "$ref": "#/definitions/string"
        },
        "_rateAggregation": { "$ref": "#/definitions/Element"
        },
        "rationale": { "$ref": "#/definitions/markdown"
        },
        "_rationale": { "$ref": "#/definitions/Element"
        },
        "clinicalRecommendationStatement": { "$ref": "#/definitions/markdown"
        },
        "_clinicalRecommendationStatement": { "$ref": "#/definitions/Element"
        },
        "improvementNotation": { "$ref": "#/definitions/CodeableConcept"
        },
        "definition": { "items": { "$ref": "#/definitions/markdown" }, "type": "array" },
        "_definition": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "guidance": { "$ref": "#/definitions/markdown"
        },
        "_guidance": { "$ref": "#/definitions/Element"
        },
        "group": { "items": { "$ref": "#/definitions/Measure_Group" }, "type": "array" },
        "supplementalData": { "items": { "$ref": "#/definitions/Measure_SupplementalData" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Measure_Group": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "population": { "items": { "$ref": "#/definitions/Measure_Population" }, "type": "array" },
        "stratifier": { "items": { "$ref": "#/definitions/Measure_Stratifier" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Measure_Population": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "criteria": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false,
      "required": [
        "criteria"
      ]
    },
    "Measure_Stratifier": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "criteria": { "$ref": "#/definitions/Expression"
        },
        "component": { "items": { "$ref": "#/definitions/Measure_Component" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Measure_Component": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "criteria": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false,
      "required": [
        "criteria"
      ]
    },
    "Measure_SupplementalData": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "usage": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "criteria": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false,
      "required": [
        "criteria"
      ]
    },
    "MeasureReport": {
      "properties": {
        "resourceType": {
          "const": "MeasureReport"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "complete",
            "pending",
            "error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "individual",
            "subject-list",
            "summary",
            "data-collection"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "measure": { "$ref": "#/definitions/canonical"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "reporter": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "improvementNotation": { "$ref": "#/definitions/CodeableConcept"
        },
        "group": { "items": { "$ref": "#/definitions/MeasureReport_Group" }, "type": "array" },
        "evaluatedResource": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "period",
        "measure",
        "resourceType"
      ]
    },
    "MeasureReport_Group": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "population": { "items": { "$ref": "#/definitions/MeasureReport_Population" }, "type": "array" },
        "measureScore": { "$ref": "#/definitions/Quantity"
        },
        "stratifier": { "items": { "$ref": "#/definitions/MeasureReport_Stratifier" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "MeasureReport_Population": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "count": { "$ref": "#/definitions/integer"
        },
        "_count": { "$ref": "#/definitions/Element"
        },
        "subjectResults": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "MeasureReport_Stratifier": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "stratum": { "items": { "$ref": "#/definitions/MeasureReport_Stratum" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "MeasureReport_Stratum": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "value": { "$ref": "#/definitions/CodeableConcept"
        },
        "component": { "items": { "$ref": "#/definitions/MeasureReport_Component" }, "type": "array" },
        "population": { "items": { "$ref": "#/definitions/MeasureReport_Population1" }, "type": "array" },
        "measureScore": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "MeasureReport_Component": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "value": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "value"
      ]
    },
    "MeasureReport_Population1": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "count": { "$ref": "#/definitions/integer"
        },
        "_count": { "$ref": "#/definitions/Element"
        },
        "subjectResults": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Media": {
      "properties": {
        "resourceType": {
          "const": "Media"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "modality": { "$ref": "#/definitions/CodeableConcept"
        },
        "view": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "createdDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_createdDateTime": { "$ref": "#/definitions/Element"
        },
        "createdPeriod": { "$ref": "#/definitions/Period"
        },
        "issued": { "$ref": "#/definitions/instant"
        },
        "_issued": { "$ref": "#/definitions/Element"
        },
        "operator": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "deviceName": { "$ref": "#/definitions/string"
        },
        "_deviceName": { "$ref": "#/definitions/Element"
        },
        "device": { "$ref": "#/definitions/Reference"
        },
        "height": { "$ref": "#/definitions/positiveInt"
        },
        "_height": { "$ref": "#/definitions/Element"
        },
        "width": { "$ref": "#/definitions/positiveInt"
        },
        "_width": { "$ref": "#/definitions/Element"
        },
        "frames": { "$ref": "#/definitions/positiveInt"
        },
        "_frames": { "$ref": "#/definitions/Element"
        },
        "duration": { "$ref": "#/definitions/decimal"
        },
        "_duration": { "$ref": "#/definitions/Element"
        },
        "content": { "$ref": "#/definitions/Attachment"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "content",
        "resourceType"
      ]
    },
    "Medication": {
      "properties": {
        "resourceType": {
          "const": "Medication"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "manufacturer": { "$ref": "#/definitions/Reference"
        },
        "form": { "$ref": "#/definitions/CodeableConcept"
        },
        "amount": { "$ref": "#/definitions/Ratio"
        },
        "ingredient": { "items": { "$ref": "#/definitions/Medication_Ingredient" }, "type": "array" },
        "batch": { "$ref": "#/definitions/Medication_Batch"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Medication_Ingredient": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": { "$ref": "#/definitions/Reference"
        },
        "isActive": { "$ref": "#/definitions/boolean"
        },
        "_isActive": { "$ref": "#/definitions/Element"
        },
        "strength": { "$ref": "#/definitions/Ratio"
        }
      },
      "additionalProperties": false
    },
    "Medication_Batch": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "lotNumber": { "$ref": "#/definitions/string"
        },
        "_lotNumber": { "$ref": "#/definitions/Element"
        },
        "expirationDate": { "$ref": "#/definitions/dateTime"
        },
        "_expirationDate": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MedicationAdministration": {
      "properties": {
        "resourceType": {
          "const": "MedicationAdministration"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiates": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiates": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": { "$ref": "#/definitions/Reference"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "context": { "$ref": "#/definitions/Reference"
        },
        "supportingInformation": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "effectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_effectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "performer": { "items": { "$ref": "#/definitions/MedicationAdministration_Performer" }, "type": "array" },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "request": { "$ref": "#/definitions/Reference"
        },
        "device": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "dosage": { "$ref": "#/definitions/MedicationAdministration_Dosage"
        },
        "eventHistory": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "MedicationAdministration_Performer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "function": { "$ref": "#/definitions/CodeableConcept"
        },
        "actor": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "MedicationAdministration_Dosage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "site": { "$ref": "#/definitions/CodeableConcept"
        },
        "route": { "$ref": "#/definitions/CodeableConcept"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        },
        "dose": { "$ref": "#/definitions/Quantity"
        },
        "rateRatio": { "$ref": "#/definitions/Ratio"
        },
        "rateQuantity": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "MedicationDispense": {
      "properties": {
        "resourceType": {
          "const": "MedicationDispense"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReasonCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "statusReasonReference": { "$ref": "#/definitions/Reference"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": { "$ref": "#/definitions/Reference"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "context": { "$ref": "#/definitions/Reference"
        },
        "supportingInformation": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "performer": { "items": { "$ref": "#/definitions/MedicationDispense_Performer" }, "type": "array" },
        "location": { "$ref": "#/definitions/Reference"
        },
        "authorizingPrescription": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "daysSupply": { "$ref": "#/definitions/Quantity"
        },
        "whenPrepared": { "$ref": "#/definitions/dateTime"
        },
        "_whenPrepared": { "$ref": "#/definitions/Element"
        },
        "whenHandedOver": { "$ref": "#/definitions/dateTime"
        },
        "_whenHandedOver": { "$ref": "#/definitions/Element"
        },
        "destination": { "$ref": "#/definitions/Reference"
        },
        "receiver": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "dosageInstruction": { "items": { "$ref": "#/definitions/Dosage" }, "type": "array" },
        "substitution": { "$ref": "#/definitions/MedicationDispense_Substitution"
        },
        "detectedIssue": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "eventHistory": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MedicationDispense_Performer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "function": { "$ref": "#/definitions/CodeableConcept"
        },
        "actor": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "MedicationDispense_Substitution": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "wasSubstituted": { "$ref": "#/definitions/boolean"
        },
        "_wasSubstituted": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "reason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "responsibleParty": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge": {
      "properties": {
        "resourceType": {
          "const": "MedicationKnowledge"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "manufacturer": { "$ref": "#/definitions/Reference"
        },
        "doseForm": { "$ref": "#/definitions/CodeableConcept"
        },
        "amount": { "$ref": "#/definitions/Quantity"
        },
        "synonym": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_synonym": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "relatedMedicationKnowledge": { "items": { "$ref": "#/definitions/MedicationKnowledge_RelatedMedicationKnowledge" }, "type": "array" },
        "associatedMedication": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "productType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "monograph": { "items": { "$ref": "#/definitions/MedicationKnowledge_Monograph" }, "type": "array" },
        "ingredient": { "items": { "$ref": "#/definitions/MedicationKnowledge_Ingredient" }, "type": "array" },
        "preparationInstruction": { "$ref": "#/definitions/markdown"
        },
        "_preparationInstruction": { "$ref": "#/definitions/Element"
        },
        "intendedRoute": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "cost": { "items": { "$ref": "#/definitions/MedicationKnowledge_Cost" }, "type": "array" },
        "monitoringProgram": { "items": { "$ref": "#/definitions/MedicationKnowledge_MonitoringProgram" }, "type": "array" },
        "administrationGuidelines": { "items": { "$ref": "#/definitions/MedicationKnowledge_AdministrationGuidelines" }, "type": "array" },
        "medicineClassification": { "items": { "$ref": "#/definitions/MedicationKnowledge_MedicineClassification" }, "type": "array" },
        "packaging": { "$ref": "#/definitions/MedicationKnowledge_Packaging"
        },
        "drugCharacteristic": { "items": { "$ref": "#/definitions/MedicationKnowledge_DrugCharacteristic" }, "type": "array" },
        "contraindication": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "regulatory": { "items": { "$ref": "#/definitions/MedicationKnowledge_Regulatory" }, "type": "array" },
        "kinetics": { "items": { "$ref": "#/definitions/MedicationKnowledge_Kinetics" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MedicationKnowledge_RelatedMedicationKnowledge": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "reference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "reference",
        "type"
      ]
    },
    "MedicationKnowledge_Monograph": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "source": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge_Ingredient": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": { "$ref": "#/definitions/Reference"
        },
        "isActive": { "$ref": "#/definitions/boolean"
        },
        "_isActive": { "$ref": "#/definitions/Element"
        },
        "strength": { "$ref": "#/definitions/Ratio"
        }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge_Cost": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "source": { "$ref": "#/definitions/string"
        },
        "_source": { "$ref": "#/definitions/Element"
        },
        "cost": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false,
      "required": [
        "cost",
        "type"
      ]
    },
    "MedicationKnowledge_MonitoringProgram": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge_AdministrationGuidelines": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "dosage": { "items": { "$ref": "#/definitions/MedicationKnowledge_Dosage" }, "type": "array" },
        "indicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "indicationReference": { "$ref": "#/definitions/Reference"
        },
        "patientCharacteristics": { "items": { "$ref": "#/definitions/MedicationKnowledge_PatientCharacteristics" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge_Dosage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "dosage": { "items": { "$ref": "#/definitions/Dosage" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "dosage",
        "type"
      ]
    },
    "MedicationKnowledge_PatientCharacteristics": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "characteristicCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "characteristicQuantity": { "$ref": "#/definitions/Quantity"
        },
        "value": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_value": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge_MedicineClassification": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "classification": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicationKnowledge_Packaging": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge_DrugCharacteristic": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_valueBase64Binary": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MedicationKnowledge_Regulatory": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "regulatoryAuthority": { "$ref": "#/definitions/Reference"
        },
        "substitution": { "items": { "$ref": "#/definitions/MedicationKnowledge_Substitution" }, "type": "array" },
        "schedule": { "items": { "$ref": "#/definitions/MedicationKnowledge_Schedule" }, "type": "array" },
        "maxDispense": { "$ref": "#/definitions/MedicationKnowledge_MaxDispense"
        }
      },
      "additionalProperties": false,
      "required": [
        "regulatoryAuthority"
      ]
    },
    "MedicationKnowledge_Substitution": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "allowed": { "$ref": "#/definitions/boolean"
        },
        "_allowed": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicationKnowledge_Schedule": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "schedule": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "schedule"
      ]
    },
    "MedicationKnowledge_MaxDispense": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "period": { "$ref": "#/definitions/Duration"
        }
      },
      "additionalProperties": false,
      "required": [
        "quantity"
      ]
    },
    "MedicationKnowledge_Kinetics": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "areaUnderCurve": { "items": { "$ref": "#/definitions/Quantity" }, "type": "array" },
        "lethalDose50": { "items": { "$ref": "#/definitions/Quantity" }, "type": "array" },
        "halfLifePeriod": { "$ref": "#/definitions/Duration"
        }
      },
      "additionalProperties": false
    },
    "MedicationRequest": {
      "properties": {
        "resourceType": {
          "const": "MedicationRequest"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "intent": { "$ref": "#/definitions/code"
        },
        "_intent": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "doNotPerform": { "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": { "$ref": "#/definitions/Element"
        },
        "reportedBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_reportedBoolean": { "$ref": "#/definitions/Element"
        },
        "reportedReference": { "$ref": "#/definitions/Reference"
        },
        "medicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": { "$ref": "#/definitions/Reference"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "supportingInformation": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "authoredOn": { "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": { "$ref": "#/definitions/Element"
        },
        "requester": { "$ref": "#/definitions/Reference"
        },
        "performer": { "$ref": "#/definitions/Reference"
        },
        "performerType": { "$ref": "#/definitions/CodeableConcept"
        },
        "recorder": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "_instantiatesCanonical": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "groupIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "courseOfTherapyType": { "$ref": "#/definitions/CodeableConcept"
        },
        "insurance": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "dosageInstruction": { "items": { "$ref": "#/definitions/Dosage" }, "type": "array" },
        "dispenseRequest": { "$ref": "#/definitions/MedicationRequest_DispenseRequest"
        },
        "substitution": { "$ref": "#/definitions/MedicationRequest_Substitution"
        },
        "priorPrescription": { "$ref": "#/definitions/Reference"
        },
        "detectedIssue": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "eventHistory": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "MedicationRequest_DispenseRequest": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "initialFill": { "$ref": "#/definitions/MedicationRequest_InitialFill"
        },
        "dispenseInterval": { "$ref": "#/definitions/Duration"
        },
        "validityPeriod": { "$ref": "#/definitions/Period"
        },
        "numberOfRepeatsAllowed": { "$ref": "#/definitions/unsignedInt"
        },
        "_numberOfRepeatsAllowed": { "$ref": "#/definitions/Element"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "expectedSupplyDuration": { "$ref": "#/definitions/Duration"
        },
        "performer": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "MedicationRequest_InitialFill": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "duration": { "$ref": "#/definitions/Duration"
        }
      },
      "additionalProperties": false
    },
    "MedicationRequest_Substitution": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "allowedBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_allowedBoolean": { "$ref": "#/definitions/Element"
        },
        "allowedCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "reason": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "MedicationStatement": {
      "properties": {
        "resourceType": {
          "const": "MedicationStatement"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": { "$ref": "#/definitions/Reference"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "context": { "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_effectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "dateAsserted": { "$ref": "#/definitions/dateTime"
        },
        "_dateAsserted": { "$ref": "#/definitions/Element"
        },
        "informationSource": { "$ref": "#/definitions/Reference"
        },
        "derivedFrom": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "dosage": { "items": { "$ref": "#/definitions/Dosage" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "MedicinalProduct": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProduct"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "domain": { "$ref": "#/definitions/Coding"
        },
        "combinedPharmaceuticalDoseForm": { "$ref": "#/definitions/CodeableConcept"
        },
        "legalStatusOfSupply": { "$ref": "#/definitions/CodeableConcept"
        },
        "additionalMonitoringIndicator": { "$ref": "#/definitions/CodeableConcept"
        },
        "specialMeasures": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_specialMeasures": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "paediatricUseIndicator": { "$ref": "#/definitions/CodeableConcept"
        },
        "productClassification": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "marketingStatus": { "items": { "$ref": "#/definitions/MarketingStatus" }, "type": "array" },
        "pharmaceuticalProduct": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "packagedMedicinalProduct": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "attachedDocument": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "masterFile": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "contact": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "clinicalTrial": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "name": { "items": { "$ref": "#/definitions/MedicinalProduct_Name" }, "type": "array" },
        "crossReference": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "manufacturingBusinessOperation": { "items": { "$ref": "#/definitions/MedicinalProduct_ManufacturingBusinessOperation" }, "type": "array" },
        "specialDesignation": { "items": { "$ref": "#/definitions/MedicinalProduct_SpecialDesignation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "resourceType"
      ]
    },
    "MedicinalProduct_Name": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "productName": { "$ref": "#/definitions/string"
        },
        "_productName": { "$ref": "#/definitions/Element"
        },
        "namePart": { "items": { "$ref": "#/definitions/MedicinalProduct_NamePart" }, "type": "array" },
        "countryLanguage": { "items": { "$ref": "#/definitions/MedicinalProduct_CountryLanguage" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "MedicinalProduct_NamePart": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "part": { "$ref": "#/definitions/string"
        },
        "_part": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/Coding"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicinalProduct_CountryLanguage": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "country": { "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdiction": { "$ref": "#/definitions/CodeableConcept"
        },
        "language": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "country",
        "language"
      ]
    },
    "MedicinalProduct_ManufacturingBusinessOperation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "operationType": { "$ref": "#/definitions/CodeableConcept"
        },
        "authorisationReferenceNumber": { "$ref": "#/definitions/Identifier"
        },
        "effectiveDate": { "$ref": "#/definitions/dateTime"
        },
        "_effectiveDate": { "$ref": "#/definitions/Element"
        },
        "confidentialityIndicator": { "$ref": "#/definitions/CodeableConcept"
        },
        "manufacturer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "regulator": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "MedicinalProduct_SpecialDesignation": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "intendedUse": { "$ref": "#/definitions/CodeableConcept"
        },
        "indicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "indicationReference": { "$ref": "#/definitions/Reference"
        },
        "status": { "$ref": "#/definitions/CodeableConcept"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "species": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "MedicinalProductAuthorization": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductAuthorization"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "country": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "status": { "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": { "$ref": "#/definitions/dateTime"
        },
        "_statusDate": { "$ref": "#/definitions/Element"
        },
        "restoreDate": { "$ref": "#/definitions/dateTime"
        },
        "_restoreDate": { "$ref": "#/definitions/Element"
        },
        "validityPeriod": { "$ref": "#/definitions/Period"
        },
        "dataExclusivityPeriod": { "$ref": "#/definitions/Period"
        },
        "dateOfFirstAuthorization": { "$ref": "#/definitions/dateTime"
        },
        "_dateOfFirstAuthorization": { "$ref": "#/definitions/Element"
        },
        "internationalBirthDate": { "$ref": "#/definitions/dateTime"
        },
        "_internationalBirthDate": { "$ref": "#/definitions/Element"
        },
        "legalBasis": { "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdictionalAuthorization": { "items": { "$ref": "#/definitions/MedicinalProductAuthorization_JurisdictionalAuthorization" }, "type": "array" },
        "holder": { "$ref": "#/definitions/Reference"
        },
        "regulator": { "$ref": "#/definitions/Reference"
        },
        "procedure": { "$ref": "#/definitions/MedicinalProductAuthorization_Procedure"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MedicinalProductAuthorization_JurisdictionalAuthorization": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "country": { "$ref": "#/definitions/CodeableConcept"
        },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "legalStatusOfSupply": { "$ref": "#/definitions/CodeableConcept"
        },
        "validityPeriod": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "MedicinalProductAuthorization_Procedure": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "datePeriod": { "$ref": "#/definitions/Period"
        },
        "dateDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_dateDateTime": { "$ref": "#/definitions/Element"
        },
        "application": { "items": { "$ref": "#/definitions/MedicinalProductAuthorization_Procedure" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "MedicinalProductContraindication": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductContraindication"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "subject": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "disease": { "$ref": "#/definitions/CodeableConcept"
        },
        "diseaseStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "comorbidity": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "therapeuticIndication": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "otherTherapy": { "items": { "$ref": "#/definitions/MedicinalProductContraindication_OtherTherapy" }, "type": "array" },
        "population": { "items": { "$ref": "#/definitions/Population" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MedicinalProductContraindication_OtherTherapy": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "therapyRelationshipType": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "therapyRelationshipType"
      ]
    },
    "MedicinalProductIndication": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductIndication"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "subject": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "diseaseSymptomProcedure": { "$ref": "#/definitions/CodeableConcept"
        },
        "diseaseStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "comorbidity": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "intendedEffect": { "$ref": "#/definitions/CodeableConcept"
        },
        "duration": { "$ref": "#/definitions/Quantity"
        },
        "otherTherapy": { "items": { "$ref": "#/definitions/MedicinalProductIndication_OtherTherapy" }, "type": "array" },
        "undesirableEffect": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "population": { "items": { "$ref": "#/definitions/Population" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MedicinalProductIndication_OtherTherapy": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "therapyRelationshipType": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "medicationReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "therapyRelationshipType"
      ]
    },
    "MedicinalProductIngredient": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductIngredient"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "role": { "$ref": "#/definitions/CodeableConcept"
        },
        "allergenicIndicator": { "$ref": "#/definitions/boolean"
        },
        "_allergenicIndicator": { "$ref": "#/definitions/Element"
        },
        "manufacturer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "specifiedSubstance": { "items": { "$ref": "#/definitions/MedicinalProductIngredient_SpecifiedSubstance" }, "type": "array" },
        "substance": { "$ref": "#/definitions/MedicinalProductIngredient_Substance"
        }
      },
      "additionalProperties": false,
      "required": [
        "role",
        "resourceType"
      ]
    },
    "MedicinalProductIngredient_SpecifiedSubstance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "group": { "$ref": "#/definitions/CodeableConcept"
        },
        "confidentiality": { "$ref": "#/definitions/CodeableConcept"
        },
        "strength": { "items": { "$ref": "#/definitions/MedicinalProductIngredient_Strength" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "group"
      ]
    },
    "MedicinalProductIngredient_Strength": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "presentation": { "$ref": "#/definitions/Ratio"
        },
        "presentationLowLimit": { "$ref": "#/definitions/Ratio"
        },
        "concentration": { "$ref": "#/definitions/Ratio"
        },
        "concentrationLowLimit": { "$ref": "#/definitions/Ratio"
        },
        "measurementPoint": { "$ref": "#/definitions/string"
        },
        "_measurementPoint": { "$ref": "#/definitions/Element"
        },
        "country": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "referenceStrength": { "items": { "$ref": "#/definitions/MedicinalProductIngredient_ReferenceStrength" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "presentation"
      ]
    },
    "MedicinalProductIngredient_ReferenceStrength": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "substance": { "$ref": "#/definitions/CodeableConcept"
        },
        "strength": { "$ref": "#/definitions/Ratio"
        },
        "strengthLowLimit": { "$ref": "#/definitions/Ratio"
        },
        "measurementPoint": { "$ref": "#/definitions/string"
        },
        "_measurementPoint": { "$ref": "#/definitions/Element"
        },
        "country": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "strength"
      ]
    },
    "MedicinalProductIngredient_Substance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "strength": { "items": { "$ref": "#/definitions/MedicinalProductIngredient_Strength" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "MedicinalProductInteraction": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductInteraction"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "subject": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "interactant": { "items": { "$ref": "#/definitions/MedicinalProductInteraction_Interactant" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "effect": { "$ref": "#/definitions/CodeableConcept"
        },
        "incidence": { "$ref": "#/definitions/CodeableConcept"
        },
        "management": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MedicinalProductInteraction_Interactant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "itemReference": { "$ref": "#/definitions/Reference"
        },
        "itemCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "MedicinalProductManufactured": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductManufactured"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "manufacturedDoseForm": { "$ref": "#/definitions/CodeableConcept"
        },
        "unitOfPresentation": { "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "manufacturer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "ingredient": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "physicalCharacteristics": { "$ref": "#/definitions/ProdCharacteristic"
        },
        "otherCharacteristics": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "quantity",
        "manufacturedDoseForm",
        "resourceType"
      ]
    },
    "MedicinalProductPackaged": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductPackaged"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "subject": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "legalStatusOfSupply": { "$ref": "#/definitions/CodeableConcept"
        },
        "marketingStatus": { "items": { "$ref": "#/definitions/MarketingStatus" }, "type": "array" },
        "marketingAuthorization": { "$ref": "#/definitions/Reference"
        },
        "manufacturer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "batchIdentifier": { "items": { "$ref": "#/definitions/MedicinalProductPackaged_BatchIdentifier" }, "type": "array" },
        "packageItem": { "items": { "$ref": "#/definitions/MedicinalProductPackaged_PackageItem" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "packageItem",
        "resourceType"
      ]
    },
    "MedicinalProductPackaged_BatchIdentifier": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "outerPackaging": { "$ref": "#/definitions/Identifier"
        },
        "immediatePackaging": { "$ref": "#/definitions/Identifier"
        }
      },
      "additionalProperties": false,
      "required": [
        "outerPackaging"
      ]
    },
    "MedicinalProductPackaged_PackageItem": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "material": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "alternateMaterial": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "device": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "manufacturedItem": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "packageItem": { "items": { "$ref": "#/definitions/MedicinalProductPackaged_PackageItem" }, "type": "array" },
        "physicalCharacteristics": { "$ref": "#/definitions/ProdCharacteristic"
        },
        "otherCharacteristics": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "shelfLifeStorage": { "items": { "$ref": "#/definitions/ProductShelfLife" }, "type": "array" },
        "manufacturer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "quantity",
        "type"
      ]
    },
    "MedicinalProductPharmaceutical": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductPharmaceutical"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "administrableDoseForm": { "$ref": "#/definitions/CodeableConcept"
        },
        "unitOfPresentation": { "$ref": "#/definitions/CodeableConcept"
        },
        "ingredient": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "device": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "characteristics": { "items": { "$ref": "#/definitions/MedicinalProductPharmaceutical_Characteristics" }, "type": "array" },
        "routeOfAdministration": { "items": { "$ref": "#/definitions/MedicinalProductPharmaceutical_RouteOfAdministration" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "administrableDoseForm",
        "routeOfAdministration",
        "resourceType"
      ]
    },
    "MedicinalProductPharmaceutical_Characteristics": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "status": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "MedicinalProductPharmaceutical_RouteOfAdministration": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "firstDose": { "$ref": "#/definitions/Quantity"
        },
        "maxSingleDose": { "$ref": "#/definitions/Quantity"
        },
        "maxDosePerDay": { "$ref": "#/definitions/Quantity"
        },
        "maxDosePerTreatmentPeriod": { "$ref": "#/definitions/Ratio"
        },
        "maxTreatmentPeriod": { "$ref": "#/definitions/Duration"
        },
        "targetSpecies": { "items": { "$ref": "#/definitions/MedicinalProductPharmaceutical_TargetSpecies" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "MedicinalProductPharmaceutical_TargetSpecies": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "withdrawalPeriod": { "items": { "$ref": "#/definitions/MedicinalProductPharmaceutical_WithdrawalPeriod" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "MedicinalProductPharmaceutical_WithdrawalPeriod": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "tissue": { "$ref": "#/definitions/CodeableConcept"
        },
        "value": { "$ref": "#/definitions/Quantity"
        },
        "supportingInformation": { "$ref": "#/definitions/string"
        },
        "_supportingInformation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "tissue",
        "value"
      ]
    },
    "MedicinalProductUndesirableEffect": {
      "properties": {
        "resourceType": {
          "const": "MedicinalProductUndesirableEffect"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "subject": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "symptomConditionEffect": { "$ref": "#/definitions/CodeableConcept"
        },
        "classification": { "$ref": "#/definitions/CodeableConcept"
        },
        "frequencyOfOccurrence": { "$ref": "#/definitions/CodeableConcept"
        },
        "population": { "items": { "$ref": "#/definitions/Population" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MessageDefinition": {
      "properties": {
        "resourceType": {
          "const": "MessageDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "replaces": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "base": { "$ref": "#/definitions/canonical"
        },
        "parent": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "eventCoding": { "$ref": "#/definitions/Coding"
        },
        "eventUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_eventUri": { "$ref": "#/definitions/Element"
        },
        "category": {
          "enum": [
            "consequence",
            "currency",
            "notification"
          ]
        },
        "_category": { "$ref": "#/definitions/Element"
        },
        "focus": { "items": { "$ref": "#/definitions/MessageDefinition_Focus" }, "type": "array" },
        "responseRequired": {
          "enum": [
            "always",
            "on-error",
            "never",
            "on-success"
          ]
        },
        "_responseRequired": { "$ref": "#/definitions/Element"
        },
        "allowedResponse": { "items": { "$ref": "#/definitions/MessageDefinition_AllowedResponse" }, "type": "array" },
        "graph": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MessageDefinition_Focus": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "profile": { "$ref": "#/definitions/canonical"
        },
        "min": { "$ref": "#/definitions/unsignedInt"
        },
        "_min": { "$ref": "#/definitions/Element"
        },
        "max": { "$ref": "#/definitions/string"
        },
        "_max": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MessageDefinition_AllowedResponse": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "message": { "$ref": "#/definitions/canonical"
        },
        "situation": { "$ref": "#/definitions/markdown"
        },
        "_situation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "message"
      ]
    },
    "MessageHeader": {
      "properties": {
        "resourceType": {
          "const": "MessageHeader"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "eventCoding": { "$ref": "#/definitions/Coding"
        },
        "eventUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_eventUri": { "$ref": "#/definitions/Element"
        },
        "destination": { "items": { "$ref": "#/definitions/MessageHeader_Destination" }, "type": "array" },
        "sender": { "$ref": "#/definitions/Reference"
        },
        "enterer": { "$ref": "#/definitions/Reference"
        },
        "author": { "$ref": "#/definitions/Reference"
        },
        "source": { "$ref": "#/definitions/MessageHeader_Source"
        },
        "responsible": { "$ref": "#/definitions/Reference"
        },
        "reason": { "$ref": "#/definitions/CodeableConcept"
        },
        "response": { "$ref": "#/definitions/MessageHeader_Response"
        },
        "focus": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "definition": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false,
      "required": [
        "source",
        "resourceType"
      ]
    },
    "MessageHeader_Destination": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "target": { "$ref": "#/definitions/Reference"
        },
        "endpoint": { "$ref": "#/definitions/url"
        },
        "_endpoint": { "$ref": "#/definitions/Element"
        },
        "receiver": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "MessageHeader_Source": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "software": { "$ref": "#/definitions/string"
        },
        "_software": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "contact": { "$ref": "#/definitions/ContactPoint"
        },
        "endpoint": { "$ref": "#/definitions/url"
        },
        "_endpoint": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MessageHeader_Response": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/id"
        },
        "_identifier": { "$ref": "#/definitions/Element"
        },
        "code": {
          "enum": [
            "ok",
            "transient-error",
            "fatal-error"
          ]
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "details": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "MolecularSequence": {
      "properties": {
        "resourceType": {
          "const": "MolecularSequence"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "type": {
          "enum": [
            "aa",
            "dna",
            "rna"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "coordinateSystem": { "$ref": "#/definitions/integer"
        },
        "_coordinateSystem": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "specimen": { "$ref": "#/definitions/Reference"
        },
        "device": { "$ref": "#/definitions/Reference"
        },
        "performer": { "$ref": "#/definitions/Reference"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "referenceSeq": { "$ref": "#/definitions/MolecularSequence_ReferenceSeq"
        },
        "variant": { "items": { "$ref": "#/definitions/MolecularSequence_Variant" }, "type": "array" },
        "observedSeq": { "$ref": "#/definitions/string"
        },
        "_observedSeq": { "$ref": "#/definitions/Element"
        },
        "quality": { "items": { "$ref": "#/definitions/MolecularSequence_Quality" }, "type": "array" },
        "readCoverage": { "$ref": "#/definitions/integer"
        },
        "_readCoverage": { "$ref": "#/definitions/Element"
        },
        "repository": { "items": { "$ref": "#/definitions/MolecularSequence_Repository" }, "type": "array" },
        "pointer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "structureVariant": { "items": { "$ref": "#/definitions/MolecularSequence_StructureVariant" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "MolecularSequence_ReferenceSeq": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "chromosome": { "$ref": "#/definitions/CodeableConcept"
        },
        "genomeBuild": { "$ref": "#/definitions/string"
        },
        "_genomeBuild": { "$ref": "#/definitions/Element"
        },
        "orientation": {
          "enum": [
            "sense",
            "antisense"
          ]
        },
        "_orientation": { "$ref": "#/definitions/Element"
        },
        "referenceSeqId": { "$ref": "#/definitions/CodeableConcept"
        },
        "referenceSeqPointer": { "$ref": "#/definitions/Reference"
        },
        "referenceSeqString": { "$ref": "#/definitions/string"
        },
        "_referenceSeqString": { "$ref": "#/definitions/Element"
        },
        "strand": {
          "enum": [
            "watson",
            "crick"
          ]
        },
        "_strand": { "$ref": "#/definitions/Element"
        },
        "windowStart": { "$ref": "#/definitions/integer"
        },
        "_windowStart": { "$ref": "#/definitions/Element"
        },
        "windowEnd": { "$ref": "#/definitions/integer"
        },
        "_windowEnd": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MolecularSequence_Variant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "start": { "$ref": "#/definitions/integer"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/integer"
        },
        "_end": { "$ref": "#/definitions/Element"
        },
        "observedAllele": { "$ref": "#/definitions/string"
        },
        "_observedAllele": { "$ref": "#/definitions/Element"
        },
        "referenceAllele": { "$ref": "#/definitions/string"
        },
        "_referenceAllele": { "$ref": "#/definitions/Element"
        },
        "cigar": { "$ref": "#/definitions/string"
        },
        "_cigar": { "$ref": "#/definitions/Element"
        },
        "variantPointer": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "MolecularSequence_Quality": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "indel",
            "snp",
            "unknown"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "standardSequence": { "$ref": "#/definitions/CodeableConcept"
        },
        "start": { "$ref": "#/definitions/integer"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/integer"
        },
        "_end": { "$ref": "#/definitions/Element"
        },
        "score": { "$ref": "#/definitions/Quantity"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        },
        "truthTP": { "$ref": "#/definitions/decimal"
        },
        "_truthTP": { "$ref": "#/definitions/Element"
        },
        "queryTP": { "$ref": "#/definitions/decimal"
        },
        "_queryTP": { "$ref": "#/definitions/Element"
        },
        "truthFN": { "$ref": "#/definitions/decimal"
        },
        "_truthFN": { "$ref": "#/definitions/Element"
        },
        "queryFP": { "$ref": "#/definitions/decimal"
        },
        "_queryFP": { "$ref": "#/definitions/Element"
        },
        "gtFP": { "$ref": "#/definitions/decimal"
        },
        "_gtFP": { "$ref": "#/definitions/Element"
        },
        "precision": { "$ref": "#/definitions/decimal"
        },
        "_precision": { "$ref": "#/definitions/Element"
        },
        "recall": { "$ref": "#/definitions/decimal"
        },
        "_recall": { "$ref": "#/definitions/Element"
        },
        "fScore": { "$ref": "#/definitions/decimal"
        },
        "_fScore": { "$ref": "#/definitions/Element"
        },
        "roc": { "$ref": "#/definitions/MolecularSequence_Roc"
        }
      },
      "additionalProperties": false
    },
    "MolecularSequence_Roc": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "score": { "items": { "$ref": "#/definitions/integer" }, "type": "array" },
        "_score": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "numTP": { "items": { "$ref": "#/definitions/integer" }, "type": "array" },
        "_numTP": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "numFP": { "items": { "$ref": "#/definitions/integer" }, "type": "array" },
        "_numFP": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "numFN": { "items": { "$ref": "#/definitions/integer" }, "type": "array" },
        "_numFN": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "precision": { "items": { "$ref": "#/definitions/decimal" }, "type": "array" },
        "_precision": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "sensitivity": { "items": { "$ref": "#/definitions/decimal" }, "type": "array" },
        "_sensitivity": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "fMeasure": { "items": { "$ref": "#/definitions/decimal" }, "type": "array" },
        "_fMeasure": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "MolecularSequence_Repository": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "directlink",
            "openapi",
            "login",
            "oauth",
            "other"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "datasetId": { "$ref": "#/definitions/string"
        },
        "_datasetId": { "$ref": "#/definitions/Element"
        },
        "variantsetId": { "$ref": "#/definitions/string"
        },
        "_variantsetId": { "$ref": "#/definitions/Element"
        },
        "readsetId": { "$ref": "#/definitions/string"
        },
        "_readsetId": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MolecularSequence_StructureVariant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "variantType": { "$ref": "#/definitions/CodeableConcept"
        },
        "exact": { "$ref": "#/definitions/boolean"
        },
        "_exact": { "$ref": "#/definitions/Element"
        },
        "length": { "$ref": "#/definitions/integer"
        },
        "_length": { "$ref": "#/definitions/Element"
        },
        "outer": { "$ref": "#/definitions/MolecularSequence_Outer"
        },
        "inner": { "$ref": "#/definitions/MolecularSequence_Inner"
        }
      },
      "additionalProperties": false
    },
    "MolecularSequence_Outer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "start": { "$ref": "#/definitions/integer"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/integer"
        },
        "_end": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "MolecularSequence_Inner": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "start": { "$ref": "#/definitions/integer"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/integer"
        },
        "_end": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "NamingSystem": {
      "properties": {
        "resourceType": {
          "const": "NamingSystem"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "kind": {
          "enum": [
            "codesystem",
            "identifier",
            "root"
          ]
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "responsible": { "$ref": "#/definitions/string"
        },
        "_responsible": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "uniqueId": { "items": { "$ref": "#/definitions/NamingSystem_UniqueId" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "uniqueId",
        "resourceType"
      ]
    },
    "NamingSystem_UniqueId": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "oid",
            "uuid",
            "uri",
            "other"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "value": { "$ref": "#/definitions/string"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "preferred": { "$ref": "#/definitions/boolean"
        },
        "_preferred": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "NutritionOrder": {
      "properties": {
        "resourceType": {
          "const": "NutritionOrder"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "instantiates": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiates": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "intent": { "$ref": "#/definitions/code"
        },
        "_intent": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "dateTime": { "$ref": "#/definitions/dateTime"
        },
        "_dateTime": { "$ref": "#/definitions/Element"
        },
        "orderer": { "$ref": "#/definitions/Reference"
        },
        "allergyIntolerance": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "foodPreferenceModifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "excludeFoodModifier": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "oralDiet": { "$ref": "#/definitions/NutritionOrder_OralDiet"
        },
        "supplement": { "items": { "$ref": "#/definitions/NutritionOrder_Supplement" }, "type": "array" },
        "enteralFormula": { "$ref": "#/definitions/NutritionOrder_EnteralFormula"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "NutritionOrder_OralDiet": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "schedule": { "items": { "$ref": "#/definitions/Timing" }, "type": "array" },
        "nutrient": { "items": { "$ref": "#/definitions/NutritionOrder_Nutrient" }, "type": "array" },
        "texture": { "items": { "$ref": "#/definitions/NutritionOrder_Texture" }, "type": "array" },
        "fluidConsistencyType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "instruction": { "$ref": "#/definitions/string"
        },
        "_instruction": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "NutritionOrder_Nutrient": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifier": { "$ref": "#/definitions/CodeableConcept"
        },
        "amount": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "NutritionOrder_Texture": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifier": { "$ref": "#/definitions/CodeableConcept"
        },
        "foodType": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "NutritionOrder_Supplement": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "productName": { "$ref": "#/definitions/string"
        },
        "_productName": { "$ref": "#/definitions/Element"
        },
        "schedule": { "items": { "$ref": "#/definitions/Timing" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "instruction": { "$ref": "#/definitions/string"
        },
        "_instruction": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "NutritionOrder_EnteralFormula": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "baseFormulaType": { "$ref": "#/definitions/CodeableConcept"
        },
        "baseFormulaProductName": { "$ref": "#/definitions/string"
        },
        "_baseFormulaProductName": { "$ref": "#/definitions/Element"
        },
        "additiveType": { "$ref": "#/definitions/CodeableConcept"
        },
        "additiveProductName": { "$ref": "#/definitions/string"
        },
        "_additiveProductName": { "$ref": "#/definitions/Element"
        },
        "caloricDensity": { "$ref": "#/definitions/Quantity"
        },
        "routeofAdministration": { "$ref": "#/definitions/CodeableConcept"
        },
        "administration": { "items": { "$ref": "#/definitions/NutritionOrder_Administration" }, "type": "array" },
        "maxVolumeToDeliver": { "$ref": "#/definitions/Quantity"
        },
        "administrationInstruction": { "$ref": "#/definitions/string"
        },
        "_administrationInstruction": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "NutritionOrder_Administration": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "schedule": { "$ref": "#/definitions/Timing"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "rateQuantity": { "$ref": "#/definitions/Quantity"
        },
        "rateRatio": { "$ref": "#/definitions/Ratio"
        }
      },
      "additionalProperties": false
    },
    "Observation": {
      "properties": {
        "resourceType": {
          "const": "Observation"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": {
          "enum": [
            "registered",
            "preliminary",
            "final",
            "amended",
            "corrected",
            "cancelled",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "focus": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "effectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_effectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "effectiveTiming": { "$ref": "#/definitions/Timing"
        },
        "effectiveInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_effectiveInstant": { "$ref": "#/definitions/Element"
        },
        "issued": { "$ref": "#/definitions/instant"
        },
        "_issued": { "$ref": "#/definitions/Element"
        },
        "performer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueRatio": { "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": { "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valuePeriod": { "$ref": "#/definitions/Period"
        },
        "dataAbsentReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "interpretation": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        },
        "specimen": { "$ref": "#/definitions/Reference"
        },
        "device": { "$ref": "#/definitions/Reference"
        },
        "referenceRange": { "items": { "$ref": "#/definitions/Observation_ReferenceRange" }, "type": "array" },
        "hasMember": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "derivedFrom": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "component": { "items": { "$ref": "#/definitions/Observation_Component" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "Observation_ReferenceRange": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "low": { "$ref": "#/definitions/Quantity"
        },
        "high": { "$ref": "#/definitions/Quantity"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "appliesTo": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "age": { "$ref": "#/definitions/Range"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Observation_Component": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueRatio": { "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": { "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valuePeriod": { "$ref": "#/definitions/Period"
        },
        "dataAbsentReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "interpretation": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "referenceRange": { "items": { "$ref": "#/definitions/Observation_ReferenceRange" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "ObservationDefinition": {
      "properties": {
        "resourceType": {
          "const": "ObservationDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "permittedDataType": { "items": {
            "enum": [
              "Quantity",
              "CodeableConcept",
              "string",
              "boolean",
              "integer",
              "Range",
              "Ratio",
              "SampledData",
              "time",
              "dateTime",
              "Period"
            ] }, "type": "array" },
        "_permittedDataType": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "multipleResultsAllowed": { "$ref": "#/definitions/boolean"
        },
        "_multipleResultsAllowed": { "$ref": "#/definitions/Element"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        },
        "preferredReportName": { "$ref": "#/definitions/string"
        },
        "_preferredReportName": { "$ref": "#/definitions/Element"
        },
        "quantitativeDetails": { "$ref": "#/definitions/ObservationDefinition_QuantitativeDetails"
        },
        "qualifiedInterval": { "items": { "$ref": "#/definitions/ObservationDefinition_QualifiedInterval" }, "type": "array" },
        "validCodedValueSet": { "$ref": "#/definitions/Reference"
        },
        "normalCodedValueSet": { "$ref": "#/definitions/Reference"
        },
        "abnormalCodedValueSet": { "$ref": "#/definitions/Reference"
        },
        "criticalCodedValueSet": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "ObservationDefinition_QuantitativeDetails": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "customaryUnit": { "$ref": "#/definitions/CodeableConcept"
        },
        "unit": { "$ref": "#/definitions/CodeableConcept"
        },
        "conversionFactor": { "$ref": "#/definitions/decimal"
        },
        "_conversionFactor": { "$ref": "#/definitions/Element"
        },
        "decimalPrecision": { "$ref": "#/definitions/integer"
        },
        "_decimalPrecision": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ObservationDefinition_QualifiedInterval": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": {
          "enum": [
            "reference",
            "critical",
            "absolute"
          ]
        },
        "_category": { "$ref": "#/definitions/Element"
        },
        "range": { "$ref": "#/definitions/Range"
        },
        "context": { "$ref": "#/definitions/CodeableConcept"
        },
        "appliesTo": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "gender": {
          "enum": [
            "male",
            "female",
            "other",
            "unknown"
          ]
        },
        "_gender": { "$ref": "#/definitions/Element"
        },
        "age": { "$ref": "#/definitions/Range"
        },
        "gestationalAge": { "$ref": "#/definitions/Range"
        },
        "condition": { "$ref": "#/definitions/string"
        },
        "_condition": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "OperationDefinition": {
      "properties": {
        "resourceType": {
          "const": "OperationDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "kind": {
          "enum": [
            "operation",
            "query"
          ]
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "affectsState": { "$ref": "#/definitions/boolean"
        },
        "_affectsState": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/markdown"
        },
        "_comment": { "$ref": "#/definitions/Element"
        },
        "base": { "$ref": "#/definitions/canonical"
        },
        "resource": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_resource": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "system": { "$ref": "#/definitions/boolean"
        },
        "_system": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/boolean"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "instance": { "$ref": "#/definitions/boolean"
        },
        "_instance": { "$ref": "#/definitions/Element"
        },
        "inputProfile": { "$ref": "#/definitions/canonical"
        },
        "outputProfile": { "$ref": "#/definitions/canonical"
        },
        "parameter": { "items": { "$ref": "#/definitions/OperationDefinition_Parameter" }, "type": "array" },
        "overload": { "items": { "$ref": "#/definitions/OperationDefinition_Overload" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "OperationDefinition_Parameter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/code"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "use": {
          "enum": [
            "in",
            "out"
          ]
        },
        "_use": { "$ref": "#/definitions/Element"
        },
        "min": { "$ref": "#/definitions/integer"
        },
        "_min": { "$ref": "#/definitions/Element"
        },
        "max": { "$ref": "#/definitions/string"
        },
        "_max": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/string"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/code"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "targetProfile": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "searchType": {
          "enum": [
            "number",
            "date",
            "string",
            "token",
            "reference",
            "composite",
            "quantity",
            "uri",
            "special"
          ]
        },
        "_searchType": { "$ref": "#/definitions/Element"
        },
        "binding": { "$ref": "#/definitions/OperationDefinition_Binding"
        },
        "referencedFrom": { "items": { "$ref": "#/definitions/OperationDefinition_ReferencedFrom" }, "type": "array" },
        "part": { "items": { "$ref": "#/definitions/OperationDefinition_Parameter" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "OperationDefinition_Binding": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "strength": {
          "enum": [
            "required",
            "extensible",
            "preferred",
            "example"
          ]
        },
        "_strength": { "$ref": "#/definitions/Element"
        },
        "valueSet": { "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false,
      "required": [
        "valueSet"
      ]
    },
    "OperationDefinition_ReferencedFrom": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "source": { "$ref": "#/definitions/string"
        },
        "_source": { "$ref": "#/definitions/Element"
        },
        "sourceId": { "$ref": "#/definitions/string"
        },
        "_sourceId": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "OperationDefinition_Overload": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "parameterName": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_parameterName": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "OperationOutcome": {
      "properties": {
        "resourceType": {
          "const": "OperationOutcome"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "issue": { "items": { "$ref": "#/definitions/OperationOutcome_Issue" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "issue",
        "resourceType"
      ]
    },
    "OperationOutcome_Issue": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "severity": {
          "enum": [
            "fatal",
            "error",
            "warning",
            "information"
          ]
        },
        "_severity": { "$ref": "#/definitions/Element"
        },
        "code": {
          "enum": [
            "invalid",
            "structure",
            "required",
            "value",
            "invariant",
            "security",
            "login",
            "unknown",
            "expired",
            "forbidden",
            "suppressed",
            "processing",
            "not-supported",
            "duplicate",
            "multiple-matches",
            "not-found",
            "deleted",
            "too-long",
            "code-invalid",
            "extension",
            "too-costly",
            "business-rule",
            "conflict",
            "transient",
            "lock-error",
            "no-store",
            "exception",
            "timeout",
            "incomplete",
            "throttled",
            "informational"
          ]
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "details": { "$ref": "#/definitions/CodeableConcept"
        },
        "diagnostics": { "$ref": "#/definitions/string"
        },
        "_diagnostics": { "$ref": "#/definitions/Element"
        },
        "location": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_location": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "expression": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_expression": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Organization": {
      "properties": {
        "resourceType": {
          "const": "Organization"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "type": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "alias": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_alias": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "address": { "items": { "$ref": "#/definitions/Address" }, "type": "array" },
        "partOf": { "$ref": "#/definitions/Reference"
        },
        "contact": { "items": { "$ref": "#/definitions/Organization_Contact" }, "type": "array" },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Organization_Contact": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/CodeableConcept"
        },
        "name": { "$ref": "#/definitions/HumanName"
        },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "address": { "$ref": "#/definitions/Address"
        }
      },
      "additionalProperties": false
    },
    "OrganizationAffiliation": {
      "properties": {
        "resourceType": {
          "const": "OrganizationAffiliation"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "organization": { "$ref": "#/definitions/Reference"
        },
        "participatingOrganization": { "$ref": "#/definitions/Reference"
        },
        "network": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialty": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "location": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "healthcareService": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Parameters": {
      "properties": {
        "resourceType": {
          "const": "Parameters"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "parameter": { "items": { "$ref": "#/definitions/Parameters_Parameter" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Parameters_Parameter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "valueBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_valueBase64Binary": { "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": { "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": { "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        },
        "valueId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": { "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueMarkdown": { "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": { "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": { "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": { "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": { "$ref": "#/definitions/Element"
        },
        "valueAddress": { "$ref": "#/definitions/Address"
        },
        "valueAge": { "$ref": "#/definitions/Age"
        },
        "valueAnnotation": { "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": { "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": { "$ref": "#/definitions/Count"
        },
        "valueDistance": { "$ref": "#/definitions/Distance"
        },
        "valueDuration": { "$ref": "#/definitions/Duration"
        },
        "valueHumanName": { "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "valueMoney": { "$ref": "#/definitions/Money"
        },
        "valuePeriod": { "$ref": "#/definitions/Period"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueRange": { "$ref": "#/definitions/Range"
        },
        "valueRatio": { "$ref": "#/definitions/Ratio"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "valueSampledData": { "$ref": "#/definitions/SampledData"
        },
        "valueSignature": { "$ref": "#/definitions/Signature"
        },
        "valueTiming": { "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": { "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": { "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": { "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": { "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": { "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": { "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": { "$ref": "#/definitions/Dosage"
        },
        "valueMeta": { "$ref": "#/definitions/Meta"
        },
        "resource": { "$ref": "#/definitions/ResourceList"
        },
        "part": { "items": { "$ref": "#/definitions/Parameters_Parameter" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Patient": {
      "properties": {
        "resourceType": {
          "const": "Patient"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "name": { "items": { "$ref": "#/definitions/HumanName" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "gender": {
          "enum": [
            "male",
            "female",
            "other",
            "unknown"
          ]
        },
        "_gender": { "$ref": "#/definitions/Element"
        },
        "birthDate": { "$ref": "#/definitions/date"
        },
        "_birthDate": { "$ref": "#/definitions/Element"
        },
        "deceasedBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_deceasedBoolean": { "$ref": "#/definitions/Element"
        },
        "deceasedDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_deceasedDateTime": { "$ref": "#/definitions/Element"
        },
        "address": { "items": { "$ref": "#/definitions/Address" }, "type": "array" },
        "maritalStatus": { "$ref": "#/definitions/CodeableConcept"
        },
        "multipleBirthBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_multipleBirthBoolean": { "$ref": "#/definitions/Element"
        },
        "multipleBirthInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_multipleBirthInteger": { "$ref": "#/definitions/Element"
        },
        "photo": { "items": { "$ref": "#/definitions/Attachment" }, "type": "array" },
        "contact": { "items": { "$ref": "#/definitions/Patient_Contact" }, "type": "array" },
        "communication": { "items": { "$ref": "#/definitions/Patient_Communication" }, "type": "array" },
        "generalPractitioner": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "managingOrganization": { "$ref": "#/definitions/Reference"
        },
        "link": { "items": { "$ref": "#/definitions/Patient_Link" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Patient_Contact": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "relationship": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "name": { "$ref": "#/definitions/HumanName"
        },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "address": { "$ref": "#/definitions/Address"
        },
        "gender": {
          "enum": [
            "male",
            "female",
            "other",
            "unknown"
          ]
        },
        "_gender": { "$ref": "#/definitions/Element"
        },
        "organization": { "$ref": "#/definitions/Reference"
        },
        "period": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "Patient_Communication": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "language": { "$ref": "#/definitions/CodeableConcept"
        },
        "preferred": { "$ref": "#/definitions/boolean"
        },
        "_preferred": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "language"
      ]
    },
    "Patient_Link": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "other": { "$ref": "#/definitions/Reference"
        },
        "type": {
          "enum": [
            "replaced-by",
            "replaces",
            "refer",
            "seealso"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "other"
      ]
    },
    "PaymentNotice": {
      "properties": {
        "resourceType": {
          "const": "PaymentNotice"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "request": { "$ref": "#/definitions/Reference"
        },
        "response": { "$ref": "#/definitions/Reference"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "provider": { "$ref": "#/definitions/Reference"
        },
        "payment": { "$ref": "#/definitions/Reference"
        },
        "paymentDate": { "$ref": "#/definitions/date"
        },
        "_paymentDate": { "$ref": "#/definitions/Element"
        },
        "payee": { "$ref": "#/definitions/Reference"
        },
        "recipient": { "$ref": "#/definitions/Reference"
        },
        "amount": { "$ref": "#/definitions/Money"
        },
        "paymentStatus": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false,
      "required": [
        "amount",
        "recipient",
        "payment",
        "resourceType"
      ]
    },
    "PaymentReconciliation": {
      "properties": {
        "resourceType": {
          "const": "PaymentReconciliation"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "created": { "$ref": "#/definitions/dateTime"
        },
        "_created": { "$ref": "#/definitions/Element"
        },
        "paymentIssuer": { "$ref": "#/definitions/Reference"
        },
        "request": { "$ref": "#/definitions/Reference"
        },
        "requestor": { "$ref": "#/definitions/Reference"
        },
        "outcome": {
          "enum": [
            "queued",
            "complete",
            "error",
            "partial"
          ]
        },
        "_outcome": { "$ref": "#/definitions/Element"
        },
        "disposition": { "$ref": "#/definitions/string"
        },
        "_disposition": { "$ref": "#/definitions/Element"
        },
        "paymentDate": { "$ref": "#/definitions/date"
        },
        "_paymentDate": { "$ref": "#/definitions/Element"
        },
        "paymentAmount": { "$ref": "#/definitions/Money"
        },
        "paymentIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "detail": { "items": { "$ref": "#/definitions/PaymentReconciliation_Detail" }, "type": "array" },
        "formCode": { "$ref": "#/definitions/CodeableConcept"
        },
        "processNote": { "items": { "$ref": "#/definitions/PaymentReconciliation_ProcessNote" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "paymentAmount",
        "resourceType"
      ]
    },
    "PaymentReconciliation_Detail": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "predecessor": { "$ref": "#/definitions/Identifier"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "request": { "$ref": "#/definitions/Reference"
        },
        "submitter": { "$ref": "#/definitions/Reference"
        },
        "response": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/date"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "responsible": { "$ref": "#/definitions/Reference"
        },
        "payee": { "$ref": "#/definitions/Reference"
        },
        "amount": { "$ref": "#/definitions/Money"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "PaymentReconciliation_ProcessNote": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "display",
            "print",
            "printoper"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Person": {
      "properties": {
        "resourceType": {
          "const": "Person"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "name": { "items": { "$ref": "#/definitions/HumanName" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "gender": {
          "enum": [
            "male",
            "female",
            "other",
            "unknown"
          ]
        },
        "_gender": { "$ref": "#/definitions/Element"
        },
        "birthDate": { "$ref": "#/definitions/date"
        },
        "_birthDate": { "$ref": "#/definitions/Element"
        },
        "address": { "items": { "$ref": "#/definitions/Address" }, "type": "array" },
        "photo": { "$ref": "#/definitions/Attachment"
        },
        "managingOrganization": { "$ref": "#/definitions/Reference"
        },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "link": { "items": { "$ref": "#/definitions/Person_Link" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Person_Link": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "target": { "$ref": "#/definitions/Reference"
        },
        "assurance": {
          "enum": [
            "level1",
            "level2",
            "level3",
            "level4"
          ]
        },
        "_assurance": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "target"
      ]
    },
    "PlanDefinition": {
      "properties": {
        "resourceType": {
          "const": "PlanDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "library": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "goal": { "items": { "$ref": "#/definitions/PlanDefinition_Goal" }, "type": "array" },
        "action": { "items": { "$ref": "#/definitions/PlanDefinition_Action" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "PlanDefinition_Goal": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/CodeableConcept"
        },
        "priority": { "$ref": "#/definitions/CodeableConcept"
        },
        "start": { "$ref": "#/definitions/CodeableConcept"
        },
        "addresses": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "documentation": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "target": { "items": { "$ref": "#/definitions/PlanDefinition_Target" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "description"
      ]
    },
    "PlanDefinition_Target": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "measure": { "$ref": "#/definitions/CodeableConcept"
        },
        "detailQuantity": { "$ref": "#/definitions/Quantity"
        },
        "detailRange": { "$ref": "#/definitions/Range"
        },
        "detailCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "due": { "$ref": "#/definitions/Duration"
        }
      },
      "additionalProperties": false
    },
    "PlanDefinition_Action": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "prefix": { "$ref": "#/definitions/string"
        },
        "_prefix": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "textEquivalent": { "$ref": "#/definitions/string"
        },
        "_textEquivalent": { "$ref": "#/definitions/Element"
        },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "documentation": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "goalId": { "items": { "$ref": "#/definitions/id" }, "type": "array" },
        "_goalId": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "trigger": { "items": { "$ref": "#/definitions/TriggerDefinition" }, "type": "array" },
        "condition": { "items": { "$ref": "#/definitions/PlanDefinition_Condition" }, "type": "array" },
        "input": { "items": { "$ref": "#/definitions/DataRequirement" }, "type": "array" },
        "output": { "items": { "$ref": "#/definitions/DataRequirement" }, "type": "array" },
        "relatedAction": { "items": { "$ref": "#/definitions/PlanDefinition_RelatedAction" }, "type": "array" },
        "timingDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timingDateTime": { "$ref": "#/definitions/Element"
        },
        "timingAge": { "$ref": "#/definitions/Age"
        },
        "timingPeriod": { "$ref": "#/definitions/Period"
        },
        "timingDuration": { "$ref": "#/definitions/Duration"
        },
        "timingRange": { "$ref": "#/definitions/Range"
        },
        "timingTiming": { "$ref": "#/definitions/Timing"
        },
        "participant": { "items": { "$ref": "#/definitions/PlanDefinition_Participant" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "groupingBehavior": {
          "enum": [
            "visual-group",
            "logical-group",
            "sentence-group"
          ]
        },
        "_groupingBehavior": { "$ref": "#/definitions/Element"
        },
        "selectionBehavior": {
          "enum": [
            "any",
            "all",
            "all-or-none",
            "exactly-one",
            "at-most-one",
            "one-or-more"
          ]
        },
        "_selectionBehavior": { "$ref": "#/definitions/Element"
        },
        "requiredBehavior": {
          "enum": [
            "must",
            "could",
            "must-unless-documented"
          ]
        },
        "_requiredBehavior": { "$ref": "#/definitions/Element"
        },
        "precheckBehavior": {
          "enum": [
            "yes",
            "no"
          ]
        },
        "_precheckBehavior": { "$ref": "#/definitions/Element"
        },
        "cardinalityBehavior": {
          "enum": [
            "single",
            "multiple"
          ]
        },
        "_cardinalityBehavior": { "$ref": "#/definitions/Element"
        },
        "definitionCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionCanonical": { "$ref": "#/definitions/Element"
        },
        "definitionUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionUri": { "$ref": "#/definitions/Element"
        },
        "transform": { "$ref": "#/definitions/canonical"
        },
        "dynamicValue": { "items": { "$ref": "#/definitions/PlanDefinition_DynamicValue" }, "type": "array" },
        "action": { "items": { "$ref": "#/definitions/PlanDefinition_Action" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "PlanDefinition_Condition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "kind": {
          "enum": [
            "applicability",
            "start",
            "stop"
          ]
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false
    },
    "PlanDefinition_RelatedAction": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "actionId": { "$ref": "#/definitions/id"
        },
        "_actionId": { "$ref": "#/definitions/Element"
        },
        "relationship": {
          "enum": [
            "before-start",
            "before",
            "before-end",
            "concurrent-with-start",
            "concurrent",
            "concurrent-with-end",
            "after-start",
            "after",
            "after-end"
          ]
        },
        "_relationship": { "$ref": "#/definitions/Element"
        },
        "offsetDuration": { "$ref": "#/definitions/Duration"
        },
        "offsetRange": { "$ref": "#/definitions/Range"
        }
      },
      "additionalProperties": false
    },
    "PlanDefinition_Participant": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "patient",
            "practitioner",
            "related-person",
            "device"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "role": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "PlanDefinition_DynamicValue": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "path": { "$ref": "#/definitions/string"
        },
        "_path": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false
    },
    "Practitioner": {
      "properties": {
        "resourceType": {
          "const": "Practitioner"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "name": { "items": { "$ref": "#/definitions/HumanName" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "address": { "items": { "$ref": "#/definitions/Address" }, "type": "array" },
        "gender": {
          "enum": [
            "male",
            "female",
            "other",
            "unknown"
          ]
        },
        "_gender": { "$ref": "#/definitions/Element"
        },
        "birthDate": { "$ref": "#/definitions/date"
        },
        "_birthDate": { "$ref": "#/definitions/Element"
        },
        "photo": { "items": { "$ref": "#/definitions/Attachment" }, "type": "array" },
        "qualification": { "items": { "$ref": "#/definitions/Practitioner_Qualification" }, "type": "array" },
        "communication": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Practitioner_Qualification": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "issuer": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "PractitionerRole": {
      "properties": {
        "resourceType": {
          "const": "PractitionerRole"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "practitioner": { "$ref": "#/definitions/Reference"
        },
        "organization": { "$ref": "#/definitions/Reference"
        },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialty": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "location": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "healthcareService": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "availableTime": { "items": { "$ref": "#/definitions/PractitionerRole_AvailableTime" }, "type": "array" },
        "notAvailable": { "items": { "$ref": "#/definitions/PractitionerRole_NotAvailable" }, "type": "array" },
        "availabilityExceptions": { "$ref": "#/definitions/string"
        },
        "_availabilityExceptions": { "$ref": "#/definitions/Element"
        },
        "endpoint": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "PractitionerRole_AvailableTime": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "daysOfWeek": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_daysOfWeek": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "allDay": { "$ref": "#/definitions/boolean"
        },
        "_allDay": { "$ref": "#/definitions/Element"
        },
        "availableStartTime": { "$ref": "#/definitions/time"
        },
        "_availableStartTime": { "$ref": "#/definitions/Element"
        },
        "availableEndTime": { "$ref": "#/definitions/time"
        },
        "_availableEndTime": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "PractitionerRole_NotAvailable": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "during": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "Procedure": {
      "properties": {
        "resourceType": {
          "const": "Procedure"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "statusReason": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "$ref": "#/definitions/CodeableConcept"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "performedDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_performedDateTime": { "$ref": "#/definitions/Element"
        },
        "performedPeriod": { "$ref": "#/definitions/Period"
        },
        "performedString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_performedString": { "$ref": "#/definitions/Element"
        },
        "performedAge": { "$ref": "#/definitions/Age"
        },
        "performedRange": { "$ref": "#/definitions/Range"
        },
        "recorder": { "$ref": "#/definitions/Reference"
        },
        "asserter": { "$ref": "#/definitions/Reference"
        },
        "performer": { "items": { "$ref": "#/definitions/Procedure_Performer" }, "type": "array" },
        "location": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "bodySite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "outcome": { "$ref": "#/definitions/CodeableConcept"
        },
        "report": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "complication": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "complicationDetail": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "followUp": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "focalDevice": { "items": { "$ref": "#/definitions/Procedure_FocalDevice" }, "type": "array" },
        "usedReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "usedCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "Procedure_Performer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "function": { "$ref": "#/definitions/CodeableConcept"
        },
        "actor": { "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor"
      ]
    },
    "Procedure_FocalDevice": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "action": { "$ref": "#/definitions/CodeableConcept"
        },
        "manipulated": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "manipulated"
      ]
    },
    "Provenance": {
      "properties": {
        "resourceType": {
          "const": "Provenance"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "target": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "occurredPeriod": { "$ref": "#/definitions/Period"
        },
        "occurredDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurredDateTime": { "$ref": "#/definitions/Element"
        },
        "recorded": { "$ref": "#/definitions/instant"
        },
        "_recorded": { "$ref": "#/definitions/Element"
        },
        "policy": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_policy": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "location": { "$ref": "#/definitions/Reference"
        },
        "reason": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "activity": { "$ref": "#/definitions/CodeableConcept"
        },
        "agent": { "items": { "$ref": "#/definitions/Provenance_Agent" }, "type": "array" },
        "entity": { "items": { "$ref": "#/definitions/Provenance_Entity" }, "type": "array" },
        "signature": { "items": { "$ref": "#/definitions/Signature" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "agent",
        "resourceType",
        "target"
      ]
    },
    "Provenance_Agent": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "role": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "who": { "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "who"
      ]
    },
    "Provenance_Entity": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "role": {
          "enum": [
            "derivation",
            "revision",
            "quotation",
            "source",
            "removal"
          ]
        },
        "_role": { "$ref": "#/definitions/Element"
        },
        "what": { "$ref": "#/definitions/Reference"
        },
        "agent": { "items": { "$ref": "#/definitions/Provenance_Agent" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "what"
      ]
    },
    "Questionnaire": {
      "properties": {
        "resourceType": {
          "const": "Questionnaire"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "derivedFrom": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "subjectType": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_subjectType": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "code": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "item": { "items": { "$ref": "#/definitions/Questionnaire_Item" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Questionnaire_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "linkId": { "$ref": "#/definitions/string"
        },
        "_linkId": { "$ref": "#/definitions/Element"
        },
        "definition": { "$ref": "#/definitions/uri"
        },
        "_definition": { "$ref": "#/definitions/Element"
        },
        "code": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "prefix": { "$ref": "#/definitions/string"
        },
        "_prefix": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "type": {
          "enum": [
            "group",
            "display",
            "boolean",
            "decimal",
            "integer",
            "date",
            "dateTime",
            "time",
            "string",
            "text",
            "url",
            "choice",
            "open-choice",
            "attachment",
            "reference",
            "quantity"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "enableWhen": { "items": { "$ref": "#/definitions/Questionnaire_EnableWhen" }, "type": "array" },
        "enableBehavior": {
          "enum": [
            "all",
            "any"
          ]
        },
        "_enableBehavior": { "$ref": "#/definitions/Element"
        },
        "required": { "$ref": "#/definitions/boolean"
        },
        "_required": { "$ref": "#/definitions/Element"
        },
        "repeats": { "$ref": "#/definitions/boolean"
        },
        "_repeats": { "$ref": "#/definitions/Element"
        },
        "readOnly": { "$ref": "#/definitions/boolean"
        },
        "_readOnly": { "$ref": "#/definitions/Element"
        },
        "maxLength": { "$ref": "#/definitions/integer"
        },
        "_maxLength": { "$ref": "#/definitions/Element"
        },
        "answerValueSet": { "$ref": "#/definitions/canonical"
        },
        "answerOption": { "items": { "$ref": "#/definitions/Questionnaire_AnswerOption" }, "type": "array" },
        "initial": { "items": { "$ref": "#/definitions/Questionnaire_Initial" }, "type": "array" },
        "item": { "items": { "$ref": "#/definitions/Questionnaire_Item" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Questionnaire_EnableWhen": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "question": { "$ref": "#/definitions/string"
        },
        "_question": { "$ref": "#/definitions/Element"
        },
        "operator": {
          "enum": [
            "exists",
            "\u003d",
            "!\u003d",
            "\u003e",
            "\u003c",
            "\u003e\u003d",
            "\u003c\u003d"
          ]
        },
        "_operator": { "$ref": "#/definitions/Element"
        },
        "answerBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_answerBoolean": { "$ref": "#/definitions/Element"
        },
        "answerDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_answerDecimal": { "$ref": "#/definitions/Element"
        },
        "answerInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_answerInteger": { "$ref": "#/definitions/Element"
        },
        "answerDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_answerDate": { "$ref": "#/definitions/Element"
        },
        "answerDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_answerDateTime": { "$ref": "#/definitions/Element"
        },
        "answerTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_answerTime": { "$ref": "#/definitions/Element"
        },
        "answerString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_answerString": { "$ref": "#/definitions/Element"
        },
        "answerCoding": { "$ref": "#/definitions/Coding"
        },
        "answerQuantity": { "$ref": "#/definitions/Quantity"
        },
        "answerReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Questionnaire_AnswerOption": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": { "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "initialSelected": { "$ref": "#/definitions/boolean"
        },
        "_initialSelected": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Questionnaire_Initial": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": { "$ref": "#/definitions/Element"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "QuestionnaireResponse": {
      "properties": {
        "resourceType": {
          "const": "QuestionnaireResponse"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "questionnaire": { "$ref": "#/definitions/canonical"
        },
        "status": {
          "enum": [
            "in-progress",
            "completed",
            "amended",
            "entered-in-error",
            "stopped"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "authored": { "$ref": "#/definitions/dateTime"
        },
        "_authored": { "$ref": "#/definitions/Element"
        },
        "author": { "$ref": "#/definitions/Reference"
        },
        "source": { "$ref": "#/definitions/Reference"
        },
        "item": { "items": { "$ref": "#/definitions/QuestionnaireResponse_Item" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "QuestionnaireResponse_Item": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "linkId": { "$ref": "#/definitions/string"
        },
        "_linkId": { "$ref": "#/definitions/Element"
        },
        "definition": { "$ref": "#/definitions/uri"
        },
        "_definition": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/string"
        },
        "_text": { "$ref": "#/definitions/Element"
        },
        "answer": { "items": { "$ref": "#/definitions/QuestionnaireResponse_Answer" }, "type": "array" },
        "item": { "items": { "$ref": "#/definitions/QuestionnaireResponse_Item" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "QuestionnaireResponse_Answer": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": { "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": { "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": { "$ref": "#/definitions/Element"
        },
        "valueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "valueCoding": { "$ref": "#/definitions/Coding"
        },
        "valueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "valueReference": { "$ref": "#/definitions/Reference"
        },
        "item": { "items": { "$ref": "#/definitions/QuestionnaireResponse_Item" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "RelatedPerson": {
      "properties": {
        "resourceType": {
          "const": "RelatedPerson"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "patient": { "$ref": "#/definitions/Reference"
        },
        "relationship": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "name": { "items": { "$ref": "#/definitions/HumanName" }, "type": "array" },
        "telecom": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "gender": {
          "enum": [
            "male",
            "female",
            "other",
            "unknown"
          ]
        },
        "_gender": { "$ref": "#/definitions/Element"
        },
        "birthDate": { "$ref": "#/definitions/date"
        },
        "_birthDate": { "$ref": "#/definitions/Element"
        },
        "address": { "items": { "$ref": "#/definitions/Address" }, "type": "array" },
        "photo": { "items": { "$ref": "#/definitions/Attachment" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "communication": { "items": { "$ref": "#/definitions/RelatedPerson_Communication" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "patient",
        "resourceType"
      ]
    },
    "RelatedPerson_Communication": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "language": { "$ref": "#/definitions/CodeableConcept"
        },
        "preferred": { "$ref": "#/definitions/boolean"
        },
        "_preferred": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "language"
      ]
    },
    "RequestGroup": {
      "properties": {
        "resourceType": {
          "const": "RequestGroup"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "_instantiatesCanonical": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "replaces": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "groupIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "intent": { "$ref": "#/definitions/code"
        },
        "_intent": { "$ref": "#/definitions/Element"
        },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "authoredOn": { "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": { "$ref": "#/definitions/Element"
        },
        "author": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "action": { "items": { "$ref": "#/definitions/RequestGroup_Action" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "RequestGroup_Action": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "prefix": { "$ref": "#/definitions/string"
        },
        "_prefix": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "textEquivalent": { "$ref": "#/definitions/string"
        },
        "_textEquivalent": { "$ref": "#/definitions/Element"
        },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "code": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "documentation": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "condition": { "items": { "$ref": "#/definitions/RequestGroup_Condition" }, "type": "array" },
        "relatedAction": { "items": { "$ref": "#/definitions/RequestGroup_RelatedAction" }, "type": "array" },
        "timingDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timingDateTime": { "$ref": "#/definitions/Element"
        },
        "timingAge": { "$ref": "#/definitions/Age"
        },
        "timingPeriod": { "$ref": "#/definitions/Period"
        },
        "timingDuration": { "$ref": "#/definitions/Duration"
        },
        "timingRange": { "$ref": "#/definitions/Range"
        },
        "timingTiming": { "$ref": "#/definitions/Timing"
        },
        "participant": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "groupingBehavior": { "$ref": "#/definitions/code"
        },
        "_groupingBehavior": { "$ref": "#/definitions/Element"
        },
        "selectionBehavior": { "$ref": "#/definitions/code"
        },
        "_selectionBehavior": { "$ref": "#/definitions/Element"
        },
        "requiredBehavior": { "$ref": "#/definitions/code"
        },
        "_requiredBehavior": { "$ref": "#/definitions/Element"
        },
        "precheckBehavior": { "$ref": "#/definitions/code"
        },
        "_precheckBehavior": { "$ref": "#/definitions/Element"
        },
        "cardinalityBehavior": { "$ref": "#/definitions/code"
        },
        "_cardinalityBehavior": { "$ref": "#/definitions/Element"
        },
        "resource": { "$ref": "#/definitions/Reference"
        },
        "action": { "items": { "$ref": "#/definitions/RequestGroup_Action" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "RequestGroup_Condition": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "kind": { "$ref": "#/definitions/code"
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/Expression"
        }
      },
      "additionalProperties": false
    },
    "RequestGroup_RelatedAction": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "actionId": { "$ref": "#/definitions/id"
        },
        "_actionId": { "$ref": "#/definitions/Element"
        },
        "relationship": { "$ref": "#/definitions/code"
        },
        "_relationship": { "$ref": "#/definitions/Element"
        },
        "offsetDuration": { "$ref": "#/definitions/Duration"
        },
        "offsetRange": { "$ref": "#/definitions/Range"
        }
      },
      "additionalProperties": false
    },
    "ResearchDefinition": {
      "properties": {
        "resourceType": {
          "const": "ResearchDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "shortTitle": { "$ref": "#/definitions/string"
        },
        "_shortTitle": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "comment": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_comment": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "library": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "population": { "$ref": "#/definitions/Reference"
        },
        "exposure": { "$ref": "#/definitions/Reference"
        },
        "exposureAlternative": { "$ref": "#/definitions/Reference"
        },
        "outcome": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType",
        "population"
      ]
    },
    "ResearchElementDefinition": {
      "properties": {
        "resourceType": {
          "const": "ResearchElementDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "shortTitle": { "$ref": "#/definitions/string"
        },
        "_shortTitle": { "$ref": "#/definitions/Element"
        },
        "subtitle": { "$ref": "#/definitions/string"
        },
        "_subtitle": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "subjectCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "subjectReference": { "$ref": "#/definitions/Reference"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "comment": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_comment": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "usage": { "$ref": "#/definitions/string"
        },
        "_usage": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "library": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "type": {
          "enum": [
            "population",
            "exposure",
            "outcome"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "variableType": {
          "enum": [
            "dichotomous",
            "continuous",
            "descriptive"
          ]
        },
        "_variableType": { "$ref": "#/definitions/Element"
        },
        "characteristic": { "items": { "$ref": "#/definitions/ResearchElementDefinition_Characteristic" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "characteristic",
        "resourceType"
      ]
    },
    "ResearchElementDefinition_Characteristic": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "definitionCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "definitionCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_definitionCanonical": { "$ref": "#/definitions/Element"
        },
        "definitionExpression": { "$ref": "#/definitions/Expression"
        },
        "definitionDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "usageContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "exclude": { "$ref": "#/definitions/boolean"
        },
        "_exclude": { "$ref": "#/definitions/Element"
        },
        "unitOfMeasure": { "$ref": "#/definitions/CodeableConcept"
        },
        "studyEffectiveDescription": { "$ref": "#/definitions/string"
        },
        "_studyEffectiveDescription": { "$ref": "#/definitions/Element"
        },
        "studyEffectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_studyEffectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "studyEffectivePeriod": { "$ref": "#/definitions/Period"
        },
        "studyEffectiveDuration": { "$ref": "#/definitions/Duration"
        },
        "studyEffectiveTiming": { "$ref": "#/definitions/Timing"
        },
        "studyEffectiveTimeFromStart": { "$ref": "#/definitions/Duration"
        },
        "studyEffectiveGroupMeasure": {
          "enum": [
            "mean",
            "median",
            "mean-of-mean",
            "mean-of-median",
            "median-of-mean",
            "median-of-median"
          ]
        },
        "_studyEffectiveGroupMeasure": { "$ref": "#/definitions/Element"
        },
        "participantEffectiveDescription": { "$ref": "#/definitions/string"
        },
        "_participantEffectiveDescription": { "$ref": "#/definitions/Element"
        },
        "participantEffectiveDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_participantEffectiveDateTime": { "$ref": "#/definitions/Element"
        },
        "participantEffectivePeriod": { "$ref": "#/definitions/Period"
        },
        "participantEffectiveDuration": { "$ref": "#/definitions/Duration"
        },
        "participantEffectiveTiming": { "$ref": "#/definitions/Timing"
        },
        "participantEffectiveTimeFromStart": { "$ref": "#/definitions/Duration"
        },
        "participantEffectiveGroupMeasure": {
          "enum": [
            "mean",
            "median",
            "mean-of-mean",
            "mean-of-median",
            "median-of-mean",
            "median-of-median"
          ]
        },
        "_participantEffectiveGroupMeasure": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ResearchStudy": {
      "properties": {
        "resourceType": {
          "const": "ResearchStudy"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "protocol": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "administratively-completed",
            "approved",
            "closed-to-accrual",
            "closed-to-accrual-and-intervention",
            "completed",
            "disapproved",
            "in-review",
            "temporarily-closed-to-accrual",
            "temporarily-closed-to-accrual-and-intervention",
            "withdrawn"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "primaryPurposeType": { "$ref": "#/definitions/CodeableConcept"
        },
        "phase": { "$ref": "#/definitions/CodeableConcept"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "focus": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "condition": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "keyword": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "location": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "enrollment": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "period": { "$ref": "#/definitions/Period"
        },
        "sponsor": { "$ref": "#/definitions/Reference"
        },
        "principalInvestigator": { "$ref": "#/definitions/Reference"
        },
        "site": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "reasonStopped": { "$ref": "#/definitions/CodeableConcept"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "arm": { "items": { "$ref": "#/definitions/ResearchStudy_Arm" }, "type": "array" },
        "objective": { "items": { "$ref": "#/definitions/ResearchStudy_Objective" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ResearchStudy_Arm": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ResearchStudy_Objective": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "ResearchSubject": {
      "properties": {
        "resourceType": {
          "const": "ResearchSubject"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "candidate",
            "eligible",
            "follow-up",
            "ineligible",
            "not-registered",
            "off-study",
            "on-study",
            "on-study-intervention",
            "on-study-observation",
            "pending-on-study",
            "potential-candidate",
            "screening",
            "withdrawn"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "period": { "$ref": "#/definitions/Period"
        },
        "study": { "$ref": "#/definitions/Reference"
        },
        "individual": { "$ref": "#/definitions/Reference"
        },
        "assignedArm": { "$ref": "#/definitions/string"
        },
        "_assignedArm": { "$ref": "#/definitions/Element"
        },
        "actualArm": { "$ref": "#/definitions/string"
        },
        "_actualArm": { "$ref": "#/definitions/Element"
        },
        "consent": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "study",
        "individual",
        "resourceType"
      ]
    },
    "RiskAssessment": {
      "properties": {
        "resourceType": {
          "const": "RiskAssessment"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": { "$ref": "#/definitions/Reference"
        },
        "parent": { "$ref": "#/definitions/Reference"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": { "$ref": "#/definitions/Period"
        },
        "condition": { "$ref": "#/definitions/Reference"
        },
        "performer": { "$ref": "#/definitions/Reference"
        },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "basis": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "prediction": { "items": { "$ref": "#/definitions/RiskAssessment_Prediction" }, "type": "array" },
        "mitigation": { "$ref": "#/definitions/string"
        },
        "_mitigation": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "RiskAssessment_Prediction": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "outcome": { "$ref": "#/definitions/CodeableConcept"
        },
        "probabilityDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_probabilityDecimal": { "$ref": "#/definitions/Element"
        },
        "probabilityRange": { "$ref": "#/definitions/Range"
        },
        "qualitativeRisk": { "$ref": "#/definitions/CodeableConcept"
        },
        "relativeRisk": { "$ref": "#/definitions/decimal"
        },
        "_relativeRisk": { "$ref": "#/definitions/Element"
        },
        "whenPeriod": { "$ref": "#/definitions/Period"
        },
        "whenRange": { "$ref": "#/definitions/Range"
        },
        "rationale": { "$ref": "#/definitions/string"
        },
        "_rationale": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "RiskEvidenceSynthesis": {
      "properties": {
        "resourceType": {
          "const": "RiskEvidenceSynthesis"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "approvalDate": { "$ref": "#/definitions/date"
        },
        "_approvalDate": { "$ref": "#/definitions/Element"
        },
        "lastReviewDate": { "$ref": "#/definitions/date"
        },
        "_lastReviewDate": { "$ref": "#/definitions/Element"
        },
        "effectivePeriod": { "$ref": "#/definitions/Period"
        },
        "topic": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "author": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "editor": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "reviewer": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "endorser": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "relatedArtifact": { "items": { "$ref": "#/definitions/RelatedArtifact" }, "type": "array" },
        "synthesisType": { "$ref": "#/definitions/CodeableConcept"
        },
        "studyType": { "$ref": "#/definitions/CodeableConcept"
        },
        "population": { "$ref": "#/definitions/Reference"
        },
        "exposure": { "$ref": "#/definitions/Reference"
        },
        "outcome": { "$ref": "#/definitions/Reference"
        },
        "sampleSize": { "$ref": "#/definitions/RiskEvidenceSynthesis_SampleSize"
        },
        "riskEstimate": { "$ref": "#/definitions/RiskEvidenceSynthesis_RiskEstimate"
        },
        "certainty": { "items": { "$ref": "#/definitions/RiskEvidenceSynthesis_Certainty" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "outcome",
        "resourceType",
        "population"
      ]
    },
    "RiskEvidenceSynthesis_SampleSize": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "numberOfStudies": { "$ref": "#/definitions/integer"
        },
        "_numberOfStudies": { "$ref": "#/definitions/Element"
        },
        "numberOfParticipants": { "$ref": "#/definitions/integer"
        },
        "_numberOfParticipants": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "RiskEvidenceSynthesis_RiskEstimate": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "value": { "$ref": "#/definitions/decimal"
        },
        "_value": { "$ref": "#/definitions/Element"
        },
        "unitOfMeasure": { "$ref": "#/definitions/CodeableConcept"
        },
        "denominatorCount": { "$ref": "#/definitions/integer"
        },
        "_denominatorCount": { "$ref": "#/definitions/Element"
        },
        "numeratorCount": { "$ref": "#/definitions/integer"
        },
        "_numeratorCount": { "$ref": "#/definitions/Element"
        },
        "precisionEstimate": { "items": { "$ref": "#/definitions/RiskEvidenceSynthesis_PrecisionEstimate" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "RiskEvidenceSynthesis_PrecisionEstimate": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "level": { "$ref": "#/definitions/decimal"
        },
        "_level": { "$ref": "#/definitions/Element"
        },
        "from": { "$ref": "#/definitions/decimal"
        },
        "_from": { "$ref": "#/definitions/Element"
        },
        "to": { "$ref": "#/definitions/decimal"
        },
        "_to": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "RiskEvidenceSynthesis_Certainty": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "rating": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "certaintySubcomponent": { "items": { "$ref": "#/definitions/RiskEvidenceSynthesis_CertaintySubcomponent" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "RiskEvidenceSynthesis_CertaintySubcomponent": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "rating": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Schedule": {
      "properties": {
        "resourceType": {
          "const": "Schedule"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "active": { "$ref": "#/definitions/boolean"
        },
        "_active": { "$ref": "#/definitions/Element"
        },
        "serviceCategory": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "serviceType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialty": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "actor": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "planningHorizon": { "$ref": "#/definitions/Period"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "actor",
        "resourceType"
      ]
    },
    "SearchParameter": {
      "properties": {
        "resourceType": {
          "const": "SearchParameter"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "derivedFrom": { "$ref": "#/definitions/canonical"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/code"
        },
        "_code": { "$ref": "#/definitions/Element"
        },
        "base": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_base": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "type": {
          "enum": [
            "number",
            "date",
            "string",
            "token",
            "reference",
            "composite",
            "quantity",
            "uri",
            "special"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/string"
        },
        "_expression": { "$ref": "#/definitions/Element"
        },
        "xpath": { "$ref": "#/definitions/string"
        },
        "_xpath": { "$ref": "#/definitions/Element"
        },
        "xpathUsage": {
          "enum": [
            "normal",
            "phonetic",
            "nearby",
            "distance",
            "other"
          ]
        },
        "_xpathUsage": { "$ref": "#/definitions/Element"
        },
        "target": { "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_target": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "multipleOr": { "$ref": "#/definitions/boolean"
        },
        "_multipleOr": { "$ref": "#/definitions/Element"
        },
        "multipleAnd": { "$ref": "#/definitions/boolean"
        },
        "_multipleAnd": { "$ref": "#/definitions/Element"
        },
        "comparator": { "items": {
            "enum": [
              "eq",
              "ne",
              "gt",
              "lt",
              "ge",
              "le",
              "sa",
              "eb",
              "ap"
            ] }, "type": "array" },
        "_comparator": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "modifier": { "items": {
            "enum": [
              "missing",
              "exact",
              "contains",
              "not",
              "text",
              "in",
              "not-in",
              "below",
              "above",
              "type",
              "identifier",
              "ofType"
            ] }, "type": "array" },
        "_modifier": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "chain": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_chain": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "component": { "items": { "$ref": "#/definitions/SearchParameter_Component" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SearchParameter_Component": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "definition": { "$ref": "#/definitions/canonical"
        },
        "expression": { "$ref": "#/definitions/string"
        },
        "_expression": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "definition"
      ]
    },
    "ServiceRequest": {
      "properties": {
        "resourceType": {
          "const": "ServiceRequest"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "instantiatesUri": { "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_instantiatesUri": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "basedOn": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "replaces": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "requisition": { "$ref": "#/definitions/Identifier"
        },
        "status": { "$ref": "#/definitions/code"
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "intent": { "$ref": "#/definitions/code"
        },
        "_intent": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "priority": { "$ref": "#/definitions/code"
        },
        "_priority": { "$ref": "#/definitions/Element"
        },
        "doNotPerform": { "$ref": "#/definitions/boolean"
        },
        "_doNotPerform": { "$ref": "#/definitions/Element"
        },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "orderDetail": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "quantityQuantity": { "$ref": "#/definitions/Quantity"
        },
        "quantityRatio": { "$ref": "#/definitions/Ratio"
        },
        "quantityRange": { "$ref": "#/definitions/Range"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "encounter": { "$ref": "#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": { "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": { "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": { "$ref": "#/definitions/Timing"
        },
        "asNeededBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_asNeededBoolean": { "$ref": "#/definitions/Element"
        },
        "asNeededCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "authoredOn": { "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": { "$ref": "#/definitions/Element"
        },
        "requester": { "$ref": "#/definitions/Reference"
        },
        "performerType": { "$ref": "#/definitions/CodeableConcept"
        },
        "performer": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "locationCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "locationReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "reasonCode": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "insurance": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "supportingInfo": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "specimen": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "bodySite": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "patientInstruction": { "$ref": "#/definitions/string"
        },
        "_patientInstruction": { "$ref": "#/definitions/Element"
        },
        "relevantHistory": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "Slot": {
      "properties": {
        "resourceType": {
          "const": "Slot"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "serviceCategory": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "serviceType": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "specialty": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "appointmentType": { "$ref": "#/definitions/CodeableConcept"
        },
        "schedule": { "$ref": "#/definitions/Reference"
        },
        "status": {
          "enum": [
            "busy",
            "free",
            "busy-unavailable",
            "busy-tentative",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "start": { "$ref": "#/definitions/instant"
        },
        "_start": { "$ref": "#/definitions/Element"
        },
        "end": { "$ref": "#/definitions/instant"
        },
        "_end": { "$ref": "#/definitions/Element"
        },
        "overbooked": { "$ref": "#/definitions/boolean"
        },
        "_overbooked": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "schedule",
        "resourceType"
      ]
    },
    "Specimen": {
      "properties": {
        "resourceType": {
          "const": "Specimen"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "accessionIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "status": {
          "enum": [
            "available",
            "unavailable",
            "unsatisfactory",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "subject": { "$ref": "#/definitions/Reference"
        },
        "receivedTime": { "$ref": "#/definitions/dateTime"
        },
        "_receivedTime": { "$ref": "#/definitions/Element"
        },
        "parent": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "request": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "collection": { "$ref": "#/definitions/Specimen_Collection"
        },
        "processing": { "items": { "$ref": "#/definitions/Specimen_Processing" }, "type": "array" },
        "container": { "items": { "$ref": "#/definitions/Specimen_Container" }, "type": "array" },
        "condition": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "note": { "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Specimen_Collection": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "collector": { "$ref": "#/definitions/Reference"
        },
        "collectedDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_collectedDateTime": { "$ref": "#/definitions/Element"
        },
        "collectedPeriod": { "$ref": "#/definitions/Period"
        },
        "duration": { "$ref": "#/definitions/Duration"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        },
        "method": { "$ref": "#/definitions/CodeableConcept"
        },
        "bodySite": { "$ref": "#/definitions/CodeableConcept"
        },
        "fastingStatusCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "fastingStatusDuration": { "$ref": "#/definitions/Duration"
        }
      },
      "additionalProperties": false
    },
    "Specimen_Processing": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "procedure": { "$ref": "#/definitions/CodeableConcept"
        },
        "additive": { "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "timeDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_timeDateTime": { "$ref": "#/definitions/Element"
        },
        "timePeriod": { "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "Specimen_Container": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "capacity": { "$ref": "#/definitions/Quantity"
        },
        "specimenQuantity": { "$ref": "#/definitions/Quantity"
        },
        "additiveCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "additiveReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "SpecimenDefinition": {
      "properties": {
        "resourceType": {
          "const": "SpecimenDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "typeCollected": { "$ref": "#/definitions/CodeableConcept"
        },
        "patientPreparation": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "timeAspect": { "$ref": "#/definitions/string"
        },
        "_timeAspect": { "$ref": "#/definitions/Element"
        },
        "collection": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "typeTested": { "items": { "$ref": "#/definitions/SpecimenDefinition_TypeTested" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SpecimenDefinition_TypeTested": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "isDerived": { "$ref": "#/definitions/boolean"
        },
        "_isDerived": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "preference": {
          "enum": [
            "preferred",
            "alternate"
          ]
        },
        "_preference": { "$ref": "#/definitions/Element"
        },
        "container": { "$ref": "#/definitions/SpecimenDefinition_Container"
        },
        "requirement": { "$ref": "#/definitions/string"
        },
        "_requirement": { "$ref": "#/definitions/Element"
        },
        "retentionTime": { "$ref": "#/definitions/Duration"
        },
        "rejectionCriterion": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "handling": { "items": { "$ref": "#/definitions/SpecimenDefinition_Handling" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SpecimenDefinition_Container": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "material": { "$ref": "#/definitions/CodeableConcept"
        },
        "type": { "$ref": "#/definitions/CodeableConcept"
        },
        "cap": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "capacity": { "$ref": "#/definitions/Quantity"
        },
        "minimumVolumeQuantity": { "$ref": "#/definitions/Quantity"
        },
        "minimumVolumeString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_minimumVolumeString": { "$ref": "#/definitions/Element"
        },
        "additive": { "items": { "$ref": "#/definitions/SpecimenDefinition_Additive" }, "type": "array" },
        "preparation": { "$ref": "#/definitions/string"
        },
        "_preparation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SpecimenDefinition_Additive": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "additiveCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "additiveReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "SpecimenDefinition_Handling": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "temperatureQualifier": { "$ref": "#/definitions/CodeableConcept"
        },
        "temperatureRange": { "$ref": "#/definitions/Range"
        },
        "maxDuration": { "$ref": "#/definitions/Duration"
        },
        "instruction": { "$ref": "#/definitions/string"
        },
        "_instruction": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "StructureDefinition": {
      "properties": {
        "resourceType": {
          "const": "StructureDefinition"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "keyword": { "items": { "$ref": "#/definitions/Coding" }, "type": "array" },
        "fhirVersion": {
          "enum": [
            "0.01",
            "0.05",
            "0.06",
            "0.11",
            "0.0.80",
            "0.0.81",
            "0.0.82",
            "0.4.0",
            "0.5.0",
            "1.0.0",
            "1.0.1",
            "1.0.2",
            "1.1.0",
            "1.4.0",
            "1.6.0",
            "1.8.0",
            "3.0.0",
            "3.0.1",
            "3.3.0",
            "3.5.0",
            "4.0.0",
            "4.0.1"
          ]
        },
        "_fhirVersion": { "$ref": "#/definitions/Element"
        },
        "mapping": { "items": { "$ref": "#/definitions/StructureDefinition_Mapping" }, "type": "array" },
        "kind": {
          "enum": [
            "primitive-type",
            "complex-type",
            "resource",
            "logical"
          ]
        },
        "_kind": { "$ref": "#/definitions/Element"
        },
        "abstract": { "$ref": "#/definitions/boolean"
        },
        "_abstract": { "$ref": "#/definitions/Element"
        },
        "context": { "items": { "$ref": "#/definitions/StructureDefinition_Context" }, "type": "array" },
        "contextInvariant": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_contextInvariant": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "type": { "$ref": "#/definitions/uri"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "baseDefinition": { "$ref": "#/definitions/canonical"
        },
        "derivation": {
          "enum": [
            "specialization",
            "constraint"
          ]
        },
        "_derivation": { "$ref": "#/definitions/Element"
        },
        "snapshot": { "$ref": "#/definitions/StructureDefinition_Snapshot"
        },
        "differential": { "$ref": "#/definitions/StructureDefinition_Differential"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "StructureDefinition_Mapping": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identity": { "$ref": "#/definitions/id"
        },
        "_identity": { "$ref": "#/definitions/Element"
        },
        "uri": { "$ref": "#/definitions/uri"
        },
        "_uri": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "comment": { "$ref": "#/definitions/string"
        },
        "_comment": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "StructureDefinition_Context": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "fhirpath",
            "element",
            "extension"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "expression": { "$ref": "#/definitions/string"
        },
        "_expression": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "StructureDefinition_Snapshot": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "element": { "items": { "$ref": "#/definitions/ElementDefinition" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "element"
      ]
    },
    "StructureDefinition_Differential": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "element": { "items": { "$ref": "#/definitions/ElementDefinition" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "element"
      ]
    },
    "StructureMap": {
      "properties": {
        "resourceType": {
          "const": "StructureMap"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/uri"
        },
        "_url": { "$ref": "#/definitions/Element"
        },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": { "$ref": "#/definitions/string"
        },
        "_version": { "$ref": "#/definitions/Element"
        },
        "name": { "$ref": "#/definitions/string"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "title": { "$ref": "#/definitions/string"
        },
        "_title": { "$ref": "#/definitions/Element"
        },
        "status": {
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "experimental": { "$ref": "#/definitions/boolean"
        },
        "_experimental": { "$ref": "#/definitions/Element"
        },
        "date": { "$ref": "#/definitions/dateTime"
        },
        "_date": { "$ref": "#/definitions/Element"
        },
        "publisher": { "$ref": "#/definitions/string"
        },
        "_publisher": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": { "$ref": "#/definitions/markdown"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "useContext": { "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": { "$ref": "#/definitions/markdown"
        },
        "_purpose": { "$ref": "#/definitions/Element"
        },
        "copyright": { "$ref": "#/definitions/markdown"
        },
        "_copyright": { "$ref": "#/definitions/Element"
        },
        "structure": { "items": { "$ref": "#/definitions/StructureMap_Structure" }, "type": "array" },
        "import": { "items": { "$ref": "#/definitions/canonical" }, "type": "array" },
        "group": { "items": { "$ref": "#/definitions/StructureMap_Group" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType",
        "group"
      ]
    },
    "StructureMap_Structure": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": { "$ref": "#/definitions/canonical"
        },
        "mode": {
          "enum": [
            "source",
            "queried",
            "target",
            "produced"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "alias": { "$ref": "#/definitions/string"
        },
        "_alias": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/string"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "url"
      ]
    },
    "StructureMap_Group": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/id"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "extends": { "$ref": "#/definitions/id"
        },
        "_extends": { "$ref": "#/definitions/Element"
        },
        "typeMode": {
          "enum": [
            "none",
            "types",
            "type-and-types"
          ]
        },
        "_typeMode": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/string"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        },
        "input": { "items": { "$ref": "#/definitions/StructureMap_Input" }, "type": "array" },
        "rule": { "items": { "$ref": "#/definitions/StructureMap_Rule" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "input",
        "rule"
      ]
    },
    "StructureMap_Input": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/id"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/string"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "mode": {
          "enum": [
            "source",
            "target"
          ]
        },
        "_mode": { "$ref": "#/definitions/Element"
        },
        "documentation": { "$ref": "#/definitions/string"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "StructureMap_Rule": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/id"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "source": { "items": { "$ref": "#/definitions/StructureMap_Source" }, "type": "array" },
        "target": { "items": { "$ref": "#/definitions/StructureMap_Target" }, "type": "array" },
        "rule": { "items": { "$ref": "#/definitions/StructureMap_Rule" }, "type": "array" },
        "dependent": { "items": { "$ref": "#/definitions/StructureMap_Dependent" }, "type": "array" },
        "documentation": { "$ref": "#/definitions/string"
        },
        "_documentation": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false,
      "required": [
        "source"
      ]
    },
    "StructureMap_Source": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "context": { "$ref": "#/definitions/id"
        },
        "_context": { "$ref": "#/definitions/Element"
        },
        "min": { "$ref": "#/definitions/integer"
        },
        "_min": { "$ref": "#/definitions/Element"
        },
        "max": { "$ref": "#/definitions/string"
        },
        "_max": { "$ref": "#/definitions/Element"
        },
        "type": { "$ref": "#/definitions/string"
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "defaultValueBase64Binary": {
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_defaultValueBase64Binary": { "$ref": "#/definitions/Element"
        },
        "defaultValueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_defaultValueBoolean": { "$ref": "#/definitions/Element"
        },
        "defaultValueCanonical": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueCanonical": { "$ref": "#/definitions/Element"
        },
        "defaultValueCode": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_defaultValueCode": { "$ref": "#/definitions/Element"
        },
        "defaultValueDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_defaultValueDate": { "$ref": "#/definitions/Element"
        },
        "defaultValueDateTime": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_defaultValueDateTime": { "$ref": "#/definitions/Element"
        },
        "defaultValueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_defaultValueDecimal": { "$ref": "#/definitions/Element"
        },
        "defaultValueId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_defaultValueId": { "$ref": "#/definitions/Element"
        },
        "defaultValueInstant": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_defaultValueInstant": { "$ref": "#/definitions/Element"
        },
        "defaultValueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_defaultValueInteger": { "$ref": "#/definitions/Element"
        },
        "defaultValueMarkdown": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_defaultValueMarkdown": { "$ref": "#/definitions/Element"
        },
        "defaultValueOid": {
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_defaultValueOid": { "$ref": "#/definitions/Element"
        },
        "defaultValuePositiveInt": {
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_defaultValuePositiveInt": { "$ref": "#/definitions/Element"
        },
        "defaultValueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_defaultValueString": { "$ref": "#/definitions/Element"
        },
        "defaultValueTime": {
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_defaultValueTime": { "$ref": "#/definitions/Element"
        },
        "defaultValueUnsignedInt": {
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_defaultValueUnsignedInt": { "$ref": "#/definitions/Element"
        },
        "defaultValueUri": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueUri": { "$ref": "#/definitions/Element"
        },
        "defaultValueUrl": {
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_defaultValueUrl": { "$ref": "#/definitions/Element"
        },
        "defaultValueUuid": {
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_defaultValueUuid": { "$ref": "#/definitions/Element"
        },
        "defaultValueAddress": { "$ref": "#/definitions/Address"
        },
        "defaultValueAge": { "$ref": "#/definitions/Age"
        },
        "defaultValueAnnotation": { "$ref": "#/definitions/Annotation"
        },
        "defaultValueAttachment": { "$ref": "#/definitions/Attachment"
        },
        "defaultValueCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "defaultValueCoding": { "$ref": "#/definitions/Coding"
        },
        "defaultValueContactPoint": { "$ref": "#/definitions/ContactPoint"
        },
        "defaultValueCount": { "$ref": "#/definitions/Count"
        },
        "defaultValueDistance": { "$ref": "#/definitions/Distance"
        },
        "defaultValueDuration": { "$ref": "#/definitions/Duration"
        },
        "defaultValueHumanName": { "$ref": "#/definitions/HumanName"
        },
        "defaultValueIdentifier": { "$ref": "#/definitions/Identifier"
        },
        "defaultValueMoney": { "$ref": "#/definitions/Money"
        },
        "defaultValuePeriod": { "$ref": "#/definitions/Period"
        },
        "defaultValueQuantity": { "$ref": "#/definitions/Quantity"
        },
        "defaultValueRange": { "$ref": "#/definitions/Range"
        },
        "defaultValueRatio": { "$ref": "#/definitions/Ratio"
        },
        "defaultValueReference": { "$ref": "#/definitions/Reference"
        },
        "defaultValueSampledData": { "$ref": "#/definitions/SampledData"
        },
        "defaultValueSignature": { "$ref": "#/definitions/Signature"
        },
        "defaultValueTiming": { "$ref": "#/definitions/Timing"
        },
        "defaultValueContactDetail": { "$ref": "#/definitions/ContactDetail"
        },
        "defaultValueContributor": { "$ref": "#/definitions/Contributor"
        },
        "defaultValueDataRequirement": { "$ref": "#/definitions/DataRequirement"
        },
        "defaultValueExpression": { "$ref": "#/definitions/Expression"
        },
        "defaultValueParameterDefinition": { "$ref": "#/definitions/ParameterDefinition"
        },
        "defaultValueRelatedArtifact": { "$ref": "#/definitions/RelatedArtifact"
        },
        "defaultValueTriggerDefinition": { "$ref": "#/definitions/TriggerDefinition"
        },
        "defaultValueUsageContext": { "$ref": "#/definitions/UsageContext"
        },
        "defaultValueDosage": { "$ref": "#/definitions/Dosage"
        },
        "defaultValueMeta": { "$ref": "#/definitions/Meta"
        },
        "element": { "$ref": "#/definitions/string"
        },
        "_element": { "$ref": "#/definitions/Element"
        },
        "listMode": {
          "enum": [
            "first",
            "not_first",
            "last",
            "not_last",
            "only_one"
          ]
        },
        "_listMode": { "$ref": "#/definitions/Element"
        },
        "variable": { "$ref": "#/definitions/id"
        },
        "_variable": { "$ref": "#/definitions/Element"
        },
        "condition": { "$ref": "#/definitions/string"
        },
        "_condition": { "$ref": "#/definitions/Element"
        },
        "check": { "$ref": "#/definitions/string"
        },
        "_check": { "$ref": "#/definitions/Element"
        },
        "logMessage": { "$ref": "#/definitions/string"
        },
        "_logMessage": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "StructureMap_Target": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "context": { "$ref": "#/definitions/id"
        },
        "_context": { "$ref": "#/definitions/Element"
        },
        "contextType": {
          "enum": [
            "type",
            "variable"
          ]
        },
        "_contextType": { "$ref": "#/definitions/Element"
        },
        "element": { "$ref": "#/definitions/string"
        },
        "_element": { "$ref": "#/definitions/Element"
        },
        "variable": { "$ref": "#/definitions/id"
        },
        "_variable": { "$ref": "#/definitions/Element"
        },
        "listMode": { "items": {
            "enum": [
              "first",
              "share",
              "last",
              "collate"
            ] }, "type": "array" },
        "_listMode": { "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "listRuleId": { "$ref": "#/definitions/id"
        },
        "_listRuleId": { "$ref": "#/definitions/Element"
        },
        "transform": {
          "enum": [
            "create",
            "copy",
            "truncate",
            "escape",
            "cast",
            "append",
            "translate",
            "reference",
            "dateOp",
            "uuid",
            "pointer",
            "evaluate",
            "cc",
            "c",
            "qty",
            "id",
            "cp"
          ]
        },
        "_transform": { "$ref": "#/definitions/Element"
        },
        "parameter": { "items": { "$ref": "#/definitions/StructureMap_Parameter" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "StructureMap_Parameter": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "valueId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": { "$ref": "#/definitions/Element"
        },
        "valueString": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": { "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": { "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": { "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": { "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "StructureMap_Dependent": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": { "$ref": "#/definitions/id"
        },
        "_name": { "$ref": "#/definitions/Element"
        },
        "variable": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_variable": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Subscription": {
      "properties": {
        "resourceType": {
          "const": "Subscription"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "status": {
          "enum": [
            "requested",
            "active",
            "error",
            "off"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "contact": { "items": { "$ref": "#/definitions/ContactPoint" }, "type": "array" },
        "end": { "$ref": "#/definitions/instant"
        },
        "_end": { "$ref": "#/definitions/Element"
        },
        "reason": { "$ref": "#/definitions/string"
        },
        "_reason": { "$ref": "#/definitions/Element"
        },
        "criteria": { "$ref": "#/definitions/string"
        },
        "_criteria": { "$ref": "#/definitions/Element"
        },
        "error": { "$ref": "#/definitions/string"
        },
        "_error": { "$ref": "#/definitions/Element"
        },
        "channel": { "$ref": "#/definitions/Subscription_Channel"
        }
      },
      "additionalProperties": false,
      "required": [
        "channel",
        "resourceType"
      ]
    },
    "Subscription_Channel": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "enum": [
            "rest-hook",
            "websocket",
            "email",
            "sms",
            "message"
          ]
        },
        "_type": { "$ref": "#/definitions/Element"
        },
        "endpoint": { "$ref": "#/definitions/url"
        },
        "_endpoint": { "$ref": "#/definitions/Element"
        },
        "payload": { "$ref": "#/definitions/code"
        },
        "_payload": { "$ref": "#/definitions/Element"
        },
        "header": { "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_header": { "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Substance": {
      "properties": {
        "resourceType": {
          "const": "Substance"
        },
        "id": { "$ref": "#/definitions/id"
        },
        "meta": { "$ref": "#/definitions/Meta"
        },
        "implicitRules": { "$ref": "#/definitions/uri"
        },
        "_implicitRules": { "$ref": "#/definitions/Element"
        },
        "language": { "$ref": "#/definitions/code"
        },
        "_language": { "$ref": "#/definitions/Element"
        },
        "text": { "$ref": "#/definitions/Narrative"
        },
        "contained": { "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "enum": [
            "active",
            "inactive",
            "entered-in-error"
          ]
        },
        "_status": { "$ref": "#/definitions/Element"
        },
        "category": { "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "code": { "$ref": "#/definitions/CodeableConcept"
        },
        "description": { "$ref": "#/definitions/string"
        },
        "_description": { "$ref": "#/definitions/Element"
        },
        "instance": { "items": { "$ref": "#/definitions/Substance_Instance" }, "type": "array" },
        "ingredient": { "items": { "$ref": "#/definitions/Substance_Ingredient" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "Substance_Instance": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": { "$ref": "#/definitions/Identifier"
        },
        "expiry": { "$ref": "#/definitions/dateTime"
        },
        "_expiry": { "$ref": "#/definitions/Element"
        },
        "quantity": { "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "Substance_Ingredient": {
      "properties": {
        "id": { "$ref": "#/definitions/string"
        },
        "extension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": { "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "quantity": { "$ref": "#/definitions/Ratio"
        },
        "substanceCodeableConcept": { "$ref": "#/definitions/CodeableConcept"
        },
        "substanceReference": { "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "SubstanceNucleicAcid": {
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceNucleicAcid resource",
          "const": "SubstanceNucleicAcid"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequenceType": {
          "description": "The type of the sequence shall be specified based on a controlled vocabulary.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "numberOfSubunits": {
          "description": "The number of linear sequences of nucleotides linked through phosphodiester bonds shall be described. Subunits would be strands of nucleic acids that are tightly associated typically through Watson-Crick base pairing. NOTE: If not specified in the reference source, the assumption is that there is 1 subunit.",
          "$ref": "#/definitions/integer"
        },
        "_numberOfSubunits": {
          "description": "Extensions for numberOfSubunits",
          "$ref": "#/definitions/Element"
        },
        "areaOfHybridisation": {
          "description": "The area of hybridisation shall be described if applicable for double stranded RNA or DNA. The number associated with the subunit followed by the number associated to the residue shall be specified in increasing order. The underscore “” shall be used as separator as follows: “Subunitnumber Residue”.",
          "$ref": "#/definitions/string"
        },
        "_areaOfHybridisation": {
          "description": "Extensions for areaOfHybridisation",
          "$ref": "#/definitions/Element"
        },
        "oligoNucleotideType": {
          "description": "(TBC).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subunit": {
          "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times.",
          "items": { "$ref": "#/definitions/SubstanceNucleicAcid_Subunit" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceNucleicAcid_Subunit": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "subunit": {
          "description": "Index of linear sequences of nucleic acids in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts.",
          "$ref": "#/definitions/integer"
        },
        "_subunit": {
          "description": "Extensions for subunit",
          "$ref": "#/definitions/Element"
        },
        "sequence": {
          "description": "Actual nucleotide sequence notation from 5\u0027 to 3\u0027 end using standard single letter codes. In addition to the base sequence, sugar and type of phosphate or non-phosphate linkage should also be captured.",
          "$ref": "#/definitions/string"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "length": {
          "description": "The length of the sequence shall be captured.",
          "$ref": "#/definitions/integer"
        },
        "_length": {
          "description": "Extensions for length",
          "$ref": "#/definitions/Element"
        },
        "sequenceAttachment": {
          "description": "(TBC).",
          "$ref": "#/definitions/Attachment"
        },
        "fivePrime": {
          "description": "The nucleotide present at the 5’ terminal shall be specified based on a controlled vocabulary. Since the sequence is represented from the 5\u0027 to the 3\u0027 end, the 5’ prime nucleotide is the letter at the first position in the sequence. A separate representation would be redundant.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "threePrime": {
          "description": "The nucleotide present at the 3’ terminal shall be specified based on a controlled vocabulary. Since the sequence is represented from the 5\u0027 to the 3\u0027 end, the 5’ prime nucleotide is the letter at the last position in the sequence. A separate representation would be redundant.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "linkage": {
          "description": "The linkages between sugar residues will also be captured.",
          "items": { "$ref": "#/definitions/SubstanceNucleicAcid_Linkage" }, "type": "array" },
        "sugar": {
          "description": "5.3.6.8.1 Sugar ID (Mandatory).",
          "items": { "$ref": "#/definitions/SubstanceNucleicAcid_Sugar" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceNucleicAcid_Linkage": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "connectivity": {
          "description": "The entity that links the sugar residues together should also be captured for nearly all naturally occurring nucleic acid the linkage is a phosphate group. For many synthetic oligonucleotides phosphorothioate linkages are often seen. Linkage connectivity is assumed to be 3’-5’. If the linkage is either 3’-3’ or 5’-5’ this should be specified.",
          "$ref": "#/definitions/string"
        },
        "_connectivity": {
          "description": "Extensions for connectivity",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "Each linkage will be registered as a fragment and have an ID.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "Each linkage will be registered as a fragment and have at least one name. A single name shall be assigned to each linkage.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "residueSite": {
          "description": "Residues shall be captured as described in 5.3.6.8.3.",
          "$ref": "#/definitions/string"
        },
        "_residueSite": {
          "description": "Extensions for residueSite",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SubstanceNucleicAcid_Sugar": {
      "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "The Substance ID of the sugar or sugar-like component that make up the nucleotide.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "The name of the sugar or sugar-like component that make up the nucleotide.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "residueSite": {
          "description": "The residues that contain a given sugar will be captured. The order of given residues will be captured in the 5‘-3‘direction consistent with the base sequences listed above.",
          "$ref": "#/definitions/string"
        },
        "_residueSite": {
          "description": "Extensions for residueSite",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SubstancePolymer": {
      "description": "Todo.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstancePolymer resource",
          "const": "SubstancePolymer"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "class": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "geometry": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "copolymerConnectivity": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "modification": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_modification": {
          "description": "Extensions for modification",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "monomerSet": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstancePolymer_MonomerSet" }, "type": "array" },
        "repeat": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstancePolymer_Repeat" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstancePolymer_MonomerSet": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "ratioType": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "startingMaterial": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstancePolymer_StartingMaterial" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstancePolymer_StartingMaterial": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "material": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "isDefining": {
          "description": "Todo.",
          "$ref": "#/definitions/boolean"
        },
        "_isDefining": {
          "description": "Extensions for isDefining",
          "$ref": "#/definitions/Element"
        },
        "amount": {
          "description": "Todo.",
          "$ref": "#/definitions/SubstanceAmount"
        }
      },
      "additionalProperties": false
    },
    "SubstancePolymer_Repeat": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "numberOfUnits": {
          "description": "Todo.",
          "$ref": "#/definitions/integer"
        },
        "_numberOfUnits": {
          "description": "Extensions for numberOfUnits",
          "$ref": "#/definitions/Element"
        },
        "averageMolecularFormula": {
          "description": "Todo.",
          "$ref": "#/definitions/string"
        },
        "_averageMolecularFormula": {
          "description": "Extensions for averageMolecularFormula",
          "$ref": "#/definitions/Element"
        },
        "repeatUnitAmountType": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "repeatUnit": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstancePolymer_RepeatUnit" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstancePolymer_RepeatUnit": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "orientationOfPolymerisation": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "repeatUnit": {
          "description": "Todo.",
          "$ref": "#/definitions/string"
        },
        "_repeatUnit": {
          "description": "Extensions for repeatUnit",
          "$ref": "#/definitions/Element"
        },
        "amount": {
          "description": "Todo.",
          "$ref": "#/definitions/SubstanceAmount"
        },
        "degreeOfPolymerisation": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstancePolymer_DegreeOfPolymerisation" }, "type": "array" },
        "structuralRepresentation": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstancePolymer_StructuralRepresentation" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstancePolymer_DegreeOfPolymerisation": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "degree": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Todo.",
          "$ref": "#/definitions/SubstanceAmount"
        }
      },
      "additionalProperties": false
    },
    "SubstancePolymer_StructuralRepresentation": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "representation": {
          "description": "Todo.",
          "$ref": "#/definitions/string"
        },
        "_representation": {
          "description": "Extensions for representation",
          "$ref": "#/definitions/Element"
        },
        "attachment": {
          "description": "Todo.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "additionalProperties": false
    },
    "SubstanceProtein": {
      "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceProtein resource",
          "const": "SubstanceProtein"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sequenceType": {
          "description": "The SubstanceProtein descriptive elements will only be used when a complete or partial amino acid sequence is available or derivable from a nucleic acid sequence.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "numberOfSubunits": {
          "description": "Number of linear sequences of amino acids linked through peptide bonds. The number of subunits constituting the SubstanceProtein shall be described. It is possible that the number of subunits can be variable.",
          "$ref": "#/definitions/integer"
        },
        "_numberOfSubunits": {
          "description": "Extensions for numberOfSubunits",
          "$ref": "#/definitions/Element"
        },
        "disulfideLinkage": {
          "description": "The disulphide bond between two cysteine residues either on the same subunit or on two different subunits shall be described. The position of the disulfide bonds in the SubstanceProtein shall be listed in increasing order of subunit number and position within subunit followed by the abbreviation of the amino acids involved. The disulfide linkage positions shall actually contain the amino acid Cysteine at the respective positions.",
          "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_disulfideLinkage": {
          "description": "Extensions for disulfideLinkage",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "subunit": {
          "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times.",
          "items": { "$ref": "#/definitions/SubstanceProtein_Subunit" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceProtein_Subunit": {
      "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "subunit": {
          "description": "Index of primary sequences of amino acids linked through peptide bonds in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts.",
          "$ref": "#/definitions/integer"
        },
        "_subunit": {
          "description": "Extensions for subunit",
          "$ref": "#/definitions/Element"
        },
        "sequence": {
          "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence.",
          "$ref": "#/definitions/string"
        },
        "_sequence": {
          "description": "Extensions for sequence",
          "$ref": "#/definitions/Element"
        },
        "length": {
          "description": "Length of linear sequences of amino acids contained in the subunit.",
          "$ref": "#/definitions/integer"
        },
        "_length": {
          "description": "Extensions for length",
          "$ref": "#/definitions/Element"
        },
        "sequenceAttachment": {
          "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence.",
          "$ref": "#/definitions/Attachment"
        },
        "nTerminalModificationId": {
          "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID.",
          "$ref": "#/definitions/Identifier"
        },
        "nTerminalModification": {
          "description": "The name of the fragment modified at the N-terminal of the SubstanceProtein shall be specified.",
          "$ref": "#/definitions/string"
        },
        "_nTerminalModification": {
          "description": "Extensions for nTerminalModification",
          "$ref": "#/definitions/Element"
        },
        "cTerminalModificationId": {
          "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID.",
          "$ref": "#/definitions/Identifier"
        },
        "cTerminalModification": {
          "description": "The modification at the C-terminal shall be specified.",
          "$ref": "#/definitions/string"
        },
        "_cTerminalModification": {
          "description": "Extensions for cTerminalModification",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SubstanceReferenceInformation": {
      "description": "Todo.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceReferenceInformation resource",
          "const": "SubstanceReferenceInformation"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "comment": {
          "description": "Todo.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "gene": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstanceReferenceInformation_Gene" }, "type": "array" },
        "geneElement": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstanceReferenceInformation_GeneElement" }, "type": "array" },
        "classification": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstanceReferenceInformation_Classification" }, "type": "array" },
        "target": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/SubstanceReferenceInformation_Target" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceReferenceInformation_Gene": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "geneSequenceOrigin": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "gene": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceReferenceInformation_GeneElement": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "element": {
          "description": "Todo.",
          "$ref": "#/definitions/Identifier"
        },
        "source": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceReferenceInformation_Classification": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "domain": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "classification": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subtype": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "source": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceReferenceInformation_Target": {
      "description": "Todo.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "target": {
          "description": "Todo.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "interaction": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "organism": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "organismType": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amountQuantity": {
          "description": "Todo.",
          "$ref": "#/definitions/Quantity"
        },
        "amountRange": {
          "description": "Todo.",
          "$ref": "#/definitions/Range"
        },
        "amountString": {
          "description": "Todo.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": {
          "description": "Extensions for amountString",
          "$ref": "#/definitions/Element"
        },
        "amountType": {
          "description": "Todo.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Todo.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceSourceMaterial": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceSourceMaterial resource",
          "const": "SubstanceSourceMaterial"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "sourceMaterialClass": {
          "description": "General high level classification of the source material specific to the origin of the material.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceMaterialType": {
          "description": "The type of the source material shall be specified based on a controlled vocabulary. For vaccines, this subclause refers to the class of infectious agent.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "sourceMaterialState": {
          "description": "The state of the source material when extracted.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "organismId": {
          "description": "The unique identifier associated with the source material parent organism shall be specified.",
          "$ref": "#/definitions/Identifier"
        },
        "organismName": {
          "description": "The organism accepted Scientific name shall be provided based on the organism taxonomy.",
          "$ref": "#/definitions/string"
        },
        "_organismName": {
          "description": "Extensions for organismName",
          "$ref": "#/definitions/Element"
        },
        "parentSubstanceId": {
          "description": "The parent of the herbal drug Ginkgo biloba, Leaf is the substance ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L. (Whole plant).",
          "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "parentSubstanceName": {
          "description": "The parent substance of the Herbal Drug, or Herbal preparation.",
          "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_parentSubstanceName": {
          "description": "Extensions for parentSubstanceName",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "countryOfOrigin": {
          "description": "The country where the plant material is harvested or the countries where the plasma is sourced from as laid down in accordance with the Plasma Master File. For “Plasma-derived substances” the attribute country of origin provides information about the countries used for the manufacturing of the Cryopoor plama or Crioprecipitate.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "geographicalLocation": {
          "description": "The place/region where the plant is harvested or the places/regions where the animal source material has its habitat.",
          "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_geographicalLocation": {
          "description": "Extensions for geographicalLocation",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "developmentStage": {
          "description": "Stage of life for animals, plants, insects and microorganisms. This information shall be provided only when the substance is significantly different in these stages (e.g. foetal bovine serum).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "fractionDescription": {
          "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels.",
          "items": { "$ref": "#/definitions/SubstanceSourceMaterial_FractionDescription" }, "type": "array" },
        "organism": {
          "description": "This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf.",
          "$ref": "#/definitions/SubstanceSourceMaterial_Organism"
        },
        "partDescription": {
          "description": "To do.",
          "items": { "$ref": "#/definitions/SubstanceSourceMaterial_PartDescription" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceSourceMaterial_FractionDescription": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "fraction": {
          "description": "This element is capturing information about the fraction of a plant part, or human plasma for fractionation.",
          "$ref": "#/definitions/string"
        },
        "_fraction": {
          "description": "Extensions for fraction",
          "$ref": "#/definitions/Element"
        },
        "materialType": {
          "description": "The specific type of the material constituting the component. For Herbal preparations the particulars of the extracts (liquid/dry) is described in Specified Substance Group 1.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_Organism": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "family": {
          "description": "The family of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "genus": {
          "description": "The genus of an organism shall be specified; refers to the Latin epithet of the genus element of the plant/animal scientific name; it is present in names for genera, species and infraspecies.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "species": {
          "description": "The species of an organism shall be specified; refers to the Latin epithet of the species of the plant/animal; it is present in names for species and infraspecies.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intraspecificType": {
          "description": "The Intraspecific type of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intraspecificDescription": {
          "description": "The intraspecific description of an organism shall be specified based on a controlled vocabulary. For Influenza Vaccine, the intraspecific description shall contain the syntax of the antigen in line with the WHO convention.",
          "$ref": "#/definitions/string"
        },
        "_intraspecificDescription": {
          "description": "Extensions for intraspecificDescription",
          "$ref": "#/definitions/Element"
        },
        "author": {
          "description": "4.9.13.6.1 Author type (Conditional).",
          "items": { "$ref": "#/definitions/SubstanceSourceMaterial_Author" }, "type": "array" },
        "hybrid": {
          "description": "4.9.13.8.1 Hybrid species maternal organism ID (Optional).",
          "$ref": "#/definitions/SubstanceSourceMaterial_Hybrid"
        },
        "organismGeneral": {
          "description": "4.9.13.7.1 Kingdom (Conditional).",
          "$ref": "#/definitions/SubstanceSourceMaterial_OrganismGeneral"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_Author": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "authorType": {
          "description": "The type of author of an organism species shall be specified. The parenthetical author of an organism species refers to the first author who published the plant/animal name (of any rank). The primary author of an organism species refers to the first author(s), who validly published the plant/animal name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "authorDescription": {
          "description": "The author of an organism species shall be specified. The author year of an organism shall also be specified when applicable; refers to the year in which the first author(s) published the infraspecific plant/animal name (of any rank).",
          "$ref": "#/definitions/string"
        },
        "_authorDescription": {
          "description": "Extensions for authorDescription",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_Hybrid": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "maternalOrganismId": {
          "description": "The identifier of the maternal species constituting the hybrid organism shall be specified based on a controlled vocabulary. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal.",
          "$ref": "#/definitions/string"
        },
        "_maternalOrganismId": {
          "description": "Extensions for maternalOrganismId",
          "$ref": "#/definitions/Element"
        },
        "maternalOrganismName": {
          "description": "The name of the maternal species constituting the hybrid organism shall be specified. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal.",
          "$ref": "#/definitions/string"
        },
        "_maternalOrganismName": {
          "description": "Extensions for maternalOrganismName",
          "$ref": "#/definitions/Element"
        },
        "paternalOrganismId": {
          "description": "The identifier of the paternal species constituting the hybrid organism shall be specified based on a controlled vocabulary.",
          "$ref": "#/definitions/string"
        },
        "_paternalOrganismId": {
          "description": "Extensions for paternalOrganismId",
          "$ref": "#/definitions/Element"
        },
        "paternalOrganismName": {
          "description": "The name of the paternal species constituting the hybrid organism shall be specified.",
          "$ref": "#/definitions/string"
        },
        "_paternalOrganismName": {
          "description": "Extensions for paternalOrganismName",
          "$ref": "#/definitions/Element"
        },
        "hybridType": {
          "description": "The hybrid type of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_OrganismGeneral": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "kingdom": {
          "description": "The kingdom of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "phylum": {
          "description": "The phylum of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "class": {
          "description": "The class of an organism shall be specified.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "order": {
          "description": "The order of an organism shall be specified,.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSourceMaterial_PartDescription": {
      "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "part": {
          "description": "Entity of anatomical origin of source material within an organism.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "partLocation": {
          "description": "The detailed anatomic location when the part can be extracted from different anatomical locations of the organism. Multiple alternative locations may apply.",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "resourceType": {
          "description": "This is a SubstanceSpecification resource",
          "const": "SubstanceSpecification"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "Identifier by which this substance is known.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "High level categorization, e.g. polymer or nucleic acid.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "Status of substance within the catalogue e.g. approved.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "domain": {
          "description": "If the substance applies to only human or veterinary use.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "Textual description of the substance.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "Supporting literature.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "comment": {
          "description": "Textual comment about this record of a substance.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "moiety": {
          "description": "Moiety, for structural modifications.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Moiety" }, "type": "array" },
        "property": {
          "description": "General specifications for this substance, including how it is related to other substances.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Property" }, "type": "array" },
        "referenceInformation": {
          "description": "General information detailing this substance.",
          "$ref": "#/definitions/Reference"
        },
        "structure": {
          "description": "Structural information.",
          "$ref": "#/definitions/SubstanceSpecification_Structure"
        },
        "code": {
          "description": "Codes associated with the substance.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Code" }, "type": "array" },
        "name": {
          "description": "Names applicable to this substance.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Name" }, "type": "array" },
        "molecularWeight": {
          "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
          "items": { "$ref": "#/definitions/SubstanceSpecification_MolecularWeight" }, "type": "array" },
        "relationship": {
          "description": "A link between this substance and another, with details of the relationship.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Relationship" }, "type": "array" },
        "nucleicAcid": {
          "description": "Data items specific to nucleic acids.",
          "$ref": "#/definitions/Reference"
        },
        "polymer": {
          "description": "Data items specific to polymers.",
          "$ref": "#/definitions/Reference"
        },
        "protein": {
          "description": "Data items specific to proteins.",
          "$ref": "#/definitions/Reference"
        },
        "sourceMaterial": {
          "description": "Material or taxonomic/anatomical source for the substance.",
          "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SubstanceSpecification_Moiety": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "role": {
          "description": "Role that the moiety is playing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "identifier": {
          "description": "Identifier by which this moiety substance is known.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "Textual name for this moiety substance.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "stereochemistry": {
          "description": "Stereochemistry type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "opticalActivity": {
          "description": "Optical activity type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "molecularFormula": {
          "description": "Molecular formula.",
          "$ref": "#/definitions/string"
        },
        "_molecularFormula": {
          "description": "Extensions for molecularFormula",
          "$ref": "#/definitions/Element"
        },
        "amountQuantity": {
          "description": "Quantitative value for this moiety.",
          "$ref": "#/definitions/Quantity"
        },
        "amountString": {
          "description": "Quantitative value for this moiety.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": {
          "description": "Extensions for amountString",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Property": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "category": {
          "description": "A category for this property, e.g. Physical, Chemical, Enzymatic.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "code": {
          "description": "Property type e.g. viscosity, pH, isoelectric point.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "parameters": {
          "description": "Parameters that were used in the measurement of a property (e.g. for viscosity: measured at 20C with a pH of 7.1).",
          "$ref": "#/definitions/string"
        },
        "_parameters": {
          "description": "Extensions for parameters",
          "$ref": "#/definitions/Element"
        },
        "definingSubstanceReference": {
          "description": "A substance upon which a defining property depends (e.g. for solubility: in water, in alcohol).",
          "$ref": "#/definitions/Reference"
        },
        "definingSubstanceCodeableConcept": {
          "description": "A substance upon which a defining property depends (e.g. for solubility: in water, in alcohol).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amountQuantity": {
          "description": "Quantitative value for this property.",
          "$ref": "#/definitions/Quantity"
        },
        "amountString": {
          "description": "Quantitative value for this property.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": {
          "description": "Extensions for amountString",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Structure": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "stereochemistry": {
          "description": "Stereochemistry type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "opticalActivity": {
          "description": "Optical activity type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "molecularFormula": {
          "description": "Molecular formula.",
          "$ref": "#/definitions/string"
        },
        "_molecularFormula": {
          "description": "Extensions for molecularFormula",
          "$ref": "#/definitions/Element"
        },
        "molecularFormulaByMoiety": {
          "description": "Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot.",
          "$ref": "#/definitions/string"
        },
        "_molecularFormulaByMoiety": {
          "description": "Extensions for molecularFormulaByMoiety",
          "$ref": "#/definitions/Element"
        },
        "isotope": {
          "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Isotope" }, "type": "array" },
        "molecularWeight": {
          "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
          "$ref": "#/definitions/SubstanceSpecification_MolecularWeight"
        },
        "source": {
          "description": "Supporting literature.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "representation": {
          "description": "Molecular structural representation.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Representation" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Isotope": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "Substance identifier for each non-natural or radioisotope.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "Substance name for each non-natural or radioisotope.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "substitution": {
          "description": "The type of isotopic substitution present in a single substance.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "halfLife": {
          "description": "Half life - for a non-natural nuclide.",
          "$ref": "#/definitions/Quantity"
        },
        "molecularWeight": {
          "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
          "$ref": "#/definitions/SubstanceSpecification_MolecularWeight"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_MolecularWeight": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "method": {
          "description": "The method by which the molecular weight was determined.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "type": {
          "description": "Type of molecular weight such as exact, average (also known as. number average), weight average.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "amount": {
          "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Representation": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "description": "The type of structure (e.g. Full, Partial, Representative).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "representation": {
          "description": "The structural representation as text string in a format e.g. InChI, SMILES, MOLFILE, CDX.",
          "$ref": "#/definitions/string"
        },
        "_representation": {
          "description": "Extensions for representation",
          "$ref": "#/definitions/Element"
        },
        "attachment": {
          "description": "An attached file with the structural representation.",
          "$ref": "#/definitions/Attachment"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Code": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "description": "The specific code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "Status of the code assignment.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "statusDate": {
          "description": "The date at which the code status is changed as part of the terminology maintenance.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "comment": {
          "description": "Any comment can be provided in this field, if necessary.",
          "$ref": "#/definitions/string"
        },
        "_comment": {
          "description": "Extensions for comment",
          "$ref": "#/definitions/Element"
        },
        "source": {
          "description": "Supporting literature.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Name": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": {
          "description": "The actual name.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "type": {
          "description": "Name type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The status of the name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "preferred": {
          "description": "If this is the preferred name for this substance.",
          "$ref": "#/definitions/boolean"
        },
        "_preferred": {
          "description": "Extensions for preferred",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "Language of the name.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "domain": {
          "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "jurisdiction": {
          "description": "The jurisdiction where this name applies.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "synonym": {
          "description": "A synonym of this name.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Name" }, "type": "array" },
        "translation": {
          "description": "A translation for this name.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Name" }, "type": "array" },
        "official": {
          "description": "Details of the official nature of this name.",
          "items": { "$ref": "#/definitions/SubstanceSpecification_Official" }, "type": "array" },
        "source": {
          "description": "Supporting literature.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Official": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "authority": {
          "description": "Which authority uses this official name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The status of the official name.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "Date of official name change.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "SubstanceSpecification_Relationship": {
      "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "substanceReference": {
          "description": "A pointer to another substance, as a resource or just a representational code.",
          "$ref": "#/definitions/Reference"
        },
        "substanceCodeableConcept": {
          "description": "A pointer to another substance, as a resource or just a representational code.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "relationship": {
          "description": "For example \"salt to parent\", \"active moiety\", \"starting material\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "isDefining": {
          "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships.",
          "$ref": "#/definitions/boolean"
        },
        "_isDefining": {
          "description": "Extensions for isDefining",
          "$ref": "#/definitions/Element"
        },
        "amountQuantity": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
          "$ref": "#/definitions/Quantity"
        },
        "amountRange": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
          "$ref": "#/definitions/Range"
        },
        "amountRatio": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
          "$ref": "#/definitions/Ratio"
        },
        "amountString": {
          "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_amountString": {
          "description": "Extensions for amountString",
          "$ref": "#/definitions/Element"
        },
        "amountRatioLowLimit": {
          "description": "For use when the numeric.",
          "$ref": "#/definitions/Ratio"
        },
        "amountType": {
          "description": "An operator for the amount, for example \"average\", \"approximately\", \"less than\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "source": {
          "description": "Supporting literature.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "SupplyDelivery": {
      "description": "Record of delivery of what is supplied.",
      "properties": {
        "resourceType": {
          "description": "This is a SupplyDelivery resource",
          "const": "SupplyDelivery"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "Identifier for the supply delivery event that is used to identify it across multiple disparate systems.",
          "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "basedOn": {
          "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "partOf": {
          "description": "A larger event of which this particular event is a component or step.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": {
          "description": "A code specifying the state of the dispense event.",
          "enum": [
            "in-progress",
            "completed",
            "abandoned",
            "entered-in-error"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "A link to a resource representing the person whom the delivered item is for.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Indicates the type of dispensing event that is performed. Examples include: Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "suppliedItem": {
          "description": "The item that is being delivered or has been supplied.",
          "$ref": "#/definitions/SupplyDelivery_SuppliedItem"
        },
        "occurrenceDateTime": {
          "description": "The date or time(s) the activity occurred.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The date or time(s) the activity occurred.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "The date or time(s) the activity occurred.",
          "$ref": "#/definitions/Timing"
        },
        "supplier": {
          "description": "The individual responsible for dispensing the medication, supplier or device.",
          "$ref": "#/definitions/Reference"
        },
        "destination": {
          "description": "Identification of the facility/location where the Supply was shipped to, as part of the dispense event.",
          "$ref": "#/definitions/Reference"
        },
        "receiver": {
          "description": "Identifies the person who picked up the Supply.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "SupplyDelivery_SuppliedItem": {
      "description": "Record of delivery of what is supplied.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "quantity": {
          "description": "The amount of supply that has been dispensed. Includes unit of measure.",
          "$ref": "#/definitions/Quantity"
        },
        "itemCodeableConcept": {
          "description": "Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "description": "Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
          "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "SupplyRequest": {
      "description": "A record of a request for a medication, substance or device used in the healthcare setting.",
      "properties": {
        "resourceType": {
          "description": "This is a SupplyRequest resource",
          "const": "SupplyRequest"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "Business identifiers assigned to this SupplyRequest by the author and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server.",
          "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "description": "Status of the supply request.",
          "enum": [
            "draft",
            "active",
            "suspended",
            "cancelled",
            "completed",
            "entered-in-error",
            "unknown"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "category": {
          "description": "Category of supply, e.g.  central, non-stock, etc. This is used to support work flows associated with the supply process.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "priority": {
          "description": "Indicates how quickly this SupplyRequest should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "itemCodeableConcept": {
          "description": "The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "itemReference": {
          "description": "The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
          "$ref": "#/definitions/Reference"
        },
        "quantity": {
          "description": "The amount that is being ordered of the indicated item.",
          "$ref": "#/definitions/Quantity"
        },
        "parameter": {
          "description": "Specific parameters for the ordered item.  For example, the size of the indicated item.",
          "items": { "$ref": "#/definitions/SupplyRequest_Parameter" }, "type": "array" },
        "occurrenceDateTime": {
          "description": "When the request should be fulfilled.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "When the request should be fulfilled.",
          "$ref": "#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "When the request should be fulfilled.",
          "$ref": "#/definitions/Timing"
        },
        "authoredOn": {
          "description": "When the request was made.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The device, practitioner, etc. who initiated the request.",
          "$ref": "#/definitions/Reference"
        },
        "supplier": {
          "description": "Who is intended to fulfill the request.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "reasonCode": {
          "description": "The reason why the supply item was requested.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "reasonReference": {
          "description": "The reason why the supply item was requested.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "deliverFrom": {
          "description": "Where the supply is expected to come from.",
          "$ref": "#/definitions/Reference"
        },
        "deliverTo": {
          "description": "Where the supply is destined to go.",
          "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "quantity",
        "resourceType"
      ]
    },
    "SupplyRequest_Parameter": {
      "description": "A record of a request for a medication, substance or device used in the healthcare setting.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "description": "A code or string that identifies the device detail being asserted.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the device detail.",
          "$ref": "#/definitions/Range"
        },
        "valueBoolean": {
          "description": "The value of the device detail.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "Task": {
      "description": "A task to be performed.",
      "properties": {
        "resourceType": {
          "description": "This is a Task resource",
          "const": "Task"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "The business identifier for this task.",
          "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "instantiatesCanonical": {
          "description": "The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
          "$ref": "#/definitions/canonical"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
          "$ref": "#/definitions/uri"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "$ref": "#/definitions/Element"
        },
        "basedOn": {
          "description": "BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a \"request\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (\u003d BasedOn), a task is created to fulfill a procedureRequest ( \u003d FocusOn ) to collect a specimen from a patient.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "groupIdentifier": {
          "description": "An identifier that links together multiple tasks and other requests that were created in the same context.",
          "$ref": "#/definitions/Identifier"
        },
        "partOf": {
          "description": "Task that this particular task is part of.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "status": {
          "description": "The current status of the task.",
          "enum": [
            "draft",
            "requested",
            "received",
            "accepted",
            "rejected",
            "ready",
            "cancelled",
            "in-progress",
            "on-hold",
            "failed",
            "completed",
            "entered-in-error"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusReason": {
          "description": "An explanation as to why this task is held, failed, was refused, etc.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "businessStatus": {
          "description": "Contains business-specific nuances of the business state.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "intent": {
          "description": "Indicates the \"level\" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.",
          "enum": [
            "unknown",
            "proposal",
            "plan",
            "order",
            "original-order",
            "reflex-order",
            "filler-order",
            "instance-order",
            "option"
          ]
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the Task should be addressed with respect to other requests.",
          "$ref": "#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "A name or code (or both) briefly describing what the task involves.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "description": {
          "description": "A free-text description of what is to be performed.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "focus": {
          "description": "The request being actioned or the resource being manipulated by this task.",
          "$ref": "#/definitions/Reference"
        },
        "for": {
          "description": "The entity who benefits from the performance of the service specified in the task (e.g., the patient).",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created.",
          "$ref": "#/definitions/Reference"
        },
        "executionPeriod": {
          "description": "Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).",
          "$ref": "#/definitions/Period"
        },
        "authoredOn": {
          "description": "The date and time this task was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "#/definitions/Element"
        },
        "lastModified": {
          "description": "The date and time of last modification to this task.",
          "$ref": "#/definitions/dateTime"
        },
        "_lastModified": {
          "description": "Extensions for lastModified",
          "$ref": "#/definitions/Element"
        },
        "requester": {
          "description": "The creator of the task.",
          "$ref": "#/definitions/Reference"
        },
        "performerType": {
          "description": "The kind of participant that should perform the task.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "owner": {
          "description": "Individual organization or Device currently responsible for task execution.",
          "$ref": "#/definitions/Reference"
        },
        "location": {
          "description": "Principal physical location where the this task is performed.",
          "$ref": "#/definitions/Reference"
        },
        "reasonCode": {
          "description": "A description or code indicating why this task needs to be performed.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "reasonReference": {
          "description": "A resource reference indicating why this task needs to be performed.",
          "$ref": "#/definitions/Reference"
        },
        "insurance": {
          "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "note": {
          "description": "Free-text information captured about the task as it progresses.",
          "items": { "$ref": "#/definitions/Annotation" }, "type": "array" },
        "relevantHistory": {
          "description": "Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "restriction": {
          "description": "If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.",
          "$ref": "#/definitions/Task_Restriction"
        },
        "input": {
          "description": "Additional information that may be needed in the execution of the task.",
          "items": { "$ref": "#/definitions/Task_Input" }, "type": "array" },
        "output": {
          "description": "Outputs produced by the Task.",
          "items": { "$ref": "#/definitions/Task_Output" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "Task_Restriction": {
      "description": "A task to be performed.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "repetitions": {
          "description": "Indicates the number of times the requested action should occur.",
          "$ref": "#/definitions/positiveInt"
        },
        "_repetitions": {
          "description": "Extensions for repetitions",
          "$ref": "#/definitions/Element"
        },
        "period": {
          "description": "Over what time-period is fulfillment sought.",
          "$ref": "#/definitions/Period"
        },
        "recipient": {
          "description": "For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "Task_Input": {
      "description": "A task to be performed.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "description": "A code or description indicating how the input is intended to be used as part of the task execution.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "The value of the input parameter as a basic type.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Ratio"
        },
        "valueReference": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "The value of the input parameter as a basic type.",
          "$ref": "#/definitions/Meta"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "Task_Output": {
      "description": "A task to be performed.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "description": "The name of the Output parameter.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueBase64Binary": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^(\\s*([0-9a-zA-Z\\+/\u003d]){4}\\s*)+$",
          "type": "string"
        },
        "_valueBase64Binary": {
          "description": "Extensions for valueBase64Binary",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueCanonical": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueCanonical": {
          "description": "Extensions for valueCanonical",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDate": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string"
        },
        "_valueDate": {
          "description": "Extensions for valueDate",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueId": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "#/definitions/Element"
        },
        "valueInstant": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string"
        },
        "_valueInstant": {
          "description": "Extensions for valueInstant",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueMarkdown": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueMarkdown": {
          "description": "Extensions for valueMarkdown",
          "$ref": "#/definitions/Element"
        },
        "valueOid": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
          "type": "string"
        },
        "_valueOid": {
          "description": "Extensions for valueOid",
          "$ref": "#/definitions/Element"
        },
        "valuePositiveInt": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[1-9][0-9]*$",
          "type": "number"
        },
        "_valuePositiveInt": {
          "description": "Extensions for valuePositiveInt",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueTime": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
          "type": "string"
        },
        "_valueTime": {
          "description": "Extensions for valueTime",
          "$ref": "#/definitions/Element"
        },
        "valueUnsignedInt": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^[0]|([1-9][0-9]*)$",
          "type": "number"
        },
        "_valueUnsignedInt": {
          "description": "Extensions for valueUnsignedInt",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueUrl": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUrl": {
          "description": "Extensions for valueUrl",
          "$ref": "#/definitions/Element"
        },
        "valueUuid": {
          "description": "The value of the Output parameter as a basic type.",
          "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "_valueUuid": {
          "description": "Extensions for valueUuid",
          "$ref": "#/definitions/Element"
        },
        "valueAddress": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Address"
        },
        "valueAge": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Age"
        },
        "valueAnnotation": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Annotation"
        },
        "valueAttachment": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Attachment"
        },
        "valueCodeableConcept": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueCoding": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Coding"
        },
        "valueContactPoint": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ContactPoint"
        },
        "valueCount": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Count"
        },
        "valueDistance": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Distance"
        },
        "valueDuration": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Duration"
        },
        "valueHumanName": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/HumanName"
        },
        "valueIdentifier": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Identifier"
        },
        "valueMoney": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Money"
        },
        "valuePeriod": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Period"
        },
        "valueQuantity": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Ratio"
        },
        "valueReference": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Reference"
        },
        "valueSampledData": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/SampledData"
        },
        "valueSignature": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Signature"
        },
        "valueTiming": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Timing"
        },
        "valueContactDetail": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ContactDetail"
        },
        "valueContributor": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Contributor"
        },
        "valueDataRequirement": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/DataRequirement"
        },
        "valueExpression": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Expression"
        },
        "valueParameterDefinition": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/ParameterDefinition"
        },
        "valueRelatedArtifact": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/RelatedArtifact"
        },
        "valueTriggerDefinition": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/TriggerDefinition"
        },
        "valueUsageContext": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/UsageContext"
        },
        "valueDosage": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Dosage"
        },
        "valueMeta": {
          "description": "The value of the Output parameter as a basic type.",
          "$ref": "#/definitions/Meta"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "TerminologyCapabilities": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "resourceType": {
          "description": "This is a TerminologyCapabilities resource",
          "const": "TerminologyCapabilities"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": {
          "description": "An absolute URI that is used to identify this terminology capabilities when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this terminology capabilities is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the terminology capabilities is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the terminology capabilities when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the terminology capabilities author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A natural language name identifying the terminology capabilities. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the terminology capabilities.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this terminology capabilities. Enables tracking the life-cycle of the content.",
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this terminology capabilities is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the terminology capabilities was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the terminology capabilities changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual that published the terminology capabilities.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": {
          "description": "A free text natural language description of the terminology capabilities from a consumer\u0027s perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate terminology capabilities instances.",
          "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": {
          "description": "A legal or geographic region in which the terminology capabilities is intended to be used.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": {
          "description": "Explanation of why this terminology capabilities is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "kind": {
          "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
          "$ref": "#/definitions/code"
        },
        "_kind": {
          "description": "Extensions for kind",
          "$ref": "#/definitions/Element"
        },
        "software": {
          "description": "Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation.",
          "$ref": "#/definitions/TerminologyCapabilities_Software"
        },
        "implementation": {
          "description": "Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
          "$ref": "#/definitions/TerminologyCapabilities_Implementation"
        },
        "lockedDate": {
          "description": "Whether the server supports lockedDate.",
          "$ref": "#/definitions/boolean"
        },
        "_lockedDate": {
          "description": "Extensions for lockedDate",
          "$ref": "#/definitions/Element"
        },
        "codeSystem": {
          "description": "Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource.",
          "items": { "$ref": "#/definitions/TerminologyCapabilities_CodeSystem" }, "type": "array" },
        "expansion": {
          "description": "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation.",
          "$ref": "#/definitions/TerminologyCapabilities_Expansion"
        },
        "codeSearch": {
          "description": "The degree to which the server supports the code search parameter on ValueSet, if it is supported.",
          "enum": [
            "explicit",
            "all"
          ]
        },
        "_codeSearch": {
          "description": "Extensions for codeSearch",
          "$ref": "#/definitions/Element"
        },
        "validateCode": {
          "description": "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation.",
          "$ref": "#/definitions/TerminologyCapabilities_ValidateCode"
        },
        "translation": {
          "description": "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation.",
          "$ref": "#/definitions/TerminologyCapabilities_Translation"
        },
        "closure": {
          "description": "Whether the $closure operation is supported.",
          "$ref": "#/definitions/TerminologyCapabilities_Closure"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "TerminologyCapabilities_Software": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": {
          "description": "Name the software is known by.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version identifier for the software covered by this statement.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_Implementation": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "description": {
          "description": "Information about the specific installation that this terminology capability statement relates to.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "An absolute base URL for the implementation.",
          "$ref": "#/definitions/url"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_CodeSystem": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "uri": {
          "description": "URI for the Code System.",
          "$ref": "#/definitions/canonical"
        },
        "version": {
          "description": "For the code system, a list of versions that are supported by the server.",
          "items": { "$ref": "#/definitions/TerminologyCapabilities_Version" }, "type": "array" },
        "subsumption": {
          "description": "True if subsumption is supported for this version of the code system.",
          "$ref": "#/definitions/boolean"
        },
        "_subsumption": {
          "description": "Extensions for subsumption",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_Version": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "description": "For version-less code systems, there should be a single version with no identifier.",
          "$ref": "#/definitions/string"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "isDefault": {
          "description": "If this is the default version for this code system.",
          "$ref": "#/definitions/boolean"
        },
        "_isDefault": {
          "description": "Extensions for isDefault",
          "$ref": "#/definitions/Element"
        },
        "compositional": {
          "description": "If the compositional grammar defined by the code system is supported.",
          "$ref": "#/definitions/boolean"
        },
        "_compositional": {
          "description": "Extensions for compositional",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "Language Displays supported.",
          "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_language": {
          "description": "Extensions for language",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "filter": {
          "description": "Filter Properties supported.",
          "items": { "$ref": "#/definitions/TerminologyCapabilities_Filter" }, "type": "array" },
        "property": {
          "description": "Properties supported for $lookup.",
          "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_property": {
          "description": "Extensions for property",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_Filter": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "description": "Code of the property supported.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "op": {
          "description": "Operations supported for the property.",
          "items": { "$ref": "#/definitions/code" }, "type": "array" },
        "_op": {
          "description": "Extensions for op",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_Expansion": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "hierarchical": {
          "description": "Whether the server can return nested value sets.",
          "$ref": "#/definitions/boolean"
        },
        "_hierarchical": {
          "description": "Extensions for hierarchical",
          "$ref": "#/definitions/Element"
        },
        "paging": {
          "description": "Whether the server supports paging on expansion.",
          "$ref": "#/definitions/boolean"
        },
        "_paging": {
          "description": "Extensions for paging",
          "$ref": "#/definitions/Element"
        },
        "incomplete": {
          "description": "Allow request for incomplete expansions?",
          "$ref": "#/definitions/boolean"
        },
        "_incomplete": {
          "description": "Extensions for incomplete",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "Supported expansion parameter.",
          "items": { "$ref": "#/definitions/TerminologyCapabilities_Parameter" }, "type": "array" },
        "textFilter": {
          "description": "Documentation about text searching works.",
          "$ref": "#/definitions/markdown"
        },
        "_textFilter": {
          "description": "Extensions for textFilter",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_Parameter": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": {
          "description": "Expansion Parameter name.",
          "$ref": "#/definitions/code"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "documentation": {
          "description": "Description of support for parameter.",
          "$ref": "#/definitions/string"
        },
        "_documentation": {
          "description": "Extensions for documentation",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_ValidateCode": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "translations": {
          "description": "Whether translations are validated.",
          "$ref": "#/definitions/boolean"
        },
        "_translations": {
          "description": "Extensions for translations",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_Translation": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "needsMap": {
          "description": "Whether the client must identify the map.",
          "$ref": "#/definitions/boolean"
        },
        "_needsMap": {
          "description": "Extensions for needsMap",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TerminologyCapabilities_Closure": {
      "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "translation": {
          "description": "If cross-system closure is supported.",
          "$ref": "#/definitions/boolean"
        },
        "_translation": {
          "description": "Extensions for translation",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestReport": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "resourceType": {
          "description": "This is a TestReport resource",
          "const": "TestReport"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "Identifier for the TestScript assigned for external purposes outside the context of FHIR.",
          "$ref": "#/definitions/Identifier"
        },
        "name": {
          "description": "A free text natural language name identifying the executed TestScript.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The current state of this test report.",
          "enum": [
            "completed",
            "in-progress",
            "waiting",
            "stopped",
            "entered-in-error"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "testScript": {
          "description": "Ideally this is an absolute URL that is used to identify the version-specific TestScript that was executed, matching the `TestScript.url`.",
          "$ref": "#/definitions/Reference"
        },
        "result": {
          "description": "The overall result from the execution of the TestScript.",
          "enum": [
            "pass",
            "fail",
            "pending"
          ]
        },
        "_result": {
          "description": "Extensions for result",
          "$ref": "#/definitions/Element"
        },
        "score": {
          "description": "The final score (percentage of tests passed) resulting from the execution of the TestScript.",
          "$ref": "#/definitions/decimal"
        },
        "_score": {
          "description": "Extensions for score",
          "$ref": "#/definitions/Element"
        },
        "tester": {
          "description": "Name of the tester producing this report (Organization or individual).",
          "$ref": "#/definitions/string"
        },
        "_tester": {
          "description": "Extensions for tester",
          "$ref": "#/definitions/Element"
        },
        "issued": {
          "description": "When the TestScript was executed and this TestReport was generated.",
          "$ref": "#/definitions/dateTime"
        },
        "_issued": {
          "description": "Extensions for issued",
          "$ref": "#/definitions/Element"
        },
        "participant": {
          "description": "A participant in the test execution, either the execution engine, a client, or a server.",
          "items": { "$ref": "#/definitions/TestReport_Participant" }, "type": "array" },
        "setup": {
          "description": "The results of the series of required setup operations before the tests were executed.",
          "$ref": "#/definitions/TestReport_Setup"
        },
        "test": {
          "description": "A test executed from the test script.",
          "items": { "$ref": "#/definitions/TestReport_Test" }, "type": "array" },
        "teardown": {
          "description": "The results of the series of operations required to clean up after all the tests were executed (successfully or otherwise).",
          "$ref": "#/definitions/TestReport_Teardown"
        }
      },
      "additionalProperties": false,
      "required": [
        "testScript",
        "resourceType"
      ]
    },
    "TestReport_Participant": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "description": "The type of participant.",
          "enum": [
            "test-engine",
            "client",
            "server"
          ]
        },
        "_type": {
          "description": "Extensions for type",
          "$ref": "#/definitions/Element"
        },
        "uri": {
          "description": "The uri of the participant. An absolute URL is preferred.",
          "$ref": "#/definitions/uri"
        },
        "_uri": {
          "description": "Extensions for uri",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The display name of the participant.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestReport_Setup": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": { "$ref": "#/definitions/TestReport_Action" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestReport_Action": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "operation": {
          "description": "The operation performed.",
          "$ref": "#/definitions/TestReport_Operation"
        },
        "assert": {
          "description": "The results of the assertion performed on the previous operations.",
          "$ref": "#/definitions/TestReport_Assert"
        }
      },
      "additionalProperties": false
    },
    "TestReport_Operation": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "result": {
          "description": "The result of this operation.",
          "enum": [
            "pass",
            "skip",
            "fail",
            "warning",
            "error"
          ]
        },
        "_result": {
          "description": "Extensions for result",
          "$ref": "#/definitions/Element"
        },
        "message": {
          "description": "An explanatory message associated with the result.",
          "$ref": "#/definitions/markdown"
        },
        "_message": {
          "description": "Extensions for message",
          "$ref": "#/definitions/Element"
        },
        "detail": {
          "description": "A link to further details on the result.",
          "$ref": "#/definitions/uri"
        },
        "_detail": {
          "description": "Extensions for detail",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestReport_Assert": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "result": {
          "description": "The result of this assertion.",
          "enum": [
            "pass",
            "skip",
            "fail",
            "warning",
            "error"
          ]
        },
        "_result": {
          "description": "Extensions for result",
          "$ref": "#/definitions/Element"
        },
        "message": {
          "description": "An explanatory message associated with the result.",
          "$ref": "#/definitions/markdown"
        },
        "_message": {
          "description": "Extensions for message",
          "$ref": "#/definitions/Element"
        },
        "detail": {
          "description": "A link to further details on the result.",
          "$ref": "#/definitions/string"
        },
        "_detail": {
          "description": "Extensions for detail",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestReport_Test": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": {
          "description": "The name of this test used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A short description of the test used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": { "$ref": "#/definitions/TestReport_Action1" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestReport_Action1": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestReport_Operation"
        },
        "assert": {
          "description": "The results of the assertion performed on the previous operations.",
          "$ref": "#/definitions/TestReport_Assert"
        }
      },
      "additionalProperties": false
    },
    "TestReport_Teardown": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "action": {
          "description": "The teardown action will only contain an operation.",
          "items": { "$ref": "#/definitions/TestReport_Action2" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestReport_Action2": {
      "description": "A summary of information based on the results of executing a TestScript.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestReport_Operation"
        }
      },
      "additionalProperties": false,
      "required": [
        "operation"
      ]
    },
    "TestScript": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "resourceType": {
          "description": "This is a TestScript resource",
          "const": "TestScript"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": {
          "description": "An absolute URI that is used to identify this test script when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this test script is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the test script is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this test script when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "$ref": "#/definitions/Identifier"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the test script when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the test script author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A natural language name identifying the test script. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the test script.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this test script. Enables tracking the life-cycle of the content.",
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this test script is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the test script was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the test script changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual that published the test script.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": {
          "description": "A free text natural language description of the test script from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate test script instances.",
          "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": {
          "description": "A legal or geographic region in which the test script is intended to be used.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "purpose": {
          "description": "Explanation of why this test script is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the test script and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the test script.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "origin": {
          "description": "An abstract server used in operations within this test script in the origin element.",
          "items": { "$ref": "#/definitions/TestScript_Origin" }, "type": "array" },
        "destination": {
          "description": "An abstract server used in operations within this test script in the destination element.",
          "items": { "$ref": "#/definitions/TestScript_Destination" }, "type": "array" },
        "metadata": {
          "description": "The required capability must exist and are assumed to function correctly on the FHIR server being tested.",
          "$ref": "#/definitions/TestScript_Metadata"
        },
        "fixture": {
          "description": "Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute.",
          "items": { "$ref": "#/definitions/TestScript_Fixture" }, "type": "array" },
        "profile": {
          "description": "Reference to the profile to be used for validation.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "variable": {
          "description": "Variable is set based either on element value in response body or on header field value in the response headers.",
          "items": { "$ref": "#/definitions/TestScript_Variable" }, "type": "array" },
        "setup": {
          "description": "A series of required setup operations before tests are executed.",
          "$ref": "#/definitions/TestScript_Setup"
        },
        "test": {
          "description": "A test in this script.",
          "items": { "$ref": "#/definitions/TestScript_Test" }, "type": "array" },
        "teardown": {
          "description": "A series of operations required to clean up after all the tests are executed (successfully or otherwise).",
          "$ref": "#/definitions/TestScript_Teardown"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "TestScript_Origin": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "index": {
          "description": "Abstract name given to an origin server in this test script.  The name is provided as a number starting at 1.",
          "$ref": "#/definitions/integer"
        },
        "_index": {
          "description": "Extensions for index",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "The type of origin profile the test system supports.",
          "$ref": "#/definitions/Coding"
        }
      },
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "TestScript_Destination": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "index": {
          "description": "Abstract name given to a destination server in this test script.  The name is provided as a number starting at 1.",
          "$ref": "#/definitions/integer"
        },
        "_index": {
          "description": "Extensions for index",
          "$ref": "#/definitions/Element"
        },
        "profile": {
          "description": "The type of destination profile the test system supports.",
          "$ref": "#/definitions/Coding"
        }
      },
      "additionalProperties": false,
      "required": [
        "profile"
      ]
    },
    "TestScript_Metadata": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "link": {
          "description": "A link to the FHIR specification that this test is covering.",
          "items": { "$ref": "#/definitions/TestScript_Link" }, "type": "array" },
        "capability": {
          "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.",
          "items": { "$ref": "#/definitions/TestScript_Capability" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "capability"
      ]
    },
    "TestScript_Link": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": {
          "description": "URL to a particular requirement or feature within the FHIR specification.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Short description of the link.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestScript_Capability": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "required": {
          "description": "Whether or not the test execution will require the given capabilities of the server in order for this test script to execute.",
          "$ref": "#/definitions/boolean"
        },
        "_required": {
          "description": "Extensions for required",
          "$ref": "#/definitions/Element"
        },
        "validated": {
          "description": "Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute.",
          "$ref": "#/definitions/boolean"
        },
        "_validated": {
          "description": "Extensions for validated",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "Description of the capabilities that this test script is requiring the server to support.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "origin": {
          "description": "Which origin server these requirements apply to.",
          "items": { "$ref": "#/definitions/integer" }, "type": "array" },
        "_origin": {
          "description": "Extensions for origin",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "destination": {
          "description": "Which server these requirements apply to.",
          "$ref": "#/definitions/integer"
        },
        "_destination": {
          "description": "Extensions for destination",
          "$ref": "#/definitions/Element"
        },
        "link": {
          "description": "Links to the FHIR specification that describes this interaction and the resources involved in more detail.",
          "items": { "$ref": "#/definitions/uri" }, "type": "array" },
        "_link": {
          "description": "Extensions for link",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "capabilities": {
          "description": "Minimum capabilities required of server for test script to execute successfully.   If server does not meet at a minimum the referenced capability statement, then all tests in this script are skipped.",
          "$ref": "#/definitions/canonical"
        }
      },
      "additionalProperties": false,
      "required": [
        "capabilities"
      ]
    },
    "TestScript_Fixture": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "autocreate": {
          "description": "Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section.",
          "$ref": "#/definitions/boolean"
        },
        "_autocreate": {
          "description": "Extensions for autocreate",
          "$ref": "#/definitions/Element"
        },
        "autodelete": {
          "description": "Whether or not to implicitly delete the fixture during teardown. If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section.",
          "$ref": "#/definitions/boolean"
        },
        "_autodelete": {
          "description": "Extensions for autodelete",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "Reference to the resource (containing the contents of the resource needed for operations).",
          "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "TestScript_Variable": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": {
          "description": "Descriptive name for this variable.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "defaultValue": {
          "description": "A default, hard-coded, or user-defined value for this variable.",
          "$ref": "#/definitions/string"
        },
        "_defaultValue": {
          "description": "Extensions for defaultValue",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A free text natural language description of the variable and its purpose.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "The FHIRPath expression to evaluate against the fixture body. When variables are defined, only one of either expression, headerField or path must be specified.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "headerField": {
          "description": "Will be used to grab the HTTP header field value from the headers that sourceId is pointing to.",
          "$ref": "#/definitions/string"
        },
        "_headerField": {
          "description": "Extensions for headerField",
          "$ref": "#/definitions/Element"
        },
        "hint": {
          "description": "Displayable text string with hint help information to the user when entering a default value.",
          "$ref": "#/definitions/string"
        },
        "_hint": {
          "description": "Extensions for hint",
          "$ref": "#/definitions/Element"
        },
        "path": {
          "description": "XPath or JSONPath to evaluate against the fixture body.  When variables are defined, only one of either expression, headerField or path must be specified.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against within this variable.",
          "$ref": "#/definitions/id"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestScript_Setup": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": { "$ref": "#/definitions/TestScript_Action" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestScript_Action": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "operation": {
          "description": "The operation to perform.",
          "$ref": "#/definitions/TestScript_Operation"
        },
        "assert": {
          "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
          "$ref": "#/definitions/TestScript_Assert"
        }
      },
      "additionalProperties": false
    },
    "TestScript_Operation": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "type": {
          "description": "Server interaction or operation type.",
          "$ref": "#/definitions/Coding"
        },
        "resource": {
          "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html.",
          "$ref": "#/definitions/code"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "label": {
          "description": "The label would be used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "The description would be used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "accept": {
          "description": "The mime-type to use for RESTful operation in the \u0027Accept\u0027 header.",
          "$ref": "#/definitions/code"
        },
        "_accept": {
          "description": "Extensions for accept",
          "$ref": "#/definitions/Element"
        },
        "contentType": {
          "description": "The mime-type to use for RESTful operation in the \u0027Content-Type\u0027 header.",
          "$ref": "#/definitions/code"
        },
        "_contentType": {
          "description": "Extensions for contentType",
          "$ref": "#/definitions/Element"
        },
        "destination": {
          "description": "The server where the request message is destined for.  Must be one of the server numbers listed in TestScript.destination section.",
          "$ref": "#/definitions/integer"
        },
        "_destination": {
          "description": "Extensions for destination",
          "$ref": "#/definitions/Element"
        },
        "encodeRequestUrl": {
          "description": "Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths.",
          "$ref": "#/definitions/boolean"
        },
        "_encodeRequestUrl": {
          "description": "Extensions for encodeRequestUrl",
          "$ref": "#/definitions/Element"
        },
        "method": {
          "description": "The HTTP method the test engine MUST use for this operation regardless of any other operation details.",
          "enum": [
            "delete",
            "get",
            "options",
            "patch",
            "post",
            "put",
            "head"
          ]
        },
        "_method": {
          "description": "Extensions for method",
          "$ref": "#/definitions/Element"
        },
        "origin": {
          "description": "The server where the request message originates from.  Must be one of the server numbers listed in TestScript.origin section.",
          "$ref": "#/definitions/integer"
        },
        "_origin": {
          "description": "Extensions for origin",
          "$ref": "#/definitions/Element"
        },
        "params": {
          "description": "Path plus parameters after [type].  Used to set parts of the request URL explicitly.",
          "$ref": "#/definitions/string"
        },
        "_params": {
          "description": "Extensions for params",
          "$ref": "#/definitions/Element"
        },
        "requestHeader": {
          "description": "Header elements would be used to set HTTP headers.",
          "items": { "$ref": "#/definitions/TestScript_RequestHeader" }, "type": "array" },
        "requestId": {
          "description": "The fixture id (maybe new) to map to the request.",
          "$ref": "#/definitions/id"
        },
        "_requestId": {
          "description": "Extensions for requestId",
          "$ref": "#/definitions/Element"
        },
        "responseId": {
          "description": "The fixture id (maybe new) to map to the response.",
          "$ref": "#/definitions/id"
        },
        "_responseId": {
          "description": "Extensions for responseId",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "The id of the fixture used as the body of a PUT or POST request.",
          "$ref": "#/definitions/id"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        },
        "targetId": {
          "description": "Id of fixture used for extracting the [id],  [type], and [vid] for GET requests.",
          "$ref": "#/definitions/id"
        },
        "_targetId": {
          "description": "Extensions for targetId",
          "$ref": "#/definitions/Element"
        },
        "url": {
          "description": "Complete request URL.",
          "$ref": "#/definitions/string"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestScript_RequestHeader": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "field": {
          "description": "The HTTP header field e.g. \"Accept\".",
          "$ref": "#/definitions/string"
        },
        "_field": {
          "description": "Extensions for field",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The value of the header e.g. \"application/fhir+xml\".",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestScript_Assert": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "label": {
          "description": "The label would be used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_label": {
          "description": "Extensions for label",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "The description would be used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "direction": {
          "description": "The direction to use for the assertion.",
          "enum": [
            "response",
            "request"
          ]
        },
        "_direction": {
          "description": "Extensions for direction",
          "$ref": "#/definitions/Element"
        },
        "compareToSourceId": {
          "description": "Id of the source fixture used as the contents to be evaluated by either the \"source/expression\" or \"sourceId/path\" definition.",
          "$ref": "#/definitions/string"
        },
        "_compareToSourceId": {
          "description": "Extensions for compareToSourceId",
          "$ref": "#/definitions/Element"
        },
        "compareToSourceExpression": {
          "description": "The FHIRPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.",
          "$ref": "#/definitions/string"
        },
        "_compareToSourceExpression": {
          "description": "Extensions for compareToSourceExpression",
          "$ref": "#/definitions/Element"
        },
        "compareToSourcePath": {
          "description": "XPath or JSONPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.",
          "$ref": "#/definitions/string"
        },
        "_compareToSourcePath": {
          "description": "Extensions for compareToSourcePath",
          "$ref": "#/definitions/Element"
        },
        "contentType": {
          "description": "The mime-type contents to compare against the request or response message \u0027Content-Type\u0027 header.",
          "$ref": "#/definitions/code"
        },
        "_contentType": {
          "description": "Extensions for contentType",
          "$ref": "#/definitions/Element"
        },
        "expression": {
          "description": "The FHIRPath expression to be evaluated against the request or response message contents - HTTP headers and payload.",
          "$ref": "#/definitions/string"
        },
        "_expression": {
          "description": "Extensions for expression",
          "$ref": "#/definitions/Element"
        },
        "headerField": {
          "description": "The HTTP header field name e.g. \u0027Location\u0027.",
          "$ref": "#/definitions/string"
        },
        "_headerField": {
          "description": "Extensions for headerField",
          "$ref": "#/definitions/Element"
        },
        "minimumId": {
          "description": "The ID of a fixture.  Asserts that the response contains at a minimum the fixture specified by minimumId.",
          "$ref": "#/definitions/string"
        },
        "_minimumId": {
          "description": "Extensions for minimumId",
          "$ref": "#/definitions/Element"
        },
        "navigationLinks": {
          "description": "Whether or not the test execution performs validation on the bundle navigation links.",
          "$ref": "#/definitions/boolean"
        },
        "_navigationLinks": {
          "description": "Extensions for navigationLinks",
          "$ref": "#/definitions/Element"
        },
        "operator": {
          "description": "The operator type defines the conditional behavior of the assert. If not defined, the default is equals.",
          "enum": [
            "equals",
            "notEquals",
            "in",
            "notIn",
            "greaterThan",
            "lessThan",
            "empty",
            "notEmpty",
            "contains",
            "notContains",
            "eval"
          ]
        },
        "_operator": {
          "description": "Extensions for operator",
          "$ref": "#/definitions/Element"
        },
        "path": {
          "description": "The XPath or JSONPath expression to be evaluated against the fixture representing the response received from server.",
          "$ref": "#/definitions/string"
        },
        "_path": {
          "description": "Extensions for path",
          "$ref": "#/definitions/Element"
        },
        "requestMethod": {
          "description": "The request method or HTTP operation code to compare against that used by the client system under test.",
          "enum": [
            "delete",
            "get",
            "options",
            "patch",
            "post",
            "put",
            "head"
          ]
        },
        "_requestMethod": {
          "description": "Extensions for requestMethod",
          "$ref": "#/definitions/Element"
        },
        "requestURL": {
          "description": "The value to use in a comparison against the request URL path string.",
          "$ref": "#/definitions/string"
        },
        "_requestURL": {
          "description": "Extensions for requestURL",
          "$ref": "#/definitions/Element"
        },
        "resource": {
          "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html.",
          "$ref": "#/definitions/code"
        },
        "_resource": {
          "description": "Extensions for resource",
          "$ref": "#/definitions/Element"
        },
        "response": {
          "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.",
          "enum": [
            "okay",
            "created",
            "noContent",
            "notModified",
            "bad",
            "forbidden",
            "notFound",
            "methodNotAllowed",
            "conflict",
            "gone",
            "preconditionFailed",
            "unprocessable"
          ]
        },
        "_response": {
          "description": "Extensions for response",
          "$ref": "#/definitions/Element"
        },
        "responseCode": {
          "description": "The value of the HTTP response code to be tested.",
          "$ref": "#/definitions/string"
        },
        "_responseCode": {
          "description": "Extensions for responseCode",
          "$ref": "#/definitions/Element"
        },
        "sourceId": {
          "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against.",
          "$ref": "#/definitions/id"
        },
        "_sourceId": {
          "description": "Extensions for sourceId",
          "$ref": "#/definitions/Element"
        },
        "validateProfileId": {
          "description": "The ID of the Profile to validate against.",
          "$ref": "#/definitions/id"
        },
        "_validateProfileId": {
          "description": "Extensions for validateProfileId",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The value to compare to.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        },
        "warningOnly": {
          "description": "Whether or not the test execution will produce a warning only on error for this assert.",
          "$ref": "#/definitions/boolean"
        },
        "_warningOnly": {
          "description": "Extensions for warningOnly",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "TestScript_Test": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": {
          "description": "The name of this test used for tracking/logging purposes by test engines.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "description": {
          "description": "A short description of the test used by test engines for tracking and reporting purposes.",
          "$ref": "#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "action": {
          "description": "Action would contain either an operation or an assertion.",
          "items": { "$ref": "#/definitions/TestScript_Action1" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestScript_Action1": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestScript_Operation"
        },
        "assert": {
          "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
          "$ref": "#/definitions/TestScript_Assert"
        }
      },
      "additionalProperties": false
    },
    "TestScript_Teardown": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "action": {
          "description": "The teardown action will only contain an operation.",
          "items": { "$ref": "#/definitions/TestScript_Action2" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "action"
      ]
    },
    "TestScript_Action2": {
      "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "operation": {
          "description": "An operation would involve a REST request to a server.",
          "$ref": "#/definitions/TestScript_Operation"
        }
      },
      "additionalProperties": false,
      "required": [
        "operation"
      ]
    },
    "ValueSet": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "resourceType": {
          "description": "This is a ValueSet resource",
          "const": "ValueSet"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "url": {
          "description": "An absolute URI that is used to identify this value set when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this value set is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the value set is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "version": {
          "description": "The identifier that is used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the value set author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "name": {
          "description": "A natural language name identifying the value set. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the value set.",
          "$ref": "#/definitions/string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "#/definitions/Element"
        },
        "status": {
          "description": "The status of this value set. Enables tracking the life-cycle of the content. The status of the value set applies to the value set definition (ValueSet.compose) and the associated ValueSet metadata. Expansions do not have a state.",
          "enum": [
            "draft",
            "active",
            "retired",
            "unknown"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this value set is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "$ref": "#/definitions/boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "#/definitions/Element"
        },
        "date": {
          "description": "The date (and optionally time) when the value set was created or revised (e.g. the \u0027content logical definition\u0027).",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual that published the value set.",
          "$ref": "#/definitions/string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": { "$ref": "#/definitions/ContactDetail" }, "type": "array" },
        "description": {
          "description": "A free text natural language description of the value set from a consumer\u0027s perspective. The textual description specifies the span of meanings for concepts to be included within the Value Set Expansion, and also may specify the intended use and limitations of the Value Set.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances.",
          "items": { "$ref": "#/definitions/UsageContext" }, "type": "array" },
        "jurisdiction": {
          "description": "A legal or geographic region in which the value set is intended to be used.",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "immutable": {
          "description": "If this is set to \u0027true\u0027, then no new versions of the content logical definition can be created.  Note: Other metadata might still change.",
          "$ref": "#/definitions/boolean"
        },
        "_immutable": {
          "description": "Extensions for immutable",
          "$ref": "#/definitions/Element"
        },
        "purpose": {
          "description": "Explanation of why this value set is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "#/definitions/Element"
        },
        "compose": {
          "description": "A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD).",
          "$ref": "#/definitions/ValueSet_Compose"
        },
        "expansion": {
          "description": "A value set can also be \"expanded\", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.",
          "$ref": "#/definitions/ValueSet_Expansion"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "ValueSet_Compose": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "lockedDate": {
          "description": "The Locked Date is  the effective date that is used to determine the version of all referenced Code Systems and Value Set Definitions included in the compose that are not already tied to a specific version.",
          "$ref": "#/definitions/date"
        },
        "_lockedDate": {
          "description": "Extensions for lockedDate",
          "$ref": "#/definitions/Element"
        },
        "inactive": {
          "description": "Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive \u003d true, inactive codes are to be included in the expansion, if inactive \u003d false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable $expand parameters (but generally, inactive codes would be expected to be included).",
          "$ref": "#/definitions/boolean"
        },
        "_inactive": {
          "description": "Extensions for inactive",
          "$ref": "#/definitions/Element"
        },
        "include": {
          "description": "Include one or more codes from a code system or other value set(s).",
          "items": { "$ref": "#/definitions/ValueSet_Include" }, "type": "array" },
        "exclude": {
          "description": "Exclude one or more codes from the value set based on code system filters and/or other value sets.",
          "items": { "$ref": "#/definitions/ValueSet_Include" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "include"
      ]
    },
    "ValueSet_Include": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "system": {
          "description": "An absolute URI which is the code system from which the selected codes come from.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version of the code system that the codes are selected from, or the special version \u0027*\u0027 for all versions.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "concept": {
          "description": "Specifies a concept to be included or excluded.",
          "items": { "$ref": "#/definitions/ValueSet_Concept" }, "type": "array" },
        "filter": {
          "description": "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true.",
          "items": { "$ref": "#/definitions/ValueSet_Filter" }, "type": "array" },
        "valueSet": {
          "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets.",
          "items": { "$ref": "#/definitions/canonical" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ValueSet_Concept": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "code": {
          "description": "Specifies a code for the concept to be included or excluded.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "designation": {
          "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.",
          "items": { "$ref": "#/definitions/ValueSet_Designation" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ValueSet_Designation": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "language": {
          "description": "The language this designation is defined for.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "use": {
          "description": "A code that represents types of uses of designations.",
          "$ref": "#/definitions/Coding"
        },
        "value": {
          "description": "The text value for this designation.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ValueSet_Filter": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "property": {
          "description": "A code that identifies a property or a filter defined in the code system.",
          "$ref": "#/definitions/code"
        },
        "_property": {
          "description": "Extensions for property",
          "$ref": "#/definitions/Element"
        },
        "op": {
          "description": "The kind of operation to perform as a part of the filter criteria.",
          "enum": [
            "\u003d",
            "is-a",
            "descendent-of",
            "is-not-a",
            "regex",
            "in",
            "not-in",
            "generalizes",
            "exists"
          ]
        },
        "_op": {
          "description": "Extensions for op",
          "$ref": "#/definitions/Element"
        },
        "value": {
          "description": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is \u0027regex\u0027, or one of the values (true and false), when the operation is \u0027exists\u0027.",
          "$ref": "#/definitions/string"
        },
        "_value": {
          "description": "Extensions for value",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ValueSet_Expansion": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "An identifier that uniquely identifies this expansion of the valueset, based on a unique combination of the provided parameters, the system default parameters, and the underlying system code system versions etc. Systems may re-use the same identifier as long as those factors remain the same, and the expansion is the same, but are not required to do so. This is a business identifier.",
          "$ref": "#/definitions/uri"
        },
        "_identifier": {
          "description": "Extensions for identifier",
          "$ref": "#/definitions/Element"
        },
        "timestamp": {
          "description": "The time at which the expansion was produced by the expanding system.",
          "$ref": "#/definitions/dateTime"
        },
        "_timestamp": {
          "description": "Extensions for timestamp",
          "$ref": "#/definitions/Element"
        },
        "total": {
          "description": "The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter.",
          "$ref": "#/definitions/integer"
        },
        "_total": {
          "description": "Extensions for total",
          "$ref": "#/definitions/Element"
        },
        "offset": {
          "description": "If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL NOT be present.",
          "$ref": "#/definitions/integer"
        },
        "_offset": {
          "description": "Extensions for offset",
          "$ref": "#/definitions/Element"
        },
        "parameter": {
          "description": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.",
          "items": { "$ref": "#/definitions/ValueSet_Parameter" }, "type": "array" },
        "contains": {
          "description": "The codes that are contained in the value set expansion.",
          "items": { "$ref": "#/definitions/ValueSet_Contains" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "ValueSet_Parameter": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "name": {
          "description": "Name of the input parameter to the $expand operation; may be a server-assigned name for additional default or other server-supplied parameters used to control the expansion process.",
          "$ref": "#/definitions/string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "#/definitions/Element"
        },
        "valueString": {
          "description": "The value of the parameter.",
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string"
        },
        "_valueString": {
          "description": "Extensions for valueString",
          "$ref": "#/definitions/Element"
        },
        "valueBoolean": {
          "description": "The value of the parameter.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "#/definitions/Element"
        },
        "valueInteger": {
          "description": "The value of the parameter.",
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number"
        },
        "_valueInteger": {
          "description": "Extensions for valueInteger",
          "$ref": "#/definitions/Element"
        },
        "valueDecimal": {
          "description": "The value of the parameter.",
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number"
        },
        "_valueDecimal": {
          "description": "Extensions for valueDecimal",
          "$ref": "#/definitions/Element"
        },
        "valueUri": {
          "description": "The value of the parameter.",
          "pattern": "^\\S*$",
          "type": "string"
        },
        "_valueUri": {
          "description": "Extensions for valueUri",
          "$ref": "#/definitions/Element"
        },
        "valueCode": {
          "description": "The value of the parameter.",
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string"
        },
        "_valueCode": {
          "description": "Extensions for valueCode",
          "$ref": "#/definitions/Element"
        },
        "valueDateTime": {
          "description": "The value of the parameter.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_valueDateTime": {
          "description": "Extensions for valueDateTime",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    },
    "ValueSet_Contains": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "system": {
          "description": "An absolute URI which is the code system in which the code for this item in the expansion is defined.",
          "$ref": "#/definitions/uri"
        },
        "_system": {
          "description": "Extensions for system",
          "$ref": "#/definitions/Element"
        },
        "abstract": {
          "description": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.",
          "$ref": "#/definitions/boolean"
        },
        "_abstract": {
          "description": "Extensions for abstract",
          "$ref": "#/definitions/Element"
        },
        "inactive": {
          "description": "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use).",
          "$ref": "#/definitions/boolean"
        },
        "_inactive": {
          "description": "Extensions for inactive",
          "$ref": "#/definitions/Element"
        },
        "version": {
          "description": "The version of the code system from this code was taken. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
          "$ref": "#/definitions/string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "#/definitions/Element"
        },
        "code": {
          "description": "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "#/definitions/Element"
        },
        "display": {
          "description": "The recommended display for this item in the expansion.",
          "$ref": "#/definitions/string"
        },
        "_display": {
          "description": "Extensions for display",
          "$ref": "#/definitions/Element"
        },
        "designation": {
          "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.",
          "items": { "$ref": "#/definitions/ValueSet_Designation" }, "type": "array" },
        "contains": {
          "description": "Other codes and entries contained under this entry in the hierarchy.",
          "items": { "$ref": "#/definitions/ValueSet_Contains" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "VerificationResult": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "resourceType": {
          "description": "This is a VerificationResult resource",
          "const": "VerificationResult"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "target": {
          "description": "A resource that was validated.",
          "items": { "$ref": "#/definitions/Reference" }, "type": "array" },
        "targetLocation": {
          "description": "The fhirpath location(s) within the resource that was validated.",
          "items": { "$ref": "#/definitions/string" }, "type": "array" },
        "_targetLocation": {
          "description": "Extensions for targetLocation",
          "items": { "$ref": "#/definitions/Element" }, "type": "array" },
        "need": {
          "description": "The frequency with which the target must be validated (none; initial; periodic).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "status": {
          "description": "The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed).",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "statusDate": {
          "description": "When the validation status was updated.",
          "$ref": "#/definitions/dateTime"
        },
        "_statusDate": {
          "description": "Extensions for statusDate",
          "$ref": "#/definitions/Element"
        },
        "validationType": {
          "description": "What the target is validated against (nothing; primary source; multiple sources).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "validationProcess": {
          "description": "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context).",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "frequency": {
          "description": "Frequency of revalidation.",
          "$ref": "#/definitions/Timing"
        },
        "lastPerformed": {
          "description": "The date/time validation was last completed (including failed validations).",
          "$ref": "#/definitions/dateTime"
        },
        "_lastPerformed": {
          "description": "Extensions for lastPerformed",
          "$ref": "#/definitions/Element"
        },
        "nextScheduled": {
          "description": "The date when target is next validated, if appropriate.",
          "$ref": "#/definitions/date"
        },
        "_nextScheduled": {
          "description": "Extensions for nextScheduled",
          "$ref": "#/definitions/Element"
        },
        "failureAction": {
          "description": "The result if validation fails (fatal; warning; record only; none).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "primarySource": {
          "description": "Information about the primary source(s) involved in validation.",
          "items": { "$ref": "#/definitions/VerificationResult_PrimarySource" }, "type": "array" },
        "attestation": {
          "description": "Information about the entity attesting to information.",
          "$ref": "#/definitions/VerificationResult_Attestation"
        },
        "validator": {
          "description": "Information about the entity validating information.",
          "items": { "$ref": "#/definitions/VerificationResult_Validator" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "VerificationResult_PrimarySource": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "who": {
          "description": "Reference to the primary source.",
          "$ref": "#/definitions/Reference"
        },
        "type": {
          "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "communicationMethod": {
          "description": "Method for communicating with the primary source (manual; API; Push).",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" },
        "validationStatus": {
          "description": "Status of the validation of the target against the primary source (successful; failed; unknown).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "validationDate": {
          "description": "When the target was validated against the primary source.",
          "$ref": "#/definitions/dateTime"
        },
        "_validationDate": {
          "description": "Extensions for validationDate",
          "$ref": "#/definitions/Element"
        },
        "canPushUpdates": {
          "description": "Ability of the primary source to push updates/alerts (yes; no; undetermined).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "pushTypeAvailable": {
          "description": "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).",
          "items": { "$ref": "#/definitions/CodeableConcept" }, "type": "array" }
      },
      "additionalProperties": false
    },
    "VerificationResult_Attestation": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "who": {
          "description": "The individual or organization attesting to information.",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "When the who is asserting on behalf of another (organization or individual).",
          "$ref": "#/definitions/Reference"
        },
        "communicationMethod": {
          "description": "The method by which attested information was submitted/retrieved (manual; API; Push).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "date": {
          "description": "The date the information was attested to.",
          "$ref": "#/definitions/date"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "#/definitions/Element"
        },
        "sourceIdentityCertificate": {
          "description": "A digital identity certificate associated with the attestation source.",
          "$ref": "#/definitions/string"
        },
        "_sourceIdentityCertificate": {
          "description": "Extensions for sourceIdentityCertificate",
          "$ref": "#/definitions/Element"
        },
        "proxyIdentityCertificate": {
          "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.",
          "$ref": "#/definitions/string"
        },
        "_proxyIdentityCertificate": {
          "description": "Extensions for proxyIdentityCertificate",
          "$ref": "#/definitions/Element"
        },
        "proxySignature": {
          "description": "Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source.",
          "$ref": "#/definitions/Signature"
        },
        "sourceSignature": {
          "description": "Signed assertion by the attestation source that they have attested to the information.",
          "$ref": "#/definitions/Signature"
        }
      },
      "additionalProperties": false
    },
    "VerificationResult_Validator": {
      "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "organization": {
          "description": "Reference to the organization validating information.",
          "$ref": "#/definitions/Reference"
        },
        "identityCertificate": {
          "description": "A digital identity certificate associated with the validator.",
          "$ref": "#/definitions/string"
        },
        "_identityCertificate": {
          "description": "Extensions for identityCertificate",
          "$ref": "#/definitions/Element"
        },
        "attestationSignature": {
          "description": "Signed assertion by the validator that they have validated the information.",
          "$ref": "#/definitions/Signature"
        }
      },
      "additionalProperties": false,
      "required": [
        "organization"
      ]
    },
    "VisionPrescription": {
      "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
      "properties": {
        "resourceType": {
          "description": "This is a VisionPrescription resource",
          "const": "VisionPrescription"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
          "items": { "$ref": "#/definitions/ResourceList" }, "type": "array" },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "identifier": {
          "description": "A unique identifier assigned to this vision prescription.",
          "items": { "$ref": "#/definitions/Identifier" }, "type": "array" },
        "status": {
          "description": "The status of the resource instance.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "#/definitions/Element"
        },
        "created": {
          "description": "The date this resource was created.",
          "$ref": "#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "#/definitions/Element"
        },
        "patient": {
          "description": "A resource reference to the person to whom the vision prescription applies.",
          "$ref": "#/definitions/Reference"
        },
        "encounter": {
          "description": "A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued.",
          "$ref": "#/definitions/Reference"
        },
        "dateWritten": {
          "description": "The date (and perhaps time) when the prescription was written.",
          "$ref": "#/definitions/dateTime"
        },
        "_dateWritten": {
          "description": "Extensions for dateWritten",
          "$ref": "#/definitions/Element"
        },
        "prescriber": {
          "description": "The healthcare professional responsible for authorizing the prescription.",
          "$ref": "#/definitions/Reference"
        },
        "lensSpecification": {
          "description": "Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.",
          "items": { "$ref": "#/definitions/VisionPrescription_LensSpecification" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "prescriber",
        "patient",
        "lensSpecification",
        "resourceType"
      ]
    },
    "VisionPrescription_LensSpecification": {
      "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "product": {
          "description": "Identifies the type of vision correction product which is required for the patient.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "eye": {
          "description": "The eye for which the lens specification applies.",
          "enum": [
            "right",
            "left"
          ]
        },
        "_eye": {
          "description": "Extensions for eye",
          "$ref": "#/definitions/Element"
        },
        "sphere": {
          "description": "Lens power measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_sphere": {
          "description": "Extensions for sphere",
          "$ref": "#/definitions/Element"
        },
        "cylinder": {
          "description": "Power adjustment for astigmatism measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_cylinder": {
          "description": "Extensions for cylinder",
          "$ref": "#/definitions/Element"
        },
        "axis": {
          "description": "Adjustment for astigmatism measured in integer degrees.",
          "$ref": "#/definitions/integer"
        },
        "_axis": {
          "description": "Extensions for axis",
          "$ref": "#/definitions/Element"
        },
        "prism": {
          "description": "Allows for adjustment on two axis.",
          "items": { "$ref": "#/definitions/VisionPrescription_Prism" }, "type": "array" },
        "add": {
          "description": "Power adjustment for multifocal lenses measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_add": {
          "description": "Extensions for add",
          "$ref": "#/definitions/Element"
        },
        "power": {
          "description": "Contact lens power measured in dioptres (0.25 units).",
          "$ref": "#/definitions/decimal"
        },
        "_power": {
          "description": "Extensions for power",
          "$ref": "#/definitions/Element"
        },
        "backCurve": {
          "description": "Back curvature measured in millimetres.",
          "$ref": "#/definitions/decimal"
        },
        "_backCurve": {
          "description": "Extensions for backCurve",
          "$ref": "#/definitions/Element"
        },
        "diameter": {
          "description": "Contact lens diameter measured in millimetres.",
          "$ref": "#/definitions/decimal"
        },
        "_diameter": {
          "description": "Extensions for diameter",
          "$ref": "#/definitions/Element"
        },
        "duration": {
          "description": "The recommended maximum wear period for the lens.",
          "$ref": "#/definitions/Quantity"
        },
        "color": {
          "description": "Special color or pattern.",
          "$ref": "#/definitions/string"
        },
        "_color": {
          "description": "Extensions for color",
          "$ref": "#/definitions/Element"
        },
        "brand": {
          "description": "Brand recommendations or restrictions.",
          "$ref": "#/definitions/string"
        },
        "_brand": {
          "description": "Extensions for brand",
          "$ref": "#/definitions/Element"
        },
        "note": {
          "description": "Notes for special requirements such as coatings and lens materials.",
          "items": { "$ref": "#/definitions/Annotation" }, "type": "array" }
      },
      "additionalProperties": false,
      "required": [
        "product"
      ]
    },
    "VisionPrescription_Prism": {
      "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": { "$ref": "#/definitions/Extension" }, "type": "array" },
        "amount": {
          "description": "Amount of prism to compensate for eye alignment in fractional units.",
          "$ref": "#/definitions/decimal"
        },
        "_amount": {
          "description": "Extensions for amount",
          "$ref": "#/definitions/Element"
        },
        "base": {
          "description": "The relative base, or reference lens edge, for the prism.",
          "enum": [
            "up",
            "down",
            "in",
            "out"
          ]
        },
        "_base": {
          "description": "Extensions for base",
          "$ref": "#/definitions/Element"
        }
      },
      "additionalProperties": false
    }
  }
}